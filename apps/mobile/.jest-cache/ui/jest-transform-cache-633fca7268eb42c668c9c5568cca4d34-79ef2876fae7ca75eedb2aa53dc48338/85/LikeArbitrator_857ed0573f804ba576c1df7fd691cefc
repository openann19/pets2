f4598c932831d942c3bb58e3cc80d439
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = LikeArbitrator;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeGestureHandler = require("react-native-gesture-handler");
var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
var Haptics = _interopRequireWildcard(require("expo-haptics"));
var _DoubleTapLikePlus = _interopRequireDefault(require("./DoubleTapLikePlus"));
var _ReactionBarMagnetic = _interopRequireDefault(require("../chat/ReactionBarMagnetic"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var _worklet_12977718807929_init_data = {
  code: "function anonymous() {\n  const {\n    lift\n  } = this._closure;\n  return {\n    transform: [{\n      translateY: lift.value\n    }]\n  };\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"lift\",\"_closure\",\"transform\",\"translateY\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx\"],\"mappings\":\"AA8CqC,SAAAA,UAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,OAAO;IACxCC,SAAS,EAAE,CAAC;MAAEC,UAAU,EAAEH,IAAI,CAACI;IAAM,CAAC;EACxC,CAAC;AAAA\",\"ignoreList\":[]}"
};
var _worklet_10838375468706_init_data = {
  code: "function anonymous() {\n  const {\n    lift\n  } = this._closure;\n  lift.value = -4;\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"lift\",\"_closure\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx\"],\"mappings\":\"AA8EiB,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EACbD,IAAI,CAACE,KAAK,GAAG,CAAC,CAAC;AACjB\",\"ignoreList\":[]}"
};
var _worklet_12830717888325_init_data = {
  code: "function anonymous() {\n  const {\n    runOnJS,\n    openReactions\n  } = this._closure;\n  runOnJS(openReactions)();\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"runOnJS\",\"openReactions\",\"_closure\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx\"],\"mappings\":\"AAiFiB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EACbF,OAAO,CAACC,aAAa,CAAC,CAAC,CAAC;AAC1B\",\"ignoreList\":[]}"
};
var _worklet_3072899645029_init_data = {
  code: "function anonymous() {\n  const {\n    lift,\n    withSpring\n  } = this._closure;\n  lift.value = withSpring(0, {\n    damping: 18,\n    stiffness: 320\n  });\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"lift\",\"withSpring\",\"_closure\",\"value\",\"damping\",\"stiffness\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx\"],\"mappings\":\"AAoFoB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,IAAA;IAAAC;EAAA,SAAAC,QAAA;EAChBF,IAAI,CAACG,KAAK,GAAGF,UAAU,CAAC,CAAC,EAAE;IAAEG,OAAO,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAI,CAAC,CAAC;AAC7D\",\"ignoreList\":[]}"
};
var _worklet_9151852408825_init_data = {
  code: "function anonymous(_e, ok) {\n  if (!ok) return;\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"_e\",\"ok\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx\"],\"mappings\":\"AA6FW,SAACA,SAAMA,CAAKC,EAAA,EAAAC,EAAA;EAEjB,IAAI,CAACA,EAAE,EAAE;AAEX\",\"ignoreList\":[]}"
};
var _worklet_5125055951239_init_data = {
  code: "function anonymous(_e, ok) {\n  const {\n    runOnJS,\n    handleDoubleTap\n  } = this._closure;\n  if (!ok) return;\n  runOnJS(handleDoubleTap)();\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"_e\",\"ok\",\"runOnJS\",\"handleDoubleTap\",\"_closure\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx\"],\"mappings\":\"AA0GW,SAACA,SAAMA,CAAKC,EAAA,EAAAC,EAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAEjB,IAAI,CAACH,EAAE,EAAE;EACTC,OAAO,CAACC,eAAe,CAAC,CAAC,CAAC;AAC5B\",\"ignoreList\":[]}"
};
function LikeArbitrator(_ref) {
  var children = _ref.children,
    onLike = _ref.onLike,
    onUndo = _ref.onUndo,
    onReact = _ref.onReact,
    triggerUndo = _ref.triggerUndo,
    _ref$a11yLongPressLab = _ref.a11yLongPressLabel,
    a11yLongPressLabel = _ref$a11yLongPressLab === void 0 ? "Open reactions" : _ref$a11yLongPressLab;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    reactionsOpen = _useState2[0],
    setReactionsOpen = _useState2[1];
  var lift = (0, _reactNativeReanimated.useSharedValue)(0);
  var liftStyle = (0, _reactNativeReanimated.useAnimatedStyle)(function () {
    var _e = [new global.Error(), -2, -27];
    var _f = function _f() {
      return {
        transform: [{
          translateY: lift.value
        }]
      };
    };
    _f._closure = {
      lift: lift
    };
    _f.__initData = _worklet_12977718807929_init_data;
    _f.__workletHash = 12977718807929;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  var closeReactions = (0, _react.useCallback)(function () {
    setReactionsOpen(false);
  }, []);
  var openReactions = (0, _react.useCallback)(function () {
    setReactionsOpen(true);
  }, []);
  var handleDoubleTap = (0, _react.useCallback)(function () {
    Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium).catch(function () {});
    var cleanup = onLike();
    triggerUndo == null ? void 0 : triggerUndo();
  }, [onLike, triggerUndo]);
  var handleSelectReaction = (0, _react.useCallback)(function (emoji) {
    Haptics.selectionAsync().catch(function () {});
    onReact == null ? void 0 : onReact(emoji);
    setReactionsOpen(false);
  }, [onReact]);
  var longPress = (0, _react.useMemo)(function () {
    return _reactNativeGestureHandler.Gesture.LongPress().minDuration(350).maxDistance(8).hitSlop({
      top: 4,
      bottom: 4,
      left: 4,
      right: 4
    }).onBegin(function () {
      var _e = [new global.Error(), -2, -27];
      var _f = function _f() {
        lift.value = -4;
      };
      _f._closure = {
        lift: lift
      };
      _f.__initData = _worklet_10838375468706_init_data;
      _f.__workletHash = 10838375468706;
      _f.__stackDetails = _e;
      _f.__version = "3.3.0";
      return _f;
    }()).onStart(function () {
      var _e = [new global.Error(), -3, -27];
      var _f = function _f() {
        (0, _reactNativeReanimated.runOnJS)(openReactions)();
      };
      _f._closure = {
        runOnJS: _reactNativeReanimated.runOnJS,
        openReactions: openReactions
      };
      _f.__initData = _worklet_12830717888325_init_data;
      _f.__workletHash = 12830717888325;
      _f.__stackDetails = _e;
      _f.__version = "3.3.0";
      return _f;
    }()).onFinalize(function () {
      var _e = [new global.Error(), -3, -27];
      var _f = function _f() {
        lift.value = (0, _reactNativeReanimated.withSpring)(0, {
          damping: 18,
          stiffness: 320
        });
      };
      _f._closure = {
        lift: lift,
        withSpring: _reactNativeReanimated.withSpring
      };
      _f.__initData = _worklet_3072899645029_init_data;
      _f.__workletHash = 3072899645029;
      _f.__stackDetails = _e;
      _f.__version = "3.3.0";
      return _f;
    }());
  }, [openReactions, lift]);
  var singleTap = _reactNativeGestureHandler.Gesture.Tap().maxDuration(220).maxDistance(8).onEnd(function () {
    var _e = [new global.Error(), 1, -27];
    var _f = function _f(_e, ok) {
      if (!ok) return;
    };
    _f._closure = {};
    _f.__initData = _worklet_9151852408825_init_data;
    _f.__workletHash = 9151852408825;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  var doubleTap = _reactNativeGestureHandler.Gesture.Tap().numberOfTaps(2).maxDelay(280).maxDuration(260).maxDistance(8).requireExternalGestureToFail(longPress).onEnd(function () {
    var _e = [new global.Error(), -3, -27];
    var _f = function _f(_e, ok) {
      if (!ok) return;
      (0, _reactNativeReanimated.runOnJS)(handleDoubleTap)();
    };
    _f._closure = {
      runOnJS: _reactNativeReanimated.runOnJS,
      handleDoubleTap: handleDoubleTap
    };
    _f.__initData = _worklet_5125055951239_init_data;
    _f.__workletHash = 5125055951239;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  var composed = _reactNativeGestureHandler.Gesture.Exclusive(_reactNativeGestureHandler.Gesture.Simultaneous(doubleTap, singleTap), longPress);
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.root,
    accessible: true,
    accessibilityLabel: a11yLongPressLabel,
    children: [(0, _jsxRuntime.jsx)(_reactNativeGestureHandler.GestureDetector, {
      gesture: composed,
      children: (0, _jsxRuntime.jsx)(_reactNativeReanimated.default.View, {
        style: liftStyle,
        children: (0, _jsxRuntime.jsx)(_DoubleTapLikePlus.default, {
          onDoubleTap: handleDoubleTap,
          children: children
        })
      })
    }), reactionsOpen ? (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.reactionOverlay,
      pointerEvents: "box-none",
      children: (0, _jsxRuntime.jsx)(_ReactionBarMagnetic.default, {
        onSelect: handleSelectReaction,
        onCancel: closeReactions
      })
    }) : null]
  });
}
var styles = _reactNative.StyleSheet.create({
  root: {
    position: "relative"
  },
  reactionOverlay: {
    position: "absolute",
    left: 0,
    right: 0,
    bottom: 24,
    alignItems: "center"
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,