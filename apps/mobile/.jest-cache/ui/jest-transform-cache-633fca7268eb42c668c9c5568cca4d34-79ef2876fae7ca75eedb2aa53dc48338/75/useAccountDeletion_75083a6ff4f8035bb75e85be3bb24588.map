{"version":3,"names":["_react","require","_reactNative","_gdprService","_interopRequireDefault","_core","useAccountDeletion","_useState","useState","_useState2","_slicedToArray2","default","isDeleting","setIsDeleting","_useState3","_useState4","error","setError","requestDeletion","useCallback","_ref","_asyncToGenerator2","password","reason","feedback","result","gdprService","deleteAccount","success","Alert","alert","text","logger","info","deletionId","err","errorMessage","Error","message","_x","_x2","_x3","apply","arguments","cancelDeletion","cancelled"],"sources":["useAccountDeletion.ts"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { Alert } from \"react-native\";\nimport gdprService from \"../../../services/gdprService\";\nimport { logger } from \"@pawfectmatch/core\";\n\nexport interface UseAccountDeletionReturn {\n  isDeleting: boolean;\n  requestDeletion: (\n    password: string,\n    reason?: string,\n    feedback?: string,\n  ) => Promise<boolean>;\n  cancelDeletion: () => Promise<boolean>;\n  error: string | null;\n}\n\n/**\n * Hook for requesting account deletion (GDPR)\n */\nexport function useAccountDeletion(): UseAccountDeletionReturn {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const requestDeletion = useCallback(\n    async (\n      password: string,\n      reason?: string,\n      feedback?: string,\n    ): Promise<boolean> => {\n      setIsDeleting(true);\n      setError(null);\n\n      try {\n        const result = await gdprService.deleteAccount({\n          password,\n          reason,\n          feedback,\n        });\n\n        if (result.success) {\n          Alert.alert(\n            \"Account Deletion Requested\",\n            `Your account will be permanently deleted in 30 days. We'll send you reminders before the deletion occurs.`,\n            [{ text: \"OK\" }],\n          );\n          logger.info(\"Account deletion requested\", {\n            deletionId: result.deletionId,\n          });\n          return true;\n        }\n\n        return false;\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error\n            ? err.message\n            : \"Failed to request account deletion\";\n        setError(errorMessage);\n        logger.error(\"Account deletion request failed:\", {\n          error: errorMessage,\n        });\n        Alert.alert(\"Error\", errorMessage);\n        return false;\n      } finally {\n        setIsDeleting(false);\n      }\n    },\n    [],\n  );\n\n  const cancelDeletion = useCallback(async (): Promise<boolean> => {\n    setIsDeleting(true);\n    setError(null);\n\n    try {\n      const cancelled = await gdprService.cancelDeletion();\n\n      if (cancelled.success) {\n        Alert.alert(\n          \"Deletion Cancelled\",\n          \"Your account deletion has been cancelled.\",\n        );\n        logger.info(\"Account deletion cancelled\");\n        return true;\n      }\n\n      return false;\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : \"Failed to cancel deletion\";\n      setError(errorMessage);\n      logger.error(\"Failed to cancel account deletion:\", {\n        error: errorMessage,\n      });\n      return false;\n    } finally {\n      setIsDeleting(false);\n    }\n  }, []);\n\n  return {\n    isDeleting,\n    requestDeletion,\n    cancelDeletion,\n    error,\n  };\n}\n"],"mappings":"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","ignoreList":[]}