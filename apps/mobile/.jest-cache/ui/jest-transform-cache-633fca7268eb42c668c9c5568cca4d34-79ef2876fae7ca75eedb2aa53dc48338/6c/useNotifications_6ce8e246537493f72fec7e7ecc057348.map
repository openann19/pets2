{"version":3,"names":["_react","_interopRequireDefault","require","_notifications","useNotifications","exports","_React$useState","React","useState","_React$useState2","_slicedToArray2","default","isInitialized","setIsInitialized","_React$useState3","_React$useState4","pushToken","setPushToken","useEffect","initializeNotifications","_ref","_asyncToGenerator2","token","initializeNotificationsService","apply","arguments","notificationService","cleanup","sendMatchNotification","bind","sendMessageNotification","sendLikeNotification","scheduleReminderNotification","setBadgeCount","clearBadge"],"sources":["useNotifications.ts"],"sourcesContent":["import React from \"react\";\nimport {\n  initializeNotificationsService,\n  notificationService,\n} from \"../services/notifications\";\n\n/**\n * React Hook for notifications management\n * Provides access to notification functionality and state\n */\nexport const useNotifications = () => {\n  const [isInitialized, setIsInitialized] = React.useState(false);\n  const [pushToken, setPushToken] = React.useState<string | null>(null);\n\n  React.useEffect(() => {\n    const initializeNotifications = async () => {\n      const token = await initializeNotificationsService();\n      setPushToken(token);\n      setIsInitialized(true);\n    };\n\n    initializeNotifications();\n\n    return () => {\n      notificationService.cleanup();\n    };\n  }, []);\n\n  return {\n    isInitialized,\n    pushToken,\n    sendMatchNotification:\n      notificationService.sendMatchNotification.bind(notificationService),\n    sendMessageNotification:\n      notificationService.sendMessageNotification.bind(notificationService),\n    sendLikeNotification:\n      notificationService.sendLikeNotification.bind(notificationService),\n    scheduleReminderNotification:\n      notificationService.scheduleReminderNotification.bind(\n        notificationService,\n      ),\n    setBadgeCount: notificationService.setBadgeCount.bind(notificationService),\n    clearBadge: notificationService.clearBadge.bind(notificationService),\n  };\n};\n"],"mappings":";;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AASO,IAAME,gBAAgB,GAAAC,OAAA,CAAAD,gBAAA,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EACpC,IAAAE,eAAA,GAA0CC,cAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAL,eAAA;IAAxDM,aAAa,GAAAH,gBAAA;IAAEI,gBAAgB,GAAAJ,gBAAA;EACtC,IAAAK,gBAAA,GAAkCP,cAAK,CAACC,QAAQ,CAAgB,IAAI,CAAC;IAAAO,gBAAA,OAAAL,eAAA,CAAAC,OAAA,EAAAG,gBAAA;IAA9DE,SAAS,GAAAD,gBAAA;IAAEE,YAAY,GAAAF,gBAAA;EAE9BR,cAAK,CAACW,SAAS,CAAC,YAAM;IACpB,IAAMC,uBAAuB;MAAA,IAAAC,IAAA,OAAAC,kBAAA,CAAAV,OAAA,EAAG,aAAY;QAC1C,IAAMW,KAAK,SAAS,IAAAC,6CAA8B,EAAC,CAAC;QACpDN,YAAY,CAACK,KAAK,CAAC;QACnBT,gBAAgB,CAAC,IAAI,CAAC;MACxB,CAAC;MAAA,gBAJKM,uBAAuBA,CAAA;QAAA,OAAAC,IAAA,CAAAI,KAAA,OAAAC,SAAA;MAAA;IAAA,GAI5B;IAEDN,uBAAuB,CAAC,CAAC;IAEzB,OAAO,YAAM;MACXO,kCAAmB,CAACC,OAAO,CAAC,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLf,aAAa,EAAbA,aAAa;IACbI,SAAS,EAATA,SAAS;IACTY,qBAAqB,EACnBF,kCAAmB,CAACE,qBAAqB,CAACC,IAAI,CAACH,kCAAmB,CAAC;IACrEI,uBAAuB,EACrBJ,kCAAmB,CAACI,uBAAuB,CAACD,IAAI,CAACH,kCAAmB,CAAC;IACvEK,oBAAoB,EAClBL,kCAAmB,CAACK,oBAAoB,CAACF,IAAI,CAACH,kCAAmB,CAAC;IACpEM,4BAA4B,EAC1BN,kCAAmB,CAACM,4BAA4B,CAACH,IAAI,CACnDH,kCACF,CAAC;IACHO,aAAa,EAAEP,kCAAmB,CAACO,aAAa,CAACJ,IAAI,CAACH,kCAAmB,CAAC;IAC1EQ,UAAU,EAAER,kCAAmB,CAACQ,UAAU,CAACL,IAAI,CAACH,kCAAmB;EACrE,CAAC;AACH,CAAC","ignoreList":[]}