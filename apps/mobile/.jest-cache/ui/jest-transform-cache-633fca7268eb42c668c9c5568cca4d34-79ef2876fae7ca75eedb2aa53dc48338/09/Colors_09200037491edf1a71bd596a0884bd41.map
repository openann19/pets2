{"version":3,"names":["Object","defineProperty","exports","value","toLinearSpace","toGammaSpace","rgbaColor","rgbaArrayToRGBAColor","red","processColorsInProps","processColor","opacity","normalizeColor","isColor","hsvToColor","green","convertToRGBA","clampRGBA","blue","RGBtoHSV","ColorProperties","_core","require","_PlatformChecker","NUMBER","PERCENTAGE","call","_len","arguments","length","args","Array","_key","join","callWithSlashSeparator","_len2","_key2","slice","commaSeparatedCall","_len3","_key3","MATCHERS","rgb","RegExp","rgba","hsl","hsla","hwb","hex3","hex4","hex6","hex8","_worklet_272441088588_init_data","code","location","sourceMap","hue2rgb","_e","global","Error","_f","p","q","t","_closure","__initData","__workletHash","__stackDetails","__version","_worklet_897992402552_init_data","hslToRgb","h","s","l","r","g","b","Math","round","_worklet_5297853899187_init_data","hwbToRgb","w","gray","_worklet_12436063496632_init_data","parse255","str","int","Number","parseInt","_worklet_571677145910_init_data","parse360","parseFloat","_worklet_15455997051699_init_data","parse1","num","_worklet_13166577349986_init_data","parsePercentage","_worklet_3207042084549_init_data","RGBA","i","max","min","names","makeShareable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","NestedColorProperties","boxShadow","_worklet_7879416675430_init_data","color","match","exec","undefined","_worklet_8743588753486_init_data","c","_worklet_702464460435_init_data","_worklet_10907850993420_init_data","_worklet_1677145752532_init_data","_worklet_2401311985344_init_data","alpha","safeAlpha","_worklet_7958806818799_init_data","d","v","_worklet_10197502152937_init_data","HSVtoRGB","floor","f","_worklet_8140421269453_init_data","a","_HSVtoRGB","_worklet_7387833203994_init_data","processColorInitially","colorNumber","normalizedColor","_worklet_14878937308123_init_data","IS_ANDROID","isAndroid","_worklet_9955185302389_init_data","_worklet_5280099998870_init_data","props","key","includes","isArray","map","propGroupList","propGroup","nestedPropertyName","_worklet_14624867921260_init_data","processedColor","_worklet_5947742399304_init_data","_worklet_17372089728188_init_data","gamma","res","push","pow","_worklet_8111215137944_init_data"],"sources":["Colors.ts"],"sourcesContent":["'use strict';\n/**\n * Copied from: react-native/Libraries/StyleSheet/normalizeColor.js\n * react-native/Libraries/StyleSheet/processColor.js\n * https://github.com/wcandillon/react-native-redash/blob/master/src/Colors.ts\n */\n\n/* eslint no-bitwise: 0 */\nimport type { StyleProps } from './commonTypes';\nimport { makeShareable } from './core';\nimport { isAndroid } from './PlatformChecker';\n\ninterface RGB {\n  r: number;\n  g: number;\n  b: number;\n}\n\ninterface HSV {\n  h: number;\n  s: number;\n  v: number;\n}\n\nconst NUMBER: string = '[-+]?\\\\d*\\\\.?\\\\d+';\nconst PERCENTAGE = NUMBER + '%';\n\nfunction call(...args: (RegExp | string)[]) {\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,?\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nfunction callWithSlashSeparator(...args: (RegExp | string)[]) {\n  return (\n    '\\\\(\\\\s*(' +\n    args.slice(0, args.length - 1).join(')\\\\s*,?\\\\s*(') +\n    ')\\\\s*/\\\\s*(' +\n    args[args.length - 1] +\n    ')\\\\s*\\\\)'\n  );\n}\n\nfunction commaSeparatedCall(...args: (RegExp | string)[]) {\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nconst MATCHERS = {\n  rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),\n  rgba: new RegExp(\n    'rgba(' +\n      commaSeparatedCall(NUMBER, NUMBER, NUMBER, NUMBER) +\n      '|' +\n      callWithSlashSeparator(NUMBER, NUMBER, NUMBER, NUMBER) +\n      ')'\n  ),\n  hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n  hsla: new RegExp(\n    'hsla(' +\n      commaSeparatedCall(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER) +\n      '|' +\n      callWithSlashSeparator(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER) +\n      ')'\n  ),\n  hwb: new RegExp('hwb' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n  hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex6: /^#([0-9a-fA-F]{6})$/,\n  hex8: /^#([0-9a-fA-F]{8})$/,\n};\n\nfunction hue2rgb(p: number, q: number, t: number): number {\n  'worklet';\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\n\nfunction hslToRgb(h: number, s: number, l: number): number {\n  'worklet';\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  const r = hue2rgb(p, q, h + 1 / 3);\n  const g = hue2rgb(p, q, h);\n  const b = hue2rgb(p, q, h - 1 / 3);\n\n  return (\n    (Math.round(r * 255) << 24) |\n    (Math.round(g * 255) << 16) |\n    (Math.round(b * 255) << 8)\n  );\n}\n\nfunction hwbToRgb(h: number, w: number, b: number): number {\n  'worklet';\n  if (w + b >= 1) {\n    const gray = Math.round((w * 255) / (w + b));\n\n    return (gray << 24) | (gray << 16) | (gray << 8);\n  }\n\n  const red = hue2rgb(0, 1, h + 1 / 3) * (1 - w - b) + w;\n  const green = hue2rgb(0, 1, h) * (1 - w - b) + w;\n  const blue = hue2rgb(0, 1, h - 1 / 3) * (1 - w - b) + w;\n\n  return (\n    (Math.round(red * 255) << 24) |\n    (Math.round(green * 255) << 16) |\n    (Math.round(blue * 255) << 8)\n  );\n}\n\nfunction parse255(str: string): number {\n  'worklet';\n  const int = Number.parseInt(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 255) {\n    return 255;\n  }\n  return int;\n}\n\nfunction parse360(str: string): number {\n  'worklet';\n  const int = Number.parseFloat(str);\n  return (((int % 360) + 360) % 360) / 360;\n}\n\nfunction parse1(str: string): number {\n  'worklet';\n  const num = Number.parseFloat(str);\n  if (num < 0) {\n    return 0;\n  }\n  if (num > 1) {\n    return 255;\n  }\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str: string): number {\n  'worklet';\n  // parseFloat conveniently ignores the final %\n  const int = Number.parseFloat(str);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 100) {\n    return 1;\n  }\n  return int / 100;\n}\n\nexport function clampRGBA(RGBA: ParsedColorArray): void {\n  'worklet';\n  for (let i = 0; i < 4; i++) {\n    RGBA[i] = Math.max(0, Math.min(RGBA[i], 1));\n  }\n}\n\nconst names: Record<string, number> = makeShareable({\n  transparent: 0x00000000,\n\n  /* spell-checker: disable */\n  // http://www.w3.org/TR/css3-color/#svg-color\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff,\n  /* spell-checker: enable */\n});\n\n// copied from react-native/Libraries/Components/View/ReactNativeStyleAttributes\nexport const ColorProperties = makeShareable([\n  'backgroundColor',\n  'borderBottomColor',\n  'borderColor',\n  'borderLeftColor',\n  'borderRightColor',\n  'borderTopColor',\n  'borderStartColor',\n  'borderEndColor',\n  'borderBlockColor',\n  'borderBlockEndColor',\n  'borderBlockStartColor',\n  'color',\n  'outlineColor',\n  'shadowColor',\n  'textDecorationColor',\n  'tintColor',\n  'textShadowColor',\n  'overlayColor',\n  // SVG color properties\n  'fill',\n  'floodColor',\n  'lightingColor',\n  'stopColor',\n  'stroke',\n]);\n\nconst NestedColorProperties = makeShareable({\n  boxShadow: 'color',\n});\n\n// // ts-prune-ignore-next Exported for the purpose of tests only\nexport function normalizeColor(color: unknown): number | null {\n  'worklet';\n\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n    return null;\n  }\n\n  if (typeof color !== 'string') {\n    return null;\n  }\n\n  let match: RegExpExecArray | null | undefined;\n\n  // Ordered based on occurrences on Facebook codebase\n  if ((match = MATCHERS.hex6.exec(color))) {\n    return Number.parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n\n  if (names[color] !== undefined) {\n    return names[color];\n  }\n\n  if ((match = MATCHERS.rgb.exec(color))) {\n    return (\n      // b\n      ((parse255(match[1]) << 24) | // r\n        (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = MATCHERS.rgba.exec(color))) {\n    // rgba(R G B / A) notation\n    if (match[6] !== undefined) {\n      return (\n        ((parse255(match[6]) << 24) | // r\n          (parse255(match[7]) << 16) | // g\n          (parse255(match[8]) << 8) | // b\n          parse1(match[9])) >>> // a\n        0\n      );\n    }\n\n    // rgba(R, G, B, A) notation\n    return (\n      ((parse255(match[2]) << 24) | // r\n        (parse255(match[3]) << 16) | // g\n        (parse255(match[4]) << 8) | // b\n        parse1(match[5])) >>> // a\n      0\n    );\n  }\n\n  if ((match = MATCHERS.hex3.exec(color))) {\n    return (\n      Number.parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          'ff', // a\n        16\n      ) >>> 0\n    );\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  if ((match = MATCHERS.hex8.exec(color))) {\n    return Number.parseInt(match[1], 16) >>> 0;\n  }\n\n  if ((match = MATCHERS.hex4.exec(color))) {\n    return (\n      Number.parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          match[4] +\n          match[4], // a\n        16\n      ) >>> 0\n    );\n  }\n\n  if ((match = MATCHERS.hsl.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]) // l\n      ) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = MATCHERS.hsla.exec(color))) {\n    // hsla(H S L / A) notation\n    if (match[6] !== undefined) {\n      return (\n        (hslToRgb(\n          parse360(match[6]), // h\n          parsePercentage(match[7]), // s\n          parsePercentage(match[8]) // l\n        ) |\n          parse1(match[9])) >>> // a\n        0\n      );\n    }\n\n    // hsla(H, S, L, A) notation\n    return (\n      (hslToRgb(\n        parse360(match[2]), // h\n        parsePercentage(match[3]), // s\n        parsePercentage(match[4]) // l\n      ) |\n        parse1(match[5])) >>> // a\n      0\n    );\n  }\n\n  if ((match = MATCHERS.hwb.exec(color))) {\n    return (\n      (hwbToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // w\n        parsePercentage(match[3]) // b\n      ) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  return null;\n}\n\nexport const opacity = (c: number): number => {\n  'worklet';\n  return ((c >> 24) & 255) / 255;\n};\n\nexport const red = (c: number): number => {\n  'worklet';\n  return (c >> 16) & 255;\n};\n\nexport const green = (c: number): number => {\n  'worklet';\n  return (c >> 8) & 255;\n};\n\nexport const blue = (c: number): number => {\n  'worklet';\n  return c & 255;\n};\n\nexport const rgbaColor = (\n  r: number,\n  g: number,\n  b: number,\n  alpha = 1\n): number | string => {\n  'worklet';\n  // Replace tiny values like 1.234e-11 with 0:\n  const safeAlpha = alpha < 0.001 ? 0 : alpha;\n  return `rgba(${r}, ${g}, ${b}, ${safeAlpha})`;\n};\n\n/**\n * @param r - Red value (0-255)\n * @param g - Green value (0-255)\n * @param b - Blue value (0-255)\n * @returns `{h: hue (0-1), s: saturation (0-1), v: value (0-1)}`\n */\nexport function RGBtoHSV(r: number, g: number, b: number): HSV {\n  'worklet';\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const d = max - min;\n  const s = max === 0 ? 0 : d / max;\n  const v = max / 255;\n\n  let h = 0;\n\n  switch (max) {\n    case min:\n      break;\n    case r:\n      h = g - b + d * (g < b ? 6 : 0);\n      h /= 6 * d;\n      break;\n    case g:\n      h = b - r + d * 2;\n      h /= 6 * d;\n      break;\n    case b:\n      h = r - g + d * 4;\n      h /= 6 * d;\n      break;\n  }\n\n  return { h, s, v };\n}\n\n/**\n * @param h - Hue (0-1)\n * @param s - Saturation (0-1)\n * @param v - Value (0-1)\n * @returns `{r: red (0-255), g: green (0-255), b: blue (0-255)}`\n */\nfunction HSVtoRGB(h: number, s: number, v: number): RGB {\n  'worklet';\n  let r, g, b;\n\n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  switch ((i % 6) as 0 | 1 | 2 | 3 | 4 | 5) {\n    case 0:\n      [r, g, b] = [v, t, p];\n      break;\n    case 1:\n      [r, g, b] = [q, v, p];\n      break;\n    case 2:\n      [r, g, b] = [p, v, t];\n      break;\n    case 3:\n      [r, g, b] = [p, q, v];\n      break;\n    case 4:\n      [r, g, b] = [t, p, v];\n      break;\n    case 5:\n      [r, g, b] = [v, p, q];\n      break;\n  }\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255),\n  };\n}\n\nexport const hsvToColor = (\n  h: number,\n  s: number,\n  v: number,\n  a: number\n): number | string => {\n  'worklet';\n  const { r, g, b } = HSVtoRGB(h, s, v);\n  return rgbaColor(r, g, b, a);\n};\n\nfunction processColorInitially(color: unknown): number | null | undefined {\n  'worklet';\n  if (color === null || color === undefined) {\n    return color;\n  }\n\n  let colorNumber: number;\n\n  if (typeof color === 'number') {\n    colorNumber = color;\n  } else {\n    const normalizedColor = normalizeColor(color);\n    if (normalizedColor === null || normalizedColor === undefined) {\n      return undefined;\n    }\n\n    if (typeof normalizedColor !== 'number') {\n      return null;\n    }\n\n    colorNumber = normalizedColor;\n  }\n\n  return ((colorNumber << 24) | (colorNumber >>> 8)) >>> 0; // alpha rgb\n}\n\nexport function isColor(value: unknown): boolean {\n  'worklet';\n  if (typeof value !== 'string') {\n    return false;\n  }\n  return processColorInitially(value) != null;\n}\n\nconst IS_ANDROID = isAndroid();\n\nexport function processColor(color: unknown): number | null | undefined {\n  'worklet';\n  let normalizedColor = processColorInitially(color);\n  if (normalizedColor === null || normalizedColor === undefined) {\n    return undefined;\n  }\n\n  if (typeof normalizedColor !== 'number') {\n    return null;\n  }\n\n  if (IS_ANDROID) {\n    // Android use 32 bit *signed* integer to represent the color\n    // We utilize the fact that bitwise operations in JS also operates on\n    // signed 32 bit integers, so that we can use those to convert from\n    // *unsigned* to *signed* 32bit int that way.\n    normalizedColor = normalizedColor | 0x0;\n  }\n\n  return normalizedColor;\n}\n\nexport function processColorsInProps(props: StyleProps) {\n  'worklet';\n  for (const key in props) {\n    if (ColorProperties.includes(key)) {\n      if (Array.isArray(props[key])) {\n        props[key] = props[key].map((color: unknown) => processColor(color));\n      } else {\n        props[key] = processColor(props[key]);\n      }\n    } else if (\n      NestedColorProperties[key as keyof typeof NestedColorProperties]\n    ) {\n      const propGroupList = props[key] as StyleProps[];\n      for (const propGroup of propGroupList) {\n        const nestedPropertyName =\n          NestedColorProperties[key as keyof typeof NestedColorProperties];\n        if (propGroup[nestedPropertyName] !== undefined) {\n          propGroup[nestedPropertyName] = processColor(\n            propGroup[nestedPropertyName]\n          );\n        }\n      }\n    }\n  }\n}\n\nexport type ParsedColorArray = [number, number, number, number];\n\nexport function convertToRGBA(color: unknown): ParsedColorArray {\n  'worklet';\n  const processedColor = processColorInitially(color)!; // alpha rgb;\n  const a = (processedColor >>> 24) / 255;\n  const r = ((processedColor << 8) >>> 24) / 255;\n  const g = ((processedColor << 16) >>> 24) / 255;\n  const b = ((processedColor << 24) >>> 24) / 255;\n  return [r, g, b, a];\n}\n\nexport function rgbaArrayToRGBAColor(RGBA: ParsedColorArray): string {\n  'worklet';\n  const alpha = RGBA[3] < 0.001 ? 0 : RGBA[3];\n  return `rgba(${Math.round(RGBA[0] * 255)}, ${Math.round(\n    RGBA[1] * 255\n  )}, ${Math.round(RGBA[2] * 255)}, ${alpha})`;\n}\n\nexport function toLinearSpace(\n  RGBA: ParsedColorArray,\n  gamma = 2.2\n): ParsedColorArray {\n  'worklet';\n  const res = [];\n  for (let i = 0; i < 3; ++i) {\n    res.push(Math.pow(RGBA[i], gamma));\n  }\n  res.push(RGBA[3]);\n  return res as ParsedColorArray;\n}\n\nexport function toGammaSpace(\n  RGBA: ParsedColorArray,\n  gamma = 2.2\n): ParsedColorArray {\n  'worklet';\n  const res = [];\n  for (let i = 0; i < 3; ++i) {\n    res.push(Math.pow(RGBA[i], 1 / gamma));\n  }\n  res.push(RGBA[3]);\n  return res as ParsedColorArray;\n}\n"],"mappings":"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","ignoreList":[]}