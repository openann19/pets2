8f12934a176f381a1359eff57eb6b1a0
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ReplySwipeHint;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
var _vectorIcons = require("@expo/vector-icons");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t2 in e) "default" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]); return f; })(e, t); }
var _worklet_241176129127_init_data = {
  code: "function anonymous() {\n  const {\n    progress,\n    interpolate,\n    Extrapolate,\n    align\n  } = this._closure;\n  const p = typeof progress === \"number\" ? progress : progress.value / 56;\n  const alpha = interpolate(p, [0, 0.15, 1], [0, 0.5, 1], Extrapolate.CLAMP);\n  const tx = interpolate(p, [0, 1], [align === \"right\" ? -10 : 10, 0]);\n  return {\n    opacity: alpha,\n    transform: [{\n      translateX: tx\n    }]\n  };\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/chat/ReplySwipeHint.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"progress\",\"interpolate\",\"Extrapolate\",\"align\",\"_closure\",\"p\",\"value\",\"alpha\",\"CLAMP\",\"tx\",\"opacity\",\"transform\",\"translateX\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/chat/ReplySwipeHint.tsx\"],\"mappings\":\"AA2B+B,SAAAA,SAAMA,CAAA;EAAA;IAAAC,QAAA;IAAAC,WAAA;IAAAC,WAAA;IAAAC;EAAA,SAAAC,QAAA;EACjC,MAAMC,CAAC,GAAG,OAAOL,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAGA,QAAQ,CAACM,KAAK,GAAG,EAAE;EACvE,MAAMC,KAAK,GAAGN,WAAW,CAACI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAEH,WAAW,CAACM,KAAK,CAAC;EAC1E,MAAMC,EAAE,GAAGR,WAAW,CAACI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAACF,KAAK,KAAK,OAAO,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;EACpE,OAAO;IAAEO,OAAO,EAAEH,KAAK;IAAEI,SAAS,EAAE,CAAC;MAAEC,UAAU,EAAEH;IAAG,CAAC;EAAE,CAAC;AAC5D\",\"ignoreList\":[]}"
};
function ReplySwipeHint(_ref) {
  var progress = _ref.progress,
    _ref$align = _ref.align,
    align = _ref$align === void 0 ? "right" : _ref$align;
  var sty = (0, _reactNativeReanimated.useAnimatedStyle)(function () {
    var _e = [new global.Error(), -5, -27];
    var _f = function _f() {
      var p = typeof progress === "number" ? progress : progress.value / 56;
      var alpha = (0, _reactNativeReanimated.interpolate)(p, [0, 0.15, 1], [0, 0.5, 1], _reactNativeReanimated.Extrapolate.CLAMP);
      var tx = (0, _reactNativeReanimated.interpolate)(p, [0, 1], [align === "right" ? -10 : 10, 0]);
      return {
        opacity: alpha,
        transform: [{
          translateX: tx
        }]
      };
    };
    _f._closure = {
      progress: progress,
      interpolate: _reactNativeReanimated.interpolate,
      Extrapolate: _reactNativeReanimated.Extrapolate,
      align: align
    };
    _f.__initData = _worklet_241176129127_init_data;
    _f.__workletHash = 241176129127;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  return (0, _jsxRuntime.jsx)(_reactNativeReanimated.default.View, {
    style: [styles.wrap, sty, align === "left" && {
      flexDirection: "row-reverse"
    }],
    accessibilityRole: "button",
    accessibilityLabel: "Swipe to reply",
    children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.pill,
      children: [(0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
        name: "arrow-undo",
        size: 14,
        color: "#fff"
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.txt,
        children: "Reply"
      })]
    })
  });
}
var styles = _reactNative.StyleSheet.create({
  wrap: {
    position: "absolute",
    bottom: -18,
    right: 8
  },
  pill: {
    flexDirection: "row",
    alignItems: "center",
    gap: 6,
    paddingHorizontal: 8,
    paddingVertical: 2,
    borderRadius: 999,
    backgroundColor: "rgba(17,17,17,0.7)"
  },
  txt: {
    color: "#fff",
    fontSize: 11,
    fontWeight: "600"
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,