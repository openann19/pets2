{"version":3,"names":["_NativeDialogManagerAndroid","_interopRequireDefault","require","_NativePermissionsAndroid","_invariant","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","Platform","PERMISSION_REQUEST_RESULT","freeze","GRANTED","DENIED","NEVER_ASK_AGAIN","PERMISSIONS","READ_CALENDAR","WRITE_CALENDAR","CAMERA","READ_CONTACTS","WRITE_CONTACTS","GET_ACCOUNTS","ACCESS_FINE_LOCATION","ACCESS_COARSE_LOCATION","ACCESS_BACKGROUND_LOCATION","RECORD_AUDIO","READ_PHONE_STATE","CALL_PHONE","READ_CALL_LOG","WRITE_CALL_LOG","ADD_VOICEMAIL","READ_VOICEMAIL","WRITE_VOICEMAIL","USE_SIP","PROCESS_OUTGOING_CALLS","BODY_SENSORS","BODY_SENSORS_BACKGROUND","SEND_SMS","RECEIVE_SMS","READ_SMS","RECEIVE_WAP_PUSH","RECEIVE_MMS","READ_EXTERNAL_STORAGE","READ_MEDIA_IMAGES","READ_MEDIA_VIDEO","READ_MEDIA_AUDIO","WRITE_EXTERNAL_STORAGE","BLUETOOTH_CONNECT","BLUETOOTH_SCAN","BLUETOOTH_ADVERTISE","ACCESS_MEDIA_LOCATION","ACCEPT_HANDOVER","ACTIVITY_RECOGNITION","ANSWER_PHONE_CALLS","READ_PHONE_NUMBERS","UWB_RANGING","POST_NOTIFICATIONS","NEARBY_WIFI_DEVICES","PermissionsAndroid","_classCallCheck2","RESULTS","_createClass2","key","value","checkPermission","permission","console","warn","OS","Promise","resolve","invariant","NativePermissionsAndroid","check","_requestPermission","_asyncToGenerator2","rationale","response","request","requestPermission","_x","_x2","_request","shouldShowRationale","shouldShowRequestPermissionRationale","NativeDialogManagerAndroid","reject","options","showAlert","Error","_x3","_x4","requestMultiple","permissions","requestMultiplePermissions","PermissionsAndroidInstance","module","exports"],"sources":["PermissionsAndroid.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {\n  PermissionStatus,\n  PermissionType,\n} from './NativePermissionsAndroid';\n\nimport NativeDialogManagerAndroid from '../NativeModules/specs/NativeDialogManagerAndroid';\nimport NativePermissionsAndroid from './NativePermissionsAndroid';\nimport invariant from 'invariant';\n\nconst Platform = require('../Utilities/Platform');\n\nexport type Rationale = {\n  title: string,\n  message: string,\n  buttonPositive?: string,\n  buttonNegative?: string,\n  buttonNeutral?: string,\n  ...\n};\n\nconst PERMISSION_REQUEST_RESULT = Object.freeze({\n  GRANTED: 'granted',\n  DENIED: 'denied',\n  NEVER_ASK_AGAIN: 'never_ask_again',\n});\n\nconst PERMISSIONS = Object.freeze({\n  READ_CALENDAR: 'android.permission.READ_CALENDAR',\n  WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',\n  CAMERA: 'android.permission.CAMERA',\n  READ_CONTACTS: 'android.permission.READ_CONTACTS',\n  WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',\n  GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',\n  ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',\n  ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',\n  ACCESS_BACKGROUND_LOCATION: 'android.permission.ACCESS_BACKGROUND_LOCATION',\n  RECORD_AUDIO: 'android.permission.RECORD_AUDIO',\n  READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',\n  CALL_PHONE: 'android.permission.CALL_PHONE',\n  READ_CALL_LOG: 'android.permission.READ_CALL_LOG',\n  WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',\n  ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',\n  READ_VOICEMAIL: 'com.android.voicemail.permission.READ_VOICEMAIL',\n  WRITE_VOICEMAIL: 'com.android.voicemail.permission.WRITE_VOICEMAIL',\n  USE_SIP: 'android.permission.USE_SIP',\n  PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',\n  BODY_SENSORS: 'android.permission.BODY_SENSORS',\n  BODY_SENSORS_BACKGROUND: 'android.permission.BODY_SENSORS_BACKGROUND',\n  SEND_SMS: 'android.permission.SEND_SMS',\n  RECEIVE_SMS: 'android.permission.RECEIVE_SMS',\n  READ_SMS: 'android.permission.READ_SMS',\n  RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',\n  RECEIVE_MMS: 'android.permission.RECEIVE_MMS',\n  READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',\n  READ_MEDIA_IMAGES: 'android.permission.READ_MEDIA_IMAGES',\n  READ_MEDIA_VIDEO: 'android.permission.READ_MEDIA_VIDEO',\n  READ_MEDIA_AUDIO: 'android.permission.READ_MEDIA_AUDIO',\n  WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE',\n  BLUETOOTH_CONNECT: 'android.permission.BLUETOOTH_CONNECT',\n  BLUETOOTH_SCAN: 'android.permission.BLUETOOTH_SCAN',\n  BLUETOOTH_ADVERTISE: 'android.permission.BLUETOOTH_ADVERTISE',\n  ACCESS_MEDIA_LOCATION: 'android.permission.ACCESS_MEDIA_LOCATION',\n  ACCEPT_HANDOVER: 'android.permission.ACCEPT_HANDOVER',\n  ACTIVITY_RECOGNITION: 'android.permission.ACTIVITY_RECOGNITION',\n  ANSWER_PHONE_CALLS: 'android.permission.ANSWER_PHONE_CALLS',\n  READ_PHONE_NUMBERS: 'android.permission.READ_PHONE_NUMBERS',\n  UWB_RANGING: 'android.permission.UWB_RANGING',\n  POST_NOTIFICATIONS: 'android.permission.POST_NOTIFICATIONS',\n  NEARBY_WIFI_DEVICES: 'android.permission.NEARBY_WIFI_DEVICES',\n});\n\n/**\n * `PermissionsAndroid` provides access to Android M's new permissions model.\n *\n * See https://reactnative.dev/docs/permissionsandroid\n */\n\nclass PermissionsAndroid {\n  PERMISSIONS: {|\n    ACCEPT_HANDOVER: string,\n    ACCESS_BACKGROUND_LOCATION: string,\n    ACCESS_COARSE_LOCATION: string,\n    ACCESS_FINE_LOCATION: string,\n    ACCESS_MEDIA_LOCATION: string,\n    ACTIVITY_RECOGNITION: string,\n    ADD_VOICEMAIL: string,\n    READ_VOICEMAIL: string,\n    WRITE_VOICEMAIL: string,\n    ANSWER_PHONE_CALLS: string,\n    BLUETOOTH_ADVERTISE: string,\n    BLUETOOTH_CONNECT: string,\n    BLUETOOTH_SCAN: string,\n    BODY_SENSORS: string,\n    BODY_SENSORS_BACKGROUND: string,\n    CALL_PHONE: string,\n    CAMERA: string,\n    GET_ACCOUNTS: string,\n    NEARBY_WIFI_DEVICES: string,\n    POST_NOTIFICATIONS: string,\n    PROCESS_OUTGOING_CALLS: string,\n    READ_CALENDAR: string,\n    READ_CALL_LOG: string,\n    READ_CONTACTS: string,\n    READ_EXTERNAL_STORAGE: string,\n    READ_MEDIA_IMAGES: string,\n    READ_MEDIA_VIDEO: string,\n    READ_MEDIA_AUDIO: string,\n    READ_PHONE_NUMBERS: string,\n    READ_PHONE_STATE: string,\n    READ_SMS: string,\n    RECEIVE_MMS: string,\n    RECEIVE_SMS: string,\n    RECEIVE_WAP_PUSH: string,\n    RECORD_AUDIO: string,\n    SEND_SMS: string,\n    USE_SIP: string,\n    UWB_RANGING: string,\n    WRITE_CALENDAR: string,\n    WRITE_CALL_LOG: string,\n    WRITE_CONTACTS: string,\n    WRITE_EXTERNAL_STORAGE: string,\n  |} = PERMISSIONS;\n  RESULTS: {|\n    DENIED: $TEMPORARY$string<'denied'>,\n    GRANTED: $TEMPORARY$string<'granted'>,\n    NEVER_ASK_AGAIN: $TEMPORARY$string<'never_ask_again'>,\n  |} = PERMISSION_REQUEST_RESULT;\n\n  /**\n   * DEPRECATED - use check\n   *\n   * Returns a promise resolving to a boolean value as to whether the specified\n   * permissions has been granted\n   *\n   * @deprecated\n   */\n  checkPermission(permission: PermissionType): Promise<boolean> {\n    console.warn(\n      '\"PermissionsAndroid.checkPermission\" is deprecated. Use \"PermissionsAndroid.check\" instead',\n    );\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve(false);\n    }\n\n    invariant(\n      NativePermissionsAndroid,\n      'PermissionsAndroid is not installed correctly.',\n    );\n\n    return NativePermissionsAndroid.checkPermission(permission);\n  }\n\n  /**\n   * Returns a promise resolving to a boolean value as to whether the specified\n   * permissions has been granted\n   *\n   * See https://reactnative.dev/docs/permissionsandroid#check\n   */\n  check(permission: PermissionType): Promise<boolean> {\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve(false);\n    }\n\n    invariant(\n      NativePermissionsAndroid,\n      'PermissionsAndroid is not installed correctly.',\n    );\n\n    return NativePermissionsAndroid.checkPermission(permission);\n  }\n\n  /**\n   * DEPRECATED - use request\n   *\n   * Prompts the user to enable a permission and returns a promise resolving to a\n   * boolean value indicating whether the user allowed or denied the request\n   *\n   * If the optional rationale argument is included (which is an object with a\n   * `title` and `message`), this function checks with the OS whether it is\n   * necessary to show a dialog explaining why the permission is needed\n   * (https://developer.android.com/training/permissions/requesting#explain)\n   * and then shows the system permission dialog\n   *\n   * @deprecated\n   */\n  async requestPermission(\n    permission: PermissionType,\n    rationale?: Rationale,\n  ): Promise<boolean> {\n    console.warn(\n      '\"PermissionsAndroid.requestPermission\" is deprecated. Use \"PermissionsAndroid.request\" instead',\n    );\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve(false);\n    }\n\n    const response = await this.request(permission, rationale);\n    return response === this.RESULTS.GRANTED;\n  }\n\n  /**\n   * Prompts the user to enable a permission and returns a promise resolving to a\n   * string value indicating whether the user allowed or denied the request\n   *\n   * See https://reactnative.dev/docs/permissionsandroid#request\n   */\n  async request(\n    permission: PermissionType,\n    rationale?: Rationale,\n  ): Promise<PermissionStatus> {\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve(this.RESULTS.DENIED);\n    }\n\n    invariant(\n      NativePermissionsAndroid,\n      'PermissionsAndroid is not installed correctly.',\n    );\n\n    if (rationale) {\n      const shouldShowRationale =\n        await NativePermissionsAndroid.shouldShowRequestPermissionRationale(\n          permission,\n        );\n\n      if (shouldShowRationale && !!NativeDialogManagerAndroid) {\n        return new Promise((resolve, reject) => {\n          const options = {\n            ...rationale,\n          };\n          NativeDialogManagerAndroid.showAlert(\n            /* $FlowFixMe[incompatible-exact] (>=0.111.0 site=react_native_fb)\n             * This comment suppresses an error found when Flow v0.111 was\n             * deployed. To see the error, delete this comment and run Flow.\n             */\n            options,\n            () => reject(new Error('Error showing rationale')),\n            () =>\n              resolve(NativePermissionsAndroid.requestPermission(permission)),\n          );\n        });\n      }\n    }\n    return NativePermissionsAndroid.requestPermission(permission);\n  }\n\n  /**\n   * Prompts the user to enable multiple permissions in the same dialog and\n   * returns an object with the permissions as keys and strings as values\n   * indicating whether the user allowed or denied the request\n   *\n   * See https://reactnative.dev/docs/permissionsandroid#requestmultiple\n   */\n  requestMultiple(\n    permissions: Array<PermissionType>,\n  ): Promise<{[permission: PermissionType]: PermissionStatus, ...}> {\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve({});\n    }\n\n    invariant(\n      NativePermissionsAndroid,\n      'PermissionsAndroid is not installed correctly.',\n    );\n\n    return NativePermissionsAndroid.requestMultiplePermissions(permissions);\n  }\n}\n\nconst PermissionsAndroidInstance: PermissionsAndroid = new PermissionsAndroid();\n\nmodule.exports = PermissionsAndroidInstance;\n"],"mappings":"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","ignoreList":[]}