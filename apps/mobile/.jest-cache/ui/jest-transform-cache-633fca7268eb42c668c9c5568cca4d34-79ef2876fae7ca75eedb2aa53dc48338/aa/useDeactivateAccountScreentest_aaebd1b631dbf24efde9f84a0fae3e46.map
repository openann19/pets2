{"version":3,"names":["_getJestObj","mock","Alert","alert","jest","fn","selectionAsync","impactAsync","_interopRequireDefault","require","_asyncToGenerator2","_reactNative","_reactNative2","_gdprService","_useDeactivateAccountScreen","_require","mockGdprService","gdprService","describe","mockNavigation","goBack","beforeEach","clearAllMocks","it","_renderHook","renderHook","useDeactivateAccountScreen","result","expect","current","reason","toBe","confirmText","loading","_renderHook2","reasons","toHaveLength","_renderHook3","act","selectReason","_renderHook4","setConfirmText","default","_renderHook5","handleDeactivate","toHaveBeenCalledWith","deleteAccount","not","toHaveBeenCalled","_renderHook6","mockResolvedValue","success","message","gracePeriodEndsAt","Date","toISOString","_renderHook7","password","feedback","any","String","Array","_renderHook8","handleGoBack","toBeDefined"],"sources":["useDeactivateAccountScreen.test.ts"],"sourcesContent":["/**\n * useDeactivateAccountScreen Tests\n * Unit tests for account deactivation\n */\n\nimport { act, renderHook, waitFor } from \"@testing-library/react-native\";\nimport { Alert } from \"react-native\";\nimport gdprService from \"../../../services/gdprService\";\nimport { useDeactivateAccountScreen } from \"../useDeactivateAccountScreen\";\n\njest.mock(\"../../../services/gdprService\");\njest.mock(\"react-native\", () => ({\n  Alert: {\n    alert: jest.fn(),\n  },\n}));\n\njest.mock(\"expo-haptics\", () => ({\n  selectionAsync: jest.fn(),\n  impactAsync: jest.fn(),\n}));\n\nconst mockGdprService = gdprService as jest.Mocked<typeof gdprService>;\n\ndescribe(\"useDeactivateAccountScreen\", () => {\n  const mockNavigation = {\n    goBack: jest.fn(),\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe(\"Initial State\", () => {\n    it(\"should initialize with empty state\", () => {\n      const { result } = renderHook(() => useDeactivateAccountScreen());\n      \n      expect(result.current.reason).toBe(\"\");\n      expect(result.current.confirmText).toBe(\"\");\n      expect(result.current.loading).toBe(false);\n    });\n\n    it(\"should provide deactivation reasons\", () => {\n      const { result } = renderHook(() => useDeactivateAccountScreen());\n      \n      expect(result.current.reasons).toHaveLength(6);\n      expect(result.current.reasons[0]).toBe(\"Taking a break from dating\");\n    });\n  });\n\n  describe(\"selectReason\", () => {\n    it(\"should set selected reason\", () => {\n      const { result } = renderHook(() => useDeactivateAccountScreen());\n      \n      act(() => {\n        result.current.selectReason(\"Found a partner\");\n      });\n\n      expect(result.current.reason).toBe(\"Found a partner\");\n    });\n  });\n\n  describe(\"setConfirmText\", () => {\n    it(\"should update confirmation text\", () => {\n      const { result } = renderHook(() => useDeactivateAccountScreen());\n      \n      act(() => {\n        result.current.setConfirmText(\"deactivate\");\n      });\n\n      expect(result.current.confirmText).toBe(\"deactivate\");\n    });\n  });\n\n  describe(\"handleDeactivate\", () => {\n    it(\"should require reason selection\", async () => {\n      const { result } = renderHook(() => useDeactivateAccountScreen());\n      \n      await act(async () => {\n        await result.current.handleDeactivate();\n      });\n\n      expect(Alert.alert).toHaveBeenCalledWith(\n        \"Required\",\n        \"Please select a reason for deactivation.\"\n      );\n      expect(mockGdprService.deleteAccount).not.toHaveBeenCalled();\n    });\n\n    it(\"should require confirmation text\", async () => {\n      const { result } = renderHook(() => useDeactivateAccountScreen());\n      \n      act(() => {\n        result.current.selectReason(\"Found a partner\");\n      });\n\n      await act(async () => {\n        await result.current.handleDeactivate();\n      });\n\n      expect(Alert.alert).toHaveBeenCalledWith(\n        \"Confirmation Required\",\n        'Please type \"deactivate\" to confirm.'\n      );\n    });\n\n    it(\"should deactivate account successfully\", async () => {\n      mockGdprService.deleteAccount.mockResolvedValue({\n        success: true,\n        message: \"Account deactivated\",\n        gracePeriodEndsAt: new Date().toISOString(),\n      } as any);\n      \n      const { result } = renderHook(() => useDeactivateAccountScreen());\n      \n      act(() => {\n        result.current.selectReason(\"Found a partner\");\n        result.current.setConfirmText(\"deactivate\");\n      });\n\n      await act(async () => {\n        await result.current.handleDeactivate();\n      });\n\n      expect(mockGdprService.deleteAccount).toHaveBeenCalledWith({\n        password: \"N/A\",\n        reason: \"Found a partner\",\n        feedback: \"deactivate\",\n      });\n      \n      expect(Alert.alert).toHaveBeenCalledWith(\n        \"Account Deactivated\",\n        expect.any(String),\n        expect.any(Array)\n      );\n    });\n  });\n\n  describe(\"handleGoBack\", () => {\n    it(\"should provide navigation handler\", () => {\n      const { result } = renderHook(() => useDeactivateAccountScreen());\n      \n      expect(result.current.handleGoBack).toBeDefined();\n      expect(typeof result.current.handleGoBack).toBe(\"function\");\n    });\n  });\n});\n\n"],"mappings":"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","ignoreList":[]}