{"version":3,"names":["Object","defineProperty","exports","value","configureLayoutAnimationBatch","enumerable","get","_runtimes","createWorkletRuntime","enableLayoutAnimations","_threads","executeOnUIRuntimeSync","getViewProp","initializeSensor","isReanimated3","isConfigured","jsiConfigureProps","_mutables","makeMutable","_shareables","makeShareable","makeShareableCloneRecursive","markNodeAsRemovable","registerEventHandler","registerSensor","runOnJS","runOnRuntime","runOnUI","setShouldAnimateExitingForTag","_mappers","startMapper","stopMapper","subscribeForKeyboardEvents","unmarkNodeAsRemovable","unregisterEventHandler","unregisterSensor","unsubscribeFromKeyboardEvents","_reactNativeIsEdgeToEdge","require","_errors","_PlatformChecker","_ReanimatedModule","_SensorContainer","EDGE_TO_EDGE","isEdgeToEdge","SHOULD_BE_USE_WEB","shouldBeUseWeb","viewTag","propName","component","isFabric","ReanimatedError","Promise","resolve","reject","ReanimatedModule","result","substr","getSensorContainer","global","__sensorContainer","SensorContainer","_worklet_4585136441649_init_data","code","location","sourceMap","eventHandler","eventName","emitterReactTag","arguments","length","undefined","handleAndFlushAnimationFrame","_e","Error","_f","eventTimestamp","event","__frameTimestamp","__flushAnimationFrame","_closure","__initData","__workletHash","__stackDetails","__version","id","_worklet_36706492245_init_data","options","_options$isStatusBarT","_options$isNavigation","state","height","now","_getAnimationTimestamp","__DEV__","controlEdgeToEdgeValues","isStatusBarTranslucentAndroid","isNavigationBarTranslucentAndroid","listenerId","sensorType","config","sensorContainer","sensorId","featuresConfig","setByUser","flag","isCallByUser","layoutAnimationsBatch","shouldAnimate","uiProps","nativeProps","configureProps","shadowNodeWrapper"],"sources":["core.ts"],"sourcesContent":["'use strict';\nimport {\n  controlEdgeToEdgeValues,\n  isEdgeToEdge,\n} from 'react-native-is-edge-to-edge';\n\nimport type {\n  AnimatedKeyboardOptions,\n  LayoutAnimationBatchItem,\n  SensorConfig,\n  SensorType,\n  ShadowNodeWrapper,\n  SharedValue,\n  Value3D,\n  ValueRotation,\n  WorkletFunction,\n} from './commonTypes';\nimport { ReanimatedError } from './errors';\nimport { isFabric, shouldBeUseWeb } from './PlatformChecker';\nimport { ReanimatedModule } from './ReanimatedModule';\nimport { SensorContainer } from './SensorContainer';\nimport { makeShareableCloneRecursive } from './shareables';\n\nexport { startMapper, stopMapper } from './mappers';\nexport { makeMutable } from './mutables';\nexport type { WorkletRuntime } from './runtimes';\nexport { createWorkletRuntime, runOnRuntime } from './runtimes';\nexport { makeShareable, makeShareableCloneRecursive } from './shareables';\nexport { executeOnUIRuntimeSync, runOnJS, runOnUI } from './threads';\n\nconst EDGE_TO_EDGE = isEdgeToEdge();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\n/** @returns `true` in Reanimated 3, doesn't exist in Reanimated 2 or 1 */\nexport const isReanimated3 = () => true;\n\n// Superseded by check in `/src/threads.ts`.\n// Used by `react-navigation` to detect if using Reanimated 2 or 3.\n/**\n * @deprecated This function was superseded by other checks. We keep it here for\n *   backward compatibility reasons. If you need to check if you are using\n *   Reanimated 3 or Reanimated 2 please use `isReanimated3` function instead.\n * @returns `true` in Reanimated 3, doesn't exist in Reanimated 2\n */\nexport const isConfigured = isReanimated3;\n\nexport function getViewProp<T>(\n  viewTag: number,\n  propName: string,\n  component?: React.Component // required on Fabric\n): Promise<T> {\n  if (isFabric() && !component) {\n    throw new ReanimatedError(\n      'Function `getViewProp` requires a component to be passed as an argument on Fabric.'\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  return new Promise((resolve, reject) => {\n    return ReanimatedModule.getViewProp(\n      viewTag,\n      propName,\n      component,\n      (result: T) => {\n        if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n          reject(result);\n        } else {\n          resolve(result);\n        }\n      }\n    );\n  });\n}\n\nfunction getSensorContainer(): SensorContainer {\n  if (!global.__sensorContainer) {\n    global.__sensorContainer = new SensorContainer();\n  }\n  return global.__sensorContainer;\n}\n\nexport function registerEventHandler<T>(\n  eventHandler: (event: T) => void,\n  eventName: string,\n  emitterReactTag = -1\n): number {\n  function handleAndFlushAnimationFrame(eventTimestamp: number, event: T) {\n    'worklet';\n    global.__frameTimestamp = eventTimestamp;\n    eventHandler(event);\n    global.__flushAnimationFrame(eventTimestamp);\n    global.__frameTimestamp = undefined;\n  }\n  return ReanimatedModule.registerEventHandler(\n    makeShareableCloneRecursive(\n      handleAndFlushAnimationFrame as WorkletFunction\n    ),\n    eventName,\n    emitterReactTag\n  );\n}\n\nexport function unregisterEventHandler(id: number): void {\n  return ReanimatedModule.unregisterEventHandler(id);\n}\n\nexport function subscribeForKeyboardEvents(\n  eventHandler: (state: number, height: number) => void,\n  options: AnimatedKeyboardOptions\n): number {\n  // TODO: this should really go with the same code path as other events, that is\n  // via registerEventHandler. For now we are copying the code from there.\n  function handleAndFlushAnimationFrame(state: number, height: number) {\n    'worklet';\n    const now = global._getAnimationTimestamp();\n    global.__frameTimestamp = now;\n    eventHandler(state, height);\n    global.__flushAnimationFrame(now);\n    global.__frameTimestamp = undefined;\n  }\n\n  if (__DEV__) {\n    controlEdgeToEdgeValues({\n      isStatusBarTranslucentAndroid: options.isStatusBarTranslucentAndroid,\n      isNavigationBarTranslucentAndroid:\n        options.isNavigationBarTranslucentAndroid,\n    });\n  }\n\n  return ReanimatedModule.subscribeForKeyboardEvents(\n    makeShareableCloneRecursive(\n      handleAndFlushAnimationFrame as WorkletFunction\n    ),\n    EDGE_TO_EDGE || (options.isStatusBarTranslucentAndroid ?? false),\n    EDGE_TO_EDGE || (options.isNavigationBarTranslucentAndroid ?? false)\n  );\n}\n\nexport function unsubscribeFromKeyboardEvents(listenerId: number): void {\n  return ReanimatedModule.unsubscribeFromKeyboardEvents(listenerId);\n}\n\nexport function registerSensor(\n  sensorType: SensorType,\n  config: SensorConfig,\n  eventHandler: (\n    data: Value3D | ValueRotation,\n    orientationDegrees: number\n  ) => void\n): number {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.registerSensor(\n    sensorType,\n    config,\n    makeShareableCloneRecursive(eventHandler as WorkletFunction)\n  );\n}\n\nexport function initializeSensor(\n  sensorType: SensorType,\n  config: SensorConfig\n): SharedValue<Value3D | ValueRotation> {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.initializeSensor(sensorType, config);\n}\n\nexport function unregisterSensor(sensorId: number): void {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.unregisterSensor(sensorId);\n}\n\ntype FeaturesConfig = {\n  enableLayoutAnimations: boolean;\n  setByUser: boolean;\n};\n\nlet featuresConfig: FeaturesConfig = {\n  enableLayoutAnimations: false,\n  setByUser: false,\n};\n\nexport function enableLayoutAnimations(\n  flag: boolean,\n  isCallByUser = true\n): void {\n  if (isCallByUser) {\n    featuresConfig = {\n      enableLayoutAnimations: flag,\n      setByUser: true,\n    };\n    ReanimatedModule.enableLayoutAnimations(flag);\n  } else if (\n    !featuresConfig.setByUser &&\n    featuresConfig.enableLayoutAnimations !== flag\n  ) {\n    featuresConfig.enableLayoutAnimations = flag;\n    ReanimatedModule.enableLayoutAnimations(flag);\n  }\n}\n\nexport function configureLayoutAnimationBatch(\n  layoutAnimationsBatch: LayoutAnimationBatchItem[]\n): void {\n  ReanimatedModule.configureLayoutAnimationBatch(layoutAnimationsBatch);\n}\n\nexport function setShouldAnimateExitingForTag(\n  viewTag: number | HTMLElement,\n  shouldAnimate: boolean\n) {\n  ReanimatedModule.setShouldAnimateExitingForTag(\n    viewTag as number,\n    shouldAnimate\n  );\n}\n\nexport function jsiConfigureProps(\n  uiProps: string[],\n  nativeProps: string[]\n): void {\n  if (!SHOULD_BE_USE_WEB) {\n    ReanimatedModule.configureProps(uiProps, nativeProps);\n  }\n}\n\nexport function markNodeAsRemovable(shadowNodeWrapper: ShadowNodeWrapper) {\n  ReanimatedModule.markNodeAsRemovable(shadowNodeWrapper);\n}\n\nexport function unmarkNodeAsRemovable(viewTag: number) {\n  ReanimatedModule.unmarkNodeAsRemovable(viewTag);\n}\n"],"mappings":"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","ignoreList":[]}