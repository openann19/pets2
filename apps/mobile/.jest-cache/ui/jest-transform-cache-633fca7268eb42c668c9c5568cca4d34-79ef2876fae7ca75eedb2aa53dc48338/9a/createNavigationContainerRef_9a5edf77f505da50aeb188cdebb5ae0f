60b6cdab82e7348af12517ce0fa395b5
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NOT_INITIALIZED_ERROR = void 0;
exports.default = createNavigationContainerRef;
var _routers = require("@react-navigation/routers");
var NOT_INITIALIZED_ERROR = "The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.";
exports.NOT_INITIALIZED_ERROR = NOT_INITIALIZED_ERROR;
function createNavigationContainerRef() {
  var methods = [].concat((0, _toConsumableArray2.default)(Object.keys(_routers.CommonActions)), ['addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions']);
  var listeners = {};
  var removeListener = function removeListener(event, callback) {
    if (listeners[event]) {
      listeners[event] = listeners[event].filter(function (cb) {
        return cb !== callback;
      });
    }
  };
  var current = null;
  var ref = _objectSpread({
    get current() {
      return current;
    },
    set current(value) {
      current = value;
      if (value != null) {
        Object.entries(listeners).forEach(function (_ref) {
          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
            event = _ref2[0],
            callbacks = _ref2[1];
          callbacks.forEach(function (callback) {
            value.addListener(event, callback);
          });
        });
      }
    },
    isReady: function isReady() {
      if (current == null) {
        return false;
      }
      return current.isReady();
    }
  }, methods.reduce(function (acc, name) {
    acc[name] = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      if (current == null) {
        switch (name) {
          case 'addListener':
            {
              var event = args[0],
                callback = args[1];
              listeners[event] = listeners[event] || [];
              listeners[event].push(callback);
              return function () {
                return removeListener(event, callback);
              };
            }
          case 'removeListener':
            {
              var _event = args[0],
                _callback = args[1];
              removeListener(_event, _callback);
              break;
            }
          default:
            console.error(NOT_INITIALIZED_ERROR);
        }
      } else {
        var _current;
        return (_current = current)[name].apply(_current, args);
      }
    };
    return acc;
  }, {}));
  return ref;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcm91dGVycyIsInJlcXVpcmUiLCJOT1RfSU5JVElBTElaRURfRVJST1IiLCJleHBvcnRzIiwiY3JlYXRlTmF2aWdhdGlvbkNvbnRhaW5lclJlZiIsIm1ldGhvZHMiLCJjb25jYXQiLCJfdG9Db25zdW1hYmxlQXJyYXkyIiwiZGVmYXVsdCIsIk9iamVjdCIsImtleXMiLCJDb21tb25BY3Rpb25zIiwibGlzdGVuZXJzIiwicmVtb3ZlTGlzdGVuZXIiLCJldmVudCIsImNhbGxiYWNrIiwiZmlsdGVyIiwiY2IiLCJjdXJyZW50IiwicmVmIiwiX29iamVjdFNwcmVhZCIsInZhbHVlIiwiZW50cmllcyIsImZvckVhY2giLCJfcmVmIiwiX3JlZjIiLCJfc2xpY2VkVG9BcnJheTIiLCJjYWxsYmFja3MiLCJhZGRMaXN0ZW5lciIsImlzUmVhZHkiLCJyZWR1Y2UiLCJhY2MiLCJuYW1lIiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJwdXNoIiwiY29uc29sZSIsImVycm9yIiwiX2N1cnJlbnQiLCJhcHBseSJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jcmVhdGVOYXZpZ2F0aW9uQ29udGFpbmVyUmVmLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBLFFBQUEsR0FBQUMsT0FBQTtBQVFPLElBQU1DLHFCQUFxQixHQUNoQywrUUFBK1E7QUFBQ0MsT0FBQSxDQUFBRCxxQkFBQSxHQUFBQSxxQkFBQTtBQUVuUSxTQUFTRSw0QkFBNEJBLENBQUEsRUFFRjtFQUNoRCxJQUFNQyxPQUFPLE1BQUFDLE1BQUEsS0FBQUMsbUJBQUEsQ0FBQUMsT0FBQSxFQUNSQyxNQUFNLENBQUNDLElBQUksQ0FBQ1YsUUFBQSxDQUFBVyxhQUFhLENBQUMsSUFDN0IsYUFBYSxFQUNiLGdCQUFnQixFQUNoQixXQUFXLEVBQ1gsVUFBVSxFQUNWLFdBQVcsRUFDWCxXQUFXLEVBQ1gsY0FB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