{"version":3,"names":["global","TextEncoder","require","TextDecoder","Alert","alert","jest","fn","Platform","OS","Version","select","obj","ios","default","isTV","isTesting","Dimensions","get","width","height","scale","fontScale","addEventListener","removeEventListener","Linking","openURL","Promise","resolve","canOpenURL","getInitialURL","remove","Keyboard","addListener","removeListener","removeAllListeners","dismiss","scheduleLayoutAnimation","AnimatedMock","Animated","module","Object","defineProperty","configurable","testStartMemory","beforeEach","clearAllMocks","gc","process","memoryUsage","heapUsed","afterEach","isMockFunction","setTimeout","setInterval","timerCount","getTimerCount","runOnlyPendingTimers","e","clearAllTimers","useRealTimers","testEndMemory","memoryGrowth","console","warn","toFixed"],"sources":["jest.setup.core.ts"],"sourcesContent":["/**\n * Core Jest setup - Essential polyfills and global setup\n * Minimal setup loaded for all tests\n */\n\n// Polyfill for TextEncoder/TextDecoder (Node.js 18+ has it built-in, but Jest may not)\nglobal.TextEncoder = global.TextEncoder || require('util').TextEncoder;\nglobal.TextDecoder = global.TextDecoder || require('util').TextDecoder;\n\n// Global React Native mocks (to prevent tests from mocking react-native directly)\n(global as any).Alert = {\n  alert: jest.fn(),\n};\n\n(global as any).Platform = {\n  OS: 'ios',\n  Version: '14.0',\n  select: jest.fn((obj) => obj.ios || obj.default),\n  isTV: false,\n  isTesting: true,\n};\n\n(global as any).Dimensions = {\n  get: jest.fn(() => ({ width: 375, height: 812, scale: 2, fontScale: 1 })),\n  addEventListener: jest.fn(),\n  removeEventListener: jest.fn(),\n};\n\n(global as any).Linking = {\n  openURL: jest.fn(() => Promise.resolve()),\n  canOpenURL: jest.fn(() => Promise.resolve(true)),\n  getInitialURL: jest.fn(() => Promise.resolve(null)),\n  addEventListener: jest.fn(() => ({ remove: jest.fn() })),\n};\n\n(global as any).Keyboard = {\n  addListener: jest.fn(() => ({ remove: jest.fn() })),\n  removeListener: jest.fn(),\n  removeAllListeners: jest.fn(),\n  dismiss: jest.fn(),\n  scheduleLayoutAnimation: jest.fn(),\n};\n\n// Load the Animated mock and make it globally available\nconst AnimatedMock = require('../__mocks__/Animated.js');\n\n// Make Animated available globally for react-native\n(global as any).Animated = AnimatedMock;\n\n// Export it so react-native can access it\nif (typeof module !== 'undefined') {\n  Object.defineProperty(module, 'exports', {\n    get: () => AnimatedMock,\n    configurable: true,\n  });\n}\n\n// Global test setup with memory tracking\nlet testStartMemory: number | null = null;\n\nbeforeEach(() => {\n  jest.clearAllMocks();\n  \n  // Track memory usage at test start (if available)\n  if ((global as any).gc) {\n    (global as any).gc();\n    testStartMemory = process.memoryUsage().heapUsed;\n  }\n});\n\n// Global test cleanup with proper timer handling and memory leak detection\nafterEach(() => {\n  try {\n    // Only check timers if fake timers are active\n    // This check avoids errors when tests use real timers\n    if (jest.isMockFunction(setTimeout) || jest.isMockFunction(setInterval)) {\n      const timerCount = jest.getTimerCount();\n      if (timerCount > 0) {\n        jest.runOnlyPendingTimers();\n      }\n    }\n  } catch (e) {\n    // Ignore errors from timer operations\n  }\n  \n  // Clear all timers\n  jest.clearAllTimers();\n  \n  // Clear all mocks\n  jest.clearAllMocks();\n  \n  // Always restore real timers to prevent leakage\n  try {\n    jest.useRealTimers();\n  } catch (e) {\n    // Timer may not be mocked, ignore\n  }\n  \n  // Memory leak detection (if gc is available)\n  if ((global as any).gc && testStartMemory !== null) {\n    (global as any).gc();\n    const testEndMemory = process.memoryUsage().heapUsed;\n    const memoryGrowth = testEndMemory - testStartMemory;\n    \n    // Warn if memory grew more than 5MB during a single test\n    if (memoryGrowth > 5 * 1024 * 1024) {\n      console.warn(`Potential memory leak detected: ${(memoryGrowth / 1024 / 1024).toFixed(2)}MB growth`);\n    }\n    \n    testStartMemory = null;\n  }\n});\n\n// Note: Console mocking removed to allow proper debugging\n// If needed, tests can mock console individually\n\n"],"mappings":"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","ignoreList":[]}