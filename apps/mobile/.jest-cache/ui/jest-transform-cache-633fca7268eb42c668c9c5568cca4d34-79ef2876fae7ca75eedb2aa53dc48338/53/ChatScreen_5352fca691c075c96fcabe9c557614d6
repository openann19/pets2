f97edc9f3993fd161b70814e0eb264df
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ChatScreen;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _ScreenShell = require("../ui/layout/ScreenShell");
var _AdvancedHeader = require("../components/Advanced/AdvancedHeader");
var _MessageList = require("../components/chat/MessageList");
var _MessageInput = require("../components/chat/MessageInput");
var _QuickReplies = require("../components/chat/QuickReplies");
var _ReactionBarMagnetic = _interopRequireDefault(require("../components/chat/ReactionBarMagnetic"));
var _useChatScreen2 = require("../hooks/screens/useChatScreen");
var _Provider = require("../theme/Provider");
var _jsxRuntime = require("react/jsx-runtime");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function ChatScreen(_ref) {
  var navigation = _ref.navigation,
    route = _ref.route;
  var _route$params = route.params,
    matchId = _route$params.matchId,
    petName = _route$params.petName;
  var _useTheme = (0, _Provider.useTheme)(),
    isDark = _useTheme.isDark;
  var _useChatScreen = (0, _useChatScreen2.useChatScreen)({
      matchId: matchId,
      petName: petName,
      navigation: navigation
    }),
    inputText = _useChatScreen.inputText,
    setInputText = _useChatScreen.setInputText,
    isTyping = _useChatScreen.isTyping,
    showReactions = _useChatScreen.showReactions,
    data = _useChatScreen.data,
    actions = _useChatScreen.actions,
    flatListRef = _useChatScreen.flatListRef,
    inputRef = _useChatScreen.inputRef,
    handleSendMessage = _useChatScreen.handleSendMessage,
    handleTypingChange = _useChatScreen.handleTypingChange,
    handleScroll = _useChatScreen.handleScroll,
    handleQuickReplySelect = _useChatScreen.handleQuickReplySelect,
    handleMessageLongPress = _useChatScreen.handleMessageLongPress,
    handleReactionSelect = _useChatScreen.handleReactionSelect,
    handleReactionCancel = _useChatScreen.handleReactionCancel,
    handleVoiceCall = _useChatScreen.handleVoiceCall,
    handleVideoCall = _useChatScreen.handleVideoCall,
    handleMoreOptions = _useChatScreen.handleMoreOptions,
    quickReplies = _useChatScreen.quickReplies;
  return (0, _jsxRuntime.jsxs)(_ScreenShell.ScreenShell, {
    header: (0, _jsxRuntime.jsx)(_AdvancedHeader.AdvancedHeader, _objectSpread({}, _AdvancedHeader.HeaderConfigs.glass({
      title: petName,
      subtitle: data.isOnline ? "Online now" : "Last seen recently",
      showBackButton: true,
      onBackPress: function onBackPress() {
        return navigation.goBack();
      },
      rightButtons: [{
        type: "custom",
        icon: "call-outline",
        onPress: handleVoiceCall,
        variant: "glass",
        haptic: "medium",
        customComponent: undefined
      }, {
        type: "custom",
        icon: "videocam-outline",
        onPress: handleVideoCall,
        variant: "glass",
        haptic: "medium",
        customComponent: undefined
      }, {
        type: "custom",
        icon: "ellipsis-vertical-outline",
        onPress: handleMoreOptions,
        variant: "glass",
        haptic: "light",
        customComponent: undefined
      }]
    }))),
    children: [(0, _jsxRuntime.jsxs)(_reactNative.KeyboardAvoidingView, {
      style: styles.chatContainer,
      behavior: _reactNative.Platform.OS === "ios" ? "padding" : "height",
      children: [(0, _jsxRuntime.jsx)(_MessageList.MessageList, {
        messages: data.messages,
        typingUsers: data.otherUserTyping ? ["Other User"] : [],
        isOnline: data.isOnline,
        currentUserId: "current-user",
        matchId: matchId,
        onRetryMessage: actions.retryMessage,
        flatListRef: flatListRef,
        onScroll: handleScroll
      }), data.messages.length > 0 && (0, _jsxRuntime.jsx)(_QuickReplies.QuickReplies, {
        replies: quickReplies,
        onReplySelect: handleQuickReplySelect,
        visible: true
      }), (0, _jsxRuntime.jsx)(_MessageInput.MessageInput, {
        value: inputText,
        onChangeText: setInputText,
        onSend: handleSendMessage,
        onTypingChange: handleTypingChange,
        isSending: data.isSending,
        inputRef: inputRef,
        matchId: matchId
      })]
    }), showReactions && (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.reactionOverlay,
      children: (0, _jsxRuntime.jsx)(_ReactionBarMagnetic.default, {
        onSelect: handleReactionSelect,
        onCancel: handleReactionCancel,
        influenceRadius: 100,
        baseSize: 32,
        backgroundColor: isDark ? "#2a2a2a" : "#ffffff",
        borderColor: isDark ? "rgba(255,255,255,0.1)" : "rgba(0,0,0,0.1)"
      })
    })]
  });
}
var styles = _reactNative.StyleSheet.create({
  chatContainer: {
    flex: 1
  },
  reactionOverlay: {
    position: 'absolute',
    bottom: 120,
    left: 0,
    right: 0,
    alignItems: 'center',
    zIndex: 1000
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,