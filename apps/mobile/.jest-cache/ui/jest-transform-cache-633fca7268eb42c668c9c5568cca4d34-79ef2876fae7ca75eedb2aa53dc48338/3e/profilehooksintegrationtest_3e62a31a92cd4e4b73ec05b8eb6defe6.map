{"version":3,"names":["_reactNative","require","_getJestObj","_require4","jest","describe","mock","useAuthStore","user","_id","firstName","lastName","updateUser","fn","matchesAPI","getMyPets","updateProfile","logger","info","error","getItem","setItem","removeItem","_require","useProfileData","_require2","useProfileUpdate","AsyncStorage","_require3","mockAsyncStorage","mockMatchesAPI","beforeEach","clearAllMocks","mockResolvedValue","data","name","species","bio","it","_asyncToGenerator2","default","_renderHook","renderHook","profileDataResult","result","_renderHook2","profileUpdateResult","waitFor","expect","current","isLoading","toBe","pets","toHaveLength","updateData","updateSuccess","act","toHaveBeenCalledWith","refreshProfile","toHaveBeenCalledTimes","mockRejectedValueOnce","Error","_renderHook3","toEqual","mockResolvedValueOnce","_renderHook4","_renderHook5","toBeDefined","isUpdating","not","_renderHook6","_renderHook7","updatePromise","updateResult"],"sources":["profile-hooks.integration.test.ts"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport { renderHook, act, waitFor } from \"@testing-library/react-native\";\n\n// Integration test showing hook composition\ndescribe(\"Hooks Integration - Profile Management Flow\", () => {\n  // Mock all dependencies\n  jest.mock(\"../../../stores/useAuthStore\", () => ({\n    useAuthStore: () => ({\n      user: { _id: \"user123\", firstName: \"John\", lastName: \"Doe\" },\n      updateUser: jest.fn(),\n    }),\n  }));\n\n  jest.mock(\"../../../services/api\", () => ({\n    matchesAPI: {\n      getMyPets: jest.fn(),\n      updateProfile: jest.fn(),\n    },\n  }));\n\n  jest.mock(\"../../../services/logger\", () => ({\n    logger: {\n      info: jest.fn(),\n      error: jest.fn(),\n    },\n  }));\n\n  jest.mock(\"@react-native-async-storage/async-storage\", () => ({\n    getItem: jest.fn(),\n    setItem: jest.fn(),\n    removeItem: jest.fn(),\n  }));\n\n  const { useProfileData } = require(\"../useProfileData\");\n  const { useProfileUpdate } = require(\"../useProfileUpdate\");\n  const AsyncStorage = require(\"@react-native-async-storage/async-storage\");\n  const { matchesAPI } = require(\"../../../services/api\");\n\n  const mockAsyncStorage = AsyncStorage;\n  const mockMatchesAPI = matchesAPI;\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n\n    // Setup mocks\n    mockMatchesAPI.getMyPets.mockResolvedValue({\n      data: [{ _id: \"pet1\", name: \"Buddy\", species: \"dog\" }],\n    });\n\n    mockMatchesAPI.updateProfile.mockResolvedValue({\n      _id: \"user123\",\n      firstName: \"John\",\n      lastName: \"Updated\",\n      bio: \"Updated bio\",\n    });\n\n    mockAsyncStorage.getItem.mockResolvedValue(null);\n    mockAsyncStorage.setItem.mockResolvedValue();\n  });\n\n  it(\"should demonstrate complete profile management workflow\", async () => {\n    // Render multiple hooks together to simulate real usage\n    const { result: profileDataResult } = renderHook(() => useProfileData());\n    const { result: profileUpdateResult } = renderHook(() =>\n      useProfileUpdate(),\n    );\n\n    // 1. Initial profile data loads\n    await waitFor(() => {\n      expect(profileDataResult.current.isLoading).toBe(false);\n    });\n\n    expect(profileDataResult.current.user.firstName).toBe(\"John\");\n    expect(profileDataResult.current.pets).toHaveLength(1);\n    expect(profileDataResult.current.pets[0].name).toBe(\"Buddy\");\n\n    // 2. User updates profile\n    const updateData = {\n      firstName: \"Johnny\",\n      bio: \"Love pets!\",\n    };\n\n    const updateSuccess = await act(async () => {\n      return await profileUpdateResult.current.updateProfile(updateData);\n    });\n\n    expect(updateSuccess).toBe(true);\n    expect(mockMatchesAPI.updateProfile).toHaveBeenCalledWith(updateData);\n\n    // 3. Profile data refreshes to show updates\n    act(() => {\n      profileDataResult.current.refreshProfile();\n    });\n\n    await waitFor(() => {\n      expect(profileDataResult.current.isLoading).toBe(false);\n    });\n\n    // Verify the update was processed\n    expect(mockMatchesAPI.getMyPets).toHaveBeenCalledTimes(2); // Initial + refresh\n  });\n\n  it(\"should handle error states across hooks\", async () => {\n    // Setup error scenario\n    mockMatchesAPI.getMyPets.mockRejectedValueOnce(new Error(\"Network error\"));\n\n    const { result: profileDataResult } = renderHook(() => useProfileData());\n\n    // Profile data fails to load\n    await waitFor(() => {\n      expect(profileDataResult.current.isLoading).toBe(false);\n    });\n\n    expect(profileDataResult.current.error).toBe(\"Network error\");\n    expect(profileDataResult.current.pets).toEqual([]);\n\n    // Recovery: fix the API and refresh\n    mockMatchesAPI.getMyPets.mockResolvedValueOnce({\n      data: [{ _id: \"pet1\", name: \"Buddy\", species: \"dog\" }],\n    });\n\n    act(() => {\n      profileDataResult.current.refreshProfile();\n    });\n\n    await waitFor(() => {\n      expect(profileDataResult.current.isLoading).toBe(false);\n    });\n\n    expect(profileDataResult.current.error).toBe(null);\n    expect(profileDataResult.current.pets).toHaveLength(1);\n  });\n\n  it(\"should demonstrate hook composition benefits\", () => {\n    // This test shows how hooks compose together\n    const { result: profileDataResult } = renderHook(() => useProfileData());\n    const { result: profileUpdateResult } = renderHook(() =>\n      useProfileUpdate(),\n    );\n\n    // Each hook maintains its own state\n    expect(typeof profileDataResult.current.refreshProfile).toBe(\"function\");\n    expect(typeof profileUpdateResult.current.updateProfile).toBe(\"function\");\n\n    // Hooks can be used independently or together\n    expect(profileDataResult.current.user).toBeDefined();\n    expect(profileUpdateResult.current.isUpdating).toBe(false);\n\n    // State is properly isolated between hooks\n    expect(profileDataResult.current).not.toBe(profileUpdateResult.current);\n  });\n\n  it(\"should handle concurrent operations\", async () => {\n    const { result: profileDataResult } = renderHook(() => useProfileData());\n    const { result: profileUpdateResult } = renderHook(() =>\n      useProfileUpdate(),\n    );\n\n    // Wait for initial data load\n    await waitFor(() => {\n      expect(profileDataResult.current.isLoading).toBe(false);\n    });\n\n    // Start both operations concurrently\n    const updatePromise = act(async () => {\n      return await profileUpdateResult.current.updateProfile({\n        bio: \"New bio\",\n      });\n    });\n\n    act(() => {\n      profileDataResult.current.refreshProfile();\n    });\n\n    // Both operations should complete successfully\n    const updateResult = await updatePromise;\n\n    await waitFor(() => {\n      expect(profileDataResult.current.isLoading).toBe(false);\n    });\n\n    expect(updateResult).toBe(true);\n    expect(mockMatchesAPI.updateProfile).toHaveBeenCalledTimes(1);\n    expect(mockMatchesAPI.getMyPets).toHaveBeenCalledTimes(2);\n  });\n});\n"],"mappings":"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","ignoreList":[]}