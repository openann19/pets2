{"version":3,"names":["_react","require","useTabState","initialTab","_useState","useState","_useState2","_slicedToArray2","default","activeTab","setActiveTabState","setActiveTab","useCallback","tab"],"sources":["useTabState.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nexport interface UseTabStateReturn<T extends string> {\n  activeTab: T;\n  setActiveTab: (tab: T) => void;\n}\n\n/**\n * Hook for managing tab state\n *\n * @example\n * const { activeTab, setActiveTab } = useTabState('matches');\n */\nexport function useTabState<T extends string>(\n  initialTab: T,\n): UseTabStateReturn<T> {\n  const [activeTab, setActiveTabState] = useState<T>(initialTab);\n\n  const setActiveTab = useCallback((tab: T) => {\n    setActiveTabState(tab);\n  }, []);\n\n  return {\n    activeTab,\n    setActiveTab,\n  };\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAaO,SAASC,WAAWA,CACzBC,UAAa,EACS;EACtB,IAAAC,SAAA,GAAuC,IAAAC,eAAQ,EAAIF,UAAU,CAAC;IAAAG,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAAvDK,SAAS,GAAAH,UAAA;IAAEI,iBAAiB,GAAAJ,UAAA;EAEnC,IAAMK,YAAY,GAAG,IAAAC,kBAAW,EAAC,UAACC,GAAM,EAAK;IAC3CH,iBAAiB,CAACG,GAAG,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLJ,SAAS,EAATA,SAAS;IACTE,YAAY,EAAZA;EACF,CAAC;AACH","ignoreList":[]}