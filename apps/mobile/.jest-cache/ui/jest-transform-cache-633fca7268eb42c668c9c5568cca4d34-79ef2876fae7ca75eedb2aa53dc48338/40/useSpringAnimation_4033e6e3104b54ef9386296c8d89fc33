cfe366f5226d0b576956f5e40f17646b
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.useSpringAnimation = useSpringAnimation;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("react");
var _reactNativeReanimated = require("react-native-reanimated");
var _springConfigs = require("./configs/springConfigs");
var _timingConfigs = require("./configs/timingConfigs");
var _accessibility = require("./configs/accessibility");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function useSpringAnimation() {
  var initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "standard";
  var animatedValue = (0, _reactNativeReanimated.useSharedValue)(initialValue);
  var animate = (0, _react.useCallback)(function (toValue, customConfig) {
    var springConfig = _objectSpread(_objectSpread({}, _springConfigs.SPRING_CONFIGS[config]), customConfig);
    if (_accessibility.prefersReducedMotion) {
      animatedValue.value = (0, _reactNativeReanimated.withTiming)(toValue, {
        duration: _timingConfigs.TIMING_CONFIGS.standard
      });
    } else {
      animatedValue.value = (0, _reactNativeReanimated.withSpring)(toValue, springConfig);
    }
  }, [animatedValue, config]);
  var reset = (0, _react.useCallback)(function () {
    animatedValue.value = (0, _reactNativeReanimated.withSpring)(initialValue, _springConfigs.SPRING_CONFIGS[config]);
  }, [animatedValue, initialValue, config]);
  return {
    value: animatedValue,
    animate: animate,
    reset: reset
  };
}
var _default = exports.default = useSpringAnimation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX3JlYWN0TmF0aXZlUmVhbmltYXRlZCIsIl9zcHJpbmdDb25maWdzIiwiX3RpbWluZ0NvbmZpZ3MiLCJfYWNjZXNzaWJpbGl0eSIsIm93bktleXMiLCJlIiwiciIsInQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwibyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJkZWZhdWx0IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsInVzZVNwcmluZ0FuaW1hdGlvbiIsImluaXRpYWxWYWx1ZSIsInVuZGVmaW5lZCIsImNvbmZpZyIsImFuaW1hdGVkVmFsdWUiLCJ1c2VTaGFyZWRWYWx1ZSIsImFuaW1hdGUiLCJ1c2VDYWxsYmFjayIsInRvVmFsdWUiLCJjdXN0b21Db25maWciLCJzcHJpbmdDb25maWciLCJTUFJJTkdfQ09ORklHUyIsInByZWZlcnNSZWR1Y2VkTW90aW9uIiwidmFsdWUiLCJ3aXRoVGltaW5nIiwiZHVyYXRpb24iLCJUSU1JTkdfQ09ORklHUyIsInN0YW5kYXJkIiwid2l0aFNwcmluZyIsInJlc2V0IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsidXNlU3ByaW5nQW5pbWF0aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge1xuICB1c2VTaGFyZWRWYWx1ZSxcbiAgd2l0aFNwcmluZyxcbiAgd2l0aFRpbWluZyxcbn0gZnJvbSBcInJlYWN0LW5hdGl2ZS1yZWFuaW1hdGVkXCI7XG5cbmltcG9ydCB7IFNQUklOR19DT05GSUdTIH0gZnJvbSBcIi4vY29uZmlncy9zcHJpbmdDb25maWdzXCI7XG5pbXBvcnQgeyBUSU1JTkdfQ09ORklHUyB9IGZyb20gXCIuL2NvbmZpZ3MvdGltaW5nQ29uZmlnc1wiO1xuaW1wb3J0IHsgcHJlZmVyc1JlZHVjZWRNb3Rpb24gfSBmcm9tIFwiLi9jb25maWdzL2FjY2Vzc2liaWxpdHlcIjtcblxuLyoqXG4gKiBIb29rIGZvciBzcHJpbmcgYW5pbWF0aW9uc1xuICovXG5cbmludGVyZmFjZSBVc2VTcHJpbmdBbmltYXRpb25SZXR1cm4ge1xuICB2YWx1ZTogUmV0dXJuVHlwZTx0eXBlb2YgdXNlU2hhcmVkVmFsdWU8bnVtYmVyPj47XG4gIGFuaW1hdGU6IChcbiAgICB0b1ZhbHVlOiBudW1iZXIsXG4gICAgY3VzdG9tQ29uZmlnPzogUGFydGlhbDx0eXBlb2YgU1BSSU5HX0NPTkZJR1Muc3RhbmRhcmQ+LFxuICApID0+IHZvaWQ7XG4gIHJlc2V0OiAoKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlU3ByaW5nQW5pbWF0aW9uKFxuICBpbml0aWFsVmFsdWU6IG51bWJlciA9IDAsXG4gIGNvbmZpZzoga2V5b2YgdHlwZW9mIFNQUklOR19DT05GSUdTID0gXCJzdGFuZGFyZFwiLFxuKTogVXNlU3ByaW5nQW5pbWF0aW9uUmV0dXJuIHtcbiAgY29uc3QgYW5pbWF0ZWRWYWx1ZSA9IHVzZVNoYXJlZFZhbHVlKGluaXRpYWxWYWx1ZSk7XG5cbiAgY29uc3QgYW5pbWF0ZSA9IHVzZUNhbGxiYWNrKFxuICAgIChcbiAgICAgIHRvVmFsdWU6IG51bWJlcixcbiAgICAgIGN1c3RvbUNvbmZpZz86IFBhcnRpYWw8dHlwZW9mIFNQUklOR19DT05GSUdTLnN0YW5kYXJkPixcbiAgICApID0+IHtcbiAgICAgIGNvbnN0IHNwcmluZ0NvbmZpZyA9IHtcbiAgICAgICAgLi4uU1BSSU5HX0NPTkZJR1NbY29uZmlnXSxcbiAgICAgICAgLi4uY3VzdG9tQ29uZmlnLFxuICAgICAgfTtcblxuICAgICAgLy8gUmVzcGVjdCByZWR1Y2VkIG1vdGlvbiBwcmVmZXJlbmNlXG4gICAgICBpZiAocHJlZmVyc1JlZHVjZWRNb3Rpb24pIHtcbiAgICAgICAgYW5pbWF0ZWRWYWx1ZS52YWx1ZSA9IHdpdGhUaW1pbmcodG9WYWx1ZSwge1xuICAgICAgICAgIGR1cmF0aW9uOiBUSU1JTkdfQ09ORklHUy5zdGFuZGFyZCxcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhbmltYXRlZFZhbHVlLnZhbHVlID0gd2l0aFNwcmluZyh0b1ZhbHVlLCBzcHJpbmdDb25maWcpO1xuICAgICAgfVxuICAgIH0sXG4gICAgW2FuaW1hdGVkVmFsdWUsIGNvbmZpZ10sXG4gICk7XG5cbiAgY29uc3QgcmVzZXQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgYW5pbWF0ZWRWYWx1ZS52YWx1ZSA9IHdpdGhTcHJpbmcoaW5pdGlhbFZhbHVlLCBTUFJJTkdfQ09ORklHU1tjb25maWddKTtcbiAgfSwgW2FuaW1hdGVkVmFsdWUsIGluaXRpYWxWYWx1ZSwgY29uZmlnXSk7XG5cbiAgcmV0dXJuIHtcbiAgICB2YWx1ZTogYW5pbWF0ZWRWYWx1ZSxcbiAgICBhbmltYXRlLFxuICAgIHJlc2V0LFxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCB1c2VTcHJpbmdBbmltYXRpb247XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLHNCQUFBLEdBQUFELE9BQUE7QUFNQSxJQUFBRSxjQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxjQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxjQUFBLEdBQUFKLE9BQUE7QUFBK0QsU0FBQUssUUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFFBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxJQUFBLENBQUFKLENBQUEsT0FBQUcsTUFBQSxDQUFBRSxxQkFBQSxRQUFBQyxDQUFBLEdBQUFILE1BQUEsQ0FBQUUscUJBQUEsQ0FBQUwsQ0FBQSxH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