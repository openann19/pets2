{"version":3,"names":["Haptics","_interopRequireWildcard","require","_react","_reactNative","_UnifiedThemeProvider","_Provider","_adapters","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useThemeToggle","theme","useTheme","_useThemeContext","useThemeContext","isDark","mode","setMode","contextToggleTheme","toggleTheme","colors","getExtendedColors","styles","shadows","themeMode","useCallback","_asyncToGenerator2","impactAsync","ImpactFeedbackStyle","Light","error","setLightTheme","setDarkTheme","setSystemTheme","showThemeSelector","currentThemeLabel","light","dark","system","Alert","alert","text","onPress","style","cancelable","userInterfaceStyle","_default","exports"],"sources":["useThemeToggle.ts"],"sourcesContent":["import * as Haptics from \"expo-haptics\";\nimport { useCallback } from \"react\";\nimport { Alert } from \"react-native\";\n\nimport type { ThemeMode } from \"../stores/useUIStore\";\nimport { useThemeContext } from \"../theme/UnifiedThemeProvider\";\nimport { useTheme } from \"../theme/Provider\";\nimport type { ThemeColors } from \"../theme/Provider\";\nimport { getExtendedColors } from \"../theme/adapters\";\n\nexport interface UseThemeToggleReturn {\n  isDark: boolean;\n  themeMode: ThemeMode;\n  colors: ThemeColors;\n  styles: Record<string, unknown>;\n  shadows: Record<string, unknown>;\n  toggleTheme: () => void;\n  setLightTheme: () => void;\n  setDarkTheme: () => void;\n  setSystemTheme: () => void;\n  showThemeSelector: () => void;\n}\n\nexport function useThemeToggle(): UseThemeToggleReturn {\n  const theme = useTheme();\n  const { isDark, mode, setMode, toggleTheme: contextToggleTheme } = useThemeContext();\n  \n  // Get extended colors for backward compatibility\n  const colors = getExtendedColors(theme);\n  const styles: Record<string, unknown> = {};\n  const shadows: Record<string, unknown> = {};\n  const themeMode = mode as ThemeMode;\n\n  // Enhanced toggle with haptic feedback\n  const toggleTheme = useCallback(async () => {\n    try {\n      // Provide haptic feedback\n      await Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n      contextToggleTheme();\n    } catch (error) {\n      // Fallback if haptics fail\n      contextToggleTheme();\n    }\n  }, [contextToggleTheme]);\n\n  // Set specific theme modes\n  const setLightTheme = useCallback(() => {\n    setMode(\"light\");\n  }, [setMode]);\n\n  const setDarkTheme = useCallback(() => {\n    setMode(\"dark\");\n  }, [setMode]);\n\n  const setSystemTheme = useCallback(() => {\n    setMode(\"system\");\n  }, [setMode]);\n\n  // Show theme selection modal\n  const showThemeSelector = useCallback(() => {\n    const currentThemeLabel = {\n      light: \"Light\",\n      dark: \"Dark\",\n      system: \"System Default\",\n    }[themeMode];\n\n    Alert.alert(\n      \"Select Theme\",\n      `Current theme: ${currentThemeLabel}`,\n      [\n        {\n          text: \"Light\",\n          onPress: setLightTheme,\n          style: themeMode === \"light\" ? \"default\" : \"default\",\n        },\n        {\n          text: \"Dark\",\n          onPress: setDarkTheme,\n          style: themeMode === \"dark\" ? \"default\" : \"default\",\n        },\n        {\n          text: \"System Default\",\n          onPress: setSystemTheme,\n          style: themeMode === \"system\" ? \"default\" : \"default\",\n        },\n        {\n          text: \"Cancel\",\n          style: \"cancel\",\n        },\n      ],\n      {\n        cancelable: true,\n        userInterfaceStyle: isDark ? \"dark\" : \"light\",\n      },\n    );\n  }, [themeMode, isDark, setLightTheme, setDarkTheme, setSystemTheme]);\n\n  return {\n    isDark: isDark ?? false,\n    themeMode,\n    colors,\n    styles,\n    shadows,\n    toggleTheme,\n    setLightTheme,\n    setDarkTheme,\n    setSystemTheme,\n    showThemeSelector,\n  };\n}\n\nexport default useThemeToggle;\n"],"mappings":"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","ignoreList":[]}