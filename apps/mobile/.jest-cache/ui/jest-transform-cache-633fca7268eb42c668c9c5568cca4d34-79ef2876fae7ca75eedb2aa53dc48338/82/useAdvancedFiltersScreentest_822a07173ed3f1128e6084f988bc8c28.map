{"version":3,"names":["_getJestObj","mock","Alert","alert","jest","fn","selectionAsync","impactAsync","notificationAsync","_reactNative","require","_reactNative2","_useAdvancedFiltersScreen","_require","describe","it","_renderHook","renderHook","useAdvancedFiltersScreen","result","expect","current","filters","toHaveLength","id","toBe","_renderHook2","initialValue","value","act","toggleFilter","_renderHook3","resetFilters","toHaveBeenCalledWith","any","Array","_renderHook4","characteristics","getFiltersByCategory","forEach","filter","category","_renderHook5","saveFilters"],"sources":["useAdvancedFiltersScreen.test.ts"],"sourcesContent":["/**\n * useAdvancedFiltersScreen Tests\n * Unit tests for advanced filters functionality\n */\n\nimport { renderHook, act } from \"@testing-library/react-native\";\nimport { Alert } from \"react-native\";\nimport { useAdvancedFiltersScreen } from \"../useAdvancedFiltersScreen\";\n\njest.mock(\"react-native\", () => ({\n  Alert: {\n    alert: jest.fn(),\n  },\n}));\n\njest.mock(\"expo-haptics\", () => ({\n  selectionAsync: jest.fn(),\n  impactAsync: jest.fn(),\n  notificationAsync: jest.fn(),\n}));\n\ndescribe(\"useAdvancedFiltersScreen\", () => {\n  describe(\"Initial State\", () => {\n    it(\"should initialize with default filters\", () => {\n      const { result } = renderHook(() => useAdvancedFiltersScreen());\n      \n      expect(result.current.filters).toHaveLength(16);\n      expect(result.current.filters[0].id).toBe(\"neutered\");\n    });\n  });\n\n  describe(\"toggleFilter\", () => {\n    it(\"should toggle filter value\", () => {\n      const { result } = renderHook(() => useAdvancedFiltersScreen());\n      \n      const initialValue = result.current.filters[0].value;\n      \n      act(() => {\n        result.current.toggleFilter(\"neutered\");\n      });\n\n      expect(result.current.filters[0].value).toBe(!initialValue);\n    });\n  });\n\n  describe(\"resetFilters\", () => {\n    it(\"should show confirmation alert\", () => {\n      const { result } = renderHook(() => useAdvancedFiltersScreen());\n      \n      act(() => {\n        result.current.resetFilters();\n      });\n\n      expect(Alert.alert).toHaveBeenCalledWith(\n        \"Reset Filters\",\n        \"Are you sure you want to reset all advanced filters?\",\n        expect.any(Array)\n      );\n    });\n  });\n\n  describe(\"getFiltersByCategory\", () => {\n    it(\"should return filters for a specific category\", () => {\n      const { result } = renderHook(() => useAdvancedFiltersScreen());\n      \n      const characteristics = result.current.getFiltersByCategory(\"characteristics\");\n      \n      expect(characteristics).toHaveLength(4);\n      characteristics.forEach(filter => {\n        expect(filter.category).toBe(\"characteristics\");\n      });\n    });\n  });\n\n  describe(\"saveFilters\", () => {\n    it(\"should save filters and show success alert\", () => {\n      const { result } = renderHook(() => useAdvancedFiltersScreen());\n      \n      act(() => {\n        result.current.saveFilters();\n      });\n\n      expect(Alert.alert).toHaveBeenCalledWith(\n        \"Success\",\n        \"Advanced filters saved successfully!\"\n      );\n    });\n  });\n});\n\n"],"mappings":"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","ignoreList":[]}