1ccf8e195aae1e9fb85637656711de2a
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.usePetProfileSetupScreen = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _native = require("@react-navigation/native");
var _usePetProfileSetup2 = require("../domains/onboarding/usePetProfileSetup");
var usePetProfileSetupScreen = exports.usePetProfileSetupScreen = function usePetProfileSetupScreen() {
  var navigation = (0, _native.useNavigation)();
  var route = (0, _native.useRoute)();
  var _ref = route.params,
    userIntent = _ref.userIntent;
  var _usePetProfileSetup = (0, _usePetProfileSetup2.usePetProfileSetup)(),
    profile = _usePetProfileSetup.profile,
    state = _usePetProfileSetup.state,
    updateProfile = _usePetProfileSetup.updateProfile,
    setCurrentStep = _usePetProfileSetup.setCurrentStep,
    uploadPhoto = _usePetProfileSetup.uploadPhoto,
    removePhoto = _usePetProfileSetup.removePhoto,
    validateCurrentStep = _usePetProfileSetup.validateCurrentStep,
    canProceed = _usePetProfileSetup.canProceed,
    progressPercentage = _usePetProfileSetup.progressPercentage,
    submitProfile = _usePetProfileSetup.submitProfile;
  var handleNext = function handleNext() {
    if (canProceed && state.currentStep < 2) {
      setCurrentStep(state.currentStep + 1);
    }
  };
  var handlePrevious = function handlePrevious() {
    if (state.currentStep > 0) {
      setCurrentStep(state.currentStep - 1);
    }
  };
  var handleComplete = function () {
    var _ref2 = (0, _asyncToGenerator2.default)(function* () {
      if (!canProceed) return;
      try {
        yield submitProfile();
        navigation.navigate("PreferencesSetup", {
          userIntent: userIntent
        });
      } catch (error) {}
    });
    return function handleComplete() {
      return _ref2.apply(this, arguments);
    };
  }();
  var handleGoBack = function handleGoBack() {
    navigation.goBack();
  };
  return {
    profile: profile,
    state: state,
    updateProfile: updateProfile,
    setCurrentStep: setCurrentStep,
    uploadPhoto: uploadPhoto,
    removePhoto: removePhoto,
    validateCurrentStep: validateCurrentStep,
    canProceed: canProceed,
    progressPercentage: progressPercentage,
    userIntent: userIntent,
    handleNext: handleNext,
    handlePrevious: handlePrevious,
    handleComplete: handleComplete,
    handleGoBack: handleGoBack
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbmF0aXZlIiwicmVxdWlyZSIsIl91c2VQZXRQcm9maWxlU2V0dXAyIiwidXNlUGV0UHJvZmlsZVNldHVwU2NyZWVuIiwiZXhwb3J0cyIsIm5hdmlnYXRpb24iLCJ1c2VOYXZpZ2F0aW9uIiwicm91dGUiLCJ1c2VSb3V0ZSIsIl9yZWYiLCJwYXJhbXMiLCJ1c2VySW50ZW50IiwiX3VzZVBldFByb2ZpbGVTZXR1cCIsInVzZVBldFByb2ZpbGVTZXR1cCIsInByb2ZpbGUiLCJzdGF0ZSIsInVwZGF0ZVByb2ZpbGUiLCJzZXRDdXJyZW50U3RlcCIsInVwbG9hZFBob3RvIiwicmVtb3ZlUGhvdG8iLCJ2YWxpZGF0ZUN1cnJlbnRTdGVwIiwiY2FuUHJvY2VlZCIsInByb2dyZXNzUGVyY2VudGFnZSIsInN1Ym1pdFByb2ZpbGUiLCJoYW5kbGVOZXh0IiwiY3VycmVudFN0ZXAiLCJoYW5kbGVQcmV2aW91cyIsImhhbmRsZUNvbXBsZXRlIiwiX3JlZjIiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJkZWZhdWx0IiwibmF2aWdhdGUiLCJlcnJvciIsImFwcGx5IiwiYXJndW1lbnRzIiwiaGFuZGxlR29CYWNrIiwiZ29CYWNrIl0sInNvdXJjZXMiOlsidXNlUGV0UHJvZmlsZVNldHVwU2NyZWVuLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogdXNlUGV0UHJvZmlsZVNldHVwU2NyZWVuIEhvb2tcbiAqIE1hbmFnZXMgUGV0IFByb2ZpbGUgU2V0dXAgc2NyZWVuIHdpdGggdmFsaWRhdGlvbiBhbmQgbmF2aWdhdGlvblxuICovXG5pbXBvcnQgeyB1c2VOYXZpZ2F0aW9uLCB1c2VSb3V0ZSB9IGZyb20gXCJAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmVcIjtcbmltcG9ydCB7IHVzZVBldFByb2ZpbGVTZXR1cCB9IGZyb20gXCIuLi9kb21haW5zL29uYm9hcmRpbmcvdXNlUGV0UHJvZmlsZVNldHVwXCI7XG5pbXBvcnQgdHlwZSB7IE9uYm9hcmRpbmdTY3JlZW5Qcm9wcyB9IGZyb20gXCIuLi8uLi9uYXZpZ2F0aW9uL3R5cGVzXCI7XG5pbXBvcnQgdHlwZSB7IFBldFBob3RvIH0gZnJvbSBcIkBwYXdmZWN0bWF0Y2gvY29yZVwiO1xuXG4vLyBJbnRlcmZhY2UgZm9yIHBldCBwcm9maWxlIGNyZWF0aW9uIGR1cmluZyBvbmJvYXJkaW5nXG5pbnRlcmZhY2UgUGV0UHJvZmlsZUNyZWF0aW9uRGF0YSB7XG4gIG5hbWU6IHN0cmluZztcbiAgYnJlZWQ6IHN0cmluZztcbiAgYWdlOiBudW1iZXI7XG4gIHNwZWNpZXM6ICdkb2cnIHwgJ2NhdCcgfCAnYmlyZCcgfCAncmFiYml0JyB8ICdvdGhlcic7XG4gIGdlbmRlcjogJ21hbGUnIHwgJ2ZlbWFsZSc7XG4gIHNpemU6ICd0aW55JyB8ICdzbWFsbCcgfCAnbWVkaXVtJyB8ICdsYXJnZScgfCAnZXh0cmEtbGFyZ2UnO1xuICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgcGhvdG9zOiBQZXRQaG90b1tdO1xufVxuXG5pbnRlcmZhY2UgUGV0UHJvZmlsZVNldHVwU3RhdGUge1xuICBjdXJyZW50U3RlcDogbnVtYmVyO1xuICBpc1VwbG9hZGluZzogYm9vbGVhbjtcbiAgaXNTdWJtaXR0aW5nOiBib29sZWFuO1xuICBlcnJvcjogc3RyaW5nIHwgbnVsbDtcbn1cblxuaW50ZXJmYWNlIFVzZVBldFByb2ZpbGVTZXR1cFNjcmVlblJldHVybiB7XG4gIC8vIEZyb20gZG9tYWluIGhvb2tcbiAgcHJvZmlsZTogUGFydGlhbDxQZXRQcm9maWxlQ3JlYXRpb25EYXRhPjtcbiAgc3RhdGU6IFBldFByb2ZpbGVTZXR1cFN0YXRlO1xuICB1cGRhdGVQcm9maWxlOiAodXBkYXRlczogUGFydGlhbDxQZXRQcm9maWxlQ3JlYXRpb25EYXRhPikgPT4gdm9pZDtcbiAgc2V0Q3VycmVudFN0ZXA6IChzdGVwOiBudW1iZXIpID0+IHZvaWQ7XG4gIHVwbG9hZFBob3RvOiAodXJpOiBzdHJpbmcpID0+IFByb21pc2U8dm9pZD47XG4gIHJlbW92ZVBob3RvOiAoaW5kZXg6IG51bWJlcikgPT4gdm9pZDtcbiAgdmFsaWRhdGVDdXJyZW50U3RlcDogKCkgPT4gYm9vbGVhbjtcbiAgY2FuUHJvY2VlZDogYm9vbGVhbjtcbiAgcHJvZ3Jlc3NQZXJjZW50YWdlOiBudW1iZXI7XG5cbiAgLy8gUm91dGUgcGFyYW1zXG4gIHVzZXJJbnRlbnQ6IHN0cmluZztcblxuICAvLyBOYXZpZ2F0aW9uXG4gIGhhbmRsZU5leHQ6ICgpID0+IHZvaWQ7XG4gIGhhbmRsZVByZXZpb3VzOiAoKSA9PiB2b2lkO1xuICBoYW5kbGVDb21wbGV0ZTogKCkgPT4gUHJvbWlzZTx2b2lkPjtcbiAgaGFuZGxlR29CYWNrOiAoKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgY29uc3QgdXNlUGV0UHJvZmlsZVNldHVwU2NyZWVuID0gKCk6IFVzZVBldFByb2ZpbGVTZXR1cFNjcmVlblJldHVybiA9PiB7XG4gIGNvbnN0IG5hdmlnYXRpb24gPSB1c2VOYXZpZ2F0aW9uPE9uYm9hcmRpbmdTY3JlZW5Qcm9wczxcIlBldFByb2ZpbGVTZXR1cFwiPlsnbmF2aWdhdGlvbiddPigpO1xuICBjb25zdCByb3V0ZSA9IHVzZVJvdXRlPE9uYm9hcmRpbmdTY3JlZW5Qcm9wczxcIlBldFByb2ZpbGVTZXR1cFwiPlsncm91dGUnXT4oKTtcbiAgY29uc3QgeyB1c2VySW50ZW50IH0gPSByb3V0ZS5wYXJhbXMgYXMgeyB1c2VySW50ZW50OiBzdHJpbmcgfTtcblxuICBjb25zdCB7XG4gICAgcHJvZmlsZSxcbiAgICBzdGF0ZSxcbiAgICB1cGRhdGVQcm9maWxlLFxuICAgIHNldEN1cnJlbnRTdGVwLFxuICAgIHVwbG9hZFBob3RvLFxuICAgIHJlbW92ZVBob3RvLFxuICAgIHZhbGlkYXRlQ3VycmVudFN0ZXAsXG4gICAgY2FuUHJvY2VlZCxcbiAgICBwcm9ncmVzc1BlcmNlbnRhZ2UsXG4gICAgc3VibWl0UHJvZmlsZSxcbiAgfSA9IHVzZVBldFByb2ZpbGVTZXR1cCgpO1xuXG4gIGNvbnN0IGhhbmRsZU5leHQgPSAoKSA9PiB7XG4gICAgaWYgKGNhblByb2NlZWQgJiYgc3RhdGUuY3VycmVudFN0ZXAgPCAyKSB7XG4gICAgICBzZXRDdXJyZW50U3RlcChzdGF0ZS5jdXJyZW50U3RlcCArIDEpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVQcmV2aW91cyA9ICgpID0+IHtcbiAgICBpZiAoc3RhdGUuY3VycmVudFN0ZXAgPiAwKSB7XG4gICAgICBzZXRDdXJyZW50U3RlcChzdGF0ZS5jdXJyZW50U3RlcCAtIDEpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVDb21wbGV0ZSA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoIWNhblByb2NlZWQpIHJldHVybjtcblxuICAgIHRyeSB7XG4gICAgICBhd2FpdCBzdWJtaXRQcm9maWxlKCk7XG4gICAgICBuYXZpZ2F0aW9uLm5hdmlnYXRlKFwiUHJlZmVyZW5jZXNTZXR1cFwiLCB7IHVzZXJJbnRlbnQgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIC8vIEVycm9yIGhhbmRsaW5nIGlzIGRvbmUgaW4gdGhlIGRvbWFpbiBob29rXG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUdvQmFjayA9ICgpID0+IHtcbiAgICBuYXZpZ2F0aW9uLmdvQmFjaygpO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgLy8gRnJvbSBkb21haW4gaG9va1xuICAgIHByb2ZpbGUsXG4gICAgc3RhdGUsXG4gICAgdXBkYXRlUHJvZmlsZSxcbiAgICBzZXRDdXJyZW50U3RlcCxcbiAgICB1cGxvYWRQaG90byxcbiAgICByZW1vdmVQaG90byxcbiAgICB2YWxpZGF0ZUN1cnJlbnRTdGVwLFxuICAgIGNhblByb2NlZWQsXG4gICAgcHJvZ3Jlc3NQZXJjZW50YWdlLFxuXG4gICAgLy8gUm91dGUgcGFyYW1zXG4gICAgdXNlckludGVudCxcblxuICAgIC8vIE5hdmlnYXRpb25cbiAgICBoYW5kbGVOZXh0LFxuICAgIGhhbmRsZVByZXZpb3VzLFxuICAgIGhhbmRsZUNvbXBs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