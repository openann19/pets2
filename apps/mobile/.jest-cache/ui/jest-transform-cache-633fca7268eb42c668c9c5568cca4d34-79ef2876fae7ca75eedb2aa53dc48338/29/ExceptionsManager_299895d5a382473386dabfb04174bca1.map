{"version":3,"names":["_interopRequireDefault","require","_defineProperty2","_createClass2","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_wrapNativeSuper2","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","default","getOwnPropertyDescriptors","defineProperties","defineProperty","_callSuper","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","call","SyntheticError","_Error","_this","_len","args","Array","_key","concat","name","Error","userExceptionDecorator","inUserExceptionDecorator","decoratedExtraDataKey","Symbol","unstable_setExceptionDecorator","exceptionDecorator","preprocessException","data","_unused","exceptionID","reportException","isFatal","reportToConsole","parseErrorStack","stack","currentExceptionID","originalMessage","message","componentStack","namePrefix","startsWith","jsEngine","id","extraData","rawStack","console","error","__DEV__","LogBox","addException","isComponentError","type","NativeExceptionsManager","inExceptionHandler","handleException","reactConsoleErrorHandler","_console","_len2","_key2","_errorOriginal","reportErrorsAsExceptions","firstArg","stringifySafe","map","arg","join","installConsoleErrorReporter","bind","undefined","module","exports"],"sources":["ExceptionsManager.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nimport type {ExtendedError} from './ExtendedError';\nimport type {ExceptionData} from './NativeExceptionsManager';\n\nclass SyntheticError extends Error {\n  name: string = '';\n}\n\ntype ExceptionDecorator = ExceptionData => ExceptionData;\n\nlet userExceptionDecorator: ?ExceptionDecorator;\nlet inUserExceptionDecorator = false;\n\n// This Symbol is used to decorate an ExtendedError with extra data in select usecases.\n// Note that data passed using this method should be strictly contained,\n// as data that's not serializable/too large may cause issues with passing the error to the native code.\nconst decoratedExtraDataKey: symbol = Symbol('decoratedExtraDataKey');\n\n/**\n * Allows the app to add information to the exception report before it is sent\n * to native. This API is not final.\n */\n\nfunction unstable_setExceptionDecorator(\n  exceptionDecorator: ?ExceptionDecorator,\n) {\n  userExceptionDecorator = exceptionDecorator;\n}\n\nfunction preprocessException(data: ExceptionData): ExceptionData {\n  if (userExceptionDecorator && !inUserExceptionDecorator) {\n    inUserExceptionDecorator = true;\n    try {\n      return userExceptionDecorator(data);\n    } catch {\n      // Fall through\n    } finally {\n      inUserExceptionDecorator = false;\n    }\n  }\n  return data;\n}\n\n/**\n * Handles the developer-visible aspect of errors and exceptions\n */\nlet exceptionID = 0;\nfunction reportException(\n  e: ExtendedError,\n  isFatal: boolean,\n  reportToConsole: boolean, // only true when coming from handleException; the error has not yet been logged\n) {\n  const parseErrorStack = require('./Devtools/parseErrorStack');\n  const stack = parseErrorStack(e?.stack);\n  const currentExceptionID = ++exceptionID;\n  const originalMessage = e.message || '';\n  let message = originalMessage;\n  if (e.componentStack != null) {\n    message += `\\n\\nThis error is located at:${e.componentStack}`;\n  }\n  const namePrefix = e.name == null || e.name === '' ? '' : `${e.name}: `;\n\n  if (!message.startsWith(namePrefix)) {\n    message = namePrefix + message;\n  }\n\n  message =\n    e.jsEngine == null ? message : `${message}, js engine: ${e.jsEngine}`;\n\n  const data = preprocessException({\n    message,\n    originalMessage: message === originalMessage ? null : originalMessage,\n    name: e.name == null || e.name === '' ? null : e.name,\n    componentStack:\n      typeof e.componentStack === 'string' ? e.componentStack : null,\n    stack,\n    id: currentExceptionID,\n    isFatal,\n    extraData: {\n      // $FlowFixMe[incompatible-use] we can't define a type with a Symbol-keyed field in flow\n      ...e[decoratedExtraDataKey],\n      jsEngine: e.jsEngine,\n      rawStack: e.stack,\n    },\n  });\n\n  if (reportToConsole) {\n    // we feed back into console.error, to make sure any methods that are\n    // monkey patched on top of console.error are called when coming from\n    // handleException\n    console.error(data.message);\n  }\n\n  if (__DEV__) {\n    const LogBox = require('../LogBox/LogBox').default;\n    LogBox.addException({\n      ...data,\n      isComponentError: !!e.isComponentError,\n    });\n  } else if (isFatal || e.type !== 'warn') {\n    const NativeExceptionsManager =\n      require('./NativeExceptionsManager').default;\n    if (NativeExceptionsManager) {\n      NativeExceptionsManager.reportException(data);\n    }\n  }\n}\n\ndeclare var console: typeof console & {\n  _errorOriginal: typeof console.error,\n  reportErrorsAsExceptions: boolean,\n  ...\n};\n\n// If we trigger console.error _from_ handleException,\n// we do want to make sure that console.error doesn't trigger error reporting again\nlet inExceptionHandler = false;\n\n/**\n * Logs exceptions to the (native) console and displays them\n */\nfunction handleException(e: mixed, isFatal: boolean) {\n  let error: Error;\n  if (e instanceof Error) {\n    error = e;\n  } else {\n    // Workaround for reporting errors caused by `throw 'some string'`\n    // Unfortunately there is no way to figure out the stacktrace in this\n    // case, so if you ended up here trying to trace an error, look for\n    // `throw '<error message>'` somewhere in your codebase.\n    error = new SyntheticError(e);\n  }\n  try {\n    inExceptionHandler = true;\n    /* $FlowFixMe[class-object-subtyping] added when improving typing for this\n     * parameters */\n    reportException(error, isFatal, /*reportToConsole*/ true);\n  } finally {\n    inExceptionHandler = false;\n  }\n}\n\n/* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n * LTI update could not be added via codemod */\nfunction reactConsoleErrorHandler(...args) {\n  // bubble up to any original handlers\n  console._errorOriginal(...args);\n  if (!console.reportErrorsAsExceptions) {\n    return;\n  }\n  if (inExceptionHandler) {\n    // The fundamental trick here is that are multiple entry point to logging errors:\n    // (see D19743075 for more background)\n    //\n    // 1. An uncaught exception being caught by the global handler\n    // 2. An error being logged throw console.error\n    //\n    // However, console.error is monkey patched multiple times: by this module, and by the\n    // DevTools setup that sends messages to Metro.\n    // The patching order cannot be relied upon.\n    //\n    // So, some scenarios that are handled by this flag:\n    //\n    // Logging an error:\n    // 1. console.error called from user code\n    // 2. (possibly) arrives _first_ at DevTool handler, send to Metro\n    // 3. Bubbles to here\n    // 4. goes into report Exception.\n    // 5. should not trigger console.error again, to avoid looping / logging twice\n    // 6. should still bubble up to original console\n    //    (which might either be console.log, or the DevTools handler in case it patched _earlier_ and (2) didn't happen)\n    //\n    // Throwing an uncaught exception:\n    // 1. exception thrown\n    // 2. picked up by handleException\n    // 3. should be sent to console.error (not console._errorOriginal, as DevTools might have patched _later_ and it needs to send it to Metro)\n    // 4. that _might_ bubble again to the `reactConsoleErrorHandle` defined here\n    //    -> should not handle exception _again_, to avoid looping / showing twice (this code branch)\n    // 5. should still bubble up to original console (which might either be console.log, or the DevTools handler in case that one patched _earlier_)\n    return;\n  }\n\n  let error;\n\n  const firstArg = args[0];\n  if (firstArg?.stack) {\n    // reportException will console.error this with high enough fidelity.\n    error = firstArg;\n  } else {\n    const stringifySafe = require('../Utilities/stringifySafe').default;\n    if (typeof firstArg === 'string' && firstArg.startsWith('Warning: ')) {\n      // React warnings use console.error so that a stack trace is shown, but\n      // we don't (currently) want these to show a redbox\n      // (Note: Logic duplicated in polyfills/console.js.)\n      return;\n    }\n    const message = args\n      .map(arg => (typeof arg === 'string' ? arg : stringifySafe(arg)))\n      .join(' ');\n\n    error = new SyntheticError(message);\n    error.name = 'console.error';\n  }\n\n  reportException(\n    /* $FlowFixMe[class-object-subtyping] added when improving typing for this\n     * parameters */\n    error,\n    false, // isFatal\n    false, // reportToConsole\n  );\n}\n\n/**\n * Shows a redbox with stacktrace for all console.error messages.  Disable by\n * setting `console.reportErrorsAsExceptions = false;` in your app.\n */\nfunction installConsoleErrorReporter() {\n  // Enable reportErrorsAsExceptions\n  if (console._errorOriginal) {\n    return; // already installed\n  }\n  // Flow doesn't like it when you set arbitrary values on a global object\n  console._errorOriginal = console.error.bind(console);\n  console.error = reactConsoleErrorHandler;\n  if (console.reportErrorsAsExceptions === undefined) {\n    // Individual apps can disable this\n    // Flow doesn't like it when you set arbitrary values on a global object\n    console.reportErrorsAsExceptions = true;\n  }\n}\n\nmodule.exports = {\n  decoratedExtraDataKey,\n  handleException,\n  installConsoleErrorReporter,\n  SyntheticError,\n  unstable_setExceptionDecorator,\n};\n"],"mappings":"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","ignoreList":[]}