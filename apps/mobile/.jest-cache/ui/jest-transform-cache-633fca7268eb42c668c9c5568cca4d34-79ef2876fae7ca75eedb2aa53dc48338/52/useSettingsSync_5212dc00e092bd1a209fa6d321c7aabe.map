{"version":3,"names":["_react","require","_api","_core","useSettingsSync","_ref","arguments","length","undefined","onSyncSuccess","onSyncError","_useState","useState","_useState2","_slicedToArray2","default","isSyncing","setIsSyncing","_useState3","_useState4","error","setError","syncSettings","useCallback","_ref2","_asyncToGenerator2","settings","matchesAPI","updateUserSettings","logger","info","err","errorMessage","Error","message","_x","apply"],"sources":["useSettingsSync.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { matchesAPI } from \"../../../services/api\";\nimport { logger } from \"@pawfectmatch/core\";\nimport type { User } from \"@pawfectmatch/core\";\n\nexport interface UseSettingsSyncOptions {\n  onSyncSuccess?: () => void;\n  onSyncError?: (error: Error) => void;\n}\n\nexport interface UseSettingsSyncReturn {\n  isSyncing: boolean;\n  syncSettings: (settings: User[\"preferences\"]) => Promise<boolean>;\n  error: string | null;\n}\n\n/**\n * Hook for syncing settings with backend\n */\nexport function useSettingsSync({\n  onSyncSuccess,\n  onSyncError,\n}: UseSettingsSyncOptions = {}): UseSettingsSyncReturn {\n  const [isSyncing, setIsSyncing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const syncSettings = useCallback(\n    async (settings: User[\"preferences\"]): Promise<boolean> => {\n      setIsSyncing(true);\n      setError(null);\n\n      try {\n        await matchesAPI.updateUserSettings(settings);\n        logger.info(\"Settings synced successfully\", { settings });\n        onSyncSuccess?.();\n        return true;\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error ? err.message : \"Failed to sync settings\";\n        setError(errorMessage);\n        logger.error(\"Failed to sync settings\", { error: errorMessage });\n        onSyncError?.(err instanceof Error ? err : new Error(errorMessage));\n        return false;\n      } finally {\n        setIsSyncing(false);\n      }\n    },\n    [onSyncSuccess, onSyncError],\n  );\n\n  return {\n    isSyncing,\n    syncSettings,\n    error,\n  };\n}\n"],"mappings":";;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,IAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AAiBO,SAASG,eAAeA,CAAA,EAGwB;EAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA3B,CAAC,CAAC;IAF5BG,aAAa,GAAAJ,IAAA,CAAbI,aAAa;IACbC,WAAW,GAAAL,IAAA,CAAXK,WAAW;EAEX,IAAAC,SAAA,GAAkC,IAAAC,eAAQ,EAAC,KAAK,CAAC;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAA1CK,SAAS,GAAAH,UAAA;IAAEI,YAAY,GAAAJ,UAAA;EAC9B,IAAAK,UAAA,GAA0B,IAAAN,eAAQ,EAAgB,IAAI,CAAC;IAAAO,UAAA,OAAAL,eAAA,CAAAC,OAAA,EAAAG,UAAA;IAAhDE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtB,IAAMG,YAAY,GAAG,IAAAC,kBAAW;IAAA,IAAAC,KAAA,OAAAC,kBAAA,CAAAV,OAAA,EAC9B,WAAOW,QAA6B,EAAuB;MACzDT,YAAY,CAAC,IAAI,CAAC;MAClBI,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACF,MAAMM,eAAU,CAACC,kBAAkB,CAACF,QAAQ,CAAC;QAC7CG,YAAM,CAACC,IAAI,CAAC,8BAA8B,EAAE;UAAEJ,QAAQ,EAARA;QAAS,CAAC,CAAC;QACzDjB,aAAa,oBAAbA,aAAa,CAAG,CAAC;QACjB,OAAO,IAAI;MACb,CAAC,CAAC,OAAOsB,GAAG,EAAE;QACZ,IAAMC,YAAY,GAChBD,GAAG,YAAYE,KAAK,GAAGF,GAAG,CAACG,OAAO,GAAG,yBAAyB;QAChEb,QAAQ,CAACW,YAAY,CAAC;QACtBH,YAAM,CAACT,KAAK,CAAC,yBAAyB,EAAE;UAAEA,KAAK,EAAEY;QAAa,CAAC,CAAC;QAChEtB,WAAW,oBAAXA,WAAW,CAAGqB,GAAG,YAAYE,KAAK,GAAGF,GAAG,GAAG,IAAIE,KAAK,CAACD,YAAY,CAAC,CAAC;QACnE,OAAO,KAAK;MACd,CAAC,SAAS;QACRf,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAAA,iBAAAkB,EAAA;MAAA,OAAAX,KAAA,CAAAY,KAAA,OAAA9B,SAAA;IAAA;EAAA,KACD,CAACG,aAAa,EAAEC,WAAW,CAC7B,CAAC;EAED,OAAO;IACLM,SAAS,EAATA,SAAS;IACTM,YAAY,EAAZA,YAAY;IACZF,KAAK,EAALA;EACF,CAAC;AACH","ignoreList":[]}