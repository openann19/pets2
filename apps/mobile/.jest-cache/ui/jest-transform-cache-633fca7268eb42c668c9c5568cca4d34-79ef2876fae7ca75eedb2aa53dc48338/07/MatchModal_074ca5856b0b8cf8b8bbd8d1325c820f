684e25bcbe34d78f5a099a3f509d432b
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MatchModal = MatchModal;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _ = require("../");
var _unifiedTheme = require("../../theme/unified-theme");
var _ConfettiBurst = require("./ConfettiBurst");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t2 in e) "default" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]); return f; })(e, t); }
var _Dimensions$get = _reactNative.Dimensions.get('window'),
  screenWidth = _Dimensions$get.width;
function MatchModal(_ref) {
  var pet = _ref.pet,
    onKeepSwiping = _ref.onKeepSwiping,
    onSendMessage = _ref.onSendMessage,
    _ref$show = _ref.show,
    show = _ref$show === void 0 ? true : _ref$show;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    showConfetti = _useState2[0],
    setShowConfetti = _useState2[1];
  (0, _react.useEffect)(function () {
    if (show) {
      setShowConfetti(true);
      var timer = setTimeout(function () {
        setShowConfetti(false);
      }, 4000);
      return function () {
        clearTimeout(timer);
      };
    }
  }, [show]);
  if (!show) return (0, _jsxRuntime.jsx)(_reactNative.View, {});
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.overlay,
    children: [(0, _jsxRuntime.jsx)(_ConfettiBurst.ConfettiBurst, {
      show: showConfetti,
      intensity: "heavy",
      duration: 4000,
      onComplete: function onComplete() {
        setShowConfetti(false);
      }
    }), (0, _jsxRuntime.jsxs)(_.FXContainerPresets.premium, {
      style: styles.content,
      children: [(0, _jsxRuntime.jsx)(_.Heading1, {
        style: styles.title,
        children: "It's a Match! \uD83C\uDF89"
      }), (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.photos,
        children: (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: styles.photoContainer
        })
      }), (0, _jsxRuntime.jsxs)(_.Body, {
        style: styles.text,
        children: ["You and ", pet.name, " liked each other!"]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.buttons,
        children: [(0, _jsxRuntime.jsx)(_.EliteButtonPresets.glass, {
          title: "Keep Swiping",
          onPress: onKeepSwiping
        }), (0, _jsxRuntime.jsx)(_.EliteButtonPresets.premium, {
          title: "Send Message",
          leftIcon: "chatbubble",
          onPress: onSendMessage
        })]
      })]
    })]
  });
}
var styles = _reactNative.StyleSheet.create({
  overlay: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: 'rgba(0,0,0,0.85)',
    justifyContent: 'center',
    alignItems: 'center',
    zIndex: 10000
  },
  content: {
    width: screenWidth - _unifiedTheme.Theme.spacing['4xl'],
    padding: _unifiedTheme.Theme.spacing['4xl'],
    alignItems: 'center'
  },
  title: {
    textAlign: 'center',
    marginBottom: _unifiedTheme.Theme.spacing.xl
  },
  photos: {
    flexDirection: 'row',
    marginBottom: _unifiedTheme.Theme.spacing.xl,
    gap: _unifiedTheme.Theme.spacing.lg
  },
  photoContainer: {
    width: 80,
    height: 80,
    borderRadius: 40
  },
  text: {
    textAlign: 'center',
    marginBottom: _unifiedTheme.Theme.spacing.xl,
    color: _unifiedTheme.Theme.colors.text.secondary
  },
  buttons: {
    flexDirection: 'row',
    gap: _unifiedTheme.Theme.spacing.lg
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,