{"version":3,"names":["_getJestObj","mock","impactAsync","jest","fn","Promise","resolve","ImpactFeedbackStyle","Light","Medium","Heavy","notificationAsync","NotificationFeedbackType","Success","Warning","Error","selectionAsync","_reactNative","require","_useHapticFeedback","_require7","describe","beforeEach","clearAllMocks","it","_renderHook","renderHook","useHapticFeedback","result","expect","current","toBeDefined","triggerImpact","toBe","triggerNotification","triggerSelection","_renderHook2","_require","act","toHaveBeenCalledWith","_renderHook3","_require2","_renderHook4","_require3","_renderHook5","_require4","_renderHook6","_require5","toHaveBeenCalled","_renderHook7","_require6","mockRejectedValueOnce","not","toThrow"],"sources":["useHapticFeedback.test.ts"],"sourcesContent":["/**\n * Tests for useHapticFeedback hook\n */\n\nimport { renderHook, act } from '@testing-library/react-native';\nimport { useHapticFeedback } from '../useHapticFeedback';\n\njest.mock('expo-haptics', () => ({\n  impactAsync: jest.fn(() => Promise.resolve()),\n  ImpactFeedbackStyle: {\n    Light: 'Light',\n    Medium: 'Medium',\n    Heavy: 'Heavy',\n  },\n  notificationAsync: jest.fn(() => Promise.resolve()),\n  NotificationFeedbackType: {\n    Success: 'Success',\n    Warning: 'Warning',\n    Error: 'Error',\n  },\n  selectionAsync: jest.fn(() => Promise.resolve()),\n}));\n\ndescribe('useHapticFeedback', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('should return haptic feedback functions', () => {\n    const { result } = renderHook(() => useHapticFeedback());\n\n    expect(result.current).toBeDefined();\n    expect(typeof result.current.triggerImpact).toBe('function');\n    expect(typeof result.current.triggerNotification).toBe('function');\n    expect(typeof result.current.triggerSelection).toBe('function');\n  });\n\n  it('should trigger light impact', () => {\n    const { result } = renderHook(() => useHapticFeedback());\n\n    const { impactAsync } = require('expo-haptics');\n\n    act(() => {\n      result.current.triggerImpact('Light');\n    });\n\n    expect(impactAsync).toHaveBeenCalledWith('Light');\n  });\n\n  it('should trigger medium impact', () => {\n    const { result } = renderHook(() => useHapticFeedback());\n\n    const { impactAsync } = require('expo-haptics');\n\n    act(() => {\n      result.current.triggerImpact('Medium');\n    });\n\n    expect(impactAsync).toHaveBeenCalledWith('Medium');\n  });\n\n  it('should trigger heavy impact', () => {\n    const { result } = renderHook(() => useHapticFeedback());\n\n    const { impactAsync } = require('expo-haptics');\n\n    act(() => {\n      result.current.triggerImpact('Heavy');\n    });\n\n    expect(impactAsync).toHaveBeenCalledWith('Heavy');\n  });\n\n  it('should handle notification feedback', () => {\n    const { result } = renderHook(() => useHapticFeedback());\n\n    const { notificationAsync } = require('expo-haptics');\n\n    act(() => {\n      result.current.triggerNotification('Success');\n    });\n\n    expect(notificationAsync).toHaveBeenCalledWith('Success');\n  });\n\n  it('should handle selection feedback', () => {\n    const { result } = renderHook(() => useHapticFeedback());\n\n    const { selectionAsync } = require('expo-haptics');\n\n    act(() => {\n      result.current.triggerSelection();\n    });\n\n    expect(selectionAsync).toHaveBeenCalled();\n  });\n\n  it('should handle errors gracefully', () => {\n    const { result } = renderHook(() => useHapticFeedback());\n\n    const { impactAsync } = require('expo-haptics');\n    impactAsync.mockRejectedValueOnce(new Error('Haptic not available'));\n\n    act(() => {\n      expect(() => {\n        result.current.triggerImpact('Light');\n      }).not.toThrow();\n    });\n  });\n});\n\n"],"mappings":";;AAOAA,WAAA,GAAKC,IAAI,CAAC,cAAc,EAAE;EAAA,OAAO;IAC/BC,WAAW,EAAEC,IAAI,CAACC,EAAE,CAAC;MAAA,OAAMC,OAAO,CAACC,OAAO,CAAC,CAAC;IAAA,EAAC;IAC7CC,mBAAmB,EAAE;MACnBC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAE;IACT,CAAC;IACDC,iBAAiB,EAAER,IAAI,CAACC,EAAE,CAAC;MAAA,OAAMC,OAAO,CAACC,OAAO,CAAC,CAAC;IAAA,EAAC;IACnDM,wBAAwB,EAAE;MACxBC,OAAO,EAAE,SAAS;MAClBC,OAAO,EAAE,SAAS;MAClBC,KAAK,EAAE;IACT,CAAC;IACDC,cAAc,EAAEb,IAAI,CAACC,EAAE,CAAC;MAAA,OAAMC,OAAO,CAACC,OAAO,CAAC,CAAC;IAAA;EACjD,CAAC;AAAA,CAAC,CAAC;AAjBH,IAAAW,YAAA,GAAAC,OAAA;AACA,IAAAC,kBAAA,GAAAD,OAAA;AAAyD,SAAAlB,YAAA;EAAA,IAAAoB,SAAA,GAAAF,OAAA;IAAAf,IAAA,GAAAiB,SAAA,CAAAjB,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAkBzDkB,QAAQ,CAAC,mBAAmB,EAAE,YAAM;EAClCC,UAAU,CAAC,YAAM;IACfnB,IAAI,CAACoB,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFC,EAAE,CAAC,yCAAyC,EAAE,YAAM;IAClD,IAAAC,WAAA,GAAmB,IAAAC,uBAAU,EAAC;QAAA,OAAM,IAAAC,oCAAiB,EAAC,CAAC;MAAA,EAAC;MAAhDC,MAAM,GAAAH,WAAA,CAANG,MAAM;IAEdC,MAAM,CAACD,MAAM,CAACE,OAAO,CAAC,CAACC,WAAW,CAAC,CAAC;IACpCF,MAAM,CAAC,OAAOD,MAAM,CAACE,OAAO,CAACE,aAAa,CAAC,CAACC,IAAI,CAAC,UAAU,CAAC;IAC5DJ,MAAM,CAAC,OAAOD,MAAM,CAACE,OAAO,CAACI,mBAAmB,CAAC,CAACD,IAAI,CAAC,UAAU,CAAC;IAClEJ,MAAM,CAAC,OAAOD,MAAM,CAACE,OAAO,CAACK,gBAAgB,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC;EACjE,CAAC,CAAC;EAEFT,EAAE,CAAC,6BAA6B,EAAE,YAAM;IACtC,IAAAY,YAAA,GAAmB,IAAAV,uBAAU,EAAC;QAAA,OAAM,IAAAC,oCAAiB,EAAC,CAAC;MAAA,EAAC;MAAhDC,MAAM,GAAAQ,YAAA,CAANR,MAAM;IAEd,IAAAS,QAAA,GAAwBnB,OAAO,CAAC,cAAc,CAAC;MAAvChB,WAAW,GAAAmC,QAAA,CAAXnC,WAAW;IAEnB,IAAAoC,gBAAG,EAAC,YAAM;MACRV,MAAM,CAACE,OAAO,CAACE,aAAa,CAAC,OAAO,CAAC;IACvC,CAAC,CAAC;IAEFH,MAAM,CAAC3B,WAAW,CAAC,CAACqC,oBAAoB,CAAC,OAAO,CAAC;EACnD,CAAC,CAAC;EAEFf,EAAE,CAAC,8BAA8B,EAAE,YAAM;IACvC,IAAAgB,YAAA,GAAmB,IAAAd,uBAAU,EAAC;QAAA,OAAM,IAAAC,oCAAiB,EAAC,CAAC;MAAA,EAAC;MAAhDC,MAAM,GAAAY,YAAA,CAANZ,MAAM;IAEd,IAAAa,SAAA,GAAwBvB,OAAO,CAAC,cAAc,CAAC;MAAvChB,WAAW,GAAAuC,SAAA,CAAXvC,WAAW;IAEnB,IAAAoC,gBAAG,EAAC,YAAM;MACRV,MAAM,CAACE,OAAO,CAACE,aAAa,CAAC,QAAQ,CAAC;IACxC,CAAC,CAAC;IAEFH,MAAM,CAAC3B,WAAW,CAAC,CAACqC,oBAAoB,CAAC,QAAQ,CAAC;EACpD,CAAC,CAAC;EAEFf,EAAE,CAAC,6BAA6B,EAAE,YAAM;IACtC,IAAAkB,YAAA,GAAmB,IAAAhB,uBAAU,EAAC;QAAA,OAAM,IAAAC,oCAAiB,EAAC,CAAC;MAAA,EAAC;MAAhDC,MAAM,GAAAc,YAAA,CAANd,MAAM;IAEd,IAAAe,SAAA,GAAwBzB,OAAO,CAAC,cAAc,CAAC;MAAvChB,WAAW,GAAAyC,SAAA,CAAXzC,WAAW;IAEnB,IAAAoC,gBAAG,EAAC,YAAM;MACRV,MAAM,CAACE,OAAO,CAACE,aAAa,CAAC,OAAO,CAAC;IACvC,CAAC,CAAC;IAEFH,MAAM,CAAC3B,WAAW,CAAC,CAACqC,oBAAoB,CAAC,OAAO,CAAC;EACnD,CAAC,CAAC;EAEFf,EAAE,CAAC,qCAAqC,EAAE,YAAM;IAC9C,IAAAoB,YAAA,GAAmB,IAAAlB,uBAAU,EAAC;QAAA,OAAM,IAAAC,oCAAiB,EAAC,CAAC;MAAA,EAAC;MAAhDC,MAAM,GAAAgB,YAAA,CAANhB,MAAM;IAEd,IAAAiB,SAAA,GAA8B3B,OAAO,CAAC,cAAc,CAAC;MAA7CP,iBAAiB,GAAAkC,SAAA,CAAjBlC,iBAAiB;IAEzB,IAAA2B,gBAAG,EAAC,YAAM;MACRV,MAAM,CAACE,OAAO,CAACI,mBAAmB,CAAC,SAAS,CAAC;IAC/C,CAAC,CAAC;IAEFL,MAAM,CAAClB,iBAAiB,CAAC,CAAC4B,oBAAoB,CAAC,SAAS,CAAC;EAC3D,CAAC,CAAC;EAEFf,EAAE,CAAC,kCAAkC,EAAE,YAAM;IAC3C,IAAAsB,YAAA,GAAmB,IAAApB,uBAAU,EAAC;QAAA,OAAM,IAAAC,oCAAiB,EAAC,CAAC;MAAA,EAAC;MAAhDC,MAAM,GAAAkB,YAAA,CAANlB,MAAM;IAEd,IAAAmB,SAAA,GAA2B7B,OAAO,CAAC,cAAc,CAAC;MAA1CF,cAAc,GAAA+B,SAAA,CAAd/B,cAAc;IAEtB,IAAAsB,gBAAG,EAAC,YAAM;MACRV,MAAM,CAACE,OAAO,CAACK,gBAAgB,CAAC,CAAC;IACnC,CAAC,CAAC;IAEFN,MAAM,CAACb,cAAc,CAAC,CAACgC,gBAAgB,CAAC,CAAC;EAC3C,CAAC,CAAC;EAEFxB,EAAE,CAAC,iCAAiC,EAAE,YAAM;IAC1C,IAAAyB,YAAA,GAAmB,IAAAvB,uBAAU,EAAC;QAAA,OAAM,IAAAC,oCAAiB,EAAC,CAAC;MAAA,EAAC;MAAhDC,MAAM,GAAAqB,YAAA,CAANrB,MAAM;IAEd,IAAAsB,SAAA,GAAwBhC,OAAO,CAAC,cAAc,CAAC;MAAvChB,WAAW,GAAAgD,SAAA,CAAXhD,WAAW;IACnBA,WAAW,CAACiD,qBAAqB,CAAC,IAAIpC,KAAK,CAAC,sBAAsB,CAAC,CAAC;IAEpE,IAAAuB,gBAAG,EAAC,YAAM;MACRT,MAAM,CAAC,YAAM;QACXD,MAAM,CAACE,OAAO,CAACE,aAAa,CAAC,OAAO,CAAC;MACvC,CAAC,CAAC,CAACoB,GAAG,CAACC,OAAO,CAAC,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}