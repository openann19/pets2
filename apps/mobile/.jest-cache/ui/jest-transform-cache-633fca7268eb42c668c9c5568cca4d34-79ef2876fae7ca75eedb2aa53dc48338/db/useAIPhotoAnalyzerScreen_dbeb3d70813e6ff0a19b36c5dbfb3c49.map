{"version":3,"names":["_native","require","_useAIPhotoAnalyzer2","useAIPhotoAnalyzerScreen","exports","navigation","useNavigation","_useAIPhotoAnalyzer","useAIPhotoAnalyzer","analyzePhotosDomain","analyzePhotos","isAnalyzing","analysisResult","error","selectedPhotos","pickImages","takePhoto","removePhoto","resetAnalysis","clearError","_ref","_asyncToGenerator2","default","apply","arguments","handleGoBack","goBack"],"sources":["useAIPhotoAnalyzerScreen.ts"],"sourcesContent":["/**\n * useAIPhotoAnalyzerScreen Hook\n * Manages AI Photo Analyzer screen state and interactions\n */\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useAIPhotoAnalyzer } from \"../domains/ai/useAIPhotoAnalyzer\";\n\ninterface UseAIPhotoAnalyzerScreenReturn {\n  // State from domain hook\n  isAnalyzing: boolean;\n  analysisResult: any | null;\n  error: string | null;\n  selectedPhotos: string[];\n\n  // Actions\n  pickImages: () => Promise<void>;\n  takePhoto: () => Promise<void>;\n  analyzePhotos: () => Promise<void>;\n  removePhoto: (index: number) => void;\n  resetAnalysis: () => void;\n  handleGoBack: () => void;\n  clearError: () => void;\n}\n\nexport const useAIPhotoAnalyzerScreen = (): UseAIPhotoAnalyzerScreenReturn => {\n  const navigation = useNavigation();\n  const {\n    analyzePhotos: analyzePhotosDomain,\n    isAnalyzing,\n    analysisResult,\n    error,\n    selectedPhotos,\n    pickImages,\n    takePhoto,\n    removePhoto,\n    resetAnalysis,\n    clearError,\n  } = useAIPhotoAnalyzer();\n\n  const analyzePhotos = async () => {\n    try {\n      await analyzePhotosDomain(selectedPhotos);\n    } catch (error) {\n      // Error handling is done in the domain hook\n    }\n  };\n\n  const handleGoBack = () => {\n    navigation.goBack();\n  };\n\n  return {\n    // State from domain hook\n    isAnalyzing,\n    analysisResult,\n    error,\n    selectedPhotos,\n\n    // Actions\n    pickImages,\n    takePhoto,\n    analyzePhotos,\n    removePhoto,\n    resetAnalysis,\n    handleGoBack,\n    clearError,\n  };\n};\n"],"mappings":";;;;;;;;AAIA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,oBAAA,GAAAD,OAAA;AAmBO,IAAME,wBAAwB,GAAAC,OAAA,CAAAD,wBAAA,GAAG,SAA3BA,wBAAwBA,CAAA,EAAyC;EAC5E,IAAME,UAAU,GAAG,IAAAC,qBAAa,EAAC,CAAC;EAClC,IAAAC,mBAAA,GAWI,IAAAC,uCAAkB,EAAC,CAAC;IAVPC,mBAAmB,GAAAF,mBAAA,CAAlCG,aAAa;IACbC,WAAW,GAAAJ,mBAAA,CAAXI,WAAW;IACXC,cAAc,GAAAL,mBAAA,CAAdK,cAAc;IACdC,KAAK,GAAAN,mBAAA,CAALM,KAAK;IACLC,cAAc,GAAAP,mBAAA,CAAdO,cAAc;IACdC,UAAU,GAAAR,mBAAA,CAAVQ,UAAU;IACVC,SAAS,GAAAT,mBAAA,CAATS,SAAS;IACTC,WAAW,GAAAV,mBAAA,CAAXU,WAAW;IACXC,aAAa,GAAAX,mBAAA,CAAbW,aAAa;IACbC,UAAU,GAAAZ,mBAAA,CAAVY,UAAU;EAGZ,IAAMT,aAAa;IAAA,IAAAU,IAAA,OAAAC,kBAAA,CAAAC,OAAA,EAAG,aAAY;MAChC,IAAI;QACF,MAAMb,mBAAmB,CAACK,cAAc,CAAC;MAC3C,CAAC,CAAC,OAAOD,KAAK,EAAE,CAEhB;IACF,CAAC;IAAA,gBANKH,aAAaA,CAAA;MAAA,OAAAU,IAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMlB;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBpB,UAAU,CAACqB,MAAM,CAAC,CAAC;EACrB,CAAC;EAED,OAAO;IAELf,WAAW,EAAXA,WAAW;IACXC,cAAc,EAAdA,cAAc;IACdC,KAAK,EAALA,KAAK;IACLC,cAAc,EAAdA,cAAc;IAGdC,UAAU,EAAVA,UAAU;IACVC,SAAS,EAATA,SAAS;IACTN,aAAa,EAAbA,aAAa;IACbO,WAAW,EAAXA,WAAW;IACXC,aAAa,EAAbA,aAAa;IACbO,YAAY,EAAZA,YAAY;IACZN,UAAU,EAAVA;EACF,CAAC;AACH,CAAC","ignoreList":[]}