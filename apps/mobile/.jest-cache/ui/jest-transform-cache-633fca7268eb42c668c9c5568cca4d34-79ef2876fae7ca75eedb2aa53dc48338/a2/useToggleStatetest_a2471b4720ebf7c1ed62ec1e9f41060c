f988b2d3f9f0910e558f55fa970ee6d6
"use strict";

var _reactNative = require("@testing-library/react-native");
var _useToggleState = require("../useToggleState");
describe("useToggleState", function () {
  it("should initialize with false by default", function () {
    var _renderHook = (0, _reactNative.renderHook)(function () {
        return (0, _useToggleState.useToggleState)();
      }),
      result = _renderHook.result;
    expect(result.current.isOn).toBe(false);
  });
  it("should initialize with provided initial value", function () {
    var _renderHook2 = (0, _reactNative.renderHook)(function () {
        return (0, _useToggleState.useToggleState)(true);
      }),
      result = _renderHook2.result;
    expect(result.current.isOn).toBe(true);
  });
  it("should toggle from false to true", function () {
    var _renderHook3 = (0, _reactNative.renderHook)(function () {
        return (0, _useToggleState.useToggleState)();
      }),
      result = _renderHook3.result;
    (0, _reactNative.act)(function () {
      result.current.toggle();
    });
    expect(result.current.isOn).toBe(true);
  });
  it("should toggle from true to false", function () {
    var _renderHook4 = (0, _reactNative.renderHook)(function () {
        return (0, _useToggleState.useToggleState)(true);
      }),
      result = _renderHook4.result;
    (0, _reactNative.act)(function () {
      result.current.toggle();
    });
    expect(result.current.isOn).toBe(false);
  });
  it("should toggle multiple times correctly", function () {
    var _renderHook5 = (0, _reactNative.renderHook)(function () {
        return (0, _useToggleState.useToggleState)();
      }),
      result = _renderHook5.result;
    (0, _reactNative.act)(function () {
      return result.current.toggle();
    });
    expect(result.current.isOn).toBe(true);
    (0, _reactNative.act)(function () {
      return result.current.toggle();
    });
    expect(result.current.isOn).toBe(false);
    (0, _reactNative.act)(function () {
      return result.current.toggle();
    });
    expect(result.current.isOn).toBe(true);
  });
  it("should return stable toggle function reference", function () {
    var _renderHook6 = (0, _reactNative.renderHook)(function () {
        return (0, _useToggleState.useToggleState)();
      }),
      result = _renderHook6.result;
    var firstToggle = result.current.toggle;
    var _renderHook7 = (0, _reactNative.renderHook)(function () {
        return (0, _useToggleState.useToggleState)();
      }),
      result2 = _renderHook7.result;
    var secondToggle = result2.current.toggle;
    expect(firstToggle).toBe(secondToggle);
  });
  it("should have setOn and setOff methods", function () {
    var _renderHook8 = (0, _reactNative.renderHook)(function () {
        return (0, _useToggleState.useToggleState)();
      }),
      result = _renderHook8.result;
    (0, _reactNative.act)(function () {
      return result.current.setOff();
    });
    expect(result.current.isOn).toBe(false);
    (0, _reactNative.act)(function () {
      return result.current.setOn();
    });
    expect(result.current.isOn).toBe(true);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3VzZVRvZ2dsZVN0YXRlIiwiZGVzY3JpYmUiLCJpdCIsIl9yZW5kZXJIb29rIiwicmVuZGVySG9vayIsInVzZVRvZ2dsZVN0YXRlIiwicmVzdWx0IiwiZXhwZWN0IiwiY3VycmVudCIsImlzT24iLCJ0b0JlIiwiX3JlbmRlckhvb2syIiwiX3JlbmRlckhvb2szIiwiYWN0IiwidG9nZ2xlIiwiX3JlbmRlckhvb2s0IiwiX3JlbmRlckhvb2s1IiwiX3JlbmRlckhvb2s2IiwiZmlyc3RUb2dnbGUiLCJfcmVuZGVySG9vazciLCJyZXN1bHQyIiwic2Vjb25kVG9nZ2xlIiwiX3JlbmRlckhvb2s4Iiwic2V0T2ZmIiwic2V0T24iXSwic291cmNlcyI6WyJ1c2VUb2dnbGVTdGF0ZS50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGplc3QtZW52aXJvbm1lbnQganNkb21cbiAqL1xuaW1wb3J0IHsgcmVuZGVySG9vaywgYWN0IH0gZnJvbSBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlXCI7XG5pbXBvcnQgeyB1c2VUb2dnbGVTdGF0ZSB9IGZyb20gXCIuLi91c2VUb2dnbGVTdGF0ZVwiO1xuXG5kZXNjcmliZShcInVzZVRvZ2dsZVN0YXRlXCIsICgpID0+IHtcbiAgaXQoXCJzaG91bGQgaW5pdGlhbGl6ZSB3aXRoIGZhbHNlIGJ5IGRlZmF1bHRcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHsgcmVzdWx0IH0gPSByZW5kZXJIb29rKCgpID0+IHVzZVRvZ2dsZVN0YXRlKCkpO1xuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5pc09uKS50b0JlKGZhbHNlKTtcbiAgfSk7XG5cbiAgaXQoXCJzaG91bGQgaW5pdGlhbGl6ZSB3aXRoIHByb3ZpZGVkIGluaXRpYWwgdmFsdWVcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHsgcmVzdWx0IH0gPSByZW5kZXJIb29rKCgpID0+IHVzZVRvZ2dsZVN0YXRlKHRydWUpKTtcbiAgICBleHBlY3QocmVzdWx0LmN1cnJlbnQuaXNPbikudG9CZSh0cnVlKTtcbiAgfSk7XG5cbiAgaXQoXCJzaG91bGQgdG9nZ2xlIGZyb20gZmFsc2UgdG8gdHJ1ZVwiLCAoKSA9PiB7XG4gICAgY29uc3QgeyByZXN1bHQgfSA9IHJlbmRlckhvb2soKCkgPT4gdXNlVG9nZ2xlU3RhdGUoKSk7XG4gICAgYWN0KCgpID0+IHtcbiAgICAgIHJlc3VsdC5jdXJyZW50LnRvZ2dsZSgpO1xuICAgIH0pO1xuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5pc09uKS50b0JlKHRydWUpO1xuICB9KTtcblxuICBpdChcInNob3VsZCB0b2dnbGUgZnJvbSB0cnVlIHRvIGZhbHNlXCIsICgpID0+IHtcbiAgICBjb25zdCB7IHJlc3VsdCB9ID0gcmVuZGVySG9vaygoKSA9PiB1c2VUb2dnbGVTdGF0ZSh0cnVlKSk7XG4gICAgYWN0KCgpID0+IHtcbiAgICAgIHJlc3VsdC5jdXJyZW50LnRvZ2dsZSgpO1xuICAgIH0pO1xuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5pc09uKS50b0JlKGZhbHNlKTtcbiAgfSk7XG5cbiAgaXQoXCJzaG91bGQgdG9nZ2xlIG11bHRpcGxlIHRpbWVzIGNvcnJlY3RseVwiLCAoKSA9PiB7XG4gICAgY29uc3QgeyByZXN1bHQgfSA9IHJlbmRlckhvb2soKCkgPT4gdXNlVG9nZ2xlU3RhdGUoKSk7XG5cbiAgICBhY3QoKCkgPT4gcmVzdWx0LmN1cnJlbnQudG9nZ2xlKCkpOyAvLyBmYWxzZSAtPiB0cnVlXG4gICAgZXhwZWN0KHJlc3VsdC5jdXJyZW50LmlzT24pLnRvQmUodHJ1ZSk7XG5cbiAgICBhY3QoKCkgPT4gcmVzdWx0LmN1cnJlbnQudG9nZ2xlKCkpOyAvLyB0cnVlIC0+IGZhbHNlXG4gICAgZXhwZWN0KHJlc3VsdC5jdXJyZW50LmlzT24pLnRvQmUoZmFsc2UpO1xuXG4gICAgYWN0KCgpID0+IHJlc3VsdC5jdXJyZW50LnRvZ2dsZSgpKTsgLy8gZmFsc2UgLT4gdHJ1ZVxuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5pc09uKS50b0JlKHRydWUpO1xuICB9KTtcblxuICBpdChcInNob3VsZCByZXR1cm4gc3RhYmxlIHRvZ2dsZSBmdW5jdGlvbiByZWZlcmVuY2VcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHsgcmVzdWx0IH0gPSByZW5kZXJIb29rKCgpID0+IHVzZVRvZ2dsZVN0YXRlKCkpO1xuICAgIGNvbnN0IGZpcnN0VG9nZ2xlID0gcmVzdWx0LmN1cnJlbnQudG9nZ2xlO1xuXG4gICAgLy8gSW4gUmVhY3QgTmF0aXZlIHRlc3RpbmcsIHJlcmVuZGVyIG5lZWRzIHRoZSBzYW1lIGNhbGxiYWNrXG4gICAgY29uc3QgeyByZXN1bHQ6IHJlc3VsdDIgfSA9IHJlbmRlckhvb2soKCkgPT4gdXNlVG9nZ2xlU3RhdGUoKSk7XG4gICAgY29uc3Qgc2Vjb25kVG9nZ2xlID0gcmVzdWx0Mi5jdXJyZW50LnRvZ2dsZTtcblxuICAgIGV4cGVjdChmaXJzdFRvZ2dsZSkudG9CZShzZWNvbmRUb2dnbGUpO1xuICB9KTtcblxuICBpdChcInNob3VsZCBoYXZlIHNldE9uIGFuZCBzZXRPZmYgbWV0aG9kc1wiLCAoKSA9PiB7XG4gICAgY29uc3QgeyByZXN1bHQgfSA9IHJlbmRlckhvb2soKCkgPT4gdXNlVG9nZ2xlU3RhdGUoKSk7XG5cbiAgICBhY3QoKCkgPT4gcmVzdWx0LmN1cnJlbnQuc2V0T2ZmKCkpO1xuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5pc09uKS50b0JlKGZhbHNlKTtcblxuICAgIGFjdCgoKSA9PiByZXN1bHQuY3VycmVudC5zZXRPbigpKTtcbiAgICBleHBlY3QocmVzdWx0LmN1cnJlbnQuaXNPbikudG9CZSh0cnVlKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7QUFHQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxlQUFBLEdBQUFELE9BQUE7QUFFQUUsUUFBUSxDQUFDLGdCQUFnQixFQUFFLFlBQU07RUFDL0JDLEVBQUUsQ0FBQyx5Q0FB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