b34033a6588543c49598406ba5d18677
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useUserIntentScreen = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _native = require("@react-navigation/native");
var _useUserIntent2 = require("../domains/onboarding/useUserIntent");
var useUserIntentScreen = exports.useUserIntentScreen = function useUserIntentScreen() {
  var navigation = (0, _native.useNavigation)();
  var _useUserIntent = (0, _useUserIntent2.useUserIntent)(),
    intents = _useUserIntent.intents,
    selectedIntent = _useUserIntent.selectedIntent,
    isNavigating = _useUserIntent.isNavigating,
    selectIntent = _useUserIntent.selectIntent,
    confirmIntent = _useUserIntent.confirmIntent,
    isValidSelection = _useUserIntent.isValidSelection;
  var handleContinue = function () {
    var _ref = (0, _asyncToGenerator2.default)(function* () {
      if (!isValidSelection) return;
      try {
        var intent = yield confirmIntent();
        navigation.navigate("PetProfileSetup", {
          userIntent: intent
        });
      } catch (error) {}
    });
    return function handleContinue() {
      return _ref.apply(this, arguments);
    };
  }();
  var handleGoBack = function handleGoBack() {
    navigation.goBack();
  };
  return {
    intents: intents,
    selectedIntent: selectedIntent,
    isNavigating: isNavigating,
    selectIntent: selectIntent,
    isValidSelection: isValidSelection,
    handleContinue: handleContinue,
    handleGoBack: handleGoBack
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbmF0aXZlIiwicmVxdWlyZSIsIl91c2VVc2VySW50ZW50MiIsInVzZVVzZXJJbnRlbnRTY3JlZW4iLCJleHBvcnRzIiwibmF2aWdhdGlvbiIsInVzZU5hdmlnYXRpb24iLCJfdXNlVXNlckludGVudCIsInVzZVVzZXJJbnRlbnQiLCJpbnRlbnRzIiwic2VsZWN0ZWRJbnRlbnQiLCJpc05hdmlnYXRpbmciLCJzZWxlY3RJbnRlbnQiLCJjb25maXJtSW50ZW50IiwiaXNWYWxpZFNlbGVjdGlvbiIsImhhbmRsZUNvbnRpbnVlIiwiX3JlZiIsIl9hc3luY1RvR2VuZXJhdG9yMiIsImRlZmF1bHQiLCJpbnRlbnQiLCJuYXZpZ2F0ZSIsInVzZXJJbnRlbnQiLCJlcnJvciIsImFwcGx5IiwiYXJndW1lbnRzIiwiaGFuZGxlR29CYWNrIiwiZ29CYWNrIl0sInNvdXJjZXMiOlsidXNlVXNlckludGVudFNjcmVlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIHVzZVVzZXJJbnRlbnRTY3JlZW4gSG9va1xuICogTWFuYWdlcyBVc2VyIEludGVudCBzY3JlZW4gd2l0aCBhbmltYXRpb25zIGFuZCBuYXZpZ2F0aW9uXG4gKi9cbmltcG9ydCB7IHVzZU5hdmlnYXRpb24gfSBmcm9tIFwiQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlXCI7XG5pbXBvcnQgeyB1c2VVc2VySW50ZW50IH0gZnJvbSBcIi4uL2RvbWFpbnMvb25ib2FyZGluZy91c2VVc2VySW50ZW50XCI7XG5pbXBvcnQgdHlwZSB7IE9uYm9hcmRpbmdTY3JlZW5Qcm9wcyB9IGZyb20gXCIuLi8uLi9uYXZpZ2F0aW9uL3R5cGVzXCI7XG5cbmludGVyZmFjZSBVc2VySW50ZW50IHtcbiAgaWQ6IHN0cmluZztcbiAgdGl0bGU6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgaWNvbjogc3RyaW5nO1xuICBjb2xvcjogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgVXNlVXNlckludGVudFNjcmVlblJldHVybiB7XG4gIC8vIEZyb20gZG9tYWluIGhvb2tcbiAgaW50ZW50czogVXNlckludGVudFtdO1xuICBzZWxlY3RlZEludGVudDogc3RyaW5nIHwgbnVsbDtcbiAgaXNOYXZpZ2F0aW5nOiBib29sZWFuO1xuICBzZWxlY3RJbnRlbnQ6IChpbnRlbnRJZDogc3RyaW5nKSA9PiB2b2lkO1xuICBpc1ZhbGlkU2VsZWN0aW9uOiBib29sZWFuO1xuXG4gIC8vIE5hdmlnYXRpb25cbiAgaGFuZGxlQ29udGludWU6ICgpID0+IFByb21pc2U8dm9pZD47XG4gIGhhbmRsZUdvQmFjazogKCkgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNvbnN0IHVzZVVzZXJJbnRlbnRTY3JlZW4gPSAoKTogVXNlVXNlckludGVudFNjcmVlblJldHVybiA9PiB7XG4gIGNvbnN0IG5hdmlnYXRpb24gPSB1c2VOYXZpZ2F0aW9uPE9uYm9hcmRpbmdTY3JlZW5Qcm9wczxcIlVzZXJJbnRlbnRcIj5bJ25hdmlnYXRpb24nXT4oKTtcblxuICBjb25zdCB7XG4gICAgaW50ZW50cyxcbiAgICBzZWxlY3RlZEludGVudCxcbiAgICBpc05hdmlnYXRpbmcsXG4gICAgc2VsZWN0SW50ZW50LFxuICAgIGNvbmZpcm1JbnRlbnQsXG4gICAgaXNWYWxpZFNlbGVjdGlvbixcbiAgfSA9IHVzZVVzZXJJbnRlbnQoKTtcblxuICBjb25zdCBoYW5kbGVDb250aW51ZSA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoIWlzVmFsaWRTZWxlY3Rpb24pIHJldHVybjtcblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBpbnRlbnQgPSBhd2FpdCBjb25maXJtSW50ZW50KCk7XG4gICAgICBuYXZpZ2F0aW9uLm5hdmlnYXRlKFwiUGV0UHJvZmlsZVNldHVwXCIsIHsgdXNlckludGVudDogaW50ZW50IH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAvLyBFcnJvciBoYW5kbGluZyBpcyBkb25lIGluIHRoZSBkb21haW4gaG9va1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVHb0JhY2sgPSAoKSA9PiB7XG4gICAgbmF2aWdhdGlvbi5nb0JhY2soKTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIC8vIEZyb20gZG9tYWluIGhvb2tcbiAgICBpbnRlbnRzLFxuICAgIHNlbGVjdGVkSW50ZW50LFxuICAgIGlzTmF2aWdhdGluZyxcbiAgICBzZWxlY3RJbnRlbnQsXG4gICAgaXNWYWxpZFNlbGVjdGlvbixcblxuICAgIC8vIE5hdmlnYXRpb25cbiAgICBoYW5kbGVDb250aW51ZSxcbiAgICBoYW5kbGVHb0JhY2ssXG4gIH07XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUlBLElBQUFBLE9BQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLGVBQUEsR0FBQUQsT0FBQTtBQXdCTyxJQUFNRSxtQkFBbUIsR0FBQUMsT0FBQSxDQUFBRCxtQkFBQSxHQUFHLFNBQXRCQSxtQkFBbUJBLENBQUEsRUFBb0M7RUFDbEUsSUFBTUUsVUFBVSxHQUFHLElBQUFDLHFCQUFhLEVBQW9ELENBQUM7RUFFckYsSUFBQUMsY0FBQSxHQU9JLElBQUFDLDZCQUFhLEVBQUMsQ0FBQztJQU5qQkMsT0FBTyxHQUFBRixjQUFBLENBQVBFLE9BQU87SUFDUEMsY0FBYyxHQUFBSCxjQUFBLENBQWRHLGNBQWM7SUFDZEMsWUFBWSxHQUFBSixjQUFBLENBQVpJLFlBQVk7SUFDWkMsWUFBWSxHQUFBTCxjQUFBLENBQVpLLFlBQVk7SUFDWkMsYUFBYSxHQUFBTixjQUFBLENBQWJNLGFBQWE7SUFDYkMsZ0JBQWdCLEdBQUFQLGNBQUEsQ0FBaEJPLGdCQUFnQjtFQUdsQixJQUFNQyxjQUFjO0lBQUEsSUFBQUMsSUFBQSxPQUFBQyxrQkFBQSxDQUFBQyxPQUFBLEVBQUcsYUFBWTtNQUNqQyxJQUFJLENBQUNKLGdCQUFnQixFQUFFO01BRXZCLElBQUk7UUFDRixJQUFNSyxNQUFNLFNBQVNOLGFBQWEsQ0FBQyxDQUFDO1FBQ3BDUixVQUFVLENBQUNlLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRTtVQUFFQyxVQUFVLEVBQUVGO1FBQU8sQ0FBQyxDQUFDO01BQ2hFLENBQUMsQ0FBQyxPQUFPRyxLQUFLLEVBQUUsQ0FFaEI7SUFDRixDQUFDO0lBQUEsZ0JBVEtQLGNBQWNBLENBQUE7TUFBQSxPQUFBQyxJQUFBLENBQUFPLEtBQUEsT0FBQUMsU0FBQTtJQUFBO0VBQUEsR0FTbkI7RUFFRCxJQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBWUEsQ0FBQSxFQUFTO0lBQ3pCcEIsVUFBVSxDQUFDcUIsTUFBTSxDQUFDLENBQUM7RUFDckIsQ0FBQztFQUVELE9BQU87SUFFTGpCLE9BQU8sRUFBUEEsT0FBTztJQUNQQyxjQUFjLEVBQWRBLGNBQWM7SUFDZEMsWUFBWSxFQUFaQSxZQUFZO0lBQ1pDLFlBQVksRUFBWkEsWUFBWTtJQUNaRSxnQkFBZ0IsRUFBaEJBLGdCQUFnQjtJQUdoQkMsY0FBYyxFQUFkQSxjQUFjO0lBQ2RVLFlBQVksRUFBWkE7RUFDRixDQUFDO0FBQ0gsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==