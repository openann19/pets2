{"version":3,"names":["_react","require","ImagePicker","_interopRequireWildcard","_reactNative","_core","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useAIPhotoAnalyzer","exports","_useState","useState","_useState2","_slicedToArray2","selectedPhotos","setSelectedPhotos","_useState3","_useState4","analysisResult","setAnalysisResult","_useState5","_useState6","isAnalyzing","setIsAnalyzing","_useState7","_useState8","error","setError","requestPermissions","useCallback","_asyncToGenerator2","_yield$ImagePicker$re","requestMediaLibraryPermissionsAsync","status","Alert","alert","text","pickImages","hasPermission","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsMultipleSelection","quality","aspect","canceled","assets","newPhotos","map","asset","uri","prev","concat","_toConsumableArray2","slice","err","logger","takePhoto","_yield$ImagePicker$re2","requestCameraPermissionsAsync","launchCameraAsync","newPhoto","analyzePhotos","_ref4","photoUris","length","errorMsg","Error","_yield$import","Promise","resolve","then","api","ai","info","photoCount","primaryBreed","breed_analysis","primary_breed","matchabilityScore","matchability_score","errorMessage","message","mockResult","confidence","secondary_breeds","breed","health_assessment","age_estimate","health_score","recommendations","photo_quality","overall_score","lighting_score","composition_score","clarity_score","ai_insights","_x","apply","arguments","removePhoto","index","filter","_","resetAnalysis","clearError"],"sources":["useAIPhotoAnalyzer.ts"],"sourcesContent":["/**\n * useAIPhotoAnalyzer Hook\n * Manages AI-powered photo analysis for pet profiles\n */\nimport { useCallback, useState } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { Alert } from \"react-native\";\nimport { logger } from \"@pawfectmatch/core\";\n\ninterface PhotoAnalysisResult {\n  breed_analysis: {\n    primary_breed: string;\n    confidence: number;\n    secondary_breeds?: Array<{ breed: string; confidence: number }>;\n  };\n  health_assessment: {\n    age_estimate: number;\n    health_score: number;\n    recommendations: string[];\n  };\n  photo_quality: {\n    overall_score: number;\n    lighting_score: number;\n    composition_score: number;\n    clarity_score: number;\n  };\n  matchability_score: number;\n  ai_insights: string[];\n}\n\ninterface UseAIPhotoAnalyzerReturn {\n  analyzePhotos: (photoUris: string[]) => Promise<PhotoAnalysisResult>;\n  isAnalyzing: boolean;\n  analysisResult: PhotoAnalysisResult | null;\n  error: string | null;\n  clearError: () => void;\n  resetAnalysis: () => void;\n  pickImages: () => Promise<void>;\n  takePhoto: () => Promise<void>;\n  selectedPhotos: string[];\n  removePhoto: (index: number) => void;\n  requestPermissions: () => Promise<boolean>;\n}\n\nexport const useAIPhotoAnalyzer = (): UseAIPhotoAnalyzerReturn => {\n  const [selectedPhotos, setSelectedPhotos] = useState<string[]>([]);\n  const [analysisResult, setAnalysisResult] =\n    useState<PhotoAnalysisResult | null>(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const requestPermissions = useCallback(async (): Promise<boolean> => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== \"granted\") {\n      Alert.alert(\n        \"Permission Required\",\n        \"We need access to your photo library to analyze pet photos.\",\n        [{ text: \"OK\" }],\n      );\n      return false;\n    }\n    return true;\n  }, []);\n\n  const pickImages = useCallback(async (): Promise<void> => {\n    const hasPermission = await requestPermissions();\n    if (!hasPermission) return;\n\n    try {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsMultipleSelection: true,\n        quality: 0.8,\n        aspect: [4, 3],\n      });\n\n      if (!result.canceled && result.assets) {\n        const newPhotos = result.assets.map((asset: { uri: string }) => asset.uri);\n        setSelectedPhotos((prev) => [...prev, ...newPhotos].slice(0, 5)); // Limit to 5 photos\n        setError(null);\n      }\n    } catch (err) {\n      logger.error(\"Error picking images:\", { error: err });\n      setError(\"Failed to select images. Please try again.\");\n    }\n  }, [requestPermissions]);\n\n  const takePhoto = useCallback(async (): Promise<void> => {\n    const { status } = await ImagePicker.requestCameraPermissionsAsync();\n    if (status !== \"granted\") {\n      Alert.alert(\n        \"Permission Required\",\n        \"We need access to your camera to take pet photos.\",\n        [{ text: \"OK\" }],\n      );\n      return;\n    }\n\n    try {\n      const result = await ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        quality: 0.8,\n        aspect: [4, 3],\n      });\n\n      if (!result.canceled && result.assets && result.assets[0]) {\n        const newPhoto = result.assets[0].uri;\n        setSelectedPhotos((prev) => [...prev, newPhoto].slice(0, 5));\n        setError(null);\n      }\n    } catch (err) {\n      logger.error(\"Error taking photo:\", { error: err });\n      setError(\"Failed to take photo. Please try again.\");\n    }\n  }, []);\n\n  const analyzePhotos = useCallback(\n    async (photoUris: string[]): Promise<PhotoAnalysisResult> => {\n      if (photoUris.length === 0) {\n        const errorMsg = \"Please select at least one photo to analyze.\";\n        setError(errorMsg);\n        throw new Error(errorMsg);\n      }\n\n      setIsAnalyzing(true);\n      setError(null);\n\n      try {\n        // Import api dynamically to avoid circular dependencies\n        const { api } = await import(\"../../../services/api\");\n        const result = await api.ai.analyzePhotos(photoUris);\n        setAnalysisResult(result);\n\n        logger.info(\"Photo analysis completed\", {\n          photoCount: photoUris.length,\n          primaryBreed: result.breed_analysis.primary_breed,\n          matchabilityScore: result.matchability_score,\n        });\n\n        return result;\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error\n            ? err.message\n            : \"Failed to analyze photos. Please try again.\";\n        setError(errorMessage);\n        logger.error(\"Photo analysis error:\", {\n          error: err,\n          photoCount: photoUris.length,\n        });\n\n        // For demo purposes, return mock analysis\n        const mockResult: PhotoAnalysisResult = {\n          breed_analysis: {\n            primary_breed: \"Golden Retriever\",\n            confidence: 0.92,\n            secondary_breeds: [\n              { breed: \"Labrador Retriever\", confidence: 0.15 },\n              { breed: \"Bernese Mountain Dog\", confidence: 0.08 },\n            ],\n          },\n          health_assessment: {\n            age_estimate: 2.5,\n            health_score: 88,\n            recommendations: [\n              \"Regular exercise is important\",\n              \"Maintain healthy weight\",\n              \"Annual veterinary checkups\",\n            ],\n          },\n          photo_quality: {\n            overall_score: 85,\n            lighting_score: 90,\n            composition_score: 80,\n            clarity_score: 88,\n          },\n          matchability_score: 92,\n          ai_insights: [\n            \"Friendly and approachable expression\",\n            \"Well-groomed coat suggests good care\",\n            \"Energetic pose indicates playful personality\",\n            \"Clear, high-quality image enhances visibility\",\n          ],\n        };\n\n        setAnalysisResult(mockResult);\n        logger.info(\"Using mock photo analysis result\");\n        return mockResult;\n      } finally {\n        setIsAnalyzing(false);\n      }\n    },\n    [],\n  );\n\n  const removePhoto = useCallback((index: number) => {\n    setSelectedPhotos((prev) => prev.filter((_, i) => i !== index));\n  }, []);\n\n  const resetAnalysis = useCallback(() => {\n    setSelectedPhotos([]);\n    setAnalysisResult(null);\n    setError(null);\n  }, []);\n\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  return {\n    analyzePhotos,\n    isAnalyzing,\n    analysisResult,\n    error,\n    clearError,\n    resetAnalysis,\n    pickImages,\n    takePhoto,\n    selectedPhotos,\n    removePhoto,\n    requestPermissions,\n  };\n};\n"],"mappings":"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","ignoreList":[]}