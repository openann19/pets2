{"version":3,"names":["Haptics","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","haptic","exports","tap","impactAsync","ImpactFeedbackStyle","Light","catch","confirm","Medium","super","Heavy","error","notificationAsync","NotificationFeedbackType","Error","success","Success","selection","selectionAsync"],"sources":["haptics.ts"],"sourcesContent":["/**\n * ðŸŽ¯ HAPTIC FEEDBACK SYSTEM\n * Single source of truth for all haptic feedback\n * Maps to Material Design haptic patterns\n */\n\nimport * as Haptics from 'expo-haptics';\n\n/**\n * Haptic feedback utilities\n * Use these exclusively - no direct Haptics.* calls\n * All methods include error handling to prevent crashes\n */\nexport const haptic = {\n  // Light impact - for subtle interactions (tabs, buttons, minor selections)\n  tap: () => Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light).catch(() => {}),\n  \n  // Medium impact - for confirmations (like, send message)\n  confirm: () => Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium).catch(() => {}),\n  \n  // Heavy impact - for super-actions (super-like, purchase)\n  super: () => Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Heavy).catch(() => {}),\n  \n  // Notification feedback for errors\n  error: () => Haptics.notificationAsync(Haptics.NotificationFeedbackType.Error).catch(() => {}),\n  \n  // Notification feedback for success\n  success: () => Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success).catch(() => {}),\n  \n  // Selection feedback (pickers, toggles, wheel)\n  selection: () => Haptics.selectionAsync().catch(() => {}),\n};\n\n/**\n * Haptic usage map\n * \n * tap: Tab switches, button taps, minor selections\n * confirm: Like, send, confirm actions\n * super: Super-like, purchase, premium actions\n * error: Error states, failed actions\n * success: Success states, completed actions\n * selection: Picker changes, toggle switches, wheel scrolling\n */\n\n"],"mappings":";;;;;;AAMA,IAAAA,OAAA,GAAAC,uBAAA,CAAAC,OAAA;AAAwC,SAAAD,wBAAAE,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAJ,uBAAA,YAAAA,wBAAAE,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,GAAA,IAAAd,CAAA,gBAAAc,GAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,GAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,GAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,GAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,GAAA,IAAAd,CAAA,CAAAc,GAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAOjC,IAAMmB,MAAM,GAAAC,OAAA,CAAAD,MAAA,GAAG;EAEpBE,GAAG,EAAE,SAALA,GAAGA,CAAA;IAAA,OAAQzB,OAAO,CAAC0B,WAAW,CAAC1B,OAAO,CAAC2B,mBAAmB,CAACC,KAAK,CAAC,CAACC,KAAK,CAAC,YAAM,CAAC,CAAC,CAAC;EAAA;EAGjFC,OAAO,EAAE,SAATA,OAAOA,CAAA;IAAA,OAAQ9B,OAAO,CAAC0B,WAAW,CAAC1B,OAAO,CAAC2B,mBAAmB,CAACI,MAAM,CAAC,CAACF,KAAK,CAAC,YAAM,CAAC,CAAC,CAAC;EAAA;EAGtFG,KAAK,EAAE,SAAPA,MAAKA,CAAA;IAAA,OAAQhC,OAAO,CAAC0B,WAAW,CAAC1B,OAAO,CAAC2B,mBAAmB,CAACM,KAAK,CAAC,CAACJ,KAAK,CAAC,YAAM,CAAC,CAAC,CAAC;EAAA;EAGnFK,KAAK,EAAE,SAAPA,KAAKA,CAAA;IAAA,OAAQlC,OAAO,CAACmC,iBAAiB,CAACnC,OAAO,CAACoC,wBAAwB,CAACC,KAAK,CAAC,CAACR,KAAK,CAAC,YAAM,CAAC,CAAC,CAAC;EAAA;EAG9FS,OAAO,EAAE,SAATA,OAAOA,CAAA;IAAA,OAAQtC,OAAO,CAACmC,iBAAiB,CAACnC,OAAO,CAACoC,wBAAwB,CAACG,OAAO,CAAC,CAACV,KAAK,CAAC,YAAM,CAAC,CAAC,CAAC;EAAA;EAGlGW,SAAS,EAAE,SAAXA,SAASA,CAAA;IAAA,OAAQxC,OAAO,CAACyC,cAAc,CAAC,CAAC,CAACZ,KAAK,CAAC,YAAM,CAAC,CAAC,CAAC;EAAA;AAC3D,CAAC","ignoreList":[]}