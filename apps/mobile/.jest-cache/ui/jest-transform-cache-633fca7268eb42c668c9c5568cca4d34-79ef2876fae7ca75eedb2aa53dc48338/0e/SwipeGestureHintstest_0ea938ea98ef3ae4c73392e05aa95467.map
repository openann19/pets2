{"version":3,"names":["_getJestObj","mock","default","getItem","mockGetItem","setItem","mockSetItem","logger","error","jest","fn","info","_interopRequireDefault","require","_react","_reactNative","_SwipeGestureHints","_jsxRuntime","_require","describe","mockOnDismiss","beforeEach","clearAllMocks","useFakeTimers","mockResolvedValue","undefined","afterEach","runOnlyPendingTimers","useRealTimers","it","_render","render","jsx","SwipeGestureHints","initialDismissed","queryByText","expect","toBeNull","_render2","getByText","toBeTruthy","_render3","getByTestId","act","runAllTicks","toHaveBeenCalledWith","HINTS_STORAGE_KEY","_render4","onDismiss","fireEvent","press","_render5","button","not","toThrow","_render6","_render7","toHaveBeenCalledTimes","_render8","unmount"],"sources":["SwipeGestureHints.test.tsx"],"sourcesContent":["/**\n * SwipeGestureHints Tests\n * Focused tests with proper async handling\n */\n\nimport React from 'react';\nimport { render, fireEvent, act } from '@testing-library/react-native';\nimport { SwipeGestureHints, HINTS_STORAGE_KEY } from '../SwipeGestureHints';\n\n// Mock AsyncStorage\nconst mockGetItem = jest.fn();\nconst mockSetItem = jest.fn();\n\njest.mock('@react-native-async-storage/async-storage', () => ({\n  default: {\n    getItem: mockGetItem,\n    setItem: mockSetItem,\n  },\n}));\n\n// Mock logger\njest.mock('@pawfectmatch/core', () => ({\n  logger: {\n    error: jest.fn(),\n    info: jest.fn(),\n  },\n}));\n\ndescribe('SwipeGestureHints', () => {\n  const mockOnDismiss = jest.fn();\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    jest.useFakeTimers();\n    mockGetItem.mockResolvedValue(null);\n    mockSetItem.mockResolvedValue(undefined);\n  });\n\n  afterEach(() => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n    jest.clearAllMocks();\n  });\n\n  describe('Visibility Control', () => {\n    it('should not render when initialDismissed is true', () => {\n      const { queryByText } = render(\n        <SwipeGestureHints initialDismissed={true} />\n      );\n      expect(queryByText('Swipe left to pass')).toBeNull();\n    });\n\n    it('should render when initialDismissed is false', () => {\n      const { getByText } = render(\n        <SwipeGestureHints initialDismissed={false} />\n      );\n      expect(getByText('Swipe left to pass')).toBeTruthy();\n      expect(getByText('Swipe right to like')).toBeTruthy();\n      expect(getByText('Swipe up to super like')).toBeTruthy();\n    });\n\n    it('should display dismiss button when visible', () => {\n      const { getByTestId } = render(\n        <SwipeGestureHints initialDismissed={false} />\n      );\n      expect(getByTestId('dismiss-button')).toBeTruthy();\n    });\n  });\n\n  describe('Storage Integration', () => {\n    it('should check AsyncStorage on mount', () => {\n      render(<SwipeGestureHints />);\n      \n      act(() => {\n        jest.runAllTicks();\n      });\n      \n      expect(mockGetItem).toHaveBeenCalledWith(HINTS_STORAGE_KEY);\n    });\n  });\n\n  describe('Manual Dismiss', () => {\n    it('should call onDismiss when button is pressed', () => {\n      const { getByTestId } = render(\n        <SwipeGestureHints onDismiss={mockOnDismiss} initialDismissed={false} />\n      );\n\n      fireEvent.press(getByTestId('dismiss-button'));\n\n      act(() => {\n        jest.runAllTicks();\n      });\n\n      expect(mockSetItem).toHaveBeenCalledWith(HINTS_STORAGE_KEY, 'true');\n    });\n\n    it('should not throw when onDismiss is not provided', () => {\n      const { getByTestId } = render(\n        <SwipeGestureHints initialDismissed={false} />\n      );\n\n      const button = getByTestId('dismiss-button');\n      expect(() => fireEvent.press(button)).not.toThrow();\n      \n      act(() => {\n        jest.runAllTicks();\n      });\n\n      expect(mockSetItem).toHaveBeenCalledWith(HINTS_STORAGE_KEY, 'true');\n    });\n\n    it('should persist dismissal to AsyncStorage', () => {\n      const { getByTestId } = render(\n        <SwipeGestureHints initialDismissed={false} />\n      );\n      \n      fireEvent.press(getByTestId('dismiss-button'));\n\n      act(() => {\n        jest.runAllTicks();\n      });\n\n      expect(mockSetItem).toHaveBeenCalledWith(HINTS_STORAGE_KEY, 'true');\n    });\n\n    it('should handle rapid dismiss attempts', () => {\n      const { getByTestId } = render(\n        <SwipeGestureHints initialDismissed={false} />\n      );\n\n      const button = getByTestId('dismiss-button');\n      \n      // First press dismisses, subsequent presses don't throw\n      fireEvent.press(button);\n      \n      act(() => {\n        jest.runAllTicks();\n      });\n\n      // Should have called setItem once\n      expect(mockSetItem).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('Auto Dismiss', () => {\n    it('should schedule auto-dismiss timeout when not using initialDismissed', () => {\n      // When using initialDismissed=false, the timeout is set up\n      const { unmount } = render(<SwipeGestureHints initialDismissed={false} />);\n      \n      // The timeout should be cleared on unmount\n      unmount();\n      \n      // Component should handle cleanup gracefully\n      expect(() => {}).not.toThrow();\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}