{"version":3,"names":["_getJestObj","mock","useAuthStore","jest","fn","_core","require","_reactHooks","_socket","_useSocket","_require2","mockSocket","on","emit","removeAllListeners","disconnect","connected","id","mockIo","io","mockUseAuthStore","describe","beforeEach","clearAllMocks","mockReturnValue","user","_id","email","firstName","lastName","accessToken","it","renderHook","useSocket","expect","toHaveBeenCalledWith","objectContaining","auth","token","userId","transports","timeout","reconnection","reconnectionAttempts","reconnectionDelay","skip","mockClear","originalEnv","process","env","EXPO_PUBLIC_SOCKET_URL","resetModules","_require","useSocketWithEnv","any","Object","_renderHook","result","not","toHaveBeenCalled","current","toBeNull","Function","_mockSocket$on$mock$c","connectHandler","calls","find","call","act","_mockSocket$on$mock$c2","disconnectHandler","_mockSocket$on$mock$c3","consoleSpy","spyOn","console","mockImplementation","errorHandler","Error","mockRestore","_mockSocket$on$mock$c4","authErrorHandler","_renderHook2","unmount","_renderHook3","rerender","toHaveBeenCalledTimes","_renderHook4","useSocketWithStatus","socket","toBe","isConnected","error","_mockSocket$on$mock$c5","_renderHook5","_mockSocket$on$mock$c6","_mockSocket$on$mock$c7","_renderHook6","_mockSocket$on$mock$c8","_renderHook7","_renderHook8","useSocketEmit","success","data","_renderHook9","_renderHook0","undefined"],"sources":["useSocket.test.ts"],"sourcesContent":["import { useAuthStore } from \"@pawfectmatch/core\";\nimport { act, renderHook } from \"@testing-library/react-hooks\";\nimport { io } from \"socket.io-client\";\n\nimport { useSocket, useSocketEmit, useSocketWithStatus } from \"../useSocket\";\n\n// Mock dependencies\njest.mock(\"socket.io-client\");\njest.mock(\"@pawfectmatch/core\", () => ({\n  useAuthStore: jest.fn(),\n}));\n\nconst mockSocket = {\n  on: jest.fn(),\n  emit: jest.fn(),\n  removeAllListeners: jest.fn(),\n  disconnect: jest.fn(),\n  connected: true,\n  id: \"test-socket-id\",\n};\n\nconst mockIo = io as jest.MockedFunction<typeof io>;\nconst mockUseAuthStore = useAuthStore as jest.MockedFunction<\n  typeof useAuthStore\n>;\n\ndescribe(\"useSocket\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockIo.mockReturnValue(mockSocket as any);\n    mockUseAuthStore.mockReturnValue({\n      user: {\n        _id: \"test-user-id\",\n        email: \"test@example.com\",\n        firstName: \"Test\",\n        lastName: \"User\",\n      },\n      accessToken: \"test-access-token\",\n    } as any);\n  });\n\n  it(\"should create socket connection with correct configuration\", () => {\n    renderHook(() => useSocket());\n\n    expect(mockIo).toHaveBeenCalledWith(\n      \"http://localhost:3001\",\n      expect.objectContaining({\n        auth: {\n          token: \"test-access-token\",\n          userId: \"test-user-id\",\n        },\n        transports: [\"websocket\"],\n        timeout: 10000,\n        reconnection: true,\n        reconnectionAttempts: 5,\n        reconnectionDelay: 1000,\n      }),\n    );\n  });\n\n  it.skip(\"should use environment variable for socket URL if available\", () => {\n    // Clear previous calls\n    mockIo.mockClear();\n\n    // Mock the environment variable at the module level\n    const originalEnv = process.env.EXPO_PUBLIC_SOCKET_URL;\n    process.env.EXPO_PUBLIC_SOCKET_URL = \"ws://custom-url:3001\";\n\n    // Re-import the hook to pick up the new environment variable\n    jest.resetModules();\n    const { useSocket: useSocketWithEnv } = require(\"../useSocket\");\n\n    renderHook(() => useSocketWithEnv());\n\n    expect(mockIo).toHaveBeenCalledWith(\n      \"ws://custom-url:3001\",\n      expect.objectContaining({\n        auth: expect.any(Object),\n        transports: [\"websocket\"],\n        timeout: 10000,\n        reconnection: true,\n        reconnectionAttempts: 5,\n        reconnectionDelay: 1000,\n      }),\n    );\n\n    // Restore original environment\n    process.env.EXPO_PUBLIC_SOCKET_URL = originalEnv;\n    jest.resetModules();\n  });\n\n  it(\"should not create socket if user is not authenticated\", () => {\n    mockUseAuthStore.mockReturnValue({\n      user: null,\n      accessToken: null,\n    } as any);\n\n    const { result } = renderHook(() => useSocket());\n\n    expect(mockIo).not.toHaveBeenCalled();\n    expect(result.current).toBeNull();\n  });\n\n  it(\"should set up event listeners correctly\", () => {\n    renderHook(() => useSocket());\n\n    expect(mockSocket.on).toHaveBeenCalledWith(\"connect\", expect.any(Function));\n    expect(mockSocket.on).toHaveBeenCalledWith(\n      \"disconnect\",\n      expect.any(Function),\n    );\n    expect(mockSocket.on).toHaveBeenCalledWith(\n      \"connect_error\",\n      expect.any(Function),\n    );\n    expect(mockSocket.on).toHaveBeenCalledWith(\"error\", expect.any(Function));\n    expect(mockSocket.on).toHaveBeenCalledWith(\n      \"auth_error\",\n      expect.any(Function),\n    );\n    expect(mockSocket.on).toHaveBeenCalledWith(\n      \"user_online\",\n      expect.any(Function),\n    );\n    expect(mockSocket.on).toHaveBeenCalledWith(\n      \"user_offline\",\n      expect.any(Function),\n    );\n    expect(mockSocket.on).toHaveBeenCalledWith(\n      \"new_match\",\n      expect.any(Function),\n    );\n    expect(mockSocket.on).toHaveBeenCalledWith(\n      \"new_message\",\n      expect.any(Function),\n    );\n    expect(mockSocket.on).toHaveBeenCalledWith(\n      \"incoming_call\",\n      expect.any(Function),\n    );\n  });\n\n  it(\"should handle connect event\", () => {\n    renderHook(() => useSocket());\n\n    const connectHandler = mockSocket.on.mock.calls.find(\n      (call) => call[0] === \"connect\",\n    )?.[1];\n\n    if (connectHandler) {\n      act(() => {\n        connectHandler();\n      });\n    }\n\n    // Should log connection\n    expect(mockSocket.on).toHaveBeenCalledWith(\"connect\", expect.any(Function));\n  });\n\n  it(\"should handle disconnect event\", () => {\n    renderHook(() => useSocket());\n\n    const disconnectHandler = mockSocket.on.mock.calls.find(\n      (call) => call[0] === \"disconnect\",\n    )?.[1];\n\n    if (disconnectHandler) {\n      act(() => {\n        disconnectHandler(\"transport close\");\n      });\n    }\n\n    // Should log disconnection\n    expect(mockSocket.on).toHaveBeenCalledWith(\n      \"disconnect\",\n      expect.any(Function),\n    );\n  });\n\n  it(\"should handle connection errors\", () => {\n    const consoleSpy = jest.spyOn(console, \"error\").mockImplementation();\n\n    renderHook(() => useSocket());\n\n    const errorHandler = mockSocket.on.mock.calls.find(\n      (call) => call[0] === \"connect_error\",\n    )?.[1];\n\n    if (errorHandler) {\n      act(() => {\n        errorHandler(new Error(\"Connection failed\"));\n      });\n    }\n\n    expect(consoleSpy).toHaveBeenCalledWith(\n      \"Socket connection error:\",\n      expect.any(Error),\n    );\n    consoleSpy.mockRestore();\n  });\n\n  it(\"should handle auth errors\", () => {\n    const consoleSpy = jest.spyOn(console, \"error\").mockImplementation();\n\n    renderHook(() => useSocket());\n\n    const authErrorHandler = mockSocket.on.mock.calls.find(\n      (call) => call[0] === \"auth_error\",\n    )?.[1];\n\n    if (authErrorHandler) {\n      act(() => {\n        authErrorHandler(\"Authentication failed\");\n      });\n    }\n\n    expect(consoleSpy).toHaveBeenCalledWith(\n      \"Socket auth error:\",\n      \"Authentication failed\",\n    );\n    expect(mockSocket.disconnect).toHaveBeenCalled();\n    consoleSpy.mockRestore();\n  });\n\n  it(\"should clean up on unmount\", () => {\n    const { unmount } = renderHook(() => useSocket());\n\n    unmount();\n\n    expect(mockSocket.removeAllListeners).toHaveBeenCalled();\n    expect(mockSocket.disconnect).toHaveBeenCalled();\n  });\n\n  it(\"should reconnect when auth changes\", () => {\n    const { rerender } = renderHook(() => useSocket());\n\n    // Change auth state\n    mockUseAuthStore.mockReturnValue({\n      user: {\n        _id: \"new-user-id\",\n        email: \"new@example.com\",\n        firstName: \"New\",\n        lastName: \"User\",\n      },\n      accessToken: \"new-access-token\",\n    } as any);\n\n    rerender();\n\n    // Should create new socket connection\n    expect(mockIo).toHaveBeenCalledTimes(2);\n  });\n});\n\ndescribe(\"useSocketWithStatus\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockIo.mockReturnValue(mockSocket as any);\n    mockUseAuthStore.mockReturnValue({\n      user: { _id: \"test-user-id\" },\n      accessToken: \"test-access-token\",\n    } as any);\n  });\n\n  it(\"should return socket with connection status\", () => {\n    const { result } = renderHook(() => useSocketWithStatus());\n\n    expect(result.current.socket).toBe(mockSocket);\n    expect(result.current.isConnected).toBe(false); // Initially false\n    expect(result.current.error).toBeNull();\n  });\n\n  it(\"should update connection status on connect\", () => {\n    const { result } = renderHook(() => useSocketWithStatus());\n\n    const connectHandler = mockSocket.on.mock.calls.find(\n      (call) => call[0] === \"connect\",\n    )?.[1];\n\n    if (connectHandler) {\n      act(() => {\n        connectHandler();\n      });\n    }\n\n    expect(result.current.isConnected).toBe(true);\n    expect(result.current.error).toBeNull();\n  });\n\n  it(\"should update connection status on disconnect\", () => {\n    const { result } = renderHook(() => useSocketWithStatus());\n\n    // First connect\n    const connectHandler = mockSocket.on.mock.calls.find(\n      (call) => call[0] === \"connect\",\n    )?.[1];\n\n    if (connectHandler) {\n      act(() => {\n        connectHandler();\n      });\n    }\n\n    // Then disconnect\n    const disconnectHandler = mockSocket.on.mock.calls.find(\n      (call) => call[0] === \"disconnect\",\n    )?.[1];\n\n    if (disconnectHandler) {\n      act(() => {\n        disconnectHandler(\"transport close\");\n      });\n    }\n\n    expect(result.current.isConnected).toBe(false);\n  });\n\n  it(\"should update error status on connection error\", () => {\n    const { result } = renderHook(() => useSocketWithStatus());\n\n    const errorHandler = mockSocket.on.mock.calls.find(\n      (call) => call[0] === \"connect_error\",\n    )?.[1];\n\n    if (errorHandler) {\n      act(() => {\n        errorHandler(new Error(\"Connection failed\"));\n      });\n    }\n\n    expect(result.current.error).toBe(\"Connection failed\");\n    expect(result.current.isConnected).toBe(false);\n  });\n});\n\ndescribe(\"useSocketEmit\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockIo.mockReturnValue(mockSocket as any);\n    mockUseAuthStore.mockReturnValue({\n      user: { _id: \"test-user-id\" },\n      accessToken: \"test-access-token\",\n    } as any);\n  });\n\n  it(\"should emit events when socket is connected\", () => {\n    const { result } = renderHook(() => useSocketEmit());\n\n    const success = result.current(\"test-event\", { data: \"test\" });\n\n    expect(success).toBe(true);\n    expect(mockSocket.emit).toHaveBeenCalledWith(\"test-event\", {\n      data: \"test\",\n    });\n  });\n\n  it(\"should not emit when socket is not connected\", () => {\n    mockSocket.connected = false;\n    const consoleSpy = jest.spyOn(console, \"warn\").mockImplementation();\n\n    const { result } = renderHook(() => useSocketEmit());\n\n    const success = result.current(\"test-event\", { data: \"test\" });\n\n    expect(success).toBe(false);\n    expect(mockSocket.emit).not.toHaveBeenCalled();\n    expect(consoleSpy).toHaveBeenCalledWith(\n      \"Socket not connected, cannot emit:\",\n      \"test-event\",\n    );\n\n    consoleSpy.mockRestore();\n  });\n\n  it(\"should emit without data parameter\", () => {\n    // Ensure socket is connected\n    mockSocket.connected = true;\n\n    const { result } = renderHook(() => useSocketEmit());\n\n    const success = result.current(\"test-event\");\n\n    expect(success).toBe(true);\n    expect(mockSocket.emit).toHaveBeenCalledWith(\"test-event\", undefined);\n  });\n});\n"],"mappings":"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","ignoreList":[]}