{"version":3,"names":["_core","require","_asyncStorage","_interopRequireDefault","SecureStore","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","createSecureStorage","exports","getItem","_getItem","_asyncToGenerator2","name","value","getItemAsync","error","message","Error","logger","_x","apply","arguments","setItem","_setItem","setItemAsync","err","_x2","_x3","removeItem","_removeItem","deleteItemAsync","_x4","createAsyncStorage","_getItem2","AsyncStorage","_x5","_setItem2","_x6","_x7","_removeItem2","_x8"],"sources":["secureStorage.ts"],"sourcesContent":["import { logger } from \"@pawfectmatch/core\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as SecureStore from \"expo-secure-store\";\nimport type { StateStorage } from \"zustand/middleware\";\n\n/**\n * Secure storage adapter for Zustand persist middleware\n * Uses expo-secure-store instead of AsyncStorage for sensitive data like JWT tokens\n * Addresses M-SEC-01: JWT stored in AsyncStorage security vulnerability\n */\nexport const createSecureStorage = (): StateStorage => {\n  return {\n    getItem: async (name: string): Promise<string | null> => {\n      try {\n        const value = await SecureStore.getItemAsync(name);\n        return value;\n      } catch (error: unknown) {\n        const message =\n          error instanceof Error ? error.message : \"Unknown error\";\n        logger.error(\"secure-storage.getItem.failed\", { name, message });\n        return null;\n      }\n    },\n    setItem: async (name: string, value: string): Promise<void> => {\n      try {\n        await SecureStore.setItemAsync(name, value);\n      } catch (error: unknown) {\n        const err =\n          error instanceof Error\n            ? error\n            : new Error(\"Failed to set secure item\");\n        logger.error(\"secure-storage.setItem.failed\", {\n          name,\n          message: err.message,\n        });\n        throw err;\n      }\n    },\n    removeItem: async (name: string): Promise<void> => {\n      try {\n        await SecureStore.deleteItemAsync(name);\n      } catch (error: unknown) {\n        const err =\n          error instanceof Error\n            ? error\n            : new Error(\"Failed to remove secure item\");\n        logger.error(\"secure-storage.removeItem.failed\", {\n          name,\n          message: err.message,\n        });\n        throw err;\n      }\n    },\n  };\n};\n\n/**\n * Secure storage for non-sensitive data that can use AsyncStorage\n * Used for preferences, theme settings, etc.\n */\nexport const createAsyncStorage = (): StateStorage => {\n  return {\n    getItem: async (name: string): Promise<string | null> => {\n      try {\n        const value = await AsyncStorage.getItem(name);\n        return value;\n      } catch (error: unknown) {\n        const message =\n          error instanceof Error ? error.message : \"Unknown error\";\n        logger.error(\"async-storage.getItem.failed\", { name, message });\n        return null;\n      }\n    },\n    setItem: async (name: string, value: string): Promise<void> => {\n      try {\n        await AsyncStorage.setItem(name, value);\n      } catch (error: unknown) {\n        const err =\n          error instanceof Error\n            ? error\n            : new Error(\"Failed to set async item\");\n        logger.error(\"async-storage.setItem.failed\", {\n          name,\n          message: err.message,\n        });\n        throw err;\n      }\n    },\n    removeItem: async (name: string): Promise<void> => {\n      try {\n        await AsyncStorage.removeItem(name);\n      } catch (error: unknown) {\n        const err =\n          error instanceof Error\n            ? error\n            : new Error(\"Failed to remove async item\");\n        logger.error(\"async-storage.removeItem.failed\", {\n          name,\n          message: err.message,\n        });\n        throw err;\n      }\n    },\n  };\n};\n"],"mappings":"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","ignoreList":[]}