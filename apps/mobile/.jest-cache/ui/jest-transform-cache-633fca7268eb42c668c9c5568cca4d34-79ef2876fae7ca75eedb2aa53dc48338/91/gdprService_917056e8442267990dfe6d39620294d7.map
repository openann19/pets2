{"version":3,"names":["_api","require","_core","deleteAccount","exports","_ref","_asyncToGenerator2","default","data","response","request","method","body","password","reason","feedback","error","logger","Error","String","errorObj","errorCode","code","errorMessage","message","success","_x","apply","arguments","cancelDeletion","_ref2","errorInstance","getAccountStatus","_ref3","status","exportUserData","_ref4","dataRequest","length","undefined","format","includeMessages","includeMatches","includeProfileData","includePreferences","downloadExport","_ref5","exportId","exportStatus","fetch","url","ok","blob","_x2","_default"],"sources":["gdprService.ts"],"sourcesContent":["/**\n * GDPR Service\n * Handles GDPR compliance operations: account deletion, data export, grace period management\n */\n\nimport { request } from './api';\nimport { logger } from '@pawfectmatch/core';\n\nexport interface GDPRError {\n  code: 'INVALID_PASSWORD' | 'ALREADY_DELETING' | 'RATE_LIMIT' | 'SERVER_ERROR';\n  message: string;\n}\n\nexport interface DeleteAccountRequest {\n  password: string;\n  reason?: string;\n  feedback?: string;\n}\n\nexport interface DeleteAccountResponse {\n  success: boolean;\n  message: string;\n  deletionId?: string;\n  gracePeriodEndsAt?: string;\n  canCancel?: boolean;\n  error?: string;\n}\n\nexport interface AccountStatusResponse {\n  success: boolean;\n  status: 'not-found' | 'pending' | 'processing' | 'completed';\n  scheduledDeletionDate?: string;\n  daysRemaining?: number;\n  canCancel?: boolean;\n  requestId?: string;\n}\n\nexport interface DataExportRequest {\n  format?: 'json' | 'csv';\n  includeMessages?: boolean;\n  includeMatches?: boolean;\n  includeProfileData?: boolean;\n  includePreferences?: boolean;\n}\n\nexport interface DataExportResponse {\n  success: boolean;\n  exportId?: string;\n  url?: string;\n  estimatedTime?: string;\n  estimatedCompletion?: string;\n  message?: string;\n  format?: string;\n  expiresAt?: string;\n  exportData?: {\n    profile?: unknown;\n    pets?: unknown[];\n    matches?: unknown[];\n    messages?: unknown[];\n    preferences?: unknown;\n  };\n  error?: string;\n}\n\n/**\n * Delete user account\n * GDPR Article 17 - Right to Erasure\n */\nexport const deleteAccount = async (\n  data: DeleteAccountRequest\n): Promise<DeleteAccountResponse> => {\n  try {\n    const response = await request<DeleteAccountResponse>(\n      '/api/users/delete-account',\n      {\n        method: 'DELETE',\n        body: {\n          password: data.password,\n          reason: data.reason,\n          feedback: data.feedback,\n        },\n      }\n    );\n\n    return response;\n  } catch (error: unknown) {\n    logger.error('Delete account error:', error instanceof Error ? error : new Error(String(error)));\n    \n    // Extract error code if available\n    const errorObj = error as { code?: string; message?: string };\n    const errorCode = errorObj?.code || 'SERVER_ERROR';\n    const errorMessage = errorObj?.message || 'Failed to delete account';\n    \n    return {\n      success: false,\n      message: errorMessage,\n      error: errorCode,\n    };\n  }\n};\n\n/**\n * Cancel account deletion within grace period\n */\nexport const cancelDeletion = async (): Promise<{\n  success: boolean;\n  message?: string;\n}> => {\n  try {\n    const response = await request<{ success: boolean; message?: string }>(\n      '/api/users/cancel-deletion',\n      { method: 'POST' }\n    );\n\n    return response;\n  } catch (error: unknown) {\n    const errorInstance = error instanceof Error ? error : new Error(String(error));\n    logger.error('Cancel deletion error:', errorInstance);\n    \n    const errorMessage = error instanceof Error ? error.message : 'Failed to cancel deletion';\n    \n    return {\n      success: false,\n      message: errorMessage,\n    };\n  }\n};\n\n/**\n * Get account deletion status\n */\nexport const getAccountStatus = async (): Promise<AccountStatusResponse> => {\n  try {\n    const response = await request<AccountStatusResponse>(\n      '/api/account/status',\n      { method: 'GET' }\n    );\n\n    return response;\n  } catch (error: unknown) {\n    logger.error('Get account status error:', error instanceof Error ? error : new Error(String(error)));\n    \n    return {\n      success: false,\n      status: 'not-found',\n    };\n  }\n};\n\n/**\n * Export user data\n * GDPR Article 20 - Right to Data Portability\n */\nexport const exportUserData = async (\n  dataRequest: DataExportRequest = {}\n): Promise<DataExportResponse> => {\n  try {\n    const response = await request<DataExportResponse>(\n      '/api/users/request-export',\n      {\n        method: 'POST',\n        body: {\n          format: dataRequest.format || 'json',\n          includeMessages: dataRequest.includeMessages !== false,\n          includeMatches: dataRequest.includeMatches !== false,\n          includeProfileData: dataRequest.includeProfileData !== false,\n          includePreferences: dataRequest.includePreferences !== false,\n        },\n      }\n    );\n\n    return response;\n  } catch (error: unknown) {\n    logger.error('Export user data error:', error instanceof Error ? error : new Error(String(error)));\n    \n    return {\n      success: false,\n      message: 'Failed to export data',\n      error: 'SERVER_ERROR',\n    };\n  }\n};\n\n/**\n * Download exported data\n */\nexport const downloadExport = async (exportId: string): Promise<Blob> => {\n  try {\n    // First get the export URL from the status\n    const exportStatus = await request<{ url: string }>(\n      `/api/users/export-data?exportId=${exportId}`,\n      {\n        method: 'GET',\n      }\n    );\n\n    // Download the actual file from the URL\n    const response = await fetch(exportStatus.url);\n    if (!response.ok) {\n      throw new Error('Failed to download export');\n    }\n    \n    return await response.blob();\n  } catch (error: unknown) {\n    logger.error('Download export error:', error instanceof Error ? error : new Error(String(error)));\n    throw error instanceof Error ? error : new Error(String(error));\n  }\n};\n\nexport default {\n  deleteAccount,\n  cancelDeletion,\n  getAccountStatus,\n  exportUserData,\n  downloadExport,\n};\n"],"mappings":"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","ignoreList":[]}