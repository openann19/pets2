{"version":3,"names":["Blob","require","binaryToBase64","FormData","convertRequestBody","body","string","blob","data","formData","getParts","ArrayBuffer","isView","base64","module","exports"],"sources":["convertRequestBody.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst Blob = require('../Blob/Blob');\nconst binaryToBase64 = require('../Utilities/binaryToBase64');\nconst FormData = require('./FormData');\n\nexport type RequestBody =\n  | string\n  | Blob\n  | FormData\n  | {uri: string, ...}\n  | ArrayBuffer\n  | $ArrayBufferView;\n\nfunction convertRequestBody(body: RequestBody): Object {\n  if (typeof body === 'string') {\n    return {string: body};\n  }\n  if (body instanceof Blob) {\n    return {blob: body.data};\n  }\n  if (body instanceof FormData) {\n    return {formData: body.getParts()};\n  }\n  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {\n    /* $FlowFixMe[incompatible-call] : no way to assert that 'body' is indeed\n     * an ArrayBufferView */\n    return {base64: binaryToBase64(body)};\n  }\n  return body;\n}\n\nmodule.exports = convertRequestBody;\n"],"mappings":"AAUA,YAAY;;AAEZ,IAAMA,IAAI,GAAGC,OAAO,eAAe,CAAC;AACpC,IAAMC,cAAc,GAAGD,OAAO,8BAA8B,CAAC;AAC7D,IAAME,QAAQ,GAAGF,OAAO,aAAa,CAAC;AAUtC,SAASG,kBAAkBA,CAACC,IAAiB,EAAU;EACrD,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MAACC,MAAM,EAAED;IAAI,CAAC;EACvB;EACA,IAAIA,IAAI,YAAYL,IAAI,EAAE;IACxB,OAAO;MAACO,IAAI,EAAEF,IAAI,CAACG;IAAI,CAAC;EAC1B;EACA,IAAIH,IAAI,YAAYF,QAAQ,EAAE;IAC5B,OAAO;MAACM,QAAQ,EAAEJ,IAAI,CAACK,QAAQ,CAAC;IAAC,CAAC;EACpC;EACA,IAAIL,IAAI,YAAYM,WAAW,IAAIA,WAAW,CAACC,MAAM,CAACP,IAAI,CAAC,EAAE;IAG3D,OAAO;MAACQ,MAAM,EAAEX,cAAc,CAACG,IAAI;IAAC,CAAC;EACvC;EACA,OAAOA,IAAI;AACb;AAEAS,MAAM,CAACC,OAAO,GAAGX,kBAAkB","ignoreList":[]}