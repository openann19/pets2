{"version":3,"names":["_core","require","_react","_reactNative","_api","useMyPetsScreen","_useState","useState","_useState2","_slicedToArray2","default","pets","setPets","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","refreshing","setRefreshing","_useState7","_useState8","deleteConfirm","setDeleteConfirm","loadPets","useCallback","_asyncToGenerator2","response","matchesAPI","getUserPets","error","logger","Alert","alert","onRefresh","getSpeciesEmoji","species","_emojis$species","emojis","dog","cat","bird","rabbit","other","getIntentColor","intent","_colors$intent","colors","adoption","mating","playdate","all","getIntentLabel","_labels$intent","labels","handleDeletePet","petId","text","style","onPress","_onPress","deletePet","prev","filter","pet","_id","apply","arguments"],"sources":["useMyPetsScreen.ts"],"sourcesContent":["import { logger } from \"@pawfectmatch/core\";\nimport type { Pet } from \"@pawfectmatch/core\";\nimport { useCallback, useState } from \"react\";\nimport { Alert } from \"react-native\";\nimport { matchesAPI } from \"../../services/api\";\n\nexport function useMyPetsScreen() {\n  const [pets, setPets] = useState<Pet[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [deleteConfirm, setDeleteConfirm] = useState<string | null>(null);\n\n  const loadPets = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await matchesAPI.getUserPets();\n      setPets(response || []);\n    } catch (error) {\n      logger.error(\"Error loading pets:\", { error });\n      Alert.alert(\"Connection Error\", \"Network error\");\n      setPets([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await loadPets();\n    setRefreshing(false);\n  }, [loadPets]);\n\n  const getSpeciesEmoji = useCallback((species: string) => {\n    const emojis: Record<string, string> = {\n      dog: \"🐕\",\n      cat: \"🐱\",\n      bird: \"🐦\",\n      rabbit: \"🐰\",\n      other: \"🐾\",\n    };\n    return emojis[species] ?? \"🐾\";\n  }, []);\n\n  const getIntentColor = useCallback((intent: string) => {\n    const colors: Record<string, string> = {\n      adoption: \"#10B981\",\n      mating: \"#EC4899\",\n      playdate: \"#3B82F6\",\n      all: \"#8B5CF6\",\n    };\n    return colors[intent] ?? \"#6B7280\";\n  }, []);\n\n  const getIntentLabel = useCallback((intent: string) => {\n    const labels: Record<string, string> = {\n      adoption: \"For Adoption\",\n      mating: \"Seeking Mates\",\n      playdate: \"Playdates\",\n      all: \"Open to All\",\n    };\n    return labels[intent] ?? intent;\n  }, []);\n\n  const handleDeletePet = useCallback(\n    (petId: string) => {\n      Alert.alert(\n        \"Delete Pet Profile\",\n        \"Are you sure you want to delete this pet profile? This action cannot be undone.\",\n        [\n          { text: \"Cancel\", style: \"cancel\" },\n          {\n            text: \"Delete\",\n            style: \"destructive\",\n            onPress: async () => {\n              try {\n                await matchesAPI.deletePet(petId);\n                setPets((prev) => prev.filter((pet) => pet._id !== petId));\n                Alert.alert(\"Success\", \"Pet profile deleted successfully\");\n              } catch (error) {\n                Alert.alert(\n                  \"Error\",\n                  \"Failed to delete pet profile. Please try again.\",\n                );\n              }\n            },\n          },\n        ],\n      );\n    },\n    [],\n  );\n\n  return {\n    pets,\n    isLoading,\n    refreshing,\n    deleteConfirm,\n    setDeleteConfirm,\n    loadPets,\n    onRefresh,\n    getSpeciesEmoji,\n    getIntentColor,\n    getIntentLabel,\n    handleDeletePet,\n  };\n}\n\n"],"mappings":"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","ignoreList":[]}