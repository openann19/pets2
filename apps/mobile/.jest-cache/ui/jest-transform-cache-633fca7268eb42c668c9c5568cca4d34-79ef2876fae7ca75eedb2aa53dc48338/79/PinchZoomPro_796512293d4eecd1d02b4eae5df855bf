c1f26f2379ba1a141f938dbea369daf1
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PinchZoomPro = PinchZoomPro;
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeGestureHandler = require("react-native-gesture-handler");
var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
var Haptics = _interopRequireWildcard(require("expo-haptics"));
var _elastic = require("../../utils/elastic");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var _Dimensions$get = _reactNative.Dimensions.get("window"),
  SCREEN_WIDTH = _Dimensions$get.width;
var _worklet_1267397540959_init_data = {
  code: "function anonymous() {\n  const {\n    lastScale,\n    scale,\n    haptics,\n    runOnJS,\n    trigger\n  } = this._closure;\n  lastScale.value = scale.value;\n  if (haptics) runOnJS(trigger)(\"Light\");\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"lastScale\",\"scale\",\"haptics\",\"runOnJS\",\"trigger\",\"_closure\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx\"],\"mappings\":\"AAgEa,SAAAA,SAAMA,CAAA;EAAA;IAAAC,SAAA;IAAAC,KAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EACbL,SAAS,CAACM,KAAK,GAAGL,KAAK,CAACK,KAAK;EAC7B,IAAIJ,OAAO,EAAEC,OAAO,CAACC,OAAO,CAAC,CAAC,OAAO,CAAC;AACxC\",\"ignoreList\":[]}"
};
var _worklet_12962998627236_init_data = {
  code: "function anonymous(e) {\n  const {\n    lastScale,\n    rubberScale,\n    minScale,\n    maxScale,\n    scale,\n    onScaleChange,\n    runOnJS\n  } = this._closure;\n  const raw = lastScale.value * e.scale;\n  const s = rubberScale(raw, minScale, maxScale, 0.42);\n  scale.value = s;\n  if (onScaleChange) runOnJS(onScaleChange)(s);\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"e\",\"lastScale\",\"rubberScale\",\"minScale\",\"maxScale\",\"scale\",\"onScaleChange\",\"runOnJS\",\"_closure\",\"raw\",\"value\",\"s\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx\"],\"mappings\":\"AAoEe,SAACA,SAAKA,CAAAC,CAAA;EAAA;IAAAC,SAAA;IAAAC,WAAA;IAAAC,QAAA;IAAAC,QAAA;IAAAC,KAAA;IAAAC,aAAA;IAAAC;EAAA,SAAAC,QAAA;EAEf,MAAMC,GAAG,GAAGR,SAAS,CAACS,KAAK,GAAGV,CAAC,CAACK,KAAK;EAErC,MAAMM,CAAC,GAAGT,WAAW,CAACO,GAAG,EAAEN,QAAQ,EAAEC,QAAQ,EAAE,IAAI,CAAC;EACpDC,KAAK,CAACK,KAAK,GAAGC,CAAC;EACf,IAAIL,aAAa,EAAEC,OAAO,CAACD,aAAa,CAAC,CAACK,CAAC,CAAC;AAC9C\",\"ignoreList\":[]}"
};
var _worklet_6702583258887_init_data = {
  code: "function anonymous() {\n  const {\n    scale,\n    minScale,\n    withSpring,\n    maxScale,\n    haptics,\n    runOnJS,\n    trigger\n  } = this._closure;\n  if (scale.value < minScale) scale.value = withSpring(minScale);\n  if (scale.value > maxScale) scale.value = withSpring(maxScale);\n  if (haptics) runOnJS(trigger)(\"Medium\");\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"scale\",\"minScale\",\"withSpring\",\"maxScale\",\"haptics\",\"runOnJS\",\"trigger\",\"_closure\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx\"],\"mappings\":\"AA4EW,SAAAA,SAAMA,CAAA;EAAA;IAAAC,KAAA;IAAAC,QAAA;IAAAC,UAAA;IAAAC,QAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAEX,IAAIP,KAAK,CAACQ,KAAK,GAAGP,QAAQ,EAAED,KAAK,CAACQ,KAAK,GAAGN,UAAU,CAACD,QAAQ,CAAC;EAC9D,IAAID,KAAK,CAACQ,KAAK,GAAGL,QAAQ,EAAEH,KAAK,CAACQ,KAAK,GAAGN,UAAU,CAACC,QAAQ,CAAC;EAC9D,IAAIC,OAAO,EAAEC,OAAO,CAACC,OAAO,CAAC,CAAC,QAAQ,CAAC;AACzC\",\"ignoreList\":[]}"
};
var _worklet_178480105268_init_data = {
  code: "function anonymous() {\n  const {\n    lastTx,\n    tx,\n    lastTy,\n    ty\n  } = this._closure;\n  lastTx.value = tx.value;\n  lastTy.value = ty.value;\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"lastTx\",\"tx\",\"lastTy\",\"ty\",\"_closure\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx\"],\"mappings\":\"AAqFa,SAAAA,SAAMA,CAAA;EAAA;IAAAC,MAAA;IAAAC,EAAA;IAAAC,MAAA;IAAAC;EAAA,SAAAC,QAAA;EACbJ,MAAM,CAACK,KAAK,GAAGJ,EAAE,CAACI,KAAK;EACvBH,MAAM,CAACG,KAAK,GAAGF,EAAE,CAACE,KAAK;AACzB\",\"ignoreList\":[]}"
};
var _worklet_15239965989834_init_data = {
  code: "function anonymous(e) {\n  const {\n    width,\n    scale,\n    height,\n    lastTx,\n    lastTy,\n    tx,\n    rubberClamp,\n    ty\n  } = this._closure;\n  const maxX = width * (scale.value - 1) / 2;\n  const maxY = height * (scale.value - 1) / 2;\n  const nx = lastTx.value + e.translationX;\n  const ny = lastTy.value + e.translationY;\n  tx.value = rubberClamp(nx, -maxX, maxX, 0.5);\n  ty.value = rubberClamp(ny, -maxY, maxY, 0.5);\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"e\",\"width\",\"scale\",\"height\",\"lastTx\",\"lastTy\",\"tx\",\"rubberClamp\",\"ty\",\"_closure\",\"maxX\",\"value\",\"maxY\",\"nx\",\"translationX\",\"ny\",\"translationY\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx\"],\"mappings\":\"AAyFe,SAACA,SAAKA,CAAAC,CAAA;EAAA;IAAAC,KAAA;IAAAC,KAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,EAAA;IAAAC,WAAA;IAAAC;EAAA,SAAAC,QAAA;EAEf,MAAMC,IAAI,GAAIT,KAAK,IAAIC,KAAK,CAACS,KAAK,GAAG,CAAC,CAAC,GAAI,CAAC;EAC5C,MAAMC,IAAI,GAAIT,MAAM,IAAID,KAAK,CAACS,KAAK,GAAG,CAAC,CAAC,GAAI,CAAC;EAG7C,MAAME,EAAE,GAAGT,MAAM,CAACO,KAAK,GAAGX,CAAC,CAACc,YAAY;EACxC,MAAMC,EAAE,GAAGV,MAAM,CAACM,KAAK,GAAGX,CAAC,CAACgB,YAAY;EAGxCV,EAAE,CAACK,KAAK,GAAGJ,WAAW,CAACM,EAAE,EAAE,CAACH,IAAI,EAAEA,IAAI,EAAE,GAAG,CAAC;EAC5CF,EAAE,CAACG,KAAK,GAAGJ,WAAW,CAACQ,EAAE,EAAE,CAACH,IAAI,EAAEA,IAAI,EAAE,GAAG,CAAC;AAC9C\",\"ignoreList\":[]}"
};
var _worklet_15091395185955_init_data = {
  code: "function anonymous(e) {\n  const {\n    scale,\n    minScale,\n    enableMomentum,\n    width,\n    height,\n    tx,\n    withDecay,\n    ty,\n    withSpring,\n    hardClamp\n  } = this._closure;\n  const zoomed = scale.value > minScale + 0.001;\n  if (enableMomentum && zoomed) {\n    const maxX = width * (scale.value - 1) / 2;\n    const maxY = height * (scale.value - 1) / 2;\n    tx.value = withDecay({\n      velocity: e.velocityX,\n      clamp: [-maxX, maxX]\n    });\n    ty.value = withDecay({\n      velocity: e.velocityY,\n      clamp: [-maxY, maxY]\n    });\n  } else {\n    const maxX = width * (scale.value - 1) / 2;\n    const maxY = height * (scale.value - 1) / 2;\n    tx.value = withSpring(hardClamp(tx.value, -maxX, maxX));\n    ty.value = withSpring(hardClamp(ty.value, -maxY, maxY));\n  }\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"e\",\"scale\",\"minScale\",\"enableMomentum\",\"width\",\"height\",\"tx\",\"withDecay\",\"ty\",\"withSpring\",\"hardClamp\",\"_closure\",\"zoomed\",\"value\",\"maxX\",\"maxY\",\"velocity\",\"velocityX\",\"clamp\",\"velocityY\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx\"],\"mappings\":\"AAsGY,SAACA,SAAKA,CAAAC,CAAA;EAAA;IAAAC,KAAA;IAAAC,QAAA;IAAAC,cAAA;IAAAC,KAAA;IAAAC,MAAA;IAAAC,EAAA;IAAAC,SAAA;IAAAC,EAAA;IAAAC,UAAA;IAAAC;EAAA,SAAAC,QAAA;EAEZ,MAAMC,MAAM,GAAGX,KAAK,CAACY,KAAK,GAAGX,QAAQ,GAAG,KAAK;EAC7C,IAAIC,cAAc,IAAIS,MAAM,EAAE;IAC5B,MAAME,IAAI,GAAIV,KAAK,IAAIH,KAAK,CAACY,KAAK,GAAG,CAAC,CAAC,GAAI,CAAC;IAC5C,MAAME,IAAI,GAAIV,MAAM,IAAIJ,KAAK,CAACY,KAAK,GAAG,CAAC,CAAC,GAAI,CAAC;IAC7CP,EAAE,CAACO,KAAK,GAAGN,SAAS,CAAC;MACnBS,QAAQ,EAAEhB,CAAC,CAACiB,SAAS;MACrBC,KAAK,EAAE,CAAC,CAACJ,IAAI,EAAEA,IAAI;IACrB,CAAC,CAAC;IACFN,EAAE,CAACK,KAAK,GAAGN,SAAS,CAAC;MACnBS,QAAQ,EAAEhB,CAAC,CAACmB,SAAS;MACrBD,KAAK,EAAE,CAAC,CAACH,IAAI,EAAEA,IAAI;IACrB,CAAC,CAAC;EACJ,CAAC,MAAM;IAEL,MAAMD,IAAI,GAAIV,KAAK,IAAIH,KAAK,CAACY,KAAK,GAAG,CAAC,CAAC,GAAI,CAAC;IAC5C,MAAME,IAAI,GAAIV,MAAM,IAAIJ,KAAK,CAACY,KAAK,GAAG,CAAC,CAAC,GAAI,CAAC;IAC7CP,EAAE,CAACO,KAAK,GAAGJ,UAAU,CAACC,SAAS,CAACJ,EAAE,CAACO,KAAK,EAAE,CAACC,IAAI,EAAEA,IAAI,CAAC,CAAC;IACvDN,EAAE,CAACK,KAAK,GAAGJ,UAAU,CAACC,SAAS,CAACF,EAAE,CAACK,KAAK,EAAE,CAACE,IAAI,EAAEA,IAAI,CAAC,CAAC;EACzD;AACF\",\"ignoreList\":[]}"
};
var _worklet_11971310123882_init_data = {
  code: "function anonymous(_e, success) {\n  const {\n    scale,\n    maxScale,\n    withSpring,\n    tx,\n    ty\n  } = this._closure;\n  if (!success) return;\n  const target = scale.value > 1.001 ? 1 : Math.min(2, maxScale);\n  scale.value = withSpring(target, {\n    damping: 18,\n    stiffness: 230\n  });\n  tx.value = withSpring(0);\n  ty.value = withSpring(0);\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"_e\",\"success\",\"scale\",\"maxScale\",\"withSpring\",\"tx\",\"ty\",\"_closure\",\"target\",\"value\",\"Math\",\"min\",\"damping\",\"stiffness\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx\"],\"mappings\":\"AAiIW,SAACA,SAAIA,CAAAC,EAAA,EAAOC,OAAK;EAAA;IAAAC,KAAA;IAAAC,QAAA;IAAAC,UAAA;IAAAC,EAAA;IAAAC;EAAA,SAAAC,QAAA;EAEtB,IAAI,CAACN,OAAO,EAAE;EAEd,MAAMO,MAAM,GAAGN,KAAK,CAACO,KAAK,GAAG,KAAK,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAER,QAAQ,CAAC;EAC9DD,KAAK,CAACO,KAAK,GAAGL,UAAU,CAACI,MAAM,EAAE;IAAEI,OAAO,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAI,CAAC,CAAC;EACjER,EAAE,CAACI,KAAK,GAAGL,UAAU,CAAC,CAAC,CAAC;EACxBE,EAAE,CAACG,KAAK,GAAGL,UAAU,CAAC,CAAC,CAAC;AAC1B\",\"ignoreList\":[]}"
};
var _worklet_10279186787711_init_data = {
  code: "function anonymous() {\n  const {\n    tx,\n    ty,\n    scale\n  } = this._closure;\n  return {\n    transform: [{\n      translateX: tx.value\n    }, {\n      translateY: ty.value\n    }, {\n      scale: scale.value\n    }]\n  };\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"tx\",\"ty\",\"scale\",\"_closure\",\"transform\",\"translateX\",\"value\",\"translateY\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/PinchZoomPro.tsx\"],\"mappings\":\"AA6IsC,SAAAA,UAAA;EAAA;IAAAC,EAAA;IAAAC,EAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,OAAO;IACzCC,SAAS,EAAE,CACT;MAAEC,UAAU,EAAEL,EAAE,CAACM;IAAM,CAAC,EACxB;MAAEC,UAAU,EAAEN,EAAE,CAACK;IAAM,CAAC,EACxB;MAAEJ,KAAK,EAAEA,KAAK,CAACI;IAAM,CAAC;EAE1B,CAAC;AAAA\",\"ignoreList\":[]}"
};
function PinchZoomPro(_ref) {
  var source = _ref.source,
    _ref$width = _ref.width,
    width = _ref$width === void 0 ? SCREEN_WIDTH : _ref$width,
    _ref$height = _ref.height,
    height = _ref$height === void 0 ? 320 : _ref$height,
    _ref$initialScale = _ref.initialScale,
    initialScale = _ref$initialScale === void 0 ? 1 : _ref$initialScale,
    _ref$minScale = _ref.minScale,
    minScale = _ref$minScale === void 0 ? 1 : _ref$minScale,
    _ref$maxScale = _ref.maxScale,
    maxScale = _ref$maxScale === void 0 ? 4 : _ref$maxScale,
    _ref$enableMomentum = _ref.enableMomentum,
    enableMomentum = _ref$enableMomentum === void 0 ? true : _ref$enableMomentum,
    onScaleChange = _ref.onScaleChange,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$resizeMode = _ref.resizeMode,
    resizeMode = _ref$resizeMode === void 0 ? "cover" : _ref$resizeMode,
    _ref$backgroundColor = _ref.backgroundColor,
    backgroundColor = _ref$backgroundColor === void 0 ? "#0a0a0a" : _ref$backgroundColor,
    _ref$haptics = _ref.haptics,
    haptics = _ref$haptics === void 0 ? true : _ref$haptics;
  var scale = (0, _reactNativeReanimated.useSharedValue)(initialScale);
  var lastScale = (0, _reactNativeReanimated.useSharedValue)(initialScale);
  var tx = (0, _reactNativeReanimated.useSharedValue)(0);
  var ty = (0, _reactNativeReanimated.useSharedValue)(0);
  var lastTx = (0, _reactNativeReanimated.useSharedValue)(0);
  var lastTy = (0, _reactNativeReanimated.useSharedValue)(0);
  var trigger = (0, _react.useCallback)(function (style) {
    if (!haptics) return;
    var map = {
      Light: Haptics.ImpactFeedbackStyle.Light,
      Medium: Haptics.ImpactFeedbackStyle.Medium,
      Heavy: Haptics.ImpactFeedbackStyle.Heavy
    };
    Haptics.impactAsync(map[style]);
  }, [haptics]);
  var pinch = _reactNativeGestureHandler.Gesture.Pinch().enabled(!disabled).onStart(function () {
    var _e = [new global.Error(), -6, -27];
    var _f = function _f() {
      lastScale.value = scale.value;
      if (haptics) (0, _reactNativeReanimated.runOnJS)(trigger)("Light");
    };
    _f._closure = {
      lastScale: lastScale,
      scale: scale,
      haptics: haptics,
      runOnJS: _reactNativeReanimated.runOnJS,
      trigger: trigger
    };
    _f.__initData = _worklet_1267397540959_init_data;
    _f.__workletHash = 1267397540959;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }()).onUpdate(function () {
    var _e = [new global.Error(), -8, -27];
    var _f = function _f(e) {
      var raw = lastScale.value * e.scale;
      var s = (0, _elastic.rubberScale)(raw, minScale, maxScale, 0.42);
      scale.value = s;
      if (onScaleChange) (0, _reactNativeReanimated.runOnJS)(onScaleChange)(s);
    };
    _f._closure = {
      lastScale: lastScale,
      rubberScale: _elastic.rubberScale,
      minScale: minScale,
      maxScale: maxScale,
      scale: scale,
      onScaleChange: onScaleChange,
      runOnJS: _reactNativeReanimated.runOnJS
    };
    _f.__initData = _worklet_12962998627236_init_data;
    _f.__workletHash = 12962998627236;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }()).onEnd(function () {
    var _e = [new global.Error(), -8, -27];
    var _f = function _f() {
      if (scale.value < minScale) scale.value = (0, _reactNativeReanimated.withSpring)(minScale);
      if (scale.value > maxScale) scale.value = (0, _reactNativeReanimated.withSpring)(maxScale);
      if (haptics) (0, _reactNativeReanimated.runOnJS)(trigger)("Medium");
    };
    _f._closure = {
      scale: scale,
      minScale: minScale,
      withSpring: _reactNativeReanimated.withSpring,
      maxScale: maxScale,
      haptics: haptics,
      runOnJS: _reactNativeReanimated.runOnJS,
      trigger: trigger
    };
    _f.__initData = _worklet_6702583258887_init_data;
    _f.__workletHash = 6702583258887;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  var pan = _reactNativeGestureHandler.Gesture.Pan().enabled(!disabled).onStart(function () {
    var _e = [new global.Error(), -5, -27];
    var _f = function _f() {
      lastTx.value = tx.value;
      lastTy.value = ty.value;
    };
    _f._closure = {
      lastTx: lastTx,
      tx: tx,
      lastTy: lastTy,
      ty: ty
    };
    _f.__initData = _worklet_178480105268_init_data;
    _f.__workletHash = 178480105268;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }()).onUpdate(function () {
    var _e = [new global.Error(), -9, -27];
    var _f = function _f(e) {
      var maxX = width * (scale.value - 1) / 2;
      var maxY = height * (scale.value - 1) / 2;
      var nx = lastTx.value + e.translationX;
      var ny = lastTy.value + e.translationY;
      tx.value = (0, _elastic.rubberClamp)(nx, -maxX, maxX, 0.5);
      ty.value = (0, _elastic.rubberClamp)(ny, -maxY, maxY, 0.5);
    };
    _f._closure = {
      width: width,
      scale: scale,
      height: height,
      lastTx: lastTx,
      lastTy: lastTy,
      tx: tx,
      rubberClamp: _elastic.rubberClamp,
      ty: ty
    };
    _f.__initData = _worklet_15239965989834_init_data;
    _f.__workletHash = 15239965989834;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }()).onEnd(function () {
    var _e = [new global.Error(), -11, -27];
    var _f = function _f(e) {
      var zoomed = scale.value > minScale + 0.001;
      if (enableMomentum && zoomed) {
        var maxX = width * (scale.value - 1) / 2;
        var maxY = height * (scale.value - 1) / 2;
        tx.value = (0, _reactNativeReanimated.withDecay)({
          velocity: e.velocityX,
          clamp: [-maxX, maxX]
        });
        ty.value = (0, _reactNativeReanimated.withDecay)({
          velocity: e.velocityY,
          clamp: [-maxY, maxY]
        });
      } else {
        var _maxX = width * (scale.value - 1) / 2;
        var _maxY = height * (scale.value - 1) / 2;
        tx.value = (0, _reactNativeReanimated.withSpring)((0, _elastic.hardClamp)(tx.value, -_maxX, _maxX));
        ty.value = (0, _reactNativeReanimated.withSpring)((0, _elastic.hardClamp)(ty.value, -_maxY, _maxY));
      }
    };
    _f._closure = {
      scale: scale,
      minScale: minScale,
      enableMomentum: enableMomentum,
      width: width,
      height: height,
      tx: tx,
      withDecay: _reactNativeReanimated.withDecay,
      ty: ty,
      withSpring: _reactNativeReanimated.withSpring,
      hardClamp: _elastic.hardClamp
    };
    _f.__initData = _worklet_15091395185955_init_data;
    _f.__workletHash = 15091395185955;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  var doubleTap = _reactNativeGestureHandler.Gesture.Tap().numberOfTaps(2).enabled(!disabled).maxDelay(280).onEnd(function () {
    var _e = [new global.Error(), -6, -27];
    var _f = function _f(_e, success) {
      if (!success) return;
      var target = scale.value > 1.001 ? 1 : Math.min(2, maxScale);
      scale.value = (0, _reactNativeReanimated.withSpring)(target, {
        damping: 18,
        stiffness: 230
      });
      tx.value = (0, _reactNativeReanimated.withSpring)(0);
      ty.value = (0, _reactNativeReanimated.withSpring)(0);
    };
    _f._closure = {
      scale: scale,
      maxScale: maxScale,
      withSpring: _reactNativeReanimated.withSpring,
      tx: tx,
      ty: ty
    };
    _f.__initData = _worklet_11971310123882_init_data;
    _f.__workletHash = 11971310123882;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  var composed = _reactNativeGestureHandler.Gesture.Simultaneous(pinch, pan, doubleTap);
  var imageStyle = (0, _reactNativeReanimated.useAnimatedStyle)(function () {
    var _e = [new global.Error(), -4, -27];
    var _f = function _f() {
      return {
        transform: [{
          translateX: tx.value
        }, {
          translateY: ty.value
        }, {
          scale: scale.value
        }]
      };
    };
    _f._closure = {
      tx: tx,
      ty: ty,
      scale: scale
    };
    _f.__initData = _worklet_10279186787711_init_data;
    _f.__workletHash = 10279186787711;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  return (0, _jsxRuntime.jsx)(_reactNativeGestureHandler.GestureDetector, {
    gesture: composed,
    children: (0, _jsxRuntime.jsx)(_reactNativeReanimated.default.View, {
      style: [styles.container, {
        width: width,
        height: height,
        backgroundColor: backgroundColor
      }],
      children: (0, _jsxRuntime.jsx)(_reactNativeReanimated.default.View, {
        style: [styles.center, imageStyle],
        children: (0, _jsxRuntime.jsx)(_reactNative.Image, {
          source: source,
          style: {
            width: width,
            height: height,
            backgroundColor: "#111"
          },
          resizeMode: resizeMode
        })
      })
    })
  });
}
var styles = _reactNative.StyleSheet.create({
  container: {
    overflow: "hidden",
    borderRadius: 12
  },
  center: {
    alignItems: "center",
    justifyContent: "center"
  }
});
var _default = exports.default = PinchZoomPro;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,