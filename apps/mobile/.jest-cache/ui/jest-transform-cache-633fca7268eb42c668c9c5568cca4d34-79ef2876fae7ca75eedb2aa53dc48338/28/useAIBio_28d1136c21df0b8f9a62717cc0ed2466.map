{"version":3,"names":["_react","require","_core","_api","useAIBio","exports","_useState","useState","_useState2","_slicedToArray2","default","isGenerating","setIsGenerating","_useState3","_useState4","lastGeneratedBio","setLastGeneratedBio","_useState5","_useState6","error","setError","_useState7","_useState8","bioHistory","setBioHistory","generateBio","useCallback","_ref","_asyncToGenerator2","params","petName","trim","errorMsg","Error","_bioData$keywords","_bioData$sentiment","_bioData$matchScore","bioData","api","ai","generatedBio","bio","keywords","sentiment","score","label","matchScore","addToHistory","logger","info","keywordsCount","length","err","fallbackBio","breed","age","join","tone","_x","apply","arguments","prev","concat","_toConsumableArray2","slice","clearHistory","clearError"],"sources":["useAIBio.ts"],"sourcesContent":["/**\n * useAIBio Hook\n * Manages AI-powered bio generation and analysis\n */\nimport { useCallback, useState } from \"react\";\nimport { Alert } from \"react-native\";\nimport { logger } from \"@pawfectmatch/core\";\nimport { api } from \"../../../services/api\";\n\ninterface GeneratedBio {\n  bio: string;\n  keywords: string[];\n  sentiment: {\n    score: number;\n    label: string;\n  };\n  matchScore: number;\n}\n\ninterface BioGenerationParams {\n  petName: string;\n  keywords: string[];\n  tone: \"playful\" | \"professional\" | \"casual\" | \"romantic\" | \"funny\";\n  length: \"short\" | \"medium\" | \"long\";\n  petType: string;\n  age: number;\n  breed: string;\n}\n\ninterface UseAIBioReturn {\n  generateBio: (params: BioGenerationParams) => Promise<GeneratedBio>;\n  isGenerating: boolean;\n  lastGeneratedBio: GeneratedBio | null;\n  error: string | null;\n  clearError: () => void;\n  bioHistory: GeneratedBio[];\n  addToHistory: (bio: GeneratedBio) => void;\n  clearHistory: () => void;\n}\n\nexport const useAIBio = (): UseAIBioReturn => {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [lastGeneratedBio, setLastGeneratedBio] = useState<GeneratedBio | null>(\n    null,\n  );\n  const [error, setError] = useState<string | null>(null);\n  const [bioHistory, setBioHistory] = useState<GeneratedBio[]>([]);\n\n  const generateBio = useCallback(\n    async (params: BioGenerationParams): Promise<GeneratedBio> => {\n      if (!params.petName.trim()) {\n        const errorMsg = \"Pet name is required\";\n        setError(errorMsg);\n        throw new Error(errorMsg);\n      }\n\n      setIsGenerating(true);\n      setError(null);\n\n      try {\n        const bioData = await api.ai.generateBio(params);\n\n        const generatedBio: GeneratedBio = {\n          bio: bioData.bio,\n          keywords: bioData.keywords ?? [],\n          sentiment: bioData.sentiment ?? {\n            score: 0.8,\n            label: \"positive\",\n          },\n          matchScore: bioData.matchScore ?? 85,\n        };\n\n        setLastGeneratedBio(generatedBio);\n        addToHistory(generatedBio);\n\n        logger.info(\"AI bio generated successfully\", {\n          petName: params.petName,\n          keywordsCount: generatedBio.keywords.length,\n          matchScore: generatedBio.matchScore,\n        });\n\n        return generatedBio;\n      } catch (err) {\n        // Fallback generation for demo\n        const fallbackBio: GeneratedBio = {\n          bio: `Meet ${params.petName}! This adorable ${params.breed || \"furry friend\"} is ${params.age || \"young\"} and full of personality. ${params.keywords.join(\", \") || \"They love making new friends\"} and would be perfect for someone looking for a ${params.tone} companion. Ready for adventures and lots of love! 🐾`,\n          keywords: [\"friendly\", \"playful\", \"loving\", \"adventurous\"],\n          sentiment: { score: 0.9, label: \"positive\" },\n          matchScore: 88,\n        };\n\n        setLastGeneratedBio(fallbackBio);\n        addToHistory(fallbackBio);\n\n        logger.info(\"Using fallback bio generation\", {\n          error: err,\n          petName: params.petName,\n        });\n        return fallbackBio;\n      } finally {\n        setIsGenerating(false);\n      }\n    },\n    [],\n  );\n\n  const addToHistory = useCallback((bio: GeneratedBio) => {\n    setBioHistory((prev) => [bio, ...prev.slice(0, 4)]); // Keep last 5\n  }, []);\n\n  const clearHistory = useCallback(() => {\n    setBioHistory([]);\n  }, []);\n\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  return {\n    generateBio,\n    isGenerating,\n    lastGeneratedBio,\n    error,\n    clearError,\n    bioHistory,\n    addToHistory,\n    clearHistory,\n  };\n};\n"],"mappings":";;;;;;;;;;AAIA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,IAAA,GAAAF,OAAA;AAiCO,IAAMG,QAAQ,GAAAC,OAAA,CAAAD,QAAA,GAAG,SAAXA,QAAQA,CAAA,EAAyB;EAC5C,IAAAE,SAAA,GAAwC,IAAAC,eAAQ,EAAC,KAAK,CAAC;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAAhDK,YAAY,GAAAH,UAAA;IAAEI,eAAe,GAAAJ,UAAA;EACpC,IAAAK,UAAA,GAAgD,IAAAN,eAAQ,EACtD,IACF,CAAC;IAAAO,UAAA,OAAAL,eAAA,CAAAC,OAAA,EAAAG,UAAA;IAFME,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAG5C,IAAAG,UAAA,GAA0B,IAAAV,eAAQ,EAAgB,IAAI,CAAC;IAAAW,UAAA,OAAAT,eAAA,CAAAC,OAAA,EAAAO,UAAA;IAAhDE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAAoC,IAAAd,eAAQ,EAAiB,EAAE,CAAC;IAAAe,UAAA,OAAAb,eAAA,CAAAC,OAAA,EAAAW,UAAA;IAAzDE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhC,IAAMG,WAAW,GAAG,IAAAC,kBAAW;IAAA,IAAAC,IAAA,OAAAC,kBAAA,CAAAlB,OAAA,EAC7B,WAAOmB,MAA2B,EAA4B;MAC5D,IAAI,CAACA,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,EAAE;QAC1B,IAAMC,QAAQ,GAAG,sBAAsB;QACvCZ,QAAQ,CAACY,QAAQ,CAAC;QAClB,MAAM,IAAIC,KAAK,CAACD,QAAQ,CAAC;MAC3B;MAEApB,eAAe,CAAC,IAAI,CAAC;MACrBQ,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QAAA,IAAAc,iBAAA,EAAAC,kBAAA,EAAAC,mBAAA;QACF,IAAMC,OAAO,SAASC,QAAG,CAACC,EAAE,CAACd,WAAW,CAACI,MAAM,CAAC;QAEhD,IAAMW,YAA0B,GAAG;UACjCC,GAAG,EAAEJ,OAAO,CAACI,GAAG;UAChBC,QAAQ,GAAAR,iBAAA,GAAEG,OAAO,CAACK,QAAQ,YAAAR,iBAAA,GAAI,EAAE;UAChCS,SAAS,GAAAR,kBAAA,GAAEE,OAAO,CAACM,SAAS,YAAAR,kBAAA,GAAI;YAC9BS,KAAK,EAAE,GAAG;YACVC,KAAK,EAAE;UACT,CAAC;UACDC,UAAU,GAAAV,mBAAA,GAAEC,OAAO,CAACS,UAAU,YAAAV,mBAAA,GAAI;QACpC,CAAC;QAEDpB,mBAAmB,CAACwB,YAAY,CAAC;QACjCO,YAAY,CAACP,YAAY,CAAC;QAE1BQ,YAAM,CAACC,IAAI,CAAC,+BAA+B,EAAE;UAC3CnB,OAAO,EAAED,MAAM,CAACC,OAAO;UACvBoB,aAAa,EAAEV,YAAY,CAACE,QAAQ,CAACS,MAAM;UAC3CL,UAAU,EAAEN,YAAY,CAACM;QAC3B,CAAC,CAAC;QAEF,OAAON,YAAY;MACrB,CAAC,CAAC,OAAOY,GAAG,EAAE;QAEZ,IAAMC,WAAyB,GAAG;UAChCZ,GAAG,EAAE,QAAQZ,MAAM,CAACC,OAAO,mBAAmBD,MAAM,CAACyB,KAAK,IAAI,cAAc,OAAOzB,MAAM,CAAC0B,GAAG,IAAI,OAAO,6BAA6B1B,MAAM,CAACa,QAAQ,CAACc,IAAI,CAAC,IAAI,CAAC,IAAI,8BAA8B,mDAAmD3B,MAAM,CAAC4B,IAAI,uDAAuD;UACtTf,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,aAAa,CAAC;UAC1DC,SAAS,EAAE;YAAEC,KAAK,EAAE,GAAG;YAAEC,KAAK,EAAE;UAAW,CAAC;UAC5CC,UAAU,EAAE;QACd,CAAC;QAED9B,mBAAmB,CAACqC,WAAW,CAAC;QAChCN,YAAY,CAACM,WAAW,CAAC;QAEzBL,YAAM,CAACC,IAAI,CAAC,+BAA+B,EAAE;UAC3C9B,KAAK,EAAEiC,GAAG;UACVtB,OAAO,EAAED,MAAM,CAACC;QAClB,CAAC,CAAC;QACF,OAAOuB,WAAW;MACpB,CAAC,SAAS;QACRzC,eAAe,CAAC,KAAK,CAAC;MACxB;IACF,CAAC;IAAA,iBAAA8C,EAAA;MAAA,OAAA/B,IAAA,CAAAgC,KAAA,OAAAC,SAAA;IAAA;EAAA,KACD,EACF,CAAC;EAED,IAAMb,YAAY,GAAG,IAAArB,kBAAW,EAAC,UAACe,GAAiB,EAAK;IACtDjB,aAAa,CAAC,UAACqC,IAAI;MAAA,QAAMpB,GAAG,EAAAqB,MAAA,KAAAC,mBAAA,CAAArD,OAAA,EAAKmD,IAAI,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAAA,CAAC,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,YAAY,GAAG,IAAAvC,kBAAW,EAAC,YAAM;IACrCF,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAM0C,UAAU,GAAG,IAAAxC,kBAAW,EAAC,YAAM;IACnCN,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLK,WAAW,EAAXA,WAAW;IACXd,YAAY,EAAZA,YAAY;IACZI,gBAAgB,EAAhBA,gBAAgB;IAChBI,KAAK,EAALA,KAAK;IACL+C,UAAU,EAAVA,UAAU;IACV3C,UAAU,EAAVA,UAAU;IACVwB,YAAY,EAAZA,YAAY;IACZkB,YAAY,EAAZA;EACF,CAAC;AACH,CAAC","ignoreList":[]}