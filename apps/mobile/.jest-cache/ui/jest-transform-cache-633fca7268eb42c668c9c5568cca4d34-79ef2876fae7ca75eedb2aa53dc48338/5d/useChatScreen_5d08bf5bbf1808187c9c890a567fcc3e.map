{"version":3,"names":["_react","require","_reactNative","_asyncStorage","_interopRequireDefault","_useChatData2","_useInteractionMetrics","_Provider","_api","_haptics","_logger","useChatScreen","exports","_ref","matchId","petName","navigation","_useTheme","useTheme","isDark","_useReactionMetrics","useReactionMetrics","startInteraction","endInteraction","_useChatData","useChatData","data","actions","_useState","useState","_useState2","_slicedToArray2","default","inputText","setInputText","_useState3","_useState4","isTyping","setIsTyping","_useState5","_useState6","showReactions","setShowReactions","_useState7","_useState8","selectedMessageId","setSelectedMessageId","flatListRef","useRef","inputRef","typingTimeoutRef","savedOffsetRef","didRestoreRef","typingAnimation","Animated","Value","current","useEffect","StatusBar","setBarStyle","InteractionManager","runAfterInteractions","_inputRef$current","startTypingAnimation","focus","clearTimeout","loadDraft","_ref2","_asyncToGenerator2","draft","AsyncStorage","getItem","_unused","apply","arguments","persist","_ref3","key","setItem","removeItem","_unused2","tryRestore","_ref4","saved","offset","Number","_flatListRef$current","scrollToOffset","animated","_unused3","isLoading","useCallback","loop","stagger","sequence","timing","toValue","duration","easing","Easing","bezier","useNativeDriver","start","handleSendMessage","trim","messageContent","haptic","confirm","LayoutAnimation","configureNext","Presets","easeInEaseOut","sendMessage","_flatListRef$current2","scrollToEnd","handleTypingChange","typing","api","chat","sendTypingIndicator","setTimeout","handleScroll","_ref6","event","nativeEvent","contentOffset","y","String","_unused4","_x","handleQuickReplySelect","reply","_inputRef$current2","tap","handleMessageLongPress","messageId","handleReactionSelect","emoji","logger","info","handleReactionCancel","selection","handleVoiceCall","Alert","alert","text","style","onPress","_onPress","handleVideoCall","_onPress2","handleMoreOptions","quickReplies"],"sources":["useChatScreen.ts"],"sourcesContent":["/**\n * useChatScreen Hook\n * Manages ChatScreen UI state and interactions\n * Extracts all local state, refs, animations, and handlers from ChatScreen component\n */\n\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  Alert,\n  Animated,\n  Easing,\n  InteractionManager,\n  Platform,\n  StatusBar,\n  type NativeSyntheticEvent,\n  type NativeScrollEvent,\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { LayoutAnimation } from \"react-native\";\nimport type { RootStackScreenProps } from \"../../navigation/types\";\nimport { useChatData } from \"../useChatData\";\nimport { useReactionMetrics } from \"../useInteractionMetrics\";\nimport { useTheme } from \"../../theme/Provider\";\nimport { api } from \"../../services/api\";\nimport { haptic } from \"../../ui/haptics\";\nimport { logger } from \"../../services/logger\";\n\ninterface UseChatScreenParams {\n  matchId: string;\n  petName: string;\n  navigation: RootStackScreenProps<\"Chat\">[\"navigation\"];\n}\n\ninterface UseChatScreenReturn {\n  // State\n  inputText: string;\n  setInputText: (text: string) => void;\n  isTyping: boolean;\n  showReactions: boolean;\n  selectedMessageId: string | null;\n  \n  // Data from useChatData\n  data: ReturnType<typeof useChatData>[\"data\"];\n  actions: ReturnType<typeof useChatData>[\"actions\"];\n  \n  // Refs\n  flatListRef: React.RefObject<any>;\n  inputRef: React.RefObject<any>;\n  \n  // Handlers\n  handleSendMessage: () => Promise<void>;\n  handleTypingChange: (typing: boolean) => void;\n  handleScroll: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;\n  handleQuickReplySelect: (reply: string) => void;\n  handleMessageLongPress: (messageId: string) => void;\n  handleReactionSelect: (emoji: string) => void;\n  handleReactionCancel: () => void;\n  handleVoiceCall: () => Promise<void>;\n  handleVideoCall: () => Promise<void>;\n  handleMoreOptions: () => void;\n  \n  // Constants\n  quickReplies: string[];\n}\n\nexport const useChatScreen = ({\n  matchId,\n  petName,\n  navigation,\n}: UseChatScreenParams): UseChatScreenReturn => {\n  const { isDark } = useTheme();\n  const { startInteraction, endInteraction } = useReactionMetrics();\n  \n  // Use the extracted chat data hook\n  const { data, actions } = useChatData(matchId);\n\n  // Local state for UI interactions\n  const [inputText, setInputText] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [showReactions, setShowReactions] = useState(false);\n  const [selectedMessageId, setSelectedMessageId] = useState<string | null>(null);\n\n  // Refs\n  const flatListRef = useRef<any>(null);\n  const inputRef = useRef<any>(null);\n  const typingTimeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n  const savedOffsetRef = useRef<number>(0);\n  const didRestoreRef = useRef<boolean>(false);\n\n  // Animations\n  const typingAnimation = useRef(new Animated.Value(0)).current;\n\n  // Initialize component\n  useEffect(() => {\n    StatusBar.setBarStyle(isDark ? \"light-content\" : \"dark-content\");\n\n    InteractionManager.runAfterInteractions(() => {\n      startTypingAnimation();\n      inputRef.current?.focus();\n    });\n\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, [isDark]);\n\n  // Draft persistence\n  useEffect(() => {\n    const loadDraft = async () => {\n      try {\n        const draft = await AsyncStorage.getItem(\n          `mobile_chat_draft_${matchId}`,\n        );\n        if (draft) {\n          setInputText(draft);\n        }\n      } catch {\n        // Ignore errors\n      }\n    };\n    loadDraft();\n  }, [matchId]);\n\n  useEffect(() => {\n    const persist = async () => {\n      try {\n        const key = `mobile_chat_draft_${matchId}`;\n        if (inputText) {\n          await AsyncStorage.setItem(key, inputText);\n        } else {\n          await AsyncStorage.removeItem(key);\n        }\n      } catch {\n        // Ignore errors\n      }\n    };\n    persist();\n  }, [inputText, matchId]);\n\n  // Restore scroll position\n  useEffect(() => {\n    const tryRestore = async () => {\n      if (didRestoreRef.current) return;\n      try {\n        const saved = await AsyncStorage.getItem(\n          `mobile_chat_scroll_${matchId}`,\n        );\n        const offset = saved ? Number(saved) : 0;\n        if (offset > 0) {\n          savedOffsetRef.current = offset;\n          InteractionManager.runAfterInteractions(() => {\n            flatListRef.current?.scrollToOffset({ offset, animated: false });\n          });\n        }\n        didRestoreRef.current = true;\n      } catch {\n        // Ignore errors\n      }\n    };\n    if (!data.isLoading) {\n      tryRestore();\n    }\n  }, [data.isLoading, matchId]);\n\n  // Typing animation\n  const startTypingAnimation = useCallback(() => {\n    Animated.loop(\n      Animated.stagger(200, [\n        Animated.sequence([\n          Animated.timing(typingAnimation, {\n            toValue: 1,\n            duration: 400,\n            easing: Easing.bezier(0.4, 0, 0.2, 1),\n            useNativeDriver: true,\n          }),\n          Animated.timing(typingAnimation, {\n            toValue: 0,\n            duration: 400,\n            easing: Easing.bezier(0.4, 0, 0.2, 1),\n            useNativeDriver: true,\n          }),\n        ]),\n      ]),\n    ).start();\n  }, [typingAnimation]);\n\n  // Handle message sending\n  const handleSendMessage = useCallback(async () => {\n    if (!inputText.trim()) return;\n\n    const messageContent = inputText.trim();\n\n    // Haptic feedback for send action\n    haptic.confirm();\n\n    // Clear input immediately for better UX\n    setInputText(\"\");\n\n    // Add message with animation\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n\n    // Send message via hook\n    await actions.sendMessage(messageContent);\n\n    // Smooth scroll to bottom\n    InteractionManager.runAfterInteractions(() => {\n      flatListRef.current?.scrollToEnd({ animated: true });\n    });\n  }, [inputText, actions]);\n\n  // Handle typing changes\n  const handleTypingChange = useCallback((typing: boolean) => {\n    setIsTyping(typing);\n\n    // Debounced typing indicator\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n\n    if (typing) {\n      // Emit typing event to server\n      api.chat.sendTypingIndicator(matchId, true);\n      typingTimeoutRef.current = setTimeout(() => {\n        setIsTyping(false);\n        // Emit stop typing event to server\n        api.chat.sendTypingIndicator(matchId, false);\n      }, 1000);\n    }\n  }, [matchId]);\n\n  // Handle scroll events\n  const handleScroll = useCallback(\n    async (event: NativeSyntheticEvent<NativeScrollEvent>) => {\n      try {\n        const offset = event.nativeEvent.contentOffset.y;\n        await AsyncStorage.setItem(\n          `mobile_chat_scroll_${matchId}`,\n          String(offset),\n        );\n      } catch {\n        // Ignore errors\n      }\n    },\n    [matchId],\n  );\n\n  // Handle quick reply selection\n  const handleQuickReplySelect = useCallback((reply: string) => {\n    haptic.tap();\n    setInputText(reply);\n    inputRef.current?.focus();\n  }, []);\n\n  // Handle message long press for reactions\n  const handleMessageLongPress = useCallback((messageId: string) => {\n    haptic.tap();\n    setSelectedMessageId(messageId);\n    setShowReactions(true);\n  }, []);\n\n  // Handle reaction selection\n  const handleReactionSelect = useCallback((emoji: string) => {\n    if (selectedMessageId) {\n      haptic.confirm();\n      startInteraction('reaction', { messageId: selectedMessageId, emoji });\n      // TODO: Send reaction to server\n      logger.info(\"Reacted with emoji\", { emoji, messageId: selectedMessageId });\n      endInteraction('reaction', true);\n    }\n    setShowReactions(false);\n    setSelectedMessageId(null);\n  }, [selectedMessageId, startInteraction, endInteraction]);\n\n  // Handle reaction cancel\n  const handleReactionCancel = useCallback(() => {\n    haptic.selection();\n    setShowReactions(false);\n    setSelectedMessageId(null);\n  }, []);\n\n  // Call handlers\n  const handleVoiceCall = useCallback(async () => {\n    Alert.alert(\"Voice Call\", `Start a voice call with ${petName}?`, [\n      { text: \"Cancel\", style: \"cancel\" },\n      {\n        text: \"Call\",\n        onPress: async () => {\n          Alert.alert(\"Call Feature\", \"Voice calling feature coming soon!\");\n        },\n      },\n    ]);\n  }, [petName]);\n\n  const handleVideoCall = useCallback(async () => {\n    Alert.alert(\"Video Call\", `Start a video call with ${petName}?`, [\n      { text: \"Cancel\", style: \"cancel\" },\n      {\n        text: \"Call\",\n        onPress: async () => {\n          Alert.alert(\"Call Feature\", \"Video calling feature coming soon!\");\n        },\n      },\n    ]);\n  }, [petName]);\n\n  const handleMoreOptions = useCallback(() => {\n    Alert.alert(\"More Options\", \"Additional options coming soon!\");\n  }, []);\n\n  // Quick replies\n  const quickReplies = [\n    \"Sounds good! 👍\",\n    \"When works for you?\",\n    \"Let's do it! 🎾\",\n    \"Perfect! 😊\",\n  ];\n\n  return {\n    // State\n    inputText,\n    setInputText,\n    isTyping,\n    showReactions,\n    selectedMessageId,\n    \n    // Data\n    data,\n    actions,\n    \n    // Refs\n    flatListRef,\n    inputRef,\n    \n    // Handlers\n    handleSendMessage,\n    handleTypingChange,\n    handleScroll,\n    handleQuickReplySelect,\n    handleMessageLongPress,\n    handleReactionSelect,\n    handleReactionCancel,\n    handleVoiceCall,\n    handleVideoCall,\n    handleMoreOptions,\n    \n    // Constants\n    quickReplies,\n  };\n};\n\n"],"mappings":"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","ignoreList":[]}