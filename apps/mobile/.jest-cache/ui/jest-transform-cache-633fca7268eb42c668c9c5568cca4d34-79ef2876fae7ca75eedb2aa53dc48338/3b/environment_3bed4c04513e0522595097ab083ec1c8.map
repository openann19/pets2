{"version":3,"names":["defaultConfig","API_BASE_URL","SOCKET_URL","AI_SERVICE_URL","ENVIRONMENT","ENABLE_LOGGING","ENABLE_ANALYTICS","API_TIMEOUT","environments","development","staging","production","getCurrentEnvironment","__DEV__","process","env","NODE_ENV","currentEnv","envConfig","config","exports","_objectSpread","API_URL","isDevelopment","isStaging","isProduction","Promise","resolve","then","_interopRequireWildcard","require","_ref","logger","info","environment","apiBaseUrl","socketUrl","aiServiceUrl","logging","analytics"],"sources":["environment.ts"],"sourcesContent":["/**\n * Environment configuration for mobile app\n * Handles different environments (development, staging, production)\n */\n\nexport interface EnvironmentConfig {\n  API_BASE_URL: string;\n  SOCKET_URL: string;\n  AI_SERVICE_URL: string;\n  ENVIRONMENT: \"development\" | \"staging\" | \"production\";\n  ENABLE_LOGGING: boolean;\n  ENABLE_ANALYTICS: boolean;\n  API_TIMEOUT: number;\n}\n\n// Default configuration\nconst defaultConfig: EnvironmentConfig = {\n  API_BASE_URL: \"http://localhost:5001\",\n  SOCKET_URL: \"http://localhost:5001\",\n  AI_SERVICE_URL: \"http://localhost:8000\",\n  ENVIRONMENT: \"development\",\n  ENABLE_LOGGING: true,\n  ENABLE_ANALYTICS: false,\n  API_TIMEOUT: 30000,\n};\n\n// Environment-specific configurations\nconst environments: Record<string, Partial<EnvironmentConfig>> = {\n  development: {\n    API_BASE_URL: \"http://localhost:5001\",\n    SOCKET_URL: \"http://localhost:5001\",\n    AI_SERVICE_URL: \"http://localhost:8000\",\n    ENVIRONMENT: \"development\",\n    ENABLE_LOGGING: true,\n    ENABLE_ANALYTICS: false,\n    API_TIMEOUT: 30000,\n  },\n  staging: {\n    API_BASE_URL: \"https://api-staging.pawfectmatch.com\",\n    SOCKET_URL: \"https://api-staging.pawfectmatch.com\",\n    AI_SERVICE_URL: \"https://ai-staging.pawfectmatch.com\",\n    ENVIRONMENT: \"staging\",\n    ENABLE_LOGGING: true,\n    ENABLE_ANALYTICS: true,\n    API_TIMEOUT: 30000,\n  },\n  production: {\n    API_BASE_URL: \"https://api.pawfectmatch.com\",\n    SOCKET_URL: \"https://api.pawfectmatch.com\",\n    AI_SERVICE_URL: \"https://ai.pawfectmatch.com\",\n    ENVIRONMENT: \"production\",\n    ENABLE_LOGGING: false,\n    ENABLE_ANALYTICS: true,\n    API_TIMEOUT: 15000,\n  },\n};\n\n// Get current environment from process.env or default to development\nconst getCurrentEnvironment = (): string => {\n  // In React Native, we can use __DEV__ to detect development mode\n  if (__DEV__) {\n    return \"development\";\n  }\n\n  // For production builds, check environment variables\n  // These would be set during build time\n  return process.env.NODE_ENV || \"development\";\n};\n\n// Merge default config with environment-specific config\nconst currentEnv = getCurrentEnvironment();\nconst envConfig = environments[currentEnv] || {};\n\nexport const config: EnvironmentConfig = {\n  ...defaultConfig,\n  ...envConfig,\n};\n\n// Export individual config values for convenience\nexport const {\n  API_BASE_URL,\n  SOCKET_URL,\n  AI_SERVICE_URL,\n  ENVIRONMENT,\n  ENABLE_LOGGING,\n  ENABLE_ANALYTICS,\n  API_TIMEOUT,\n} = config;\n\n// Alias for backward compatibility\nexport const API_URL = API_BASE_URL;\n\n// Helper functions\nexport const isDevelopment = (): boolean => ENVIRONMENT === \"development\";\nexport const isStaging = (): boolean => ENVIRONMENT === \"staging\";\nexport const isProduction = (): boolean => ENVIRONMENT === \"production\";\n\n// Log configuration in development\nif (isDevelopment() && ENABLE_LOGGING) {\n  // Using dynamic import to avoid circular dependency\n  void import(\"../services/logger\").then(({ logger }) => {\n    logger.info(\"ðŸ”§ Environment Configuration\", {\n      environment: ENVIRONMENT,\n      apiBaseUrl: API_BASE_URL,\n      socketUrl: SOCKET_URL,\n      aiServiceUrl: AI_SERVICE_URL,\n      logging: ENABLE_LOGGING,\n      analytics: ENABLE_ANALYTICS,\n    });\n  });\n}\n"],"mappings":"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","ignoreList":[]}