{"version":3,"names":["_reactNative","require","_useAsyncAction","describe","mockSuccessAction","jest","fn","Promise","resolve","mockFailureAction","reject","Error","beforeEach","clearAllMocks","mockClear","mockImplementation","it","_renderHook","renderHook","useAsyncAction","action","result","expect","current","isLoading","toBe","error","data","_asyncToGenerator2","default","_renderHook2","act","execute","toHaveBeenCalledTimes","waitFor","_renderHook3","toBeInstanceOf","_renderHook4","reset","actionWithArgs","arg1","arg2","_renderHook5","toHaveBeenCalledWith","slowAction","setTimeout","_renderHook6","_renderHook7","firstExecute","firstReset","_renderHook8","result2"],"sources":["useAsyncAction.test.ts"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport { renderHook, act, waitFor } from \"@testing-library/react-native\";\nimport { useAsyncAction } from \"../useAsyncAction\";\n\ndescribe(\"useAsyncAction\", () => {\n  const mockSuccessAction = jest.fn(() => Promise.resolve(\"success\"));\n  const mockFailureAction = jest.fn(() => Promise.reject(new Error(\"failed\")));\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockSuccessAction.mockClear();\n    mockFailureAction.mockClear();\n    mockSuccessAction.mockImplementation(() => Promise.resolve(\"success\"));\n    mockFailureAction.mockImplementation(() =>\n      Promise.reject(new Error(\"failed\")),\n    );\n  });\n\n  it(\"should initialize with correct default state\", () => {\n    const { result } = renderHook(() =>\n      useAsyncAction({ action: mockSuccessAction }),\n    );\n\n    expect(result.current.isLoading).toBe(false);\n    expect(result.current.error).toBe(null);\n    expect(result.current.data).toBe(null);\n  });\n\n  it(\"should execute async action successfully\", async () => {\n    const { result } = renderHook(() =>\n      useAsyncAction({ action: mockSuccessAction }),\n    );\n\n    act(() => {\n      result.current.execute();\n    });\n\n    expect(result.current.isLoading).toBe(true);\n    expect(mockSuccessAction).toHaveBeenCalledTimes(1);\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    expect(result.current.data).toBe(\"success\");\n    expect(result.current.error).toBe(null);\n  });\n\n  it(\"should handle async action failure\", async () => {\n    const { result } = renderHook(() =>\n      useAsyncAction({ action: mockFailureAction }),\n    );\n\n    act(() => {\n      result.current.execute();\n    });\n\n    expect(result.current.isLoading).toBe(true);\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    expect(result.current.data).toBe(null);\n    expect(result.current.error).toBeInstanceOf(Error);\n  });\n\n  it(\"should reset state\", () => {\n    const { result } = renderHook(() =>\n      useAsyncAction({ action: mockSuccessAction }),\n    );\n\n    act(() => {\n      result.current.reset();\n    });\n\n    expect(result.current.isLoading).toBe(false);\n    expect(result.current.error).toBe(null);\n    expect(result.current.data).toBe(null);\n  });\n\n  it(\"should execute with arguments\", async () => {\n    const actionWithArgs = jest\n      .fn()\n      .mockImplementation((arg1: string, arg2: number) =>\n        Promise.resolve(`${arg1}-${arg2}`),\n      );\n\n    const { result } = renderHook(() =>\n      useAsyncAction({ action: actionWithArgs }),\n    );\n\n    act(() => {\n      result.current.execute(\"test\", 123);\n    });\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    expect(actionWithArgs).toHaveBeenCalledWith(\"test\", 123);\n    expect(result.current.data).toBe(\"test-123\");\n  });\n\n  it(\"should not execute if already loading\", async () => {\n    const slowAction = jest.fn(\n      () => new Promise((resolve) => setTimeout(() => resolve(\"done\"), 100)),\n    );\n\n    const { result } = renderHook(() => useAsyncAction({ action: slowAction }));\n\n    // Start first execution\n    act(() => {\n      result.current.execute();\n    });\n\n    // Try to execute again while loading\n    act(() => {\n      result.current.execute();\n    });\n\n    // Wait for completion\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    // Should only have been called once\n    expect(slowAction).toHaveBeenCalledTimes(1);\n  });\n\n  it(\"should return stable function references\", () => {\n    const { result } = renderHook(() =>\n      useAsyncAction({ action: mockSuccessAction }),\n    );\n\n    const firstExecute = result.current.execute;\n    const firstReset = result.current.reset;\n\n    // In React Native testing, create a new hook instance to test stability\n    const { result: result2 } = renderHook(() =>\n      useAsyncAction({ action: mockSuccessAction }),\n    );\n\n    expect(result.current.execute).toBe(firstExecute);\n    expect(result.current.reset).toBe(firstReset);\n  });\n});\n"],"mappings":"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","ignoreList":[]}