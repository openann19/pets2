{"version":3,"names":["_StyleSheet","_interopRequireDefault","require","_Platform","_RCTInputAccessoryViewNativeComponent","React","_interopRequireWildcard","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_callSuper","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","InputAccessoryView","_React$Component","_classCallCheck2","arguments","_inherits2","_createClass2","key","value","render","Platform","OS","Children","count","props","children","jsx","style","styles","container","nativeID","backgroundColor","console","warn","Component","StyleSheet","create","position","module","exports"],"sources":["InputAccessoryView.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport StyleSheet, {\n  type ColorValue,\n  type ViewStyleProp,\n} from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport RCTInputAccessoryViewNativeComponent from './RCTInputAccessoryViewNativeComponent';\nimport * as React from 'react';\n\n/**\n * Note: iOS only\n *\n * A component which enables customization of the keyboard input accessory view.\n * The input accessory view is displayed above the keyboard whenever a TextInput\n * has focus. This component can be used to create custom toolbars.\n *\n * To use this component wrap your custom toolbar with the\n * InputAccessoryView component, and set a nativeID. Then, pass that nativeID\n * as the inputAccessoryViewID of whatever TextInput you desire. A simple\n * example:\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, TextInput, InputAccessoryView, Button } from 'react-native';\n *\n * export default class UselessTextInput extends Component {\n *   constructor(props) {\n *     super(props);\n *     this.state = {text: 'Placeholder Text'};\n *   }\n *\n *   render() {\n *     const inputAccessoryViewID = \"uniqueID\";\n *     return (\n *       <View>\n *         <ScrollView keyboardDismissMode=\"interactive\">\n *           <TextInput\n *             style={{\n *               padding: 10,\n *               paddingTop: 50,\n *             }}\n *             inputAccessoryViewID=inputAccessoryViewID\n *             onChangeText={text => this.setState({text})}\n *             value={this.state.text}\n *           />\n *         </ScrollView>\n *         <InputAccessoryView nativeID=inputAccessoryViewID>\n *           <Button\n *             onPress={() => this.setState({text: 'Placeholder Text'})}\n *             title=\"Reset Text\"\n *           />\n *         </InputAccessoryView>\n *       </View>\n *     );\n *   }\n * }\n *\n * // skip this line if using Create React Native App\n * AppRegistry.registerComponent('AwesomeProject', () => UselessTextInput);\n * ```\n *\n * This component can also be used to create sticky text inputs (text inputs\n * which are anchored to the top of the keyboard). To do this, wrap a\n * TextInput with the InputAccessoryView component, and don't set a nativeID.\n * For an example, look at InputAccessoryViewExample.js in RNTester.\n */\n\ntype Props = $ReadOnly<{|\n  +children: React.Node,\n  /**\n   * An ID which is used to associate this `InputAccessoryView` to\n   * specified TextInput(s).\n   */\n  nativeID?: ?string,\n  style?: ?ViewStyleProp,\n  backgroundColor?: ?ColorValue,\n|}>;\n\nclass InputAccessoryView extends React.Component<Props> {\n  render(): React.Node {\n    if (Platform.OS === 'ios') {\n      if (React.Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      return (\n        <RCTInputAccessoryViewNativeComponent\n          style={[this.props.style, styles.container]}\n          nativeID={this.props.nativeID}\n          backgroundColor={this.props.backgroundColor}>\n          {this.props.children}\n        </RCTInputAccessoryViewNativeComponent>\n      );\n    } else {\n      console.warn('<InputAccessoryView> is only supported on iOS.');\n      return null;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n  },\n});\n\nmodule.exports = InputAccessoryView;\n"],"mappings":"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","ignoreList":[]}