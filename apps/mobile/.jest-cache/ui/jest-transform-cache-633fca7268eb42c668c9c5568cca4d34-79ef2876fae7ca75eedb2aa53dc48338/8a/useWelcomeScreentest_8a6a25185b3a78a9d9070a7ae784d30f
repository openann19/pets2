6a89fc07e37638f265ba50f29e1de657
"use strict";

_getJestObj().mock("@react-navigation/native", function () {
  return {
    useNavigation: function useNavigation() {
      return mockNavigation;
    }
  };
});
_getJestObj().mock("../../../theme/Provider", function () {
  return {
    useTheme: function useTheme() {
      return mockTheme;
    }
  };
});
_getJestObj().mock("../../domains/onboarding/useWelcome", function () {
  return {
    useWelcome: function useWelcome() {
      return {
        logoScale: {
          value: 1
        },
        logoOpacity: {
          value: 1
        },
        titleOpacity: {
          value: 1
        },
        titleTranslateY: {
          value: 0
        },
        subtitleOpacity: {
          value: 1
        },
        subtitleTranslateY: {
          value: 0
        },
        featuresOpacity: {
          value: 1
        },
        featuresTranslateY: {
          value: 0
        },
        buttonOpacity: {
          value: 1
        },
        buttonScale: {
          value: 1
        },
        confettiScale: {
          value: 0
        },
        isReady: true,
        handleGetStarted: mockDomainHandleGetStarted,
        handleSkipOnboarding: mockDomainHandleSkipOnboarding
      };
    }
  };
});
var _reactNative = require("@testing-library/react-native");
var _useWelcomeScreen = require("../useWelcomeScreen");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var mockNavigate = jest.fn();
var mockNavigation = {
  navigate: mockNavigate
};
var mockTheme = {
  colors: {
    primary: "#007AFF",
    background: "#FFFFFF",
    text: "#000000"
  },
  styles: {},
  isDark: false
};
var mockDomainHandleGetStarted = jest.fn();
var mockDomainHandleSkipOnboarding = jest.fn();
describe("useWelcomeScreen", function () {
  beforeEach(function () {
    jest.clearAllMocks();
  });
  it("should initialize with theme data", function () {
    var _renderHook = (0, _reactNative.renderHook)(function () {
        return (0, _useWelcomeScreen.useWelcomeScreen)();
      }),
      result = _renderHook.result;
    expect(result.current.colors).toEqual(mockTheme.colors);
    expect(result.current.styles).toEqual(mockTheme.styles);
    expect(result.current.isDark).toBe(false);
  });
  it("should provide animation values from domain hook", function () {
    var _renderHook2 = (0, _reactNative.renderHook)(function () {
        return (0, _useWelcomeScreen.useWelcomeScreen)();
      }),
      result = _renderHook2.result;
    expect(result.current.logoScale).toBeDefined();
    expect(result.current.logoOpacity).toBeDefined();
    expect(result.current.titleOpacity).toBeDefined();
    expect(result.current.titleTranslateY).toBeDefined();
    expect(result.current.buttonOpacity).toBeDefined();
    expect(result.current.buttonScale).toBeDefined();
  });
  it("should indicate when ready", function () {
    var _renderHook3 = (0, _reactNative.renderHook)(function () {
        return (0, _useWelcomeScreen.useWelcomeScreen)();
      }),
      result = _renderHook3.result;
    expect(result.current.isReady).toBe(true);
  });
  it("should handle get started action", function () {
    var _renderHook4 = (0, _reactNative.renderHook)(function () {
        return (0, _useWelcomeScreen.useWelcomeScreen)();
      }),
      result = _renderHook4.result;
    (0, _reactNative.act)(function () {
      result.current.handleGetStarted();
    });
    expect(mockDomainHandleGetStarted).toHaveBeenCalledTimes(1);
    expect(mockNavigate).toHaveBeenCalledWith("UserIntent");
  });
  it("should handle skip onboarding action", function () {
    var _renderHook5 = (0, _reactNative.renderHook)(function () {
        return (0, _useWelcomeScreen.useWelcomeScreen)();
      }),
      result = _renderHook5.result;
    (0, _reactNative.act)(function () {
      result.current.handleSkipOnboarding();
    });
    expect(mockDomainHandleSkipOnboarding).toHaveBeenCalledTimes(1);
    expect(mockNavigate).toHaveBeenCalledWith("Main");
  });
  it("should provide all animation values", function () {
    var _renderHook6 = (0, _reactNative.renderHook)(function () {
        return (0, _useWelcomeScreen.useWelcomeScreen)();
      }),
      result = _renderHook6.result;
    expect(result.current.logoScale).toBeDefined();
    expect(result.current.logoOpacity).toBeDefined();
    expect(result.current.titleOpacity).toBeDefined();
    expect(result.current.titleTranslateY).toBeDefined();
    expect(result.current.subtitleOpacity).toBeDefined();
    expect(result.current.subtitleTranslateY).toBeDefined();
    expect(result.current.featuresOpacity).toBeDefined();
    expect(result.current.featuresTranslateY).toBeDefined();
    expect(result.current.buttonOpacity).toBeDefined();
    expect(result.current.buttonScale).toBeDefined();
    expect(result.current.confettiScale).toBeDefined();
  });
  it("should expose theme information", function () {
    var _renderHook7 = (0, _reactNative.renderHook)(function () {
        return (0, _useWelcomeScreen.useWelcomeScreen)();
      }),
      result = _renderHook7.result;
    expect(result.current.colors.primary).toBe("#007AFF");
    expect(result.current.colors.background).toBe("#FFFFFF");
    expect(result.current.colors.text).toBe("#000000");
  });
  it("should return stable function references", function () {
    var _renderHook8 = (0, _reactNative.renderHook)(function () {
        return (0, _useWelcomeScreen.useWelcomeScreen)();
      }),
      result = _renderHook8.result,
      rerender = _renderHook8.rerender;
    var firstHandleGetStarted = result.current.handleGetStarted;
    var firstHandleSkipOnboarding = result.current.handleSkipOnboarding;
    rerender();
    expect(result.current.handleGetStarted).toBe(firstHandleGetStarted);
    expect(result.current.handleSkipOnboarding).toBe(firstHandleSkipOnboarding);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,