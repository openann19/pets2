{"version":3,"names":["_react","_interopRequireWildcard","require","_core","_reactNative","_useSocket","_ActiveCallScreen","_interopRequireDefault","_IncomingCallScreen","_WebRTCService","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","CallManager","_ref","children","_useState","useState","WebRTCService","getCallState","_useState2","_slicedToArray2","callState","setCallState","_useState3","_useState4","showIncomingCall","setShowIncomingCall","_useState5","_useState6","showActiveCall","setShowActiveCall","socket","useSocket","useEffect","handleCallStateChange","newState","isActive","isIncoming","isConnected","handleCallError","error","Alert","alert","text","logger","on","handleAppStateChange","nextAppState","info","appStateSubscription","AppState","addEventListener","off","remove","handleAnswerCall","_ref2","_asyncToGenerator2","success","answerCall","apply","arguments","handleRejectCall","rejectCall","handleEndCall","style","onPress","endCall","handleToggleMute","toggleMute","handleToggleVideo","toggleVideo","handleSwitchCamera","switchCamera","handleToggleSpeaker","toggleSpeaker","jsxs","Fragment","jsx","Modal","visible","animationType","presentationStyle","onRequestClose","callData","onAnswer","onReject","onEndCall","onToggleMute","onToggleVideo","onSwitchCamera","onToggleSpeaker","useCallManager","exports","startCall","_ref3","matchId","callType","_x","_x2","isCallActive"],"sources":["CallManager.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { logger } from \"@pawfectmatch/core\";\nimport type { AppStateStatus } from \"react-native\";\nimport { Modal, Alert, AppState } from \"react-native\";\n\nimport { useSocket } from \"../../hooks/useSocket\";\nimport ActiveCallScreen from \"../../screens/calling/ActiveCallScreen\";\nimport IncomingCallScreen from \"../../screens/calling/IncomingCallScreen\";\nimport type { CallState } from \"../../services/WebRTCService\";\nimport WebRTCService from \"../../services/WebRTCService\";\nimport type { CallData } from \"../../services/WebRTCService\";\n\ninterface CallManagerProps {\n  children: React.ReactNode;\n}\n\nexport default function CallManager({ children }: CallManagerProps) {\n  const [callState, setCallState] = useState<CallState>(\n    WebRTCService.getCallState(),\n  );\n  const [showIncomingCall, setShowIncomingCall] = useState(false);\n  const [showActiveCall, setShowActiveCall] = useState(false);\n  const socket = useSocket();\n\n  useEffect(() => {\n    // WebRTC service automatically handles socket connections\n    // No explicit initialization needed\n    if (socket) {\n      // Socket is already connected and WebRTC service will use it\n    }\n\n    // Listen for call state changes\n    const handleCallStateChange = (newState: CallState) => {\n      setCallState(newState);\n\n      if (newState.isActive && newState.isIncoming && !newState.isConnected) {\n        // Show incoming call screen\n        setShowIncomingCall(true);\n        setShowActiveCall(false);\n      } else if (newState.isActive && !newState.isIncoming) {\n        // Show active call screen\n        setShowIncomingCall(false);\n        setShowActiveCall(true);\n      } else if (!newState.isActive) {\n        // Hide all call screens\n        setShowIncomingCall(false);\n        setShowActiveCall(false);\n      }\n    };\n\n    const handleCallError = (error: unknown) => {\n      Alert.alert(\n        \"Call Error\",\n        \"There was an issue with the call. Please try again.\",\n        [{ text: \"OK\" }],\n      );\n      logger.error(\"Call error:\", { error });\n    };\n\n    // Add event listeners\n    WebRTCService.on(\"callStateChanged\", handleCallStateChange);\n    WebRTCService.on(\"callError\", handleCallError);\n\n    // Handle app state changes (for background/foreground)\n    const handleAppStateChange = (nextAppState: AppStateStatus) => {\n      if (nextAppState === \"background\" && callState.isActive) {\n        // Handle call in background - could implement picture-in-picture\n        logger.info(\"Call moved to background\");\n      } else if (nextAppState === \"active\" && callState.isActive) {\n        // Call returned to foreground\n        logger.info(\"Call returned to foreground\");\n      }\n    };\n\n    const appStateSubscription = AppState.addEventListener(\n      \"change\",\n      handleAppStateChange,\n    );\n\n    return () => {\n      WebRTCService.off(\"callStateChanged\", handleCallStateChange);\n      WebRTCService.off(\"callError\", handleCallError);\n      appStateSubscription?.remove();\n    };\n  }, [socket]);\n\n  // Call action handlers\n  const handleAnswerCall = async () => {\n    try {\n      const success = await WebRTCService.answerCall();\n      if (success) {\n        setShowIncomingCall(false);\n        setShowActiveCall(true);\n      }\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to answer call\");\n    }\n  };\n\n  const handleRejectCall = () => {\n    WebRTCService.rejectCall();\n    setShowIncomingCall(false);\n  };\n\n  const handleEndCall = () => {\n    Alert.alert(\"End Call\", \"Are you sure you want to end this call?\", [\n      { text: \"Cancel\", style: \"cancel\" },\n      {\n        text: \"End Call\",\n        style: \"destructive\",\n        onPress: () => {\n          WebRTCService.endCall();\n          setShowActiveCall(false);\n        },\n      },\n    ]);\n  };\n\n  const handleToggleMute = () => {\n    WebRTCService.toggleMute();\n  };\n\n  const handleToggleVideo = () => {\n    WebRTCService.toggleVideo();\n  };\n\n  const handleSwitchCamera = () => {\n    WebRTCService.switchCamera();\n  };\n\n  const handleToggleSpeaker = () => {\n    WebRTCService.toggleSpeaker();\n  };\n\n  return (\n    <>\n      {children}\n\n      {/* Incoming Call Modal */}\n      <Modal\n        visible={showIncomingCall}\n        animationType=\"slide\"\n        presentationStyle=\"fullScreen\"\n        onRequestClose={handleRejectCall}\n      >\n        {callState.callData && (\n          <IncomingCallScreen\n            callData={callState.callData}\n            onAnswer={handleAnswerCall}\n            onReject={handleRejectCall}\n          />\n        )}\n      </Modal>\n\n      {/* Active Call Modal */}\n      <Modal\n        visible={showActiveCall}\n        animationType=\"slide\"\n        presentationStyle=\"fullScreen\"\n        onRequestClose={handleEndCall}\n      >\n        <ActiveCallScreen\n          callState={callState}\n          onEndCall={handleEndCall}\n          onToggleMute={handleToggleMute}\n          onToggleVideo={handleToggleVideo}\n          onSwitchCamera={handleSwitchCamera}\n          onToggleSpeaker={handleToggleSpeaker}\n        />\n      </Modal>\n    </>\n  );\n}\n\n// Export hook for easy access to call functionality\nexport const useCallManager = () => {\n  const startCall = async (matchId: string, callType: \"voice\" | \"video\") => {\n    try {\n      const success = await WebRTCService.startCall(matchId, callType);\n      if (!success) {\n        Alert.alert(\n          \"Error\",\n          \"Failed to start call. Please check your permissions and try again.\",\n        );\n      }\n      return success;\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to start call\");\n      return false;\n    }\n  };\n\n  const endCall = () => {\n    WebRTCService.endCall();\n  };\n\n  const isCallActive = () => {\n    return WebRTCService.isCallActive();\n  };\n\n  const getCallState = () => {\n    return WebRTCService.getCallState();\n  };\n\n  return {\n    startCall,\n    endCall,\n    isCallActive,\n    getCallState,\n  };\n};\n"],"mappings":"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","ignoreList":[]}