{"version":3,"names":["_getJestObj","mock","_reactNative","require","_native","_useTabReselectRefresh","_useScrollOffsetTracker","_useTabDoublePress","_require","jest","describe","mockNavigation","addListener","fn","emit","navigate","beforeEach","clearAllMocks","useNavigation","mockReturnValue","useIsFocused","it","listRef","current","scrollToOffset","onRefresh","tabPressHandler","scrollTracker","_renderHook","renderHook","useScrollOffsetTracker","scrollResult","result","mockImplementation","event","handler","useTabReselectRefresh","getOffset","act","onScroll","nativeEvent","contentOffset","x","y","contentSize","width","height","layoutMeasurement","expect","toBe","target","toHaveBeenCalledWith","offset","animated","scrollTo","_renderHook2","toHaveBeenCalled","doubleTapHandler","onDoublePress","_renderHook3","useTabDoublePress","_renderHook4","cooldownMs","not","_renderHook5","_loop","i","hooks","_renderHook6","unmount","push","forEach","_ref","_renderHook7","rerender","_renderHook8","newResult","type","mockClear"],"sources":["navigation.integration.test.ts"],"sourcesContent":["/**\n * Comprehensive integration tests for navigation system\n * Tests complete flow: tab press → scroll tracking → reselect behavior\n */\n\nimport { renderHook, act } from '@testing-library/react-native';\nimport { useNavigation, useIsFocused } from '@react-navigation/native';\nimport * as Haptics from 'expo-haptics';\nimport { useTabReselectRefresh } from '../useTabReselectRefresh';\nimport { useScrollOffsetTracker } from '../useScrollOffsetTracker';\nimport { useTabDoublePress } from '../useTabDoublePress';\n\n// Mock dependencies\njest.mock('@react-navigation/native');\njest.mock('expo-haptics');\n\ndescribe('Navigation System Integration', () => {\n  const mockNavigation = {\n    addListener: jest.fn(() => jest.fn()),\n    emit: jest.fn(),\n    navigate: jest.fn(),\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    (useNavigation as jest.Mock).mockReturnValue(mockNavigation);\n    (useIsFocused as jest.Mock).mockReturnValue(true);\n  });\n\n  describe('Complete Flow: Scroll + Reselect', () => {\n    it('should handle complete user flow: scroll → tab press → scroll to top', () => {\n      const listRef = { current: { scrollToOffset: jest.fn() } };\n      const onRefresh = jest.fn();\n      let tabPressHandler: any;\n      let scrollTracker: any;\n\n      // Setup scroll tracking\n      const { result: scrollResult } = renderHook(() =>\n        useScrollOffsetTracker(),\n      );\n\n      // Setup tab reselect\n      mockNavigation.addListener.mockImplementation((event, handler) => {\n        if (event === 'tabPress') tabPressHandler = handler;\n        return jest.fn();\n      });\n\n      renderHook(() =>\n        useTabReselectRefresh({\n          listRef: listRef as any,\n          onRefresh,\n          getOffset: scrollResult.current.getOffset,\n        }),\n      );\n\n      // Simulate scrolling\n      act(() => {\n        scrollResult.current.onScroll({\n          nativeEvent: {\n            contentOffset: { x: 0, y: 300 },\n            contentSize: { width: 375, height: 1000 },\n            layoutMeasurement: { width: 375, height: 812 },\n          },\n        } as any);\n      });\n\n      expect(scrollResult.current.getOffset()).toBe(300);\n\n      // Simulate tab press\n      act(() => {\n        tabPressHandler({ target: 'Home' });\n      });\n\n      // Should scroll to top (because offset > threshold)\n      expect(listRef.current.scrollToOffset).toHaveBeenCalledWith({\n        offset: 0,\n        animated: true,\n      });\n    });\n\n    it('should handle complete user flow: scroll → tab press near top → refresh', () => {\n      const listRef = { current: { scrollTo: jest.fn() } };\n      const onRefresh = jest.fn();\n      let tabPressHandler: any;\n\n      const { result: scrollResult } = renderHook(() =>\n        useScrollOffsetTracker(),\n      );\n\n      mockNavigation.addListener.mockImplementation((event, handler) => {\n        if (event === 'tabPress') tabPressHandler = handler;\n        return jest.fn();\n      });\n\n      renderHook(() =>\n        useTabReselectRefresh({\n          listRef: listRef as any,\n          onRefresh,\n          getOffset: scrollResult.current.getOffset,\n        }),\n      );\n\n      // Simulate scrolling near top\n      act(() => {\n        scrollResult.current.onScroll({\n          nativeEvent: {\n            contentOffset: { x: 0, y: 50 },\n            contentSize: { width: 375, height: 1000 },\n            layoutMeasurement: { width: 375, height: 812 },\n          },\n        } as any);\n      });\n\n      // Simulate tab press\n      act(() => {\n        tabPressHandler({ target: 'Home' });\n      });\n\n      // Should refresh (because near top)\n      expect(onRefresh).toHaveBeenCalled();\n    });\n\n    it('should handle complete user flow: double tap → scroll + refresh', () => {\n      const listRef = { current: { scrollTo: jest.fn() } };\n      const onRefresh = jest.fn();\n      let doubleTapHandler: any;\n\n      mockNavigation.addListener.mockImplementation((event, handler) => {\n        if (event === 'tabDoublePress') doubleTapHandler = handler;\n        return jest.fn();\n      });\n\n      renderHook(() =>\n        useTabReselectRefresh({\n          listRef: listRef as any,\n          onRefresh,\n        }),\n      );\n\n      // Simulate double tap\n      act(() => {\n        doubleTapHandler({ target: 'Home' });\n      });\n\n      // Should scroll to top AND refresh\n      expect(listRef.current.scrollTo).toHaveBeenCalledWith({\n        y: 0,\n        animated: true,\n      });\n      expect(onRefresh).toHaveBeenCalled();\n    });\n  });\n\n  describe('Multiple Hooks Integration', () => {\n    it('should work with scroll tracker + tab reselect + double press together', () => {\n      const listRef = { current: { scrollToOffset: jest.fn() } };\n      const onRefresh = jest.fn();\n      const onDoublePress = jest.fn();\n\n      const { result: scrollResult } = renderHook(() =>\n        useScrollOffsetTracker(),\n      );\n\n      renderHook(() =>\n        useTabReselectRefresh({\n          listRef: listRef as any,\n          onRefresh,\n          getOffset: scrollResult.current.getOffset,\n        }),\n      );\n\n      renderHook(() => useTabDoublePress(onDoublePress));\n\n      // Simulate scroll\n      act(() => {\n        scrollResult.current.onScroll({\n          nativeEvent: {\n            contentOffset: { x: 0, y: 200 },\n            contentSize: { width: 375, height: 1000 },\n            layoutMeasurement: { width: 375, height: 812 },\n          },\n        } as any);\n      });\n\n      expect(scrollResult.current.getOffset()).toBe(200);\n    });\n  });\n\n  describe('Real-World Scenarios', () => {\n    it('should handle rapid tab switching + scrolling', () => {\n      const listRef = { current: { scrollToOffset: jest.fn() } };\n      const onRefresh = jest.fn();\n      let tabPressHandler: any;\n\n      const { result: scrollResult } = renderHook(() =>\n        useScrollOffsetTracker(),\n      );\n\n      mockNavigation.addListener.mockImplementation((event, handler) => {\n        if (event === 'tabPress') tabPressHandler = handler;\n        return jest.fn();\n      });\n\n      renderHook(() =>\n        useTabReselectRefresh({\n          listRef: listRef as any,\n          onRefresh,\n          getOffset: scrollResult.current.getOffset,\n          cooldownMs: 300,\n        }),\n      );\n\n      // Rapid sequence of scrolls and taps\n      act(() => {\n        scrollResult.current.onScroll({\n          nativeEvent: { contentOffset: { x: 0, y: 100 } },\n        } as any);\n        tabPressHandler({ target: 'Home' });\n        scrollResult.current.onScroll({\n          nativeEvent: { contentOffset: { x: 0, y: 200 } },\n        } as any);\n        tabPressHandler({ target: 'Home' });\n      });\n\n      // Should respect cooldown\n      expect(listRef.current.scrollToOffset).toHaveBeenCalled();\n    });\n\n    it('should handle background state correctly', () => {\n      (useIsFocused as jest.Mock).mockReturnValue(false);\n\n      const listRef = { current: { scrollTo: jest.fn() } };\n      const onRefresh = jest.fn();\n      let tabPressHandler: any;\n\n      mockNavigation.addListener.mockImplementation((event, handler) => {\n        if (event === 'tabPress') tabPressHandler = handler;\n        return jest.fn();\n      });\n\n      renderHook(() =>\n        useTabReselectRefresh({\n          listRef: listRef as any,\n          onRefresh,\n        }),\n      );\n\n      // Tab press when not focused\n      act(() => {\n        tabPressHandler({ target: 'Home' });\n      });\n\n      // Should not execute\n      expect(onRefresh).not.toHaveBeenCalled();\n      expect(listRef.current.scrollTo).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('Performance and Edge Cases', () => {\n    it('should handle many rapid scroll events', () => {\n      const { result } = renderHook(() => useScrollOffsetTracker());\n\n      // Simulate 100 rapid scroll events\n      for (let i = 0; i < 100; i++) {\n        act(() => {\n          result.current.onScroll({\n            nativeEvent: {\n              contentOffset: { x: 0, y: i * 10 },\n            },\n          } as any);\n        });\n      }\n\n      expect(result.current.getOffset()).toBe(990);\n    });\n\n    it('should handle memory leaks with multiple hook instances', () => {\n      const hooks = [];\n      for (let i = 0; i < 50; i++) {\n        const { result, unmount } = renderHook(() => useScrollOffsetTracker());\n        hooks.push({ result, unmount });\n      }\n\n      // All should work independently\n      act(() => {\n        hooks[0].result.current.onScroll({\n          nativeEvent: { contentOffset: { x: 0, y: 100 } },\n        } as any);\n      });\n\n      expect(hooks[0].result.current.getOffset()).toBe(100);\n      expect(hooks[49].result.current.getOffset()).toBe(0);\n\n      // Cleanup\n      hooks.forEach(({ unmount }) => unmount());\n    });\n\n    it('should handle cleanup and re-initialization', () => {\n      const { result, unmount, rerender } = renderHook(() =>\n        useScrollOffsetTracker(),\n      );\n\n      act(() => {\n        result.current.onScroll({\n          nativeEvent: { contentOffset: { x: 0, y: 100 } },\n        } as any);\n      });\n\n      unmount();\n\n      const { result: newResult } = renderHook(() => useScrollOffsetTracker());\n\n      expect(newResult.current.getOffset()).toBe(0);\n    });\n  });\n\n  describe('Cross-Component Communication', () => {\n    it('should emit events that can be consumed by other components', () => {\n      const listRef = { current: { scrollTo: jest.fn() } };\n      const onRefresh = jest.fn();\n      let tabPressHandler: any;\n      let doubleTapHandler: any;\n\n      mockNavigation.addListener.mockImplementation((event, handler) => {\n        if (event === 'tabPress') tabPressHandler = handler;\n        if (event === 'tabDoublePress') doubleTapHandler = handler;\n        return jest.fn();\n      });\n\n      renderHook(() =>\n        useTabReselectRefresh({\n          listRef: listRef as any,\n          onRefresh,\n        }),\n      );\n\n      // Single tap emits tabReselect\n      act(() => {\n        tabPressHandler({ target: 'Home' });\n      });\n\n      expect(mockNavigation.emit).toHaveBeenCalledWith({\n        type: 'tabReselect',\n        target: 'Home',\n      });\n\n      mockNavigation.emit.mockClear();\n\n      // Double tap emits tabDoublePulse\n      act(() => {\n        doubleTapHandler({ target: 'Home' });\n      });\n\n      expect(mockNavigation.emit).toHaveBeenCalledWith({\n        type: 'tabDoublePulse',\n        target: 'Home',\n      });\n    });\n  });\n});\n\n"],"mappings":"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","ignoreList":[]}