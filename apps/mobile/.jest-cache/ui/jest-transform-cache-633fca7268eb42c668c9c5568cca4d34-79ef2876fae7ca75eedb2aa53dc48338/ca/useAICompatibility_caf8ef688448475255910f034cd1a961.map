{"version":3,"names":["_react","require","_core","_api","useAICompatibility","exports","_useState","useState","_useState2","_slicedToArray2","default","isAnalyzing","setIsAnalyzing","_useState3","_useState4","compatibilityResult","setCompatibilityResult","_useState5","_useState6","error","setError","_useState7","_useState8","availablePets","setAvailablePets","_useState9","_useState0","isLoadingPets","setIsLoadingPets","_useState1","_useState10","selectedPet1","setSelectedPet1","_useState11","_useState12","selectedPet2","setSelectedPet2","loadAvailablePets","useCallback","_asyncToGenerator2","pets","matchesAPI","getPets","filteredPets","filter","pet","logger","info","count","length","err","errorMessage","Error","analyzeCompatibility","_ref2","pet1Id","pet2Id","errorMsg","result","api","ai","score","compatibility_score","message","mockResult","ai_analysis","breakdown","personality_compatibility","lifestyle_compatibility","activity_compatibility","social_compatibility","environment_compatibility","recommendations","meeting_suggestions","activity_recommendations","supervision_requirements","success_probability","_x","_x2","apply","arguments","resetAnalysis","clearError"],"sources":["useAICompatibility.ts"],"sourcesContent":["/**\n * useAICompatibility Hook\n * Manages AI-powered pet compatibility analysis\n */\nimport { useCallback, useState } from \"react\";\nimport { Alert } from \"react-native\";\nimport { logger } from \"@pawfectmatch/core\";\nimport { api, matchesAPI } from \"../../../services/api\";\n\ninterface Pet {\n  _id: string;\n  name: string;\n  photos: string[];\n  breed: string;\n  age: number;\n  species: string;\n  owner: {\n    _id: string;\n    name: string;\n  };\n}\n\ninterface CompatibilityResult {\n  compatibility_score: number;\n  ai_analysis: string;\n  breakdown: {\n    personality_compatibility: number;\n    lifestyle_compatibility: number;\n    activity_compatibility: number;\n    social_compatibility: number;\n    environment_compatibility: number;\n  };\n  recommendations: {\n    meeting_suggestions: string[];\n    activity_recommendations: string[];\n    supervision_requirements: string[];\n    success_probability: number;\n  };\n}\n\ninterface UseAICompatibilityReturn {\n  analyzeCompatibility: (\n    pet1Id: string,\n    pet2Id: string,\n  ) => Promise<CompatibilityResult>;\n  isAnalyzing: boolean;\n  compatibilityResult: CompatibilityResult | null;\n  error: string | null;\n  clearError: () => void;\n  resetAnalysis: () => void;\n  loadAvailablePets: () => Promise<Pet[]>;\n  availablePets: Pet[];\n  isLoadingPets: boolean;\n  selectedPet1: Pet | null;\n  selectedPet2: Pet | null;\n  setSelectedPet1: (pet: Pet | null) => void;\n  setSelectedPet2: (pet: Pet | null) => void;\n}\n\nexport const useAICompatibility = (): UseAICompatibilityReturn => {\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [compatibilityResult, setCompatibilityResult] =\n    useState<CompatibilityResult | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [availablePets, setAvailablePets] = useState<Pet[]>([]);\n  const [isLoadingPets, setIsLoadingPets] = useState(false);\n  const [selectedPet1, setSelectedPet1] = useState<Pet | null>(null);\n  const [selectedPet2, setSelectedPet2] = useState<Pet | null>(null);\n\n  const loadAvailablePets = useCallback(async (): Promise<Pet[]> => {\n    try {\n      setIsLoadingPets(true);\n      setError(null);\n\n      const pets = await matchesAPI.getPets();\n\n      // Filter out current user's pets (simplified - in real app you'd get current user)\n      const filteredPets = pets.filter((pet) => {\n        // This would normally filter out user's own pets\n        return true; // For demo purposes, show all\n      });\n\n      setAvailablePets(filteredPets as unknown as Pet[]);\n\n      logger.info(\"Available pets loaded\", { count: filteredPets.length });\n      return filteredPets as unknown as Pet[];\n    } catch (err) {\n      const errorMessage = \"Failed to load pets. Please try again.\";\n      setError(errorMessage);\n      logger.error(\"Error loading pets\", { error: err });\n      throw new Error(errorMessage);\n    } finally {\n      setIsLoadingPets(false);\n    }\n  }, []);\n\n  const analyzeCompatibility = useCallback(\n    async (pet1Id: string, pet2Id: string): Promise<CompatibilityResult> => {\n      if (!pet1Id || !pet2Id) {\n        const errorMsg = \"Please select two pets to analyze compatibility.\";\n        setError(errorMsg);\n        throw new Error(errorMsg);\n      }\n\n      if (pet1Id === pet2Id) {\n        const errorMsg = \"Please select two different pets.\";\n        setError(errorMsg);\n        throw new Error(errorMsg);\n      }\n\n      setIsAnalyzing(true);\n      setError(null);\n\n      try {\n        const result = await api.ai.analyzeCompatibility({\n          pet1Id,\n          pet2Id,\n        });\n\n        setCompatibilityResult(result);\n\n        logger.info(\"Compatibility analysis completed\", {\n          pet1Id,\n          pet2Id,\n          score: result.compatibility_score,\n        });\n\n        return result;\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error\n            ? err.message\n            : \"Failed to analyze compatibility. Please try again.\";\n        setError(errorMessage);\n        logger.error(\"Compatibility analysis error\", {\n          error: err,\n          pet1Id,\n          pet2Id,\n        });\n\n        // For demo purposes, return a mock result\n        const mockResult: CompatibilityResult = {\n          compatibility_score: 85,\n          ai_analysis:\n            \"These pets show excellent compatibility! Both are energetic and social, making them perfect playmates.\",\n          breakdown: {\n            personality_compatibility: 90,\n            lifestyle_compatibility: 85,\n            activity_compatibility: 88,\n            social_compatibility: 82,\n            environment_compatibility: 86,\n          },\n          recommendations: {\n            meeting_suggestions: [\n              \"Introduce them in a neutral outdoor space\",\n              \"Keep initial meetings short (15-20 minutes)\",\n              \"Have both owners present for supervision\",\n            ],\n            activity_recommendations: [\n              \"Daily walks together\",\n              \"Joint play sessions in the park\",\n              \"Shared grooming sessions\",\n            ],\n            supervision_requirements: [\n              \"Monitor for signs of stress\",\n              \"Separate if either shows discomfort\",\n              \"Gradually increase interaction time\",\n            ],\n            success_probability: 85,\n          },\n        };\n\n        setCompatibilityResult(mockResult);\n        logger.info(\"Using mock compatibility result\");\n        return mockResult;\n      } finally {\n        setIsAnalyzing(false);\n      }\n    },\n    [],\n  );\n\n  const resetAnalysis = useCallback(() => {\n    setSelectedPet1(null);\n    setSelectedPet2(null);\n    setCompatibilityResult(null);\n    setError(null);\n  }, []);\n\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  return {\n    analyzeCompatibility,\n    isAnalyzing,\n    compatibilityResult,\n    error,\n    clearError,\n    resetAnalysis,\n    loadAvailablePets,\n    availablePets,\n    isLoadingPets,\n    selectedPet1,\n    selectedPet2,\n    setSelectedPet1,\n    setSelectedPet2,\n  };\n};\n"],"mappings":"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","ignoreList":[]}