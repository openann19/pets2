{"version":3,"names":["_react","require","Haptics","_interopRequireWildcard","_reactQuery","_core","_useSocket","_apiClient","_interopRequireDefault","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useStories","exports","initialGroupIndex","arguments","length","undefined","_useState","useState","_useState2","_slicedToArray2","currentGroupIndex","setCurrentGroupIndex","_useState3","_useState4","currentStoryIndex","setCurrentStoryIndex","_useState5","_useState6","isPaused","setIsPaused","_useState7","_useState8","isMuted","setIsMuted","_useState9","_useState0","progress","setProgress","_useState1","_useState10","viewCount","setViewCount","timerRef","useRef","progressIntervalRef","longPressTimer","socket","useSocket","_useQuery","useQuery","queryKey","queryFn","_queryFn","_asyncToGenerator2","response","apiClient","stories","apply","storyGroups","data","isLoading","error","refetch","currentGroup","refreshStories","useCallback","currentStory","viewStoryMutation","useMutation","mutationFn","_mutationFn","storyId","post","_x","onSuccess","goToNextStory","impactAsync","ImpactFeedbackStyle","Light","prev","logger","info","goToPreviousStory","prevGroupIndex","prevGroup","goToGroup","groupIndex","goToStory","storyIndex","group","useEffect","duration","startTime","Date","now","current","setInterval","elapsed","newProgress","Math","min","setTimeout","clearTimeout","clearInterval","mutate","_id","handleStoryViewed","on","off","markAsViewed","_ref2","mutateAsync","_x2","setPaused","paused","setMuted","muted","message"],"sources":["useStories.ts"],"sourcesContent":["/**\n * useStories Hook\n * Manages stories feed, navigation, progress tracking, and viewing interactions\n */\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport * as Haptics from \"expo-haptics\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { logger } from \"@pawfectmatch/core\";\nimport { useSocket } from \"../../useSocket\";\nimport apiClient from \"../../../services/apiClient\";\n\ninterface Story {\n  _id: string;\n  userId: string;\n  mediaType: \"photo\" | \"video\";\n  mediaUrl: string;\n  caption?: string;\n  duration: number;\n  viewCount: number;\n  createdAt: string;\n}\n\ninterface StoryUser {\n  _id: string;\n  username: string;\n  profilePhoto?: string;\n}\n\ninterface StoryGroup {\n  userId: string;\n  user: StoryUser;\n  stories: Story[];\n  storyCount: number;\n}\n\ninterface StoriesFeedResponse {\n  stories: StoryGroup[];\n  success: boolean;\n}\n\ninterface ViewStoryResponse {\n  success: boolean;\n  viewCount: number;\n}\n\ninterface UseStoriesReturn {\n  // Data\n  storyGroups: StoryGroup[] | undefined;\n  isLoading: boolean;\n  error: string | null;\n\n  // Current navigation state\n  currentGroupIndex: number;\n  currentStoryIndex: number;\n  currentGroup: StoryGroup | undefined;\n  currentStory: Story | undefined;\n  progress: number;\n  viewCount: number;\n\n  // Controls\n  isPaused: boolean;\n  isMuted: boolean;\n  setPaused: (paused: boolean) => void;\n  setMuted: (muted: boolean) => void;\n\n  // Navigation\n  goToNextStory: () => void;\n  goToPreviousStory: () => void;\n  goToGroup: (groupIndex: number) => void;\n  goToStory: (groupIndex: number, storyIndex: number) => void;\n\n  // Actions\n  markAsViewed: (storyId: string) => Promise<void>;\n  refreshStories: () => Promise<void>;\n\n  // Refs for external use (video, timers, etc.)\n  timerRef: React.MutableRefObject<NodeJS.Timeout | null>;\n  progressIntervalRef: React.MutableRefObject<NodeJS.Timeout | null>;\n  longPressTimer: React.MutableRefObject<NodeJS.Timeout | null>;\n}\n\nexport const useStories = (initialGroupIndex: number = 0): UseStoriesReturn => {\n  const [currentGroupIndex, setCurrentGroupIndex] = useState(initialGroupIndex);\n  const [currentStoryIndex, setCurrentStoryIndex] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [viewCount, setViewCount] = useState(0);\n\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n  const progressIntervalRef = useRef<NodeJS.Timeout | null>(null);\n  const longPressTimer = useRef<NodeJS.Timeout | null>(null);\n  const socket = useSocket();\n\n  // Fetch stories feed\n  const {\n    data: storyGroups,\n    isLoading,\n    error,\n    refetch,\n  } = useQuery({\n    queryKey: [\"stories-feed\"],\n    queryFn: async () => {\n      const response = await apiClient.get<StoriesFeedResponse>(\"/stories\");\n      return response.stories;\n    },\n  });\n\n  const currentGroup = storyGroups?.[currentGroupIndex];\n\n  // Wrapper function to match expected interface\n  const refreshStories = useCallback(async (): Promise<void> => {\n    await refetch();\n  }, [refetch]);\n\n  const currentStory = currentGroup?.stories[currentStoryIndex];\n\n  // Mark story as viewed mutation\n  const viewStoryMutation = useMutation({\n    mutationFn: async (storyId: string) => {\n      const response = await apiClient.post<ViewStoryResponse>(\n        `/stories/${storyId}/view`,\n      );\n      return response;\n    },\n    onSuccess: (data: ViewStoryResponse) => {\n      setViewCount(data.viewCount);\n    },\n  });\n\n  // Navigation functions\n  const goToNextStory = useCallback(() => {\n    if (!currentGroup) return;\n\n    Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n\n    if (currentStoryIndex < currentGroup.stories.length - 1) {\n      setCurrentStoryIndex((prev) => prev + 1);\n      setProgress(0);\n    } else if (storyGroups && currentGroupIndex < storyGroups.length - 1) {\n      setCurrentGroupIndex((prev) => prev + 1);\n      setCurrentStoryIndex(0);\n      setProgress(0);\n    } else {\n      // End of stories - could emit event for parent to handle navigation\n      logger.info(\"Reached end of stories\");\n    }\n  }, [currentGroup, currentStoryIndex, currentGroupIndex, storyGroups]);\n\n  const goToPreviousStory = useCallback(() => {\n    Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n\n    if (currentStoryIndex > 0) {\n      setCurrentStoryIndex((prev) => prev - 1);\n      setProgress(0);\n    } else if (currentGroupIndex > 0 && storyGroups) {\n      const prevGroupIndex = currentGroupIndex - 1;\n      const prevGroup = storyGroups[prevGroupIndex];\n      if (prevGroup) {\n        setCurrentGroupIndex(prevGroupIndex);\n        setCurrentStoryIndex(prevGroup.stories.length - 1);\n        setProgress(0);\n      }\n    }\n  }, [currentStoryIndex, currentGroupIndex, storyGroups]);\n\n  const goToGroup = useCallback(\n    (groupIndex: number) => {\n      if (groupIndex >= 0 && storyGroups && groupIndex < storyGroups.length) {\n        setCurrentGroupIndex(groupIndex);\n        setCurrentStoryIndex(0);\n        setProgress(0);\n      }\n    },\n    [storyGroups],\n  );\n\n  const goToStory = useCallback(\n    (groupIndex: number, storyIndex: number) => {\n      if (groupIndex >= 0 && storyGroups && groupIndex < storyGroups.length) {\n        const group = storyGroups[groupIndex];\n        if (group && storyIndex >= 0 && storyIndex < group.stories.length) {\n          setCurrentGroupIndex(groupIndex);\n          setCurrentStoryIndex(storyIndex);\n          setProgress(0);\n        }\n      }\n    },\n    [storyGroups],\n  );\n\n  // Auto-advance timer\n  useEffect(() => {\n    if (!currentStory || isPaused) return;\n\n    const duration = currentStory.duration * 1000;\n    const startTime = Date.now();\n\n    // Progress update interval\n    progressIntervalRef.current = setInterval(() => {\n      const elapsed = Date.now() - startTime;\n      const newProgress = Math.min((elapsed / duration) * 100, 100);\n      setProgress(newProgress);\n    }, 16); // ~60fps\n\n    // Auto-advance timer\n    timerRef.current = setTimeout(() => {\n      goToNextStory();\n    }, duration);\n\n    return () => {\n      if (timerRef.current) clearTimeout(timerRef.current);\n      if (progressIntervalRef.current)\n        clearInterval(progressIntervalRef.current);\n    };\n  }, [currentStory, isPaused, goToNextStory]);\n\n  // Mark story as viewed\n  useEffect(() => {\n    if (currentStory) {\n      viewStoryMutation.mutate(currentStory._id);\n    }\n  }, [currentStory?._id]);\n\n  // Socket.io real-time view updates\n  useEffect(() => {\n    if (!socket || !currentStory) return;\n\n    const handleStoryViewed = (data: {\n      storyId: string;\n      viewCount: number;\n    }) => {\n      if (data.storyId === currentStory._id) {\n        setViewCount(data.viewCount);\n      }\n    };\n\n    socket.on(\"story:viewed\", handleStoryViewed);\n    return () => {\n      socket.off(\"story:viewed\", handleStoryViewed);\n    };\n  }, [socket, currentStory?._id]);\n\n  const markAsViewed = useCallback(\n    async (storyId: string) => {\n      try {\n        await viewStoryMutation.mutateAsync(storyId);\n      } catch (error) {\n        logger.error(\"Failed to mark story as viewed\", { error, storyId });\n      }\n    },\n    [viewStoryMutation],\n  );\n\n  const setPaused = useCallback((paused: boolean) => {\n    setIsPaused(paused);\n  }, []);\n\n  const setMuted = useCallback((muted: boolean) => {\n    setIsMuted(muted);\n  }, []);\n\n  return {\n    // Data\n    storyGroups,\n    isLoading,\n    error: error?.message || null,\n\n    // Current navigation state\n    currentGroupIndex,\n    currentStoryIndex,\n    currentGroup,\n    currentStory,\n    progress,\n    viewCount,\n\n    // Controls\n    isPaused,\n    isMuted,\n    setPaused,\n    setMuted,\n\n    // Navigation\n    goToNextStory,\n    goToPreviousStory,\n    goToGroup,\n    goToStory,\n\n    // Actions\n    markAsViewed,\n    refreshStories,\n\n    // Refs for external use\n    timerRef,\n    progressIntervalRef,\n    longPressTimer,\n  };\n};\n"],"mappings":"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","ignoreList":[]}