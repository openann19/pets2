{"version":3,"names":["_native","require","_react","_reactNative","_core","_useAICompatibility2","useAICompatibilityScreen","exports","route","navigation","useNavigation","_useAICompatibility","useAICompatibility","analyzeCompat","analyzeCompatibility","isAnalyzing","compatibilityResult","error","loadAvailablePets","availablePets","isLoadingPets","selectedPet1","selectedPet2","setSelectedPet1","setSelectedPet2","resetAnalysis","clearError","useEffect","params","petAId","petBId","loadSpecificPets","_ref","_asyncToGenerator2","default","pet1Id","pet2Id","length","pet1","find","p","_id","pet2","setTimeout","handleAnalyzeCompatibility","err","logger","_x","_x2","apply","arguments","_ref2","Alert","alert","handleGoBack","goBack"],"sources":["useAICompatibilityScreen.ts"],"sourcesContent":["/**\n * useAICompatibilityScreen Hook\n * Manages AI Compatibility Analysis screen state and interactions\n */\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useEffect } from \"react\";\nimport { Alert } from \"react-native\";\nimport { logger } from \"@pawfectmatch/core\";\nimport { useAICompatibility } from \"../domains/ai/useAICompatibility\";\n\ninterface UseAICompatibilityScreenReturn {\n  // State from domain hook\n  isAnalyzing: boolean;\n  compatibilityResult: any | null;\n  error: string | null;\n  availablePets: any[];\n  isLoadingPets: boolean;\n  selectedPet1: any | null;\n  selectedPet2: any | null;\n\n  // Actions\n  setSelectedPet1: (pet: any | null) => void;\n  setSelectedPet2: (pet: any | null) => void;\n  analyzeCompatibility: () => Promise<void>;\n  resetAnalysis: () => void;\n  handleGoBack: () => void;\n  clearError: () => void;\n}\n\nexport const useAICompatibilityScreen = (route?: {\n  params?: { petAId?: string; petBId?: string };\n}): UseAICompatibilityScreenReturn => {\n  const navigation = useNavigation();\n  const {\n    analyzeCompatibility: analyzeCompat,\n    isAnalyzing,\n    compatibilityResult,\n    error,\n    loadAvailablePets,\n    availablePets,\n    isLoadingPets,\n    selectedPet1,\n    selectedPet2,\n    setSelectedPet1,\n    setSelectedPet2,\n    resetAnalysis,\n    clearError,\n  } = useAICompatibility();\n\n  useEffect(() => {\n    void loadAvailablePets();\n\n    // Check if pets were passed via route params\n    const params = route?.params;\n    if (params?.petAId && params?.petBId) {\n      // Load specific pets for analysis\n      loadSpecificPets(params.petAId, params.petBId);\n    }\n  }, [route?.params]);\n\n  const loadSpecificPets = async (pet1Id: string, pet2Id: string) => {\n    try {\n      // Wait for pets to load first\n      if (availablePets.length === 0) {\n        await loadAvailablePets();\n      }\n\n      const pet1 = availablePets.find((p) => p._id === pet1Id);\n      const pet2 = availablePets.find((p) => p._id === pet2Id);\n\n      if (pet1 && pet2) {\n        setSelectedPet1(pet1);\n        setSelectedPet2(pet2);\n        // Auto-analyze if both pets are selected\n        setTimeout(() => void handleAnalyzeCompatibility(), 500);\n      }\n    } catch (err) {\n      logger.error(\"Error loading specific pets\", { error: err });\n    }\n  };\n\n  const handleAnalyzeCompatibility = async () => {\n    if (!selectedPet1 || !selectedPet2) {\n      Alert.alert(\n        \"Selection Required\",\n        \"Please select two pets to analyze compatibility.\",\n      );\n      return;\n    }\n\n    try {\n      await analyzeCompat(selectedPet1._id, selectedPet2._id);\n    } catch (error) {\n      logger.error(\"Compatibility analysis failed\", { error });\n      // Error handling is done in the domain hook\n    }\n  };\n\n  const handleGoBack = () => {\n    navigation.goBack();\n  };\n\n  return {\n    // State from domain hook\n    isAnalyzing,\n    compatibilityResult,\n    error,\n    availablePets,\n    isLoadingPets,\n    selectedPet1,\n    selectedPet2,\n\n    // Actions\n    setSelectedPet1,\n    setSelectedPet2,\n    analyzeCompatibility: handleAnalyzeCompatibility,\n    resetAnalysis,\n    handleGoBack,\n    clearError,\n  };\n};\n"],"mappings":"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","ignoreList":[]}