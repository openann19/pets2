{"version":3,"names":["_native","require","_useUserIntent2","useUserIntentScreen","exports","navigation","useNavigation","_useUserIntent","useUserIntent","intents","selectedIntent","isNavigating","selectIntent","confirmIntent","isValidSelection","handleContinue","_ref","_asyncToGenerator2","default","intent","navigate","userIntent","error","apply","arguments","handleGoBack","goBack"],"sources":["useUserIntentScreen.ts"],"sourcesContent":["/**\n * useUserIntentScreen Hook\n * Manages User Intent screen with animations and navigation\n */\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useUserIntent } from \"../domains/onboarding/useUserIntent\";\nimport type { OnboardingScreenProps } from \"../../navigation/types\";\n\ninterface UseUserIntentScreenReturn {\n  // From domain hook\n  intents: any[];\n  selectedIntent: string | null;\n  isNavigating: boolean;\n  selectIntent: (intentId: string) => void;\n  isValidSelection: boolean;\n\n  // Navigation\n  handleContinue: () => Promise<void>;\n  handleGoBack: () => void;\n}\n\nexport const useUserIntentScreen = (): UseUserIntentScreenReturn => {\n  const navigation = useNavigation<any>();\n\n  const {\n    intents,\n    selectedIntent,\n    isNavigating,\n    selectIntent,\n    confirmIntent,\n    isValidSelection,\n  } = useUserIntent();\n\n  const handleContinue = async () => {\n    if (!isValidSelection) return;\n\n    try {\n      const intent = await confirmIntent();\n      navigation.navigate(\"PetProfileSetup\", { userIntent: intent });\n    } catch (error) {\n      // Error handling is done in the domain hook\n    }\n  };\n\n  const handleGoBack = () => {\n    navigation.goBack();\n  };\n\n  return {\n    // From domain hook\n    intents,\n    selectedIntent,\n    isNavigating,\n    selectIntent,\n    isValidSelection,\n\n    // Navigation\n    handleContinue,\n    handleGoBack,\n  };\n};\n"],"mappings":";;;;;;;;AAIA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,eAAA,GAAAD,OAAA;AAgBO,IAAME,mBAAmB,GAAAC,OAAA,CAAAD,mBAAA,GAAG,SAAtBA,mBAAmBA,CAAA,EAAoC;EAClE,IAAME,UAAU,GAAG,IAAAC,qBAAa,EAAM,CAAC;EAEvC,IAAAC,cAAA,GAOI,IAAAC,6BAAa,EAAC,CAAC;IANjBC,OAAO,GAAAF,cAAA,CAAPE,OAAO;IACPC,cAAc,GAAAH,cAAA,CAAdG,cAAc;IACdC,YAAY,GAAAJ,cAAA,CAAZI,YAAY;IACZC,YAAY,GAAAL,cAAA,CAAZK,YAAY;IACZC,aAAa,GAAAN,cAAA,CAAbM,aAAa;IACbC,gBAAgB,GAAAP,cAAA,CAAhBO,gBAAgB;EAGlB,IAAMC,cAAc;IAAA,IAAAC,IAAA,OAAAC,kBAAA,CAAAC,OAAA,EAAG,aAAY;MACjC,IAAI,CAACJ,gBAAgB,EAAE;MAEvB,IAAI;QACF,IAAMK,MAAM,SAASN,aAAa,CAAC,CAAC;QACpCR,UAAU,CAACe,QAAQ,CAAC,iBAAiB,EAAE;UAAEC,UAAU,EAAEF;QAAO,CAAC,CAAC;MAChE,CAAC,CAAC,OAAOG,KAAK,EAAE,CAEhB;IACF,CAAC;IAAA,gBATKP,cAAcA,CAAA;MAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GASnB;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBpB,UAAU,CAACqB,MAAM,CAAC,CAAC;EACrB,CAAC;EAED,OAAO;IAELjB,OAAO,EAAPA,OAAO;IACPC,cAAc,EAAdA,cAAc;IACdC,YAAY,EAAZA,YAAY;IACZC,YAAY,EAAZA,YAAY;IACZE,gBAAgB,EAAhBA,gBAAgB;IAGhBC,cAAc,EAAdA,cAAc;IACdU,YAAY,EAAZA;EACF,CAAC;AACH,CAAC","ignoreList":[]}