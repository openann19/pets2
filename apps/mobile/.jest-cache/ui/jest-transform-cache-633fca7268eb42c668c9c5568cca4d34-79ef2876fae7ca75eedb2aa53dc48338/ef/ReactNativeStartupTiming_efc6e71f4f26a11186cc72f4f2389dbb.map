{"version":3,"names":["ReactNativeStartupTiming","exports","default","startUpTiming","_classCallCheck2","_startTime","_endTime","_executeJavaScriptBundleEntryPointStart","_executeJavaScriptBundleEntryPointEnd","startTime","endTime","executeJavaScriptBundleEntryPointStart","executeJavaScriptBundleEntryPointEnd","_createClass2","key","get"],"sources":["ReactNativeStartupTiming.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n * @oncall react_native\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {ReactNativeStartupTiming as ReactNativeStartupTimingType} from './NativePerformance';\n\n// Read-only object with RN startup timing information.\n// This is returned by the performance.reactNativeStartup API.\nexport default class ReactNativeStartupTiming {\n  // All time information here are in ms. To match web spec,\n  // the default value for timings are zero if not present.\n  // See https://www.w3.org/TR/performance-timeline/#performancetiming-interface\n  _startTime = 0;\n  _endTime = 0;\n  _executeJavaScriptBundleEntryPointStart = 0;\n  _executeJavaScriptBundleEntryPointEnd = 0;\n\n  constructor(startUpTiming: ?ReactNativeStartupTimingType) {\n    if (startUpTiming != null) {\n      this._startTime = startUpTiming.startTime;\n      this._endTime = startUpTiming.endTime;\n      this._executeJavaScriptBundleEntryPointStart =\n        startUpTiming.executeJavaScriptBundleEntryPointStart;\n      this._executeJavaScriptBundleEntryPointEnd =\n        startUpTiming.executeJavaScriptBundleEntryPointEnd;\n    }\n  }\n\n  /**\n   *  Start time of the RN app startup process. This is provided by the platform by implementing the `ReactMarker.setAppStartTime` API in the native platform code.\n   */\n  get startTime(): number {\n    return this._startTime;\n  }\n\n  /**\n   * End time of the RN app startup process. This is equal to `executeJavaScriptBundleEntryPointEnd`.\n   */\n  get endTime(): number {\n    return this._endTime;\n  }\n\n  /**\n   * Start time of JS bundle being executed. This indicates the RN JS bundle is loaded and start to be evaluated.\n   */\n  get executeJavaScriptBundleEntryPointStart(): number {\n    return this._executeJavaScriptBundleEntryPointStart;\n  }\n\n  /**\n   * End time of JS bundle being executed. This indicates all the synchronous entry point jobs are finished.\n   */\n  get executeJavaScriptBundleEntryPointEnd(): number {\n    return this._executeJavaScriptBundleEntryPointEnd;\n  }\n}\n"],"mappings":";;;;;;;;;IAiBqBA,wBAAwB,GAAAC,OAAA,CAAAC,OAAA;EAS3C,SAAAF,yBAAYG,aAA4C,EAAE;IAAA,IAAAC,gBAAA,CAAAF,OAAA,QAAAF,wBAAA;IAAA,KAL1DK,UAAU,GAAG,CAAC;IAAA,KACdC,QAAQ,GAAG,CAAC;IAAA,KACZC,uCAAuC,GAAG,CAAC;IAAA,KAC3CC,qCAAqC,GAAG,CAAC;IAGvC,IAAIL,aAAa,IAAI,IAAI,EAAE;MACzB,IAAI,CAACE,UAAU,GAAGF,aAAa,CAACM,SAAS;MACzC,IAAI,CAACH,QAAQ,GAAGH,aAAa,CAACO,OAAO;MACrC,IAAI,CAACH,uCAAuC,GAC1CJ,aAAa,CAACQ,sCAAsC;MACtD,IAAI,CAACH,qCAAqC,GACxCL,aAAa,CAACS,oCAAoC;IACtD;EACF;EAAC,WAAAC,aAAA,CAAAX,OAAA,EAAAF,wBAAA;IAAAc,GAAA;IAAAC,GAAA,EAKD,SAAAA,IAAA,EAAwB;MACtB,OAAO,IAAI,CAACV,UAAU;IACxB;EAAC;IAAAS,GAAA;IAAAC,GAAA,EAKD,SAAAA,IAAA,EAAsB;MACpB,OAAO,IAAI,CAACT,QAAQ;IACtB;EAAC;IAAAQ,GAAA;IAAAC,GAAA,EAKD,SAAAA,IAAA,EAAqD;MACnD,OAAO,IAAI,CAACR,uCAAuC;IACrD;EAAC;IAAAO,GAAA;IAAAC,GAAA,EAKD,SAAAA,IAAA,EAAmD;MACjD,OAAO,IAAI,CAACP,qCAAqC;IACnD;EAAC;AAAA","ignoreList":[]}