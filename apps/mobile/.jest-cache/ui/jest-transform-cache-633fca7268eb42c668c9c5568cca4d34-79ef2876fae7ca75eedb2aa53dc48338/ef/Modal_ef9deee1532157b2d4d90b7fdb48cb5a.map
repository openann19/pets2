{"version":3,"names":["_NativeEventEmitter","_interopRequireDefault","require","_ModalInjection","_NativeModalManager","_RCTModalHostViewNativeComponent","_virtualizedLists","_jsxRuntime","_ModalInjection$unsta","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","ScrollView","View","AppContainer","I18nManager","_require","RootTagContext","StyleSheet","Platform","React","ModalEventEmitter","OS","NativeModalManager","NativeEventEmitter","uniqueModalIdentifier","confirmProps","props","__DEV__","presentationStyle","transparent","console","warn","Modal","_React$Component","_this","_classCallCheck2","_identifier","_inherits2","_createClass2","key","value","componentDidMount","_this2","_eventSubscription","addListener","event","modalID","onDismiss","componentWillUnmount","remove","componentDidUpdate","render","_this3","visible","containerStyles","backgroundColor","animationType","innerChildren","jsx","rootTag","context","children","hardwareAccelerated","onRequestClose","onShow","statusBarTranslucent","identifier","style","styles","modal","onStartShouldSetResponder","_shouldSetResponder","supportedOrientations","onOrientationChange","testID","VirtualizedListContextResetter","Context","Provider","container","collapsable","Component","defaultProps","contextType","side","getConstants","isRTL","create","position","_defineProperty2","ExportedModal","ModalInjection","unstable_Modal","module","exports"],"sources":["Modal.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../Components/View/ViewPropTypes';\nimport type {RootTag} from '../ReactNative/RootTag';\nimport type {DirectEventHandler} from '../Types/CodegenTypes';\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport ModalInjection from './ModalInjection';\nimport NativeModalManager from './NativeModalManager';\nimport RCTModalHostView from './RCTModalHostViewNativeComponent';\nimport {VirtualizedListContextResetter} from '@react-native/virtualized-lists';\n\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst View = require('../Components/View/View');\nconst AppContainer = require('../ReactNative/AppContainer');\nconst I18nManager = require('../ReactNative/I18nManager');\nconst {RootTagContext} = require('../ReactNative/RootTag');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Platform = require('../Utilities/Platform');\nconst React = require('react');\n\ntype ModalEventDefinitions = {\n  modalDismissed: [{modalID: number}],\n};\n\nconst ModalEventEmitter =\n  Platform.OS === 'ios' && NativeModalManager != null\n    ? new NativeEventEmitter<ModalEventDefinitions>(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        Platform.OS !== 'ios' ? null : NativeModalManager,\n      )\n    : null;\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n *\n * See https://reactnative.dev/docs/modal\n */\n\n// In order to route onDismiss callbacks, we need to uniquely identifier each\n// <Modal> on screen. There can be different ones, either nested or as siblings.\n// We cannot pass the onDismiss callback to native as the view will be\n// destroyed before the callback is fired.\nlet uniqueModalIdentifier = 0;\n\ntype OrientationChangeEvent = $ReadOnly<{|\n  orientation: 'portrait' | 'landscape',\n|}>;\n\nexport type Props = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * The `animationType` prop controls how the modal animates.\n   *\n   * See https://reactnative.dev/docs/modal#animationtype\n   */\n  animationType?: ?('none' | 'slide' | 'fade'),\n\n  /**\n   * The `presentationStyle` prop controls how the modal appears.\n   *\n   * See https://reactnative.dev/docs/modal#presentationstyle\n   */\n  presentationStyle?: ?(\n    | 'fullScreen'\n    | 'pageSheet'\n    | 'formSheet'\n    | 'overFullScreen'\n  ),\n\n  /**\n   * The `transparent` prop determines whether your modal will fill the\n   * entire view.\n   *\n   * See https://reactnative.dev/docs/modal#transparent\n   */\n  transparent?: ?boolean,\n\n  /**\n   * The `statusBarTranslucent` prop determines whether your modal should go under\n   * the system statusbar.\n   *\n   * See https://reactnative.dev/docs/modal.html#statusbartranslucent-android\n   */\n  statusBarTranslucent?: ?boolean,\n\n  /**\n   * The `hardwareAccelerated` prop controls whether to force hardware\n   * acceleration for the underlying window.\n   *\n   * This prop works only on Android.\n   *\n   * See https://reactnative.dev/docs/modal#hardwareaccelerated\n   */\n  hardwareAccelerated?: ?boolean,\n\n  /**\n   * The `visible` prop determines whether your modal is visible.\n   *\n   * See https://reactnative.dev/docs/modal#visible\n   */\n  visible?: ?boolean,\n\n  /**\n   * The `onRequestClose` callback is called when the user taps the hardware\n   * back button on Android or the menu button on Apple TV.\n   *\n   * This is required on Apple TV and Android.\n   *\n   * See https://reactnative.dev/docs/modal#onrequestclose\n   */\n  onRequestClose?: ?DirectEventHandler<null>,\n\n  /**\n   * The `onShow` prop allows passing a function that will be called once the\n   * modal has been shown.\n   *\n   * See https://reactnative.dev/docs/modal#onshow\n   */\n  onShow?: ?DirectEventHandler<null>,\n\n  /**\n   * The `onDismiss` prop allows passing a function that will be called once\n   * the modal has been dismissed.\n   *\n   * See https://reactnative.dev/docs/modal#ondismiss\n   */\n  onDismiss?: ?() => mixed,\n\n  /**\n   * The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\n   *\n   * See https://reactnative.dev/docs/modal#supportedorientations\n   */\n  supportedOrientations?: ?$ReadOnlyArray<\n    | 'portrait'\n    | 'portrait-upside-down'\n    | 'landscape'\n    | 'landscape-left'\n    | 'landscape-right',\n  >,\n\n  /**\n   * The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\n   *\n   * See https://reactnative.dev/docs/modal#onorientationchange\n   */\n  onOrientationChange?: ?DirectEventHandler<OrientationChangeEvent>,\n|}>;\n\nfunction confirmProps(props: Props) {\n  if (__DEV__) {\n    if (\n      props.presentationStyle &&\n      props.presentationStyle !== 'overFullScreen' &&\n      props.transparent === true\n    ) {\n      console.warn(\n        `Modal with '${props.presentationStyle}' presentation style and 'transparent' value is not supported.`,\n      );\n    }\n  }\n}\n\nclass Modal extends React.Component<Props> {\n  static defaultProps: {|hardwareAccelerated: boolean, visible: boolean|} = {\n    visible: true,\n    hardwareAccelerated: false,\n  };\n\n  static contextType: React.Context<RootTag> = RootTagContext;\n\n  _identifier: number;\n  _eventSubscription: ?EventSubscription;\n\n  constructor(props: Props) {\n    super(props);\n    if (__DEV__) {\n      confirmProps(props);\n    }\n    this._identifier = uniqueModalIdentifier++;\n  }\n\n  componentDidMount() {\n    // 'modalDismissed' is for the old renderer in iOS only\n    if (ModalEventEmitter) {\n      this._eventSubscription = ModalEventEmitter.addListener(\n        'modalDismissed',\n        event => {\n          if (event.modalID === this._identifier && this.props.onDismiss) {\n            this.props.onDismiss();\n          }\n        },\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._eventSubscription) {\n      this._eventSubscription.remove();\n    }\n  }\n\n  componentDidUpdate() {\n    if (__DEV__) {\n      confirmProps(this.props);\n    }\n  }\n\n  render(): React.Node {\n    if (this.props.visible !== true) {\n      return null;\n    }\n\n    const containerStyles = {\n      backgroundColor:\n        this.props.transparent === true ? 'transparent' : 'white',\n    };\n\n    let animationType = this.props.animationType || 'none';\n\n    let presentationStyle = this.props.presentationStyle;\n    if (!presentationStyle) {\n      presentationStyle = 'fullScreen';\n      if (this.props.transparent === true) {\n        presentationStyle = 'overFullScreen';\n      }\n    }\n\n    const innerChildren = __DEV__ ? (\n      <AppContainer rootTag={this.context}>{this.props.children}</AppContainer>\n    ) : (\n      this.props.children\n    );\n\n    return (\n      <RCTModalHostView\n        animationType={animationType}\n        presentationStyle={presentationStyle}\n        transparent={this.props.transparent}\n        hardwareAccelerated={this.props.hardwareAccelerated}\n        onRequestClose={this.props.onRequestClose}\n        onShow={this.props.onShow}\n        onDismiss={() => {\n          if (this.props.onDismiss) {\n            this.props.onDismiss();\n          }\n        }}\n        visible={this.props.visible}\n        statusBarTranslucent={this.props.statusBarTranslucent}\n        identifier={this._identifier}\n        style={styles.modal}\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        onStartShouldSetResponder={this._shouldSetResponder}\n        supportedOrientations={this.props.supportedOrientations}\n        onOrientationChange={this.props.onOrientationChange}\n        testID={this.props.testID}>\n        <VirtualizedListContextResetter>\n          <ScrollView.Context.Provider value={null}>\n            <View\n              style={[styles.container, containerStyles]}\n              collapsable={false}>\n              {innerChildren}\n            </View>\n          </ScrollView.Context.Provider>\n        </VirtualizedListContextResetter>\n      </RCTModalHostView>\n    );\n  }\n\n  // We don't want any responder events bubbling out of the modal.\n  _shouldSetResponder(): boolean {\n    return true;\n  }\n}\n\nconst side = I18nManager.getConstants().isRTL ? 'right' : 'left';\nconst styles = StyleSheet.create({\n  modal: {\n    position: 'absolute',\n  },\n  container: {\n    /* $FlowFixMe[invalid-computed-prop] (>=0.111.0 site=react_native_fb) This\n     * comment suppresses an error found when Flow v0.111 was deployed. To see\n     * the error, delete this comment and run Flow. */\n    [side]: 0,\n    top: 0,\n    flex: 1,\n  },\n});\n\nconst ExportedModal: React.AbstractComponent<\n  React.ElementConfig<typeof Modal>,\n> = ModalInjection.unstable_Modal ?? Modal;\n\nmodule.exports = ExportedModal;\n"],"mappings":"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","ignoreList":[]}