{"version":3,"names":["_react","require","_reactNative","_core","_api","useModernSwipeScreen","exports","_pets$currentIndex","_useAuthStore","useAuthStore","user","_useState","useState","_useState2","_slicedToArray2","default","pets","setPets","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","currentIndex","setCurrentIndex","_useState9","_useState0","showMatchModal","setShowMatchModal","_useState1","_useState10","matchedPet","setMatchedPet","_useState11","_useState12","showFilters","setShowFilters","_useState13","breed","species","size","maxDistance","_useState14","filters","setFilters","loadPets","useCallback","_asyncToGenerator2","realPets","matchesAPI","getPets","err","errorMessage","Error","message","handleLike","_ref2","pet","_id","match","createMatch","logger","_x","apply","arguments","handlePass","_ref3","info","petId","_x2","handleSuperLike","_ref4","result","Alert","alert","name","_x3","swipePet","_ref5","action","find","p","_x4","_x5","handleSwipeRight","prev","Math","min","length","handleSwipeLeft","handleSwipeUp","handleButtonSwipe","currentPet","useEffect"],"sources":["useModernSwipeScreen.ts"],"sourcesContent":["/**\n * useModernSwipeScreen Hook\n * Manages ModernSwipeScreen state and business logic\n */\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Alert } from \"react-native\";\nimport { logger } from \"@pawfectmatch/core\";\nimport { useAuthStore, type Pet, type PetFilters } from \"@pawfectmatch/core\";\nimport { matchesAPI } from \"../../services/api\";\n\ninterface UseModernSwipeScreenReturn {\n  // Data\n  pets: Pet[];\n  currentPet: Pet | null;\n  filters: PetFilters;\n\n  // State\n  isLoading: boolean;\n  error: string | null;\n  currentIndex: number;\n  showMatchModal: boolean;\n  matchedPet: Pet | null;\n  showFilters: boolean;\n\n  // Actions\n  setCurrentIndex: (index: number) => void;\n  setShowMatchModal: (show: boolean) => void;\n  setShowFilters: (show: boolean) => void;\n  setFilters: (filters: PetFilters) => void;\n  loadPets: () => Promise<void>;\n  swipePet: (petId: string, action: \"like\" | \"pass\" | \"superlike\") => Promise<any>;\n  handleSwipeRight: (pet: Pet) => void;\n  handleSwipeLeft: (pet: Pet) => void;\n  handleSwipeUp: (pet: Pet) => void;\n  handleButtonSwipe: (action: \"like\" | \"pass\" | \"superlike\") => void;\n}\n\nexport const useModernSwipeScreen = (): UseModernSwipeScreenReturn => {\n  const { user } = useAuthStore();\n\n  const [pets, setPets] = useState<Pet[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [showMatchModal, setShowMatchModal] = useState(false);\n  const [matchedPet, setMatchedPet] = useState<Pet | null>(null);\n  const [showFilters, setShowFilters] = useState(false);\n\n  const [filters, setFilters] = useState<PetFilters>({\n    breed: \"\",\n    species: \"\",\n    size: \"\",\n    maxDistance: 25,\n  });\n\n  // Load pets function\n  const loadPets = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const realPets = await matchesAPI.getPets(filters);\n      setPets(realPets);\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error\n          ? err.message\n          : \"Failed to load pets. Please check your connection.\";\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [filters]);\n\n  // Handle like action\n  const handleLike = useCallback(\n    async (pet: Pet) => {\n      try {\n        if (user?._id && pet._id) {\n          const match = await matchesAPI.createMatch(user._id, pet._id);\n\n          if (match) {\n            // Check if it's a mutual match\n            setShowMatchModal(true);\n            setMatchedPet(pet);\n          }\n\n          return match;\n        }\n        return null;\n      } catch (error) {\n        logger.error(\"Error liking pet\", { error });\n        return null;\n      }\n    },\n    [user],\n  );\n\n  // Handle pass action\n  const handlePass = useCallback(async (pet: Pet) => {\n    try {\n      logger.info(\"Pet passed\", { petId: pet._id });\n      return null;\n    } catch (error) {\n      logger.error(\"Error passing pet\", { error });\n      return null;\n    }\n  }, []);\n\n  // Handle super like\n  const handleSuperLike = useCallback(\n    async (pet: Pet) => {\n      try {\n        const result = await handleLike(pet);\n\n        if (result) {\n          Alert.alert(\"Super Like Sent!\", `${pet.name} will see that you super liked them!`);\n        }\n\n        return result;\n      } catch (error) {\n        logger.error(\"Error super liking pet\", { error });\n        return null;\n      }\n    },\n    [handleLike],\n  );\n\n  // Swipe pet function\n  const swipePet = useCallback(\n    async (petId: string, action: \"like\" | \"pass\" | \"superlike\") => {\n      try {\n        const pet = pets.find((p) => p._id === petId);\n        if (!pet) return null;\n\n        switch (action) {\n          case \"like\":\n            return await handleLike(pet);\n          case \"pass\":\n            return await handlePass(pet);\n          case \"superlike\":\n            return await handleSuperLike(pet);\n          default:\n            return null;\n        }\n      } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        Alert.alert(\"Error\", `Failed to process swipe: ${errorMessage}`);\n        return null;\n      }\n    },\n    [pets, handleLike, handlePass, handleSuperLike],\n  );\n\n  // Swipe handlers\n  const handleSwipeRight = useCallback(\n    (pet: Pet) => {\n      swipePet(pet._id, \"like\");\n      setCurrentIndex((prev) => Math.min(prev + 1, pets.length - 1));\n    },\n    [swipePet, pets.length],\n  );\n\n  const handleSwipeLeft = useCallback(\n    (pet: Pet) => {\n      swipePet(pet._id, \"pass\");\n      setCurrentIndex((prev) => Math.min(prev + 1, pets.length - 1));\n    },\n    [swipePet, pets.length],\n  );\n\n  const handleSwipeUp = useCallback(\n    (pet: Pet) => {\n      swipePet(pet._id, \"superlike\");\n      setCurrentIndex((prev) => Math.min(prev + 1, pets.length - 1));\n    },\n    [swipePet, pets.length],\n  );\n\n  // Handle button swipe\n  const handleButtonSwipe = useCallback(\n    (action: \"like\" | \"pass\" | \"superlike\") => {\n      const currentPet = pets[currentIndex];\n      if (!currentPet) return;\n\n      switch (action) {\n        case \"like\":\n          handleSwipeRight(currentPet);\n          break;\n        case \"pass\":\n          handleSwipeLeft(currentPet);\n          break;\n        case \"superlike\":\n          handleSwipeUp(currentPet);\n          break;\n      }\n    },\n    [pets, currentIndex, handleSwipeRight, handleSwipeLeft, handleSwipeUp, swipePet],\n  );\n\n  // Load pets on mount\n  useEffect(() => {\n    void loadPets();\n  }, [loadPets]);\n\n  const currentPet = pets[currentIndex] ?? null;\n\n  return {\n    // Data\n    pets,\n    currentPet,\n    filters,\n\n    // State\n    isLoading,\n    error,\n    currentIndex,\n    showMatchModal,\n    matchedPet,\n    showFilters,\n\n    // Actions\n    setCurrentIndex,\n    setShowMatchModal,\n    setShowFilters,\n    setFilters,\n    loadPets,\n    swipePet,\n    handleSwipeRight,\n    handleSwipeLeft,\n    handleSwipeUp,\n    handleButtonSwipe,\n  };\n};\n"],"mappings":"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","ignoreList":[]}