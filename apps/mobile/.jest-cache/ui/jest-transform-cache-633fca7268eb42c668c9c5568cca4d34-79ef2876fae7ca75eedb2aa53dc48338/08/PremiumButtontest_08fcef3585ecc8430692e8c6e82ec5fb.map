{"version":3,"names":["_getJestObj","mock","impactAsync","jest","fn","ImpactFeedbackStyle","Light","Medium","_interopRequireDefault","require","_react","_PremiumButton","Haptics","_interopRequireWildcard","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_require","mockNavigation","navigate","describe","beforeEach","clearAllMocks","useTheme","mockReturnValue","colors","primary","secondary","background","text","isDark","it","_render","render","jsx","navigation","getByText","getByTestId","expect","toBeTruthy","_render2","_render3","fireEvent","press","toHaveBeenCalledWith","_render4","button","props","style","toBeDefined","_render5","_render6","size","_render7","showIcon","customStyle","marginTop","_render8"],"sources":["PremiumButton.test.tsx"],"sourcesContent":["import React from \"react\";\nimport {} from \"@testing-library/react-native\";\nimport \"@testing-library/jest-native/extend-expect\";\nimport PremiumButton from \"../../Premium/PremiumButton\";\nimport {} from \"../../../theme/Provider\";\nimport * as Haptics from \"expo-haptics\";\nimport { Theme } from '../../../theme/unified-theme';\n\n// Mock dependencies\njest.mock(\"../../../theme/Provider\");\njest.mock(\"expo-haptics\", () => ({\n  impactAsync: jest.fn(),\n  ImpactFeedbackStyle: {\n    Light: \"light\",\n    Medium: \"medium\",\n  },\n}));\n\nconst mockNavigation = {\n  navigate: jest.fn(),\n};\n\ndescribe(\"PremiumButton\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n\n    // Mock theme context\n    (useTheme as jest.Mock).mockReturnValue({\n      colors: {\n        primary: \"#7c3aed\",\n        secondary: \"Theme.colors.primary[500]\",\n        background: \"Theme.colors.neutral[0]\",\n        text: \"Theme.colors.neutral[950]\",\n      },\n      isDark: false,\n    });\n  });\n\n  it(\"renders correctly with default props\", () => {\n    const { getByText, getByTestId } = render(\n      <PremiumButton navigation={mockNavigation} />,\n    );\n\n    // Should render premium button with default text\n    expect(getByText(\"Upgrade\")).toBeTruthy();\n    expect(getByTestId(\"premium-button\")).toBeTruthy();\n  });\n\n  it(\"renders with custom text\", () => {\n    const { getByText } = render(\n      <PremiumButton navigation={mockNavigation} text=\"Go Premium\" />,\n    );\n\n    // Should render button with custom text\n    expect(getByText(\"Go Premium\")).toBeTruthy();\n  });\n\n  it(\"handles press with haptic feedback\", () => {\n    const { getByTestId } = render(\n      <PremiumButton navigation={mockNavigation} />,\n    );\n\n    // Press the button\n    fireEvent.press(getByTestId(\"premium-button\"));\n\n    // Should trigger haptic feedback\n    expect(Haptics.impactAsync).toHaveBeenCalledWith(\n      Haptics.ImpactFeedbackStyle.Medium,\n    );\n\n    // Should navigate to Premium screen\n    expect(mockNavigation.navigate).toHaveBeenCalledWith(\"Premium\");\n  });\n\n  it(\"renders with gradient style in light theme\", () => {\n    const { getByTestId } = render(\n      <PremiumButton navigation={mockNavigation} />,\n    );\n\n    // Should have gradient style\n    const button = getByTestId(\"premium-button\");\n    expect(button.props.style).toBeDefined();\n  });\n\n  it(\"renders with dark theme style\", () => {\n    // Mock dark theme\n    (useTheme as jest.Mock).mockReturnValue({\n      colors: {\n        primary: \"#7c3aed\",\n        secondary: \"Theme.colors.primary[500]\",\n        background: \"Theme.colors.neutral[800]\",\n        text: \"Theme.colors.neutral[0]\",\n      },\n      isDark: true,\n    });\n\n    const { getByTestId } = render(\n      <PremiumButton navigation={mockNavigation} />,\n    );\n\n    // Should have dark theme style\n    const button = getByTestId(\"premium-button\");\n    expect(button.props.style).toBeDefined();\n  });\n\n  it(\"renders with custom size\", () => {\n    const { getByTestId } = render(\n      <PremiumButton navigation={mockNavigation} size=\"large\" />,\n    );\n\n    // Should have large size style\n    const button = getByTestId(\"premium-button\");\n    expect(button.props.style).toBeDefined();\n    // Additional size-specific assertions could be added here\n  });\n\n  it(\"renders with icon\", () => {\n    const { getByTestId } = render(\n      <PremiumButton navigation={mockNavigation} showIcon />,\n    );\n\n    // Should render icon\n    expect(getByTestId(\"premium-icon\")).toBeTruthy();\n  });\n\n  it(\"applies custom style when provided\", () => {\n    const customStyle = { marginTop: 20 };\n    const { getByTestId } = render(\n      <PremiumButton navigation={mockNavigation} style={customStyle} />,\n    );\n\n    const button = getByTestId(\"premium-button\");\n    expect(button.props.style).toBeDefined();\n    // Additional style-specific assertions could be added here\n  });\n});\n"],"mappings":"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","ignoreList":[]}