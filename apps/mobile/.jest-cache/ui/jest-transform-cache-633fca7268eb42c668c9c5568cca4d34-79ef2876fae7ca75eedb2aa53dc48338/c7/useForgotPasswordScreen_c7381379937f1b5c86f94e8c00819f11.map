{"version":3,"names":["_react","require","_reactNative","Haptics","_interopRequireWildcard","_core","_AuthService","_useFormState2","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useForgotPasswordScreen","_ref","navigation","validateForm","useCallback","values","errors","email","trim","test","_useState","useState","_useState2","_slicedToArray2","loading","setLoading","_useFormState","useFormState","initialValues","validate","isValid","setValue","handleSubmitForm","handleSubmit","handleForgotPassword","_asyncToGenerator2","impactAsync","ImpactFeedbackStyle","Light","catch","logger","info","response","authService","forgotPassword","notificationAsync","NotificationFeedbackType","Success","Alert","alert","text","onPress","goBack","style","cancelable","error","Error","errorMessage","AuthError","message","navigateBack"],"sources":["useForgotPasswordScreen.ts"],"sourcesContent":["/**\n * useForgotPasswordScreen Hook\n * Manages Forgot Password screen state and interactions\n */\nimport { useCallback, useState } from \"react\";\nimport { Alert } from \"react-native\";\nimport * as Haptics from \"expo-haptics\";\nimport { logger } from \"@pawfectmatch/core\";\nimport { authService, AuthError } from \"../../services/AuthService\";\nimport { useFormState } from \"../utils/useFormState\";\nimport type { RootStackScreenProps } from \"../../navigation/types\";\n\ninterface ForgotPasswordFormValues {\n  email: string;\n}\n\ninterface UseForgotPasswordScreenOptions {\n  navigation: RootStackScreenProps<\"ForgotPassword\">[\"navigation\"];\n}\n\ninterface UseForgotPasswordScreenReturn {\n  values: ForgotPasswordFormValues;\n  errors: Partial<Record<keyof ForgotPasswordFormValues, string>>;\n  isValid: boolean;\n  loading: boolean;\n  setValue: (name: keyof ForgotPasswordFormValues, value: string) => void;\n  handleSubmit: (e?: any) => void | Promise<void>;\n  navigateBack: () => void;\n}\n\nexport function useForgotPasswordScreen({\n  navigation,\n}: UseForgotPasswordScreenOptions): UseForgotPasswordScreenReturn {\n  // Form validation rules\n  const validateForm = useCallback(\n    (\n      values: ForgotPasswordFormValues,\n    ): Partial<Record<keyof ForgotPasswordFormValues, string>> => {\n      const errors: Partial<Record<keyof ForgotPasswordFormValues, string>> =\n        {};\n\n      if (!values.email.trim()) {\n        errors.email = \"Email is required\";\n      } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n        errors.email = \"Please enter a valid email address\";\n      }\n\n      return errors;\n    },\n    [],\n  );\n\n  // Form state management\n  const [loading, setLoading] = useState(false);\n  const {\n    values,\n    errors,\n    isValid,\n    setValue,\n    handleSubmit: handleSubmitForm,\n  } = useFormState<ForgotPasswordFormValues>({\n    initialValues: {\n      email: \"\",\n    },\n    validate: validateForm,\n  });\n\n  // Handle forgot password submission\n  const handleForgotPassword = useCallback(async () => {\n    Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light).catch(() => {});\n    setLoading(true);\n\n    try {\n      logger.info(\"Forgot password request\", { email: values.email });\n\n      const response = await authService.forgotPassword(values.email);\n\n      // Success haptic feedback\n      Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success).catch(\n        () => {},\n      );\n\n      Alert.alert(\n        \"Check Your Email\",\n        \"We've sent you a password reset link. Please check your email and follow the instructions.\",\n        [\n          {\n            text: \"OK\",\n            onPress: () => navigation.goBack(),\n            style: \"default\",\n          },\n        ],\n        { cancelable: false },\n      );\n    } catch (error) {\n      // Error haptic feedback\n      Haptics.notificationAsync(Haptics.NotificationFeedbackType.Error).catch(\n        () => {},\n      );\n\n      logger.error(\"Forgot password failed\", { error });\n\n      const errorMessage =\n        error instanceof AuthError\n          ? error.message\n          : \"Failed to send password reset email. Please try again.\";\n\n      Alert.alert(\"Error\", errorMessage, [{ text: \"OK\", style: \"default\" }]);\n    } finally {\n      setLoading(false);\n    }\n  }, [values.email, navigation]);\n\n  const handleSubmit = handleSubmitForm(handleForgotPassword);\n\n  const navigateBack = useCallback(() => {\n    navigation.goBack();\n  }, [navigation]);\n\n  return {\n    values,\n    errors,\n    isValid,\n    loading,\n    setValue,\n    handleSubmit,\n    navigateBack,\n  };\n}\n"],"mappings":";;;;;;;;;AAIA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAC,uBAAA,CAAAH,OAAA;AACA,IAAAI,KAAA,GAAAJ,OAAA;AACA,IAAAK,YAAA,GAAAL,OAAA;AACA,IAAAM,cAAA,GAAAN,OAAA;AAAqD,SAAAG,wBAAAI,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAN,uBAAA,YAAAA,wBAAAI,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAqB9C,SAASmB,uBAAuBA,CAAAC,IAAA,EAE2B;EAAA,IADhEC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAGV,IAAMC,YAAY,GAAG,IAAAC,kBAAW,EAC9B,UACEC,MAAgC,EAC4B;IAC5D,IAAMC,MAA+D,GACnE,CAAC,CAAC;IAEJ,IAAI,CAACD,MAAM,CAACE,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;MACxBF,MAAM,CAACC,KAAK,GAAG,mBAAmB;IACpC,CAAC,MAAM,IAAI,CAAC,cAAc,CAACE,IAAI,CAACJ,MAAM,CAACE,KAAK,CAAC,EAAE;MAC7CD,MAAM,CAACC,KAAK,GAAG,oCAAoC;IACrD;IAEA,OAAOD,MAAM;EACf,CAAC,EACD,EACF,CAAC;EAGD,IAAAI,SAAA,GAA8B,IAAAC,eAAQ,EAAC,KAAK,CAAC;IAAAC,UAAA,OAAAC,eAAA,CAAAvB,OAAA,EAAAoB,SAAA;IAAtCI,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,aAAA,GAMI,IAAAC,2BAAY,EAA2B;MACzCC,aAAa,EAAE;QACbX,KAAK,EAAE;MACT,CAAC;MACDY,QAAQ,EAAEhB;IACZ,CAAC,CAAC;IAVAE,MAAM,GAAAW,aAAA,CAANX,MAAM;IACNC,MAAM,GAAAU,aAAA,CAANV,MAAM;IACNc,OAAO,GAAAJ,aAAA,CAAPI,OAAO;IACPC,QAAQ,GAAAL,aAAA,CAARK,QAAQ;IACMC,gBAAgB,GAAAN,aAAA,CAA9BO,YAAY;EASd,IAAMC,oBAAoB,GAAG,IAAApB,kBAAW,MAAAqB,kBAAA,CAAAnC,OAAA,EAAC,aAAY;IACnDf,OAAO,CAACmD,WAAW,CAACnD,OAAO,CAACoD,mBAAmB,CAACC,KAAK,CAAC,CAACC,KAAK,CAAC,YAAM,CAAC,CAAC,CAAC;IACtEd,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACFe,YAAM,CAACC,IAAI,CAAC,yBAAyB,EAAE;QAAExB,KAAK,EAAEF,MAAM,CAACE;MAAM,CAAC,CAAC;MAE/D,IAAMyB,QAAQ,SAASC,wBAAW,CAACC,cAAc,CAAC7B,MAAM,CAACE,KAAK,CAAC;MAG/DhC,OAAO,CAAC4D,iBAAiB,CAAC5D,OAAO,CAAC6D,wBAAwB,CAACC,OAAO,CAAC,CAACR,KAAK,CACvE,YAAM,CAAC,CACT,CAAC;MAEDS,kBAAK,CAACC,KAAK,CACT,kBAAkB,EAClB,4FAA4F,EAC5F,CACE;QACEC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,SAATA,OAAOA,CAAA;UAAA,OAAQvC,UAAU,CAACwC,MAAM,CAAC,CAAC;QAAA;QAClCC,KAAK,EAAE;MACT,CAAC,CACF,EACD;QAAEC,UAAU,EAAE;MAAM,CACtB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MAEdtE,OAAO,CAAC4D,iBAAiB,CAAC5D,OAAO,CAAC6D,wBAAwB,CAACU,KAAK,CAAC,CAACjB,KAAK,CACrE,YAAM,CAAC,CACT,CAAC;MAEDC,YAAM,CAACe,KAAK,CAAC,wBAAwB,EAAE;QAAEA,KAAK,EAALA;MAAM,CAAC,CAAC;MAEjD,IAAME,YAAY,GAChBF,KAAK,YAAYG,sBAAS,GACtBH,KAAK,CAACI,OAAO,GACb,wDAAwD;MAE9DX,kBAAK,CAACC,KAAK,CAAC,OAAO,EAAEQ,YAAY,EAAE,CAAC;QAAEP,IAAI,EAAE,IAAI;QAAEG,KAAK,EAAE;MAAU,CAAC,CAAC,CAAC;IACxE,CAAC,SAAS;MACR5B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,GAAE,CAACV,MAAM,CAACE,KAAK,EAAEL,UAAU,CAAC,CAAC;EAE9B,IAAMqB,YAAY,GAAGD,gBAAgB,CAACE,oBAAoB,CAAC;EAE3D,IAAM0B,YAAY,GAAG,IAAA9C,kBAAW,EAAC,YAAM;IACrCF,UAAU,CAACwC,MAAM,CAAC,CAAC;EACrB,CAAC,EAAE,CAACxC,UAAU,CAAC,CAAC;EAEhB,OAAO;IACLG,MAAM,EAANA,MAAM;IACNC,MAAM,EAANA,MAAM;IACNc,OAAO,EAAPA,OAAO;IACPN,OAAO,EAAPA,OAAO;IACPO,QAAQ,EAARA,QAAQ;IACRE,YAAY,EAAZA,YAAY;IACZ2B,YAAY,EAAZA;EACF,CAAC;AACH","ignoreList":[]}