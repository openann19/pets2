46dcc6314a1f16733bec0039d300d5fc
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.haptic = void 0;
var Haptics = _interopRequireWildcard(require("expo-haptics"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var haptic = exports.haptic = {
  tap: function tap() {
    return Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);
  },
  confirm: function confirm() {
    return Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);
  },
  super: function _super() {
    return Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Heavy);
  },
  error: function error() {
    return Haptics.notificationAsync(Haptics.NotificationFeedbackType.Error);
  },
  success: function success() {
    return Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);
  },
  selection: function selection() {
    return Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJIYXB0aWNzIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiZSIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJfX2VzTW9kdWxlIiwibyIsImkiLCJmIiwiX19wcm90b19fIiwiZGVmYXVsdCIsImhhcyIsImdldCIsInNldCIsIl90IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJoYXB0aWMiLCJleHBvcnRzIiwidGFwIiwiaW1wYWN0QXN5bmMiLCJJbXBhY3RGZWVkYmFja1N0eWxlIiwiTGlnaHQiLCJjb25maXJtIiwiTWVkaXVtIiwic3VwZXIiLCJIZWF2eSIsImVycm9yIiwibm90aWZpY2F0aW9uQXN5bmMiLCJOb3RpZmljYXRpb25GZWVkYmFja1R5cGUiLCJFcnJvciIsInN1Y2Nlc3MiLCJTdWNjZXNzIiwic2VsZWN0aW9uIl0sInNvdXJjZXMiOlsiaGFwdGljcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIPCfjq8gSEFQVElDIEZFRURCQUNLIFNZU1RFTVxuICogU2luZ2xlIHNvdXJjZSBvZiB0cnV0aCBmb3IgYWxsIGhhcHRpYyBmZWVkYmFja1xuICogTWFwcyB0byBNYXRlcmlhbCBEZXNpZ24gaGFwdGljIHBhdHRlcm5zXG4gKi9cblxuaW1wb3J0ICogYXMgSGFwdGljcyBmcm9tICdleHBvLWhhcHRpY3MnO1xuXG4vKipcbiAqIEhhcHRpYyBmZWVkYmFjayB1dGlsaXRpZXNcbiAqIFVzZSB0aGVzZSBleGNsdXNpdmVseSAtIG5vIGRpcmVjdCBIYXB0aWNzLiogY2FsbHNcbiAqL1xuZXhwb3J0IGNvbnN0IGhhcHRpYyA9IHtcbiAgLy8gTGlnaHQgaW1wYWN0IC0gZm9yIHN1YnRsZSBpbnRlcmFjdGlvbnMgKHRhYnMsIGJ1dHRvbnMsIG1pbm9yIHNlbGVjdGlvbnMpXG4gIHRhcDogKCkgPT4gSGFwdGljcy5pbXBhY3RBc3luYyhIYXB0aWNzLkltcGFjdEZlZWRiYWNrU3R5bGUuTGlnaHQpLFxuICBcbiAgLy8gTWVkaXVtIGltcGFjdCAtIGZvciBjb25maXJtYXRpb25zIChsaWtlLCBzZW5kIG1lc3NhZ2UpXG4gIGNvbmZpcm06ICgpID0+IEhhcHRpY3MuaW1wYWN0QXN5bmMoSGFwdGljcy5JbXBhY3RGZWVkYmFja1N0eWxlLk1lZGl1bSksXG4gIFxuICAvLyBIZWF2eSBpbXBhY3QgLSBmb3Igc3VwZXItYWN0aW9ucyAoc3VwZXItbGlrZSwgcHVyY2hhc2UpXG4gIHN1cGVyOiAoKSA9PiBIYXB0aWNzLmltcGFjdEFzeW5jKEhhcHRpY3MuSW1wYWN0RmVlZGJhY2tTdHlsZS5IZWF2eSksXG4gIFxuICAvLyBOb3RpZmljYXRpb24gZmVlZGJhY2sgZm9yIGVycm9yc1xuICBlcnJvcjogKCkgPT4gSGFwdGljcy5ub3RpZmljYXRpb25Bc3luYyhIYXB0aWNzLk5vdGlmaWNhdGlvbkZlZWRiYWNrVHlwZS5FcnJvciksXG4gIFxuICAvLyBOb3RpZmljYXRpb24gZmVlZGJhY2sgZm9yIHN1Y2Nlc3NcbiAgc3VjY2VzczogKCkgPT4gSGFwdGljcy5ub3RpZmljYXRpb25Bc3luYyhIYXB0aWNzLk5vdGlmaWNhdGlvbkZlZWRiYWNrVHlwZS5TdWNjZXNzKSxcbiAgXG4gIC8vIFNlbGVjdGlvbiBmZWVkYmFjayAocGlja2VycywgdG9nZ2xlcywgd2hlZWwpXG4gIHNlbGVjdGlvbjogKCkgPT4gSGFwdGljcy5pbXBhY3RBc3luYyhIYXB0aWNzLkltcGFjdEZlZWRiYWNrU3R5bGUuTGlnaHQpLFxufTtcblxuLyoqXG4gKiBIYXB0aWMgdXNhZ2UgbWFwXG4gKiBcbiAqIHRhcDogVGFiIHN3aXRjaGVzLCBidXR0b24gdGFwcywgbWlub3Igc2VsZWN0aW9uc1xuICogY29uZmlybTogTGlrZSwgc2VuZCwgY29uZmlybSBhY3Rpb25zXG4gKiBzdXBlcjogU3VwZXItbGlrZSwgcHVyY2hhc2UsIHByZW1pdW0gYWN0aW9uc1xuICogZXJyb3I6IEVycm9yIHN0YXRlcywgZmFpbGVkIGFjdGlvbnNcbiAqIHN1Y2Nlc3M6IFN1Y2Nlc3Mgc3RhdGVzLCBjb21wbGV0ZWQgYWN0aW9uc1xuICogc2VsZWN0aW9uOiBQaWNrZXIgY2hhbmdlcywgdG9nZ2xlIHN3aXRjaGVzLCB3aGVlbCBzY3JvbGxpbmdcbiAqL1xuXG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQU1BLElBQUFBLE9BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUF3QyxTQUFBRCx3QkFBQUUsQ0FBQSxFQUFBQyxDQUFBLDZCQUFBQyxPQUFBLE1BQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUosdUJBQUEsWUFBQUEsd0JBQUFFLENBQUEsRUFBQUMsQ0FBQSxTQUFBQSxDQUFBLElBQUFELENBQUEsSUFBQUEsQ0FBQSxDQUFBSyxVQUFBLFNBQUFMLENBQUEsTUFBQU0sQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsS0FBQUMsU0FBQSxRQUFBQyxPQUFBLEVBQUFWLENBQUEsaUJBQUFBLENBQUEsdUJBQUFBLENBQUEseUJBQUFBLENBQUEsU0FBQVEsQ0FBQSxNQUFBRixDQUFBLEdBQUFMLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLFFBQUFHLENBQUEsQ0FBQUssR0FBQSxDQUFBWCxDQUFBLFVBQUFNLENBQUEsQ0FBQU0sR0FBQSxDQUFBWixDQUFBLEdBQUFNLENBQUEsQ0FBQU8sR0FBQSxDQUFBYixDQUFBLEVBQUFRLENBQUEsY0FBQU0sRUFBQSxJQUFBZCxDQUFBLGdCQUFBYyxFQUFBLE9BQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBaEIsQ0FBQSxFQUFBYyxFQUFBLE9BQUFQLENBQUEsSUFBQUQsQ0FBQSxHQUFBVyxNQUFBLENBQUFDLGNBQUEsS0FBQUQsTUFBQSxDQUFBRSx3QkFBQSxDQUFBbkIsQ0FBQSxFQUFBYyxFQUFBLE9BQUFQLENBQUEsQ0FBQUssR0FBQSxJQUFBTCxDQUFBLENBQUFNLEdBQUEsSUFBQVAsQ0FBQSxDQUFBRSxDQUFBLEVBQUFNLEVBQUEsRUFBQVAsQ0FBQSxJQUFBQyxDQUFBLENBQUFNLEVBQUEsSUFBQWQsQ0FBQSxDQUFBYyxFQUFBLFdBQUFOLENBQUEsS0FBQVIsQ0FBQSxFQUFBQyxDQUFBO0FBTWpDLElBQU1tQixNQUFNLEdBQUFDLE9BQUEsQ0FBQUQsTUFBQSxHQUFHO0VBRXBCRSxHQUFHLEVBQUUsU0FBTEEsR0FBR0EsQ0FBQTtJQUFBLE9BQVF6QixPQUFPLENBQUMwQixXQUFXLENBQUMxQixPQUFPLENBQUMyQixtQkFBbUIsQ0FBQ0MsS0FBSyxDQUFDO0VBQUE7RUFHakVDLE9BQU8sRUFBRSxTQUFUQSxPQUFPQSxDQUFBO0lBQUEsT0FBUTdCLE9BQU8sQ0FBQzBCLFdBQVcsQ0FBQzFCLE9BQU8sQ0FBQzJCLG1CQUFtQixDQUFDRyxNQUFNLENBQUM7RUFBQTtFQUd0RUMsS0FBSyxFQUFFLFNBQVBBLE1BQUtBLENBQUE7SUFBQSxPQUFRL0IsT0FBTyxDQUFDMEIsV0FBVyxDQUFDMUIsT0FBTyxDQUFDMkIsbUJBQW1CLENBQUNLLEtBQUssQ0FBQztFQUFBO0VBR25FQyxLQUFLLEVBQUUsU0FBUEEsS0FBS0EsQ0FBQTtJQUFBLE9BQVFqQyxPQUFPLENBQUNrQyxpQkFBaUIsQ0FBQ2xDLE9BQU8sQ0FBQ21DLHdCQUF3QixDQUFDQyxLQUFLLENBQUM7RUFBQTtFQUc5RUMsT0FBTyxFQUFFLFNBQVRBLE9BQU9BLENBQUE7SUFBQSxPQUFRckMsT0FBTyxDQUFDa0MsaUJBQWlCLENBQUNsQyxPQUFPLENBQUNtQyx3QkFBd0IsQ0FBQ0csT0FBTyxDQUFDO0VBQUE7RUFHbEZDLFNBQVMsRUFBRSxTQUFYQSxTQUFTQSxDQUFBO0lBQUEsT0FBUXZDLE9BQU8sQ0FBQzBCLFdBQVcsQ0FBQzFCLE9BQU8sQ0FBQzJCLG1CQUFtQixDQUFDQyxLQUFLLENBQUM7RUFBQTtBQUN6RSxDQUFDIiwiaWdub3JlTGlzdCI6W119