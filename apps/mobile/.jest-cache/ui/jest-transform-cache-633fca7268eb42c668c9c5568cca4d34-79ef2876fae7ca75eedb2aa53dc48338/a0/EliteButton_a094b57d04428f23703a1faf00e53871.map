{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_BaseButton","_interopRequireDefault","_EffectWrappers","_jsxRuntime","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","EliteButton","forwardRef","_ref","ref","_ref$glowEffect","glowEffect","_ref$magneticEffect","magneticEffect","_ref$rippleEffect","rippleEffect","_ref$shimmerEffect","shimmerEffect","_ref$pressEffect","pressEffect","_ref$gradientEffect","gradientEffect","glowColor","_ref$glowIntensity","glowIntensity","_ref$magneticSensitiv","magneticSensitivity","_ref$shimmerDuration","shimmerDuration","gradientName","gradientColors","_ref$hapticFeedback","hapticFeedback","title","variant","size","loading","disabled","icon","leftIcon","rightIcon","style","onPress","baseProps","_objectWithoutProperties2","handlePress","ButtonComponent","jsx","WithShimmerFX","duration","children","WithGradientFX","gradient","colors","WithRippleFX","WithPressFX","WithMagneticFX","sensitivity","WithGlowFX","color","intensity","displayName","EliteButtonPresets","exports","premium","props","holographic","magnetic","glass","StyleSheet","flatten","backgroundColor","borderWidth","borderColor","neon","_default"],"sources":["EliteButton.tsx"],"sourcesContent":["/**\n * PROJECT HYPERION: ELITE BUTTON COMPONENT\n *\n * Composed button using the composition pattern. This demonstrates how to\n * combine multiple effects to create a premium button experience while\n * maintaining clean, maintainable code.\n *\n * Architecture:\n * - BaseButton: Core functionality\n * - EffectWrappers: Individual visual effects\n * - Composition: Combine effects declaratively\n */\n\nimport React, { forwardRef } from \"react\";\nimport type { View, ViewStyle } from \"react-native\";\nimport { StyleSheet } from \"react-native\";\n\nimport BaseButton, { type BaseButtonProps } from \"./BaseButton\";\nimport {\n  WithGlowFX,\n  WithMagneticFX,\n  WithRippleFX,\n  WithShimmerFX,\n  WithPressFX,\n  WithGradientFX,\n} from \"./EffectWrappers\";\n\n// === TYPES ===\nexport interface EliteButtonProps extends BaseButtonProps {\n  // Effect toggles\n  glowEffect?: boolean;\n  magneticEffect?: boolean;\n  rippleEffect?: boolean;\n  shimmerEffect?: boolean;\n  pressEffect?: boolean;\n  gradientEffect?: boolean;\n\n  // Effect configurations\n  glowColor?: string;\n  glowIntensity?: number;\n  magneticSensitivity?: number;\n  shimmerDuration?: number;\n  gradientName?: \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\" | \"glass\" | \"glow\";\n  gradientColors?: string[];\n\n  // Haptic feedback\n  hapticFeedback?: boolean;\n  \n  // Icon support (inherited from BaseButtonProps)\n  icon?: string;\n}\n\n// === MAIN COMPONENT ===\nconst EliteButton = forwardRef<View, EliteButtonProps>(\n  (\n    {\n      // Effect toggles\n      glowEffect = false,\n      magneticEffect = false,\n      rippleEffect = true,\n      shimmerEffect = false,\n      pressEffect = true,\n      gradientEffect = false,\n\n      // Effect configurations\n      glowColor,\n      glowIntensity = 1,\n      magneticSensitivity = 0.3,\n      shimmerDuration = 2000,\n      gradientName,\n      gradientColors,\n\n      // Haptic feedback\n      hapticFeedback = true,\n\n      // Base button props\n      title,\n      variant,\n      size,\n      loading,\n      disabled,\n      icon,\n      leftIcon,\n      rightIcon,\n      style,\n      onPress,\n      ...baseProps\n    },\n    ref,\n  ) => {\n    // Enhanced press handler with haptic feedback\n    const handlePress = () => {\n      if (hapticFeedback) {\n        // Haptic feedback would be implemented here\n        // Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n      }\n      onPress?.();\n    };\n\n    // Create the button with all effects applied\n    let ButtonComponent = (\n      <BaseButton\n        {...baseProps}\n        title={title}\n        variant={variant}\n        size={size}\n        loading={loading}\n        disabled={disabled}\n        icon={icon}\n        leftIcon={leftIcon}\n        rightIcon={rightIcon}\n        onPress={handlePress}\n        style={style}\n      />\n    );\n\n    // Apply effects in reverse order (outermost to innermost)\n    if (shimmerEffect) {\n      ButtonComponent = (\n        <WithShimmerFX duration={shimmerDuration} style={style}>\n          {ButtonComponent}\n        </WithShimmerFX>\n      );\n    }\n\n    if (gradientEffect) {\n      ButtonComponent = (\n        <WithGradientFX\n          gradient={gradientName}\n          colors={gradientColors}\n          style={style}\n        >\n          {ButtonComponent}\n        </WithGradientFX>\n      );\n    }\n\n    if (rippleEffect) {\n      ButtonComponent = (\n        <WithRippleFX style={style}>{ButtonComponent}</WithRippleFX>\n      );\n    }\n\n    if (pressEffect) {\n      ButtonComponent = (\n        <WithPressFX style={style}>{ButtonComponent}</WithPressFX>\n      );\n    }\n\n    if (magneticEffect) {\n      ButtonComponent = (\n        <WithMagneticFX sensitivity={magneticSensitivity} style={style}>\n          {ButtonComponent}\n        </WithMagneticFX>\n      );\n    }\n\n    if (glowEffect) {\n      ButtonComponent = (\n        <WithGlowFX color={glowColor} intensity={glowIntensity} style={style}>\n          {ButtonComponent}\n        </WithGlowFX>\n      );\n    }\n\n    return ButtonComponent;\n  },\n);\n\n// Display name for debugging\nEliteButton.displayName = \"EliteButton\";\n\n// === PRESET CONFIGURATIONS ===\nexport const EliteButtonPresets = {\n  // Basic premium button\n  premium: (props: EliteButtonProps) => (\n    <EliteButton\n      {...props}\n      glowEffect={true}\n      rippleEffect={true}\n      pressEffect={true}\n    />\n  ),\n\n  // Holographic button with shimmer\n  holographic: (props: EliteButtonProps) => (\n    <EliteButton\n      {...props}\n      gradientEffect={true}\n      gradientName=\"primary\"\n      shimmerEffect={true}\n      glowEffect={true}\n      rippleEffect={true}\n      pressEffect={true}\n    />\n  ),\n\n  // Magnetic interactive button\n  magnetic: (props: EliteButtonProps) => (\n    <EliteButton\n      {...props}\n      magneticEffect={true}\n      rippleEffect={true}\n      pressEffect={true}\n      glowEffect={true}\n    />\n  ),\n\n  // Glass morphism button\n  glass: (props: EliteButtonProps) => (\n    <EliteButton\n      {...props}\n      variant=\"ghost\"\n      glowEffect={true}\n      rippleEffect={true}\n      pressEffect={true}\n      style={StyleSheet.flatten([\n        {\n          backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n          borderWidth: 1,\n          borderColor: \"rgba(255, 255, 255, 0.2)\",\n        },\n        props.style,\n      ])}\n    />\n  ),\n\n  // Neon button with intense glow\n  neon: (props: EliteButtonProps) => (\n    <EliteButton\n      {...props}\n      glowEffect={true}\n      glowIntensity={2}\n      glowColor=\"#00f5ff\"\n      rippleEffect={true}\n      pressEffect={true}\n      shimmerEffect={true}\n      shimmerDuration={1000}\n    />\n  ),\n};\n\nexport default EliteButton;\n"],"mappings":"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","ignoreList":[]}