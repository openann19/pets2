{"version":3,"names":["_getJestObj","mock","RN","jest","requireActual","AnimatedMock","require","_objectSpread","Animated","LayoutAnimation","configureNext","fn","create","easeInEaseOut","easeIn","easeOut","linear","spring","Properties","Presets","logger","info","warn","error","debug","security","bufferOfflineLog","mockResolvedValue","undefined","flushOfflineLogs","setUserInfo","clearUserInfo","getSessionId","mockReturnValue","destroy","_interopRequireDefault","_defineProperty2","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","arguments","length","forEach","default","getOwnPropertyDescriptors","defineProperties","defineProperty","_require","global","ReanimatedDataMock","now","Date"],"sources":["jest.setup.ts"],"sourcesContent":["/**\n * Main Jest setup file\n * Loads modular setup files conditionally based on test needs\n */\n\nimport '@testing-library/jest-native/extend-expect';\n\n// React Native Reanimated recommended mock tweak\n// @ts-ignore\nglobal.ReanimatedDataMock = { now: () => Date.now() };\n\n// Silence RN Animated warnings in tests\njest.mock('react-native/Libraries/Animated/NativeAnimatedHelper');\n\n// Mock react-native's Animated export\njest.mock('react-native', () => {\n  const RN = jest.requireActual('react-native');\n  const AnimatedMock = require('./__mocks__/Animated.js');\n  return {\n    ...RN,\n    Animated: AnimatedMock,\n    LayoutAnimation: {\n      configureNext: jest.fn(),\n      create: jest.fn(),\n      easeInEaseOut: jest.fn(),\n      easeIn: jest.fn(),\n      easeOut: jest.fn(),\n      linear: jest.fn(),\n      spring: jest.fn(),\n      Properties: {},\n      Presets: {},\n    },\n  };\n});\n\n// Mock logger globally to prevent infinite loops\njest.mock('./src/services/logger', () => ({\n  logger: {\n    info: jest.fn(),\n    warn: jest.fn(),\n    error: jest.fn(),\n    debug: jest.fn(),\n    security: jest.fn(),\n    bufferOfflineLog: jest.fn().mockResolvedValue(undefined),\n    flushOfflineLogs: jest.fn().mockResolvedValue(undefined),\n    setUserInfo: jest.fn(),\n    clearUserInfo: jest.fn(),\n    getSessionId: jest.fn().mockReturnValue('test-session'),\n    destroy: jest.fn(),\n  }\n}));\n\n// Always load core setup\nimport './jest.setup.core';\n\n// Load all mocks - modular files handle conditional logic internally\n// Using require to ensure proper load order\nrequire('./jest.setup.mocks.native');\nrequire('./jest.setup.mocks.expo');\nrequire('./jest.setup.mocks.navigation');\nrequire('./jest.setup.mocks.external');\n"],"mappings":"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","ignoreList":[]}