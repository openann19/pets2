{"version":3,"names":["_react","require","_reactNative","_reactNativeGestureHandler","_reactNativeReanimated","_Dimensions$get","Dimensions","get","screenWidth","width","_worklet_4778112710705_init_data","code","location","sourceMap","_worklet_905576767344_init_data","_worklet_10157429660576_init_data","useSwipeGestures","_ref","onSwipeRight","onSwipeLeft","onSwipeUp","x","useSharedValue","y","cardStyle","useAnimatedStyle","_e","global","Error","_f","transform","translateX","value","translateY","rotate","_closure","__initData","__workletHash","__stackDetails","__version","pan","useMemo","Gesture","Pan","onChange","e","changeX","changeY","onEnd","thr","runOnJS","withSpring","_default","exports","default"],"sources":["useSwipeGesture.ts"],"sourcesContent":["import { useMemo } from \"react\";\nimport { Dimensions } from \"react-native\";\nimport { Gesture } from \"react-native-gesture-handler\";\nimport Animated, { useSharedValue, useAnimatedStyle, withSpring, runOnJS } from \"react-native-reanimated\";\n\nconst { width: screenWidth } = Dimensions.get(\"window\");\n\nexport interface UseSwipeGesturesOptions {\n  onSwipeRight: () => void;\n  onSwipeLeft: () => void;\n  onSwipeUp: () => void;\n}\n\nexport interface SwipeGestureState {\n  pan: ReturnType<typeof Gesture.Pan>;\n  cardStyle: ReturnType<typeof useAnimatedStyle>;\n}\n\nexport function useSwipeGestures({ onSwipeRight, onSwipeLeft, onSwipeUp }: UseSwipeGesturesOptions): SwipeGestureState {\n  const x = useSharedValue(0);\n  const y = useSharedValue(0);\n  const cardStyle = useAnimatedStyle(() => ({\n    transform: [\n      { translateX: x.value },\n      { translateY: y.value },\n      { rotate: `${(x.value / (screenWidth / 2)) * 30}deg` },\n    ],\n  }));\n  const pan = useMemo(\n    () =>\n      Gesture.Pan()\n        .onChange((e) => {\n          x.value += e.changeX;\n          y.value += e.changeY;\n        })\n        .onEnd(() => {\n          const thr = screenWidth * 0.3;\n          if (x.value > thr) { runOnJS(onSwipeRight)(); x.value = withSpring(0); y.value = withSpring(0); }\n          else if (x.value < -thr) { runOnJS(onSwipeLeft)(); x.value = withSpring(0); y.value = withSpring(0); }\n          else if (y.value < -thr) { runOnJS(onSwipeUp)(); x.value = withSpring(0); y.value = withSpring(0); }\n          else { x.value = withSpring(0); y.value = withSpring(0); }\n        }),\n    [onSwipeLeft, onSwipeRight, onSwipeUp],\n  );\n  return { pan, cardStyle };\n}\n\nexport default useSwipeGestures;\n"],"mappings":"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","ignoreList":[]}