{"version":3,"names":["_interopRequireDefault","require","_toConsumableArray2","_defineProperty2","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","default","getOwnPropertyDescriptors","defineProperties","defineProperty","exports","value","useMatchStore","zustand_1","immer_1","create","immer","set","currentPet","swipePets","matches","activeMatchId","paginationInfo","page","hasMore","isLoading","swipeHistory","likes","passes","superlikes","setCurrentPet","petId","state","setSwipePets","pets","addSwipePets","concat","setMatches","addMatch","match","unshift","updateMatch","matchId","data","index","findIndex","_id","existing","undefined","assign","removeMatch","setActiveMatchId","setPaginationInfo","info","addToSwipeHistory","action","clearSwipeHistory"],"sources":["useMatchStore.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useMatchStore = void 0;\nconst zustand_1 = require(\"zustand\");\nconst immer_1 = require(\"zustand/middleware/immer\");\n/**\n * Global match store for managing swipe state, matches, and related operations\n */\nexports.useMatchStore = (0, zustand_1.create)()((0, immer_1.immer)((set) => ({\n    currentPet: null,\n    swipePets: [],\n    matches: [],\n    activeMatchId: null,\n    paginationInfo: {\n        page: 1,\n        hasMore: true,\n        isLoading: false,\n    },\n    swipeHistory: {\n        likes: [],\n        passes: [],\n        superlikes: [],\n    },\n    // Set current pet being viewed\n    setCurrentPet: (petId) => {\n        set((state) => ({\n            ...state,\n            currentPet: petId,\n        }));\n    },\n    // Set swipe pets\n    setSwipePets: (pets) => {\n        set((state) => {\n            state.swipePets = pets;\n        });\n    },\n    // Add pets to swipe queue\n    addSwipePets: (pets) => {\n        set((state) => {\n            state.swipePets = [...state.swipePets, ...pets];\n        });\n    },\n    // Set all matches\n    setMatches: (matches) => {\n        set((state) => {\n            state.matches = matches;\n        });\n    },\n    // Add a new match\n    addMatch: (match) => {\n        set((state) => {\n            state.matches.unshift(match);\n        });\n    },\n    // Update an existing match\n    updateMatch: (matchId, data) => {\n        set((state) => {\n            const index = state.matches.findIndex(match => match._id === matchId);\n            if (index !== -1) {\n                const existing = state.matches[index];\n                if (existing !== undefined) {\n                    Object.assign(existing, data);\n                }\n            }\n        });\n    },\n    // Remove a match\n    removeMatch: (matchId) => {\n        set((state) => {\n            state.matches = state.matches.filter(match => match._id !== matchId);\n        });\n    },\n    // Set active match for chat\n    setActiveMatchId: (matchId) => {\n        set((state) => {\n            state.activeMatchId = matchId;\n        });\n    },\n    // Update pagination info\n    setPaginationInfo: (info) => {\n        set((state) => {\n            state.paginationInfo = { ...state.paginationInfo, ...info };\n        });\n    },\n    // Add to swipe history\n    addToSwipeHistory: (petId, action) => {\n        set((state) => {\n            if (action === 'like') {\n                state.swipeHistory.likes.push(petId);\n            }\n            else if (action === 'pass') {\n                state.swipeHistory.passes.push(petId);\n            }\n            else {\n                state.swipeHistory.superlikes.push(petId);\n            }\n        });\n    },\n    // Clear swipe history\n    clearSwipeHistory: () => {\n        set((state) => {\n            state.swipeHistory = {\n                likes: [],\n                passes: [],\n                superlikes: [],\n            };\n        });\n    },\n})));\n"],"mappings":"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","ignoreList":[]}