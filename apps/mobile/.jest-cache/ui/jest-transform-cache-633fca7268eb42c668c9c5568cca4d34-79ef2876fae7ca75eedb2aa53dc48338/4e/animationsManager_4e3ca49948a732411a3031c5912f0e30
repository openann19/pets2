3028ea76fb5d9f67e0740a1be9c15237
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _styleAnimation = require("../animation/styleAnimation");
var _commonTypes = require("../commonTypes");
var _mutables = require("../mutables");
var _threads = require("../threads");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var TAG_OFFSET = 1e9;
var _worklet_8592228551106_init_data = {
  code: "function startObservingProgress(tag, sharedValue, animationType) {\n  const {\n    LayoutAnimationType,\n    TAG_OFFSET\n  } = this._closure;\n  const isSharedTransition = animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, function () {\n    global._notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}",
  location: "/home/ben/Downloads/pets-fresh/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"startObservingProgress\",\"tag\",\"sharedValue\",\"animationType\",\"LayoutAnimationType\",\"TAG_OFFSET\",\"_closure\",\"isSharedTransition\",\"SHARED_ELEMENT_TRANSITION\",\"addListener\",\"global\",\"_notifyAboutProgress\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts\"],\"mappings\":\"AAcA,SAAAA,sBAASA,CACPC,GAAA,EAAWC,WACX,EAAiDC,aACjD,EACD;EAAA;IAAAC,mBAAA;IAAAC;EAAA,SAAAC,QAAA;EAEC,MAAMC,kBAAkB,GACtBJ,aAAa,KAAKC,mBAAmB,CAACI,yBAAyB;EACjEN,WAAW,CAACO,WAAW,CAACR,GAAG,GAAGI,UAAU,EAAE,YAAM;IAC9CK,MAAM,CAACC,oBAAoB,CAACV,GAAG,EAAEC,WAAW,CAACU,KAAK,EAAEL,kBAAkB,CAAC;EACzE,CAAC,CAAC;AACJ\",\"ignoreList\":[]}"
};
var startObservingProgress = function () {
  var _e = [new global.Error(), -3, -27];
  var _f = function _f(tag, sharedValue, animationType) {
    var isSharedTransition = animationType === _commonTypes.LayoutAnimationType.SHARED_ELEMENT_TRANSITION;
    sharedValue.addListener(tag + TAG_OFFSET, function () {
      global._notifyAboutProgress(tag, sharedValue.value, isSharedTransition);
    });
  };
  _f._closure = {
    LayoutAnimationType: _commonTypes.LayoutAnimationType,
    TAG_OFFSET: TAG_OFFSET
  };
  _f.__initData = _worklet_8592228551106_init_data;
  _f.__workletHash = 8592228551106;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_6711475320771_init_data = {
  code: "function stopObservingProgress(tag, sharedValue, removeView = false) {\n  const {\n    TAG_OFFSET\n  } = this._closure;\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  global._notifyAboutEnd(tag, removeView);\n}",
  location: "/home/ben/Downloads/pets-fresh/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"stopObservingProgress\",\"tag\",\"sharedValue\",\"removeView\",\"TAG_OFFSET\",\"_closure\",\"removeListener\",\"global\",\"_notifyAboutEnd\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts\"],\"mappings\":\"AA2BA,SAAAA,qBAASA,CACPC,GAAA,EAAWC,WACX,EAAgCC,UAChC,GAAU,KAAG,EACd;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAECH,WAAW,CAACI,cAAc,CAACL,GAAG,GAAGG,UAAU,CAAC;EAC5CG,MAAM,CAACC,eAAe,CAACP,GAAG,EAAEE,UAAU,CAAC;AACzC\",\"ignoreList\":[]}"
};
var stopObservingProgress = function () {
  var _e = [new global.Error(), -2, -27];
  var _f = function _f(tag, sharedValue) {
    var removeView = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    sharedValue.removeListener(tag + TAG_OFFSET);
    global._notifyAboutEnd(tag, removeView);
  };
  _f._closure = {
    TAG_OFFSET: TAG_OFFSET
  };
  _f.__initData = _worklet_6711475320771_init_data;
  _f.__workletHash = 6711475320771;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_14812403293304_init_data = {
  code: "function createLayoutAnimationManager() {\n  const {\n    LayoutAnimationType,\n    makeMutableUI,\n    stopObservingProgress,\n    withStyleAnimation,\n    startObservingProgress\n  } = this._closure;\n  const currentAnimationForTag = new Map();\n  const mutableValuesForTag = new Map();\n  return {\n    start: function (tag, type, yogaValues, config) {\n      if (type === LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS) {\n        global.ProgressTransitionRegister.onTransitionStart(tag, yogaValues);\n        return;\n      }\n      const style = config(yogaValues);\n      let currentAnimation = style.animations;\n      const previousAnimation = currentAnimationForTag.get(tag);\n      if (previousAnimation) {\n        currentAnimation = {\n          ...previousAnimation,\n          ...style.animations\n        };\n      }\n      currentAnimationForTag.set(tag, currentAnimation);\n      let value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeMutableUI(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value);\n        value._value = style.initialValues;\n      }\n      const animation = withStyleAnimation(currentAnimation);\n      animation.callback = function (finished) {\n        if (finished) {\n          currentAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          const shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, shouldRemoveView);\n        }\n        style.callback && style.callback(finished === undefined ? false : finished);\n      };\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop: function (tag) {\n      const value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value);\n    }\n  };\n}",
  location: "/home/ben/Downloads/pets-fresh/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"createLayoutAnimationManager\",\"LayoutAnimationType\",\"makeMutableUI\",\"stopObservingProgress\",\"withStyleAnimation\",\"startObservingProgress\",\"_closure\",\"currentAnimationForTag\",\"Map\",\"mutableValuesForTag\",\"start\",\"tag\",\"type\",\"yogaValues\",\"config\",\"SHARED_ELEMENT_TRANSITION_PROGRESS\",\"global\",\"ProgressTransitionRegister\",\"onTransitionStart\",\"style\",\"currentAnimation\",\"animations\",\"previousAnimation\",\"get\",\"set\",\"value\",\"undefined\",\"initialValues\",\"_value\",\"animation\",\"callback\",\"finished\",\"delete\",\"shouldRemoveView\",\"EXITING\",\"stop\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts\"],\"mappings\":\"AAqCA,SAAAA,4BAASA,CAAA,EAA4B;EAAA;IAAAC,mBAAA;IAAAC,aAAA;IAAAC,qBAAA;IAAAC,kBAAA;IAAAC;EAAA,SAAAC,QAAA;EAKnC,MAAMC,sBAAsB,GAAG,IAAIC,GAAG,CAAC,CAAC;EACxC,MAAMC,mBAAmB,GAAG,IAAID,GAAG,CAAC,CAAC;EAErC,OAAO;IACLE,KAAK,WAAAA,CACHC,GAAW,EACXC,IAAyB,EAKzBC,UAAqD,EACrDC,MAEoB,EACpB;MACA,IAAIF,IAAI,KAAKX,mBAAmB,CAACc,kCAAkC,EAAE;QACnEC,MAAM,CAACC,0BAA0B,CAACC,iBAAiB,CAACP,GAAG,EAAEE,UAAU,CAAC;QACpE;MACF;MAEA,MAAMM,KAAK,GAAGL,MAAM,CAACD,UAAU,CAAC;MAChC,IAAIO,gBAAgB,GAAGD,KAAK,CAACE,UAAU;MAIvC,MAAMC,iBAAiB,GAAGf,sBAAsB,CAACgB,GAAG,CAACZ,GAAG,CAAC;MACzD,IAAIW,iBAAiB,EAAE;QACrBF,gBAAgB,GAAG;UAAE,GAAGE,iBAAiB;UAAE,GAAGH,KAAK,CAACE;QAAW,CAAC;MAClE;MACAd,sBAAsB,CAACiB,GAAG,CAACb,GAAG,EAAES,gBAAgB,CAAC;MAEjD,IAAIK,KAAK,GAAGhB,mBAAmB,CAACc,GAAG,CAACZ,GAAG,CAAC;MACxC,IAAIc,KAAK,KAAKC,SAAS,EAAE;QACvBD,KAAK,GAAGvB,aAAa,CAACiB,KAAK,CAACQ,aAAa,CAAC;QAC1ClB,mBAAmB,CAACe,GAAG,CAACb,GAAG,EAAEc,KAAK,CAAC;MACrC,CAAC,MAAM;QACLtB,qBAAqB,CAACQ,GAAG,EAAEc,KAAK,CAAC;QACjCA,KAAK,CAACG,MAAM,GAAGT,KAAK,CAACQ,aAAa;MACpC;MAGA,MAAME,SAAS,GAAGzB,kBAAkB,CAACgB,gBAAgB,CAAC;MAEtDS,SAAS,CAACC,QAAQ,GAAG,UAACC,QAAkB,EAAK;QAC3C,IAAIA,QAAQ,EAAE;UACZxB,sBAAsB,CAACyB,MAAM,CAACrB,GAAG,CAAC;UAClCF,mBAAmB,CAACuB,MAAM,CAACrB,GAAG,CAAC;UAC/B,MAAMsB,gBAAgB,GAAGrB,IAAI,KAAKX,mBAAmB,CAACiC,OAAO;UAC7D/B,qBAAqB,CAACQ,GAAG,EAAEc,KAAK,EAAEQ,gBAAgB,CAAC;QACrD;QACAd,KAAK,CAACW,QAAQ,IACZX,KAAK,CAACW,QAAQ,CAACC,QAAQ,KAAKL,SAAS,GAAG,KAAK,GAAGK,QAAQ,CAAC;MAC7D,CAAC;MAED1B,sBAAsB,CAACM,GAAG,EAAEc,KAAK,EAAEb,IAAI,CAAC;MACxCa,KAAK,CAACA,KAAK,GAAGI,SAAS;IACzB,CAAC;IACDM,IAAI,WAAAA,CAACxB,GAAW,EAAE;MAChB,MAAMc,KAAK,GAAGhB,mBAAmB,CAACc,GAAG,CAACZ,GAAG,CAAC;MAC1C,IAAI,CAACc,KAAK,EAAE;QACV;MACF;MACAtB,qBAAqB,CAACQ,GAAG,EAAEc,KAAK,CAAC;IACnC;EACF,CAAC;AACH\",\"ignoreList\":[]}"
};
var createLayoutAnimationManager = function () {
  var _e = [new global.Error(), -6, -27];
  var _f = function _f() {
    var currentAnimationForTag = new Map();
    var mutableValuesForTag = new Map();
    return {
      start: function start(tag, type, yogaValues, config) {
        if (type === _commonTypes.LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS) {
          global.ProgressTransitionRegister.onTransitionStart(tag, yogaValues);
          return;
        }
        var style = config(yogaValues);
        var currentAnimation = style.animations;
        var previousAnimation = currentAnimationForTag.get(tag);
        if (previousAnimation) {
          currentAnimation = _objectSpread(_objectSpread({}, previousAnimation), style.animations);
        }
        currentAnimationForTag.set(tag, currentAnimation);
        var value = mutableValuesForTag.get(tag);
        if (value === undefined) {
          value = (0, _mutables.makeMutableUI)(style.initialValues);
          mutableValuesForTag.set(tag, value);
        } else {
          stopObservingProgress(tag, value);
          value._value = style.initialValues;
        }
        var animation = (0, _styleAnimation.withStyleAnimation)(currentAnimation);
        animation.callback = function (finished) {
          if (finished) {
            currentAnimationForTag.delete(tag);
            mutableValuesForTag.delete(tag);
            var shouldRemoveView = type === _commonTypes.LayoutAnimationType.EXITING;
            stopObservingProgress(tag, value, shouldRemoveView);
          }
          style.callback && style.callback(finished === undefined ? false : finished);
        };
        startObservingProgress(tag, value, type);
        value.value = animation;
      },
      stop: function stop(tag) {
        var value = mutableValuesForTag.get(tag);
        if (!value) {
          return;
        }
        stopObservingProgress(tag, value);
      }
    };
  };
  _f._closure = {
    LayoutAnimationType: _commonTypes.LayoutAnimationType,
    makeMutableUI: _mutables.makeMutableUI,
    stopObservingProgress: stopObservingProgress,
    withStyleAnimation: _styleAnimation.withStyleAnimation,
    startObservingProgress: startObservingProgress
  };
  _f.__initData = _worklet_14812403293304_init_data;
  _f.__workletHash = 14812403293304;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_14784208921142_init_data = {
  code: "function anonymous() {\n  const {\n    createLayoutAnimationManager\n  } = this._closure;\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n}",
  location: "/home/ben/Downloads/pets-fresh/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"createLayoutAnimationManager\",\"_closure\",\"global\",\"LayoutAnimationsManager\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts\"],\"mappings\":\"AA8GmB,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAEvBC,MAAM,CAACC,uBAAuB,GAAGH,4BAA4B,CAAC,CAAC;AACjE\",\"ignoreList\":[]}"
};
(0, _threads.runOnUIImmediately)(function () {
  var _e = [new global.Error(), -2, -27];
  var _f = function _f() {
    global.LayoutAnimationsManager = createLayoutAnimationManager();
  };
  _f._closure = {
    createLayoutAnimationManager: createLayoutAnimationManager
  };
  _f.__initData = _worklet_14784208921142_init_data;
  _f.__workletHash = 14784208921142;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}())();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,