{"version":3,"names":["Object","defineProperty","exports","value","addLogBoxLog","_reactNative","require","_LogBox$addLog$bind","_LogBox$addLog","LogBox","RNLogBox","noop","addLog","bind"],"sources":["LogBox.ts"],"sourcesContent":["'use strict';\n/**\n * Copied from: react-native/Libraries/LogBox/Data/LogBoxData.js\n * react-native/Libraries/LogBox/Data/parseLogBoxLog.js\n */\n\nimport type { LogBoxStatic } from 'react-native';\nimport { LogBox as RNLogBox } from 'react-native';\n\nexport type LogBoxLogLevel = 'warn' | 'error' | 'fatal' | 'syntax';\n\ntype Message = {\n  content: string;\n  substitutions: { length: number; offset: number }[];\n};\n\ntype Category = string;\n\ninterface Location {\n  row: number;\n  column: number;\n}\n\ninterface CodeFrame {\n  content: string;\n  location?: Location | null;\n  fileName: string;\n  collapse?: boolean;\n}\n\ntype ComponentStack = CodeFrame[];\n\ntype ComponentStackType = 'legacy' | 'stack';\n\nexport type LogData = {\n  level: LogBoxLogLevel;\n  message: Message;\n  category: Category;\n  componentStack: ComponentStack;\n  componentStackType: ComponentStackType | null;\n  stack?: string;\n};\n\ninterface LogBoxExtended extends LogBoxStatic {\n  addLog(data: LogData): void;\n}\n\nconst LogBox = RNLogBox as LogBoxExtended;\n\nconst noop = () => {\n  // do nothing\n};\n\n// Do nothing when addLogBoxLog is called if LogBox is not available\nexport const addLogBoxLog = LogBox?.addLog?.bind(LogBox) ?? noop;\n"],"mappings":"AAAA,YAAY;AAACA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,YAAA;AAOb,IAAAC,YAAA,GAAAC,OAAA;AAAkD,IAAAC,mBAAA,EAAAC,cAAA;AAwClD,IAAMC,MAAM,GAAGC,mBAA0B;AAEzC,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS,CAEnB,CAAC;AAGM,IAAMP,YAAY,GAAAF,OAAA,CAAAE,YAAA,IAAAG,mBAAA,GAAGE,MAAM,qBAAAD,cAAA,GAANC,MAAM,CAAEG,MAAM,qBAAdJ,cAAA,CAAgBK,IAAI,CAACJ,MAAM,CAAC,YAAAF,mBAAA,GAAII,IAAI","ignoreList":[]}