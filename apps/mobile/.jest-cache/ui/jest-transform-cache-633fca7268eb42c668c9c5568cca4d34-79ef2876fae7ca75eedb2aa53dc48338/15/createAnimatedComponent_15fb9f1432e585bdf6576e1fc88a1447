c24275dfa574d6e15ca940d509c071b3
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createAnimatedComponent;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _View = _interopRequireDefault(require("../Components/View/View"));
var _useMergeRefs = _interopRequireDefault(require("../Utilities/useMergeRefs"));
var _useAnimatedProps3 = _interopRequireDefault(require("./useAnimatedProps"));
var React = _interopRequireWildcard(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["style"];
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function createAnimatedComponent(Component) {
  return React.forwardRef(function (props, forwardedRef) {
    var _useAnimatedProps = (0, _useAnimatedProps3.default)(props),
      _useAnimatedProps2 = (0, _slicedToArray2.default)(_useAnimatedProps, 2),
      reducedProps = _useAnimatedProps2[0],
      callbackRef = _useAnimatedProps2[1];
    var ref = (0, _useMergeRefs.default)(callbackRef, forwardedRef);
    var passthroughAnimatedPropExplicitValues = reducedProps.passthroughAnimatedPropExplicitValues,
      style = reducedProps.style;
    var _ref = passthroughAnimatedPropExplicitValues != null ? passthroughAnimatedPropExplicitValues : {},
      passthroughStyle = _ref.style,
      passthroughProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);
    var mergedStyle = _objectSpread(_objectSpread({}, style), passthroughStyle);
    return (0, _jsxRuntime.jsx)(Component, _objectSpread(_objectSpread(_objectSpread({}, reducedProps), passthroughProps), {}, {
      style: mergedStyle,
      ref: ref
    }));
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfVmlldyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3VzZU1lcmdlUmVmcyIsIl91c2VBbmltYXRlZFByb3BzMyIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfanN4UnVudGltZSIsIl9leGNsdWRlZCIsImUiLCJ0IiwiV2Vha01hcCIsInIiLCJuIiwiX19lc01vZHVsZSIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImRlZmF1bHQiLCJoYXMiLCJnZXQiLCJzZXQiLCJfdCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwib3duS2V5cyIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJmaWx0ZXIiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJjcmVhdGVBbmltYXRlZENvbXBvbmVudCIsIkNvbXBvbmVudCIsImZvcndhcmRSZWYiLCJwcm9wcyIsImZvcndhcmRlZFJlZiIsIl91c2VBbmltYXRlZFByb3BzIiwidXNlQW5pbWF0ZWRQcm9wcyIsIl91c2VBbmltYXRlZFByb3BzMiIsIl9zbGljZWRUb0FycmF5MiIsInJlZHVjZWRQcm9wcyIsImNhbGxiYWNrUmVmIiwicmVmIiwidXNlTWVyZ2VSZWZzIiwicGFzc3Rocm91Z2hBbmltYXRlZFByb3BFeHBsaWNpdFZhbHVlcyIsInN0eWxlIiwiX3JlZiIsInBhc3N0aHJvdWdoU3R5bGUiLCJwYXNzdGhyb3VnaFByb3BzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsIm1lcmdlZFN0eWxlIiwianN4Il0sInNvdXJjZXMiOlsiY3JlYXRlQW5pbWF0ZWRDb21wb25lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0IFZpZXcgZnJvbSAnLi4vQ29tcG9uZW50cy9WaWV3L1ZpZXcnO1xuaW1wb3J0IHVzZU1lcmdlUmVmcyBmcm9tICcuLi9VdGlsaXRpZXMvdXNlTWVyZ2VSZWZzJztcbmltcG9ydCB1c2VBbmltYXRlZFByb3BzIGZyb20gJy4vdXNlQW5pbWF0ZWRQcm9wcyc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCB0eXBlIEFuaW1hdGVkQ29tcG9uZW50VHlwZTxcbiAgLVByb3BzOiB7K1tzdHJpbmddOiBtaXhlZCwgLi4ufSxcbiAgK0luc3RhbmNlID0gbWl4ZWQsXG4+ID0gUmVhY3QuQWJzdHJhY3RDb21wb25lbnQ8XG4gICRPYmpNYXA8XG4gICAgUHJvcHMgJlxuICAgICAgJFJlYWRPbmx5PHtcbiAgICAgICAgcGFzc3Rocm91Z2hBbmltYXRlZFByb3BFeHBsaWNpdFZhbHVlcz86IFJlYWN0LkVsZW1lbnRDb25maWc8XG4gICAgICAgICAgdHlwZW9mIFZpZXcsXG4gICAgICAgID4sXG4gICAgICB9PixcbiAgICAoKSA9PiBhbnksXG4gID4sXG4gIEluc3RhbmNlLFxuPjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlQW5pbWF0ZWRDb21wb25lbnQ8VFByb3BzOiB7Li4ufSwgVEluc3RhbmNlPihcbiAgQ29tcG9uZW50OiBSZWFjdC5BYnN0cmFjdENvbXBvbmVudDxUUHJvcHMsIFRJbnN0YW5jZT4sXG4pOiBBbmltYXRlZENvbXBvbmVudFR5cGU8VFByb3BzLCBUSW5zdGFuY2U+IHtcbiAgcmV0dXJuIFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCBbcmVkdWNlZFByb3BzLCBjYWxsYmFja1JlZl0gPSB1c2VBbmltYXRlZFByb3BzPFRQcm9wcywgVEluc3RhbmNlPihcbiAgICAgIC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLWNhbGxdXG4gICAgICBwcm9wcyxcbiAgICApO1xuICAgIGNvbnN0IHJlZiA9IHVzZU1lcmdlUmVmczxUSW5zdGFuY2UgfCBudWxsPihjYWxsYmFja1JlZiwgZm9yd2FyZGVkUmVmKTtcblxuICAgIC8vIFNvbWUgY29tcG9uZW50cyByZXF1aXJlIGV4cGxpY2l0IHBhc3N0aHJvdWdoIHZhbHVlcyBmb3IgYW5pbWF0aW9uXG4gICAgLy8gdG8gd29yayBwcm9wZXJseS4gRm9yIGV4YW1wbGUsIGlmIGFuIGFuaW1hdGVkIGNvbXBvbmVudCBpc1xuICAgIC8vIHRyYW5zZm9ybWVkIGFuZCBQcmVzc2FibGUsIG9uUHJlc3Mgd2lsbCBub3Qgd29yayBhZnRlciB0cmFuc2Zvcm1cbiAgICAvLyB3aXRob3V0IHRoZXNlIHBhc3N0aHJvdWdoIHZhbHVlcy5cbiAgICAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ11cbiAgICBjb25zdCB7cGFzc3Rocm91Z2hBbmltYXRlZFByb3BFeHBsaWNpdFZhbHVlcywgc3R5bGV9ID0gcmVkdWNlZFByb3BzO1xuICAgIGNvbnN0IHtzdHlsZTogcGFzc3Rocm91Z2hTdHlsZSwgLi4ucGFzc3Rocm91Z2hQcm9wc30gPVxuICAgICAgcGFzc3Rocm91Z2hBbmltYXRlZFByb3BFeHBsaWNpdFZhbHVlcyA/PyB7fTtcbiAgICBjb25zdCBtZXJnZWRTdHlsZSA9IHsuLi5zdHlsZSwgLi4ucGFzc3Rocm91Z2hTdHlsZX07XG5cbiAgICByZXR1cm4gKFxuICAgICAgPENvbXBvbmVudFxuICAgICAgICB7Li4ucmVkdWNlZFByb3BzfVxuICAgICAgICB7Li4ucGFzc3Rocm91Z2hQcm9wc31cbiAgICAgICAgc3R5bGU9e21lcmdlZFN0eWxlfVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgIC8+XG4gICAgKTtcbiAgfSk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFVQSxJQUFBQSxLQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxhQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxrQkFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUcsS0FBQSxHQUFBQyx1QkFBQSxDQUFBSixPQUFBO0FBQStCLElBQUFLLFdBQUEsR0FBQUwsT0FBQTtBQUFBLElBQUFNLFNBQUE7QUFBQSxTQUFBRix3QkFBQUcsQ0FBQSxFQUFBQyxDQUFBLDZCQUFBQyxPQUFBLE1BQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUwsdUJBQUEsWUFBQUEsd0JBQUFHLENBQUEsRUFBQUMsQ0FBQSxTQUFBQSxDQUFBLElBQUFELENBQUEsSUFBQUEsQ0FBQSxDQUFBSyxVQUFBLFNBQUFMLENBQUEsTUFBQU0sQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsS0FBQUMsU0FBQSxRQUFBQyxPQUFBLEVBQUFWLENBQUEsaUJBQUFBLENBQUEsdUJBQUFBLENBQUEseUJBQUFBLENBQUEsU0FBQVEsQ0FBQSxNQUFBRixDQUFBLEdBQUFMLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLFFBQUFHLENBQUEsQ0FBQUssR0FBQSxDQUFBWCxDQUFBLFVBQUFNLENBQUEsQ0FBQU0sR0FBQSxDQUFBWixDQUFBLEdBQUFNLENBQUEsQ0FBQU8sR0FBQSxDQUFBYixDQUFBLEVBQUFRLENBQUEsY0FBQU0sRUFBQSxJQUFBZCxDQUFBLGdCQUFBYyxFQUFBLE9BQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBaEIsQ0FBQSxFQUFBYyxFQUFBLE9BQUFQLENBQUEsSUFBQUQsQ0FB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