{"version":3,"names":["QualityTargets","exports","minW","minH","DEFAULT_RATIOS","getTargetDimensions","ratio","calculateUpscaleFactor","currentW","currentH","targetW","targetH","scaleW","scaleH","Math","max"],"sources":["QualityTargets.ts"],"sourcesContent":["/**\n * Quality Targets for publish-grade resolutions\n * Instagram + story/reel safe zones for social media\n */\n\nexport const QualityTargets = {\n  // Instagram-grade + story/reel safe\n  \"1:1\": { minW: 1080, minH: 1080 }, // 1080 x 1080\n  \"4:5\": { minW: 1080, minH: 1350 }, // portrait feed\n  \"9:16\": { minW: 1080, minH: 1920 }, // story/reel\n  \"3:4\": { minW: 1080, minH: 1440 }, // alt portrait\n  \"16:9\": { minW: 1920, minH: 1080 }, // landscape\n} as const;\n\nexport type KnownRatio = keyof typeof QualityTargets;\n\nexport const DEFAULT_RATIOS: KnownRatio[] = [\"1:1\", \"4:5\", \"9:16\"];\n\n/**\n * Get target dimensions for a given aspect ratio\n * @param ratio - Aspect ratio string (e.g., \"1:1\", \"4:5\")\n * @returns Target width and height, or null if ratio not supported\n */\nexport function getTargetDimensions(ratio: string): { minW: number; minH: number } | null {\n  return QualityTargets[ratio as KnownRatio] || null;\n}\n\n/**\n * Calculate upscale factor needed to reach target dimensions\n * @param currentW - Current image width\n * @param currentH - Current image height\n * @param targetW - Target width\n * @param targetH - Target height\n * @returns Upscale factor (1.0 = no upscale needed)\n */\nexport function calculateUpscaleFactor(\n  currentW: number,\n  currentH: number,\n  targetW: number,\n  targetH: number\n): number {\n  const scaleW = targetW / currentW;\n  const scaleH = targetH / currentH;\n  return Math.max(scaleW, scaleH);\n}\n\n"],"mappings":";;;;;;;;AAKO,IAAMA,cAAc,GAAAC,OAAA,CAAAD,cAAA,GAAG;EAE5B,KAAK,EAAE;IAAEE,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAK,CAAC;EACjC,KAAK,EAAE;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAK,CAAC;EACjC,MAAM,EAAE;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAK,CAAC;EAClC,KAAK,EAAE;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAK,CAAC;EACjC,MAAM,EAAE;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAK;AACnC,CAAU;AAIH,IAAMC,cAA4B,GAAAH,OAAA,CAAAG,cAAA,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC;AAO3D,SAASC,mBAAmBA,CAACC,KAAa,EAAyC;EACxF,OAAON,cAAc,CAACM,KAAK,CAAe,IAAI,IAAI;AACpD;AAUO,SAASC,sBAAsBA,CACpCC,QAAgB,EAChBC,QAAgB,EAChBC,OAAe,EACfC,OAAe,EACP;EACR,IAAMC,MAAM,GAAGF,OAAO,GAAGF,QAAQ;EACjC,IAAMK,MAAM,GAAGF,OAAO,GAAGF,QAAQ;EACjC,OAAOK,IAAI,CAACC,GAAG,CAACH,MAAM,EAAEC,MAAM,CAAC;AACjC","ignoreList":[]}