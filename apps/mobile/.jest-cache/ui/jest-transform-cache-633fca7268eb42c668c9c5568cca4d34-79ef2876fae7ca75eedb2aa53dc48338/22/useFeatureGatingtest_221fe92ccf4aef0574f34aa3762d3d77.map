{"version":3,"names":["_getJestObj","mock","premiumService","getUsageStats","jest","fn","getSubscriptionDetails","hasActiveSubscription","usePremiumStatus","logger","info","error","warn","_interopRequireDefault","require","_defineProperty2","_asyncToGenerator2","_globals","_reactNative","_asyncStorage","_useFeatureGating","_premiumService","_usePremiumStatus","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","default","getOwnPropertyDescriptors","defineProperties","defineProperty","_require","mockAsyncStorage","AsyncStorage","mockPremiumService","mockUsePremiumStatus","describe","mockUsageStats","swipesUsed","swipesLimit","superLikesUsed","superLikesLimit","boostsUsed","boostsLimit","profileViews","messagesSent","matchRate","mockPremiumStatus","isPremium","isLoading","subscriptionDetails","isActive","plan","features","lastChecked","Date","now","checkStatus","clearCache","isSubscriptionActive","mockReturnValue","getDaysUntilRenewal","hasFeature","isSubscriptionCancelled","beforeEach","clearAllMocks","getItem","mockResolvedValue","setItem","undefined","it","_renderHook","renderHook","useFeatureGating","result","expect","current","toBe","toEqual","usageStats","toBeNull","_renderHook2","waitFor","toHaveBeenCalled","_renderHook3","canUseFeature","freeUserStatus","_renderHook4","_renderHook5","_renderHook6","hasUsageLeft","getUsageLeft","highUsageStats","act","refreshUsageStats","_renderHook7","_renderHook8","_renderHook9","canUse","useFeature","toHaveBeenCalledTimes","atLimitStats","_renderHook0","_renderHook1","i","_renderHook10","swipesConfig","getFeatureConfig","enabled","limit","used","resetDate","any","boostsConfig","_renderHook11","_result$current$usage","_renderHook12","updatedStats","mockRejectedValue","Error","_renderHook13","_renderHook14","_renderHook15","mockRejectedValueOnce","_renderHook16","mockResolvedValueOnce","currentStatus","mockImplementation","_renderHook17","rerender","loadingStatus","_renderHook18","_renderHook19","toHaveBeenCalledWith","String","cachedData","swipes","lastUpdated","JSON","stringify","_renderHook20","not","emptyStats","_renderHook21","negativeStats","_renderHook22","unlimitedStats","_renderHook23","_renderHook24","usagePromises","Array","from","results","Promise","all","every","originalUsePremiumStatus","getMockImplementation","_renderHook25"],"sources":["useFeatureGating.test.ts"],"sourcesContent":["/**\n * Comprehensive tests for useFeatureGating hook\n *\n * Coverage:\n * - Feature access control based on subscription tier\n * - Feature limit enforcement\n * - Usage tracking and limits\n * - Graceful degradation for free users\n * - Real-time limit updates\n * - Feature-specific configurations\n */\n\nimport { describe, it, expect, jest, beforeEach, afterEach } from '@jest/globals';\nimport { renderHook, act, waitFor } from '@testing-library/react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFeatureGating } from '../useFeatureGating';\n\n// Mock dependencies\njest.mock('@react-native-async-storage/async-storage');\njest.mock('../../../services/premiumService', () => ({\n  premiumService: {\n    getUsageStats: jest.fn(),\n    getSubscriptionDetails: jest.fn(),\n    hasActiveSubscription: jest.fn(),\n  },\n}));\n\n// Mock premium status hook\njest.mock('../usePremiumStatus', () => ({\n  usePremiumStatus: jest.fn(),\n}));\n\n// Mock logger\njest.mock('@pawfectmatch/core', () => ({\n  logger: {\n    info: jest.fn(),\n    error: jest.fn(),\n    warn: jest.fn(),\n  },\n}));\n\nimport { premiumService } from '../../../services/premiumService';\nimport { usePremiumStatus } from '../usePremiumStatus';\n\nconst mockAsyncStorage = AsyncStorage as jest.Mocked<typeof AsyncStorage>;\nconst mockPremiumService = premiumService as jest.Mocked<typeof premiumService>;\nconst mockUsePremiumStatus = usePremiumStatus as jest.Mock;\n\ndescribe('useFeatureGating', () => {\n  const mockUsageStats = {\n    swipesUsed: 25,\n    swipesLimit: 50,\n    superLikesUsed: 3,\n    superLikesLimit: 5,\n    boostsUsed: 1,\n    boostsLimit: 3,\n    profileViews: 150,\n    messagesSent: 45,\n    matchRate: 0.3,\n  };\n\n  const mockPremiumStatus = {\n    isPremium: true,\n    isLoading: false,\n    subscriptionDetails: {\n      isActive: true,\n      plan: 'premium',\n      features: ['unlimited_swipes', 'super_likes', 'boosts'],\n    },\n    error: null,\n    lastChecked: Date.now(),\n    checkStatus: jest.fn(),\n    clearCache: jest.fn(),\n    isSubscriptionActive: jest.fn().mockReturnValue(true),\n    getDaysUntilRenewal: jest.fn().mockReturnValue(25),\n    hasFeature: jest.fn().mockReturnValue(true),\n    isSubscriptionCancelled: jest.fn().mockReturnValue(false),\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n\n    // Setup default mocks\n    mockAsyncStorage.getItem.mockResolvedValue(null);\n    mockAsyncStorage.setItem.mockResolvedValue(undefined);\n\n    mockPremiumService.getUsageStats.mockResolvedValue(mockUsageStats);\n    mockUsePremiumStatus.mockReturnValue(mockPremiumStatus);\n  });\n\n  describe('Initial State', () => {\n    it('should initialize with default state', () => {\n      const { result } = renderHook(() => useFeatureGating());\n\n      expect(result.current.isLoading).toBe(true);\n      expect(result.current.features).toEqual({});\n      expect(result.current.usageStats).toBeNull();\n      expect(result.current.error).toBeNull();\n    });\n\n    it('should load initial data on mount', async () => {\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      expect(result.current.usageStats).toEqual(mockUsageStats);\n      expect(mockPremiumService.getUsageStats).toHaveBeenCalled();\n    });\n  });\n\n  describe('Feature Access Control', () => {\n    it('should allow access to premium features for premium users', async () => {\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      expect(result.current.canUseFeature('super_likes')).toBe(true);\n      expect(result.current.canUseFeature('boosts')).toBe(true);\n      expect(result.current.canUseFeature('unlimited_swipes')).toBe(true);\n    });\n\n    it('should deny access to premium features for free users', async () => {\n      const freeUserStatus = {\n        ...mockPremiumStatus,\n        isPremium: false,\n        hasFeature: jest.fn().mockReturnValue(false),\n      };\n\n      mockUsePremiumStatus.mockReturnValue(freeUserStatus);\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      expect(result.current.canUseFeature('super_likes')).toBe(false);\n      expect(result.current.canUseFeature('boosts')).toBe(false);\n    });\n\n    it('should allow access to free features for all users', async () => {\n      const freeUserStatus = {\n        ...mockPremiumStatus,\n        isPremium: false,\n        hasFeature: jest.fn().mockReturnValue(false),\n      };\n\n      mockUsePremiumStatus.mockReturnValue(freeUserStatus);\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      // Basic features should be available to all users\n      expect(result.current.canUseFeature('basic_swipes')).toBe(true);\n      expect(result.current.canUseFeature('view_profiles')).toBe(true);\n    });\n  });\n\n  describe('Usage Limits', () => {\n    it('should check usage limits correctly', async () => {\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      // Under limit\n      expect(result.current.hasUsageLeft('swipes')).toBe(true);\n      expect(result.current.getUsageLeft('swipes')).toBe(25); // 50 - 25\n\n      // At limit\n      const highUsageStats = { ...mockUsageStats, swipesUsed: 50 };\n      mockPremiumService.getUsageStats.mockResolvedValue(highUsageStats);\n\n      await act(async () => {\n        await result.current.refreshUsageStats();\n      });\n\n      expect(result.current.hasUsageLeft('swipes')).toBe(false);\n      expect(result.current.getUsageLeft('swipes')).toBe(0);\n    });\n\n    it('should provide unlimited access for premium features', async () => {\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      // Premium users should have unlimited access to premium features\n      expect(result.current.hasUsageLeft('super_likes')).toBe(true);\n      expect(result.current.getUsageLeft('super_likes')).toBe(-1); // Unlimited\n    });\n\n    it('should handle unknown features gracefully', async () => {\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      expect(result.current.canUseFeature('unknown_feature')).toBe(false);\n      expect(result.current.hasUsageLeft('unknown_feature')).toBe(false);\n      expect(result.current.getUsageLeft('unknown_feature')).toBe(0);\n    });\n  });\n\n  describe('Usage Tracking', () => {\n    it('should track feature usage', async () => {\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      await act(async () => {\n        const canUse = await result.current.useFeature('swipes');\n        expect(canUse).toBe(true);\n      });\n\n      // Should trigger usage stats refresh\n      expect(mockPremiumService.getUsageStats).toHaveBeenCalledTimes(2);\n    });\n\n    it('should prevent usage when at limit', async () => {\n      const atLimitStats = { ...mockUsageStats, swipesUsed: 50 };\n      mockPremiumService.getUsageStats.mockResolvedValue(atLimitStats);\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      await act(async () => {\n        const canUse = await result.current.useFeature('swipes');\n        expect(canUse).toBe(false);\n      });\n    });\n\n    it('should allow unlimited usage for premium features', async () => {\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      // Multiple uses of premium feature\n      for (let i = 0; i < 10; i++) {\n        await act(async () => {\n          const canUse = await result.current.useFeature('super_likes');\n          expect(canUse).toBe(true);\n        });\n      }\n    });\n  });\n\n  describe('Feature Configurations', () => {\n    it('should provide feature-specific configurations', async () => {\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      const swipesConfig = result.current.getFeatureConfig('swipes');\n      expect(swipesConfig).toEqual({\n        enabled: true,\n        limit: 50,\n        used: 25,\n        isPremium: true,\n        resetDate: expect.any(Date),\n      });\n\n      const boostsConfig = result.current.getFeatureConfig('boosts');\n      expect(boostsConfig.isPremium).toBe(true);\n      expect(boostsConfig.limit).toBe(-1); // Unlimited\n    });\n\n    it('should provide different configs for free vs premium users', async () => {\n      const freeUserStatus = {\n        ...mockPremiumStatus,\n        isPremium: false,\n        hasFeature: jest.fn().mockReturnValue(false),\n      };\n\n      mockUsePremiumStatus.mockReturnValue(freeUserStatus);\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      const swipesConfig = result.current.getFeatureConfig('swipes');\n      expect(swipesConfig.limit).toBe(50); // Same limit but not premium\n      expect(swipesConfig.isPremium).toBe(false);\n    });\n  });\n\n  describe('Refresh and Updates', () => {\n    it('should refresh usage stats on demand', async () => {\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      const updatedStats = { ...mockUsageStats, swipesUsed: 30 };\n      mockPremiumService.getUsageStats.mockResolvedValue(updatedStats);\n\n      await act(async () => {\n        await result.current.refreshUsageStats();\n      });\n\n      expect(result.current.usageStats?.swipesUsed).toBe(30);\n      expect(mockPremiumService.getUsageStats).toHaveBeenCalledTimes(2);\n    });\n\n    it('should handle refresh errors gracefully', async () => {\n      mockPremiumService.getUsageStats.mockRejectedValue(new Error('Refresh failed'));\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      await act(async () => {\n        await result.current.refreshUsageStats();\n      });\n\n      expect(result.current.error).toBe('Refresh failed');\n      // Should keep previous stats\n      expect(result.current.usageStats).toEqual(mockUsageStats);\n    });\n  });\n\n  describe('Error Handling', () => {\n    it('should handle initial data loading errors', async () => {\n      mockPremiumService.getUsageStats.mockRejectedValue(new Error('Loading failed'));\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      expect(result.current.error).toBe('Loading failed');\n      expect(result.current.usageStats).toBeNull();\n    });\n\n    it('should handle AsyncStorage errors gracefully', async () => {\n      mockAsyncStorage.getItem.mockRejectedValue(new Error('Storage error'));\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      // Should still work despite storage errors\n      expect(result.current.usageStats).toEqual(mockUsageStats);\n    });\n\n    it('should reset error state on successful operations', async () => {\n      // First operation fails\n      mockPremiumService.getUsageStats.mockRejectedValueOnce(new Error('First error'));\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.error).toBe('First error');\n      });\n\n      // Second operation succeeds\n      mockPremiumService.getUsageStats.mockResolvedValueOnce(mockUsageStats);\n\n      await act(async () => {\n        await result.current.refreshUsageStats();\n      });\n\n      expect(result.current.error).toBeNull();\n    });\n  });\n\n  describe('Premium Status Integration', () => {\n    it('should react to premium status changes', async () => {\n      let currentStatus = { ...mockPremiumStatus };\n\n      mockUsePremiumStatus.mockImplementation(() => currentStatus);\n\n      const { result, rerender } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      // Initially premium\n      expect(result.current.canUseFeature('boosts')).toBe(true);\n\n      // Change to free user\n      currentStatus = {\n        ...mockPremiumStatus,\n        isPremium: false,\n        hasFeature: jest.fn().mockReturnValue(false),\n      };\n\n      rerender();\n\n      await waitFor(() => {\n        expect(result.current.canUseFeature('boosts')).toBe(false);\n      });\n    });\n\n    it('should handle premium status loading states', async () => {\n      const loadingStatus = {\n        ...mockPremiumStatus,\n        isLoading: true,\n      };\n\n      mockUsePremiumStatus.mockReturnValue(loadingStatus);\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      // Should still show features as available during loading\n      expect(result.current.canUseFeature('swipes')).toBe(true);\n    });\n  });\n\n  describe('Cache Management', () => {\n    it('should cache feature configurations', async () => {\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      expect(mockAsyncStorage.setItem).toHaveBeenCalledWith(\n        'feature_gating_cache',\n        expect.any(String)\n      );\n    });\n\n    it('should load cached data on mount', async () => {\n      const cachedData = {\n        features: { swipes: { enabled: true, limit: 50, used: 20 } },\n        usageStats: mockUsageStats,\n        lastUpdated: Date.now(),\n      };\n\n      mockAsyncStorage.getItem.mockResolvedValue(JSON.stringify(cachedData));\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.usageStats).toEqual(mockUsageStats);\n      });\n\n      // Should not make API calls for fresh cache\n      expect(mockPremiumService.getUsageStats).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('Edge Cases', () => {\n    it('should handle empty usage stats', async () => {\n      const emptyStats = {\n        swipesUsed: 0,\n        swipesLimit: 0,\n        superLikesUsed: 0,\n        superLikesLimit: 0,\n        boostsUsed: 0,\n        boostsLimit: 0,\n        profileViews: 0,\n        messagesSent: 0,\n        matchRate: 0,\n      };\n\n      mockPremiumService.getUsageStats.mockResolvedValue(emptyStats);\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      expect(result.current.hasUsageLeft('swipes')).toBe(false);\n      expect(result.current.getUsageLeft('swipes')).toBe(0);\n    });\n\n    it('should handle negative usage values', async () => {\n      const negativeStats = {\n        ...mockUsageStats,\n        swipesUsed: -5, // Invalid negative value\n      };\n\n      mockPremiumService.getUsageStats.mockResolvedValue(negativeStats);\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      // Should handle gracefully (treat as 0)\n      expect(result.current.getUsageLeft('swipes')).toBe(55); // 50 - 0\n    });\n\n    it('should handle very high usage limits', async () => {\n      const unlimitedStats = {\n        ...mockUsageStats,\n        swipesLimit: 999999, // Very high limit\n      };\n\n      mockPremiumService.getUsageStats.mockResolvedValue(unlimitedStats);\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      expect(result.current.hasUsageLeft('swipes')).toBe(true);\n      expect(result.current.getUsageLeft('swipes')).toBe(999974);\n    });\n\n    it('should handle concurrent feature usage attempts', async () => {\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      // Multiple concurrent usage attempts\n      const usagePromises = Array.from({ length: 10 }, () =>\n        act(async () => result.current.useFeature('swipes'))\n      );\n\n      const results = await Promise.all(usagePromises);\n\n      // Should handle all requests\n      expect(results.every(r => r === true)).toBe(true);\n    });\n\n    it('should handle malformed feature configurations', async () => {\n      // Temporarily break the hook to test error handling\n      const originalUsePremiumStatus = mockUsePremiumStatus.getMockImplementation();\n\n      mockUsePremiumStatus.mockReturnValue({\n        ...mockPremiumStatus,\n        hasFeature: undefined, // Break the function\n      });\n\n      const { result } = renderHook(() => useFeatureGating());\n\n      await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      // Should handle gracefully\n      expect(result.current.canUseFeature('swipes')).toBe(true); // Default to true\n    });\n  });\n});\n"],"mappings":";;AAkBAA,WAAA,GAAKC,IAAI,CAAC,2CAA2C,CAAC;AACtDD,WAAA,GAAKC,IAAI,qCAAqC;EAAA,OAAO;IACnDC,cAAc,EAAE;MACdC,aAAa,EAAEC,aAAI,CAACC,EAAE,CAAC,CAAC;MACxBC,sBAAsB,EAAEF,aAAI,CAACC,EAAE,CAAC,CAAC;MACjCE,qBAAqB,EAAEH,aAAI,CAACC,EAAE,CAAC;IACjC;EACF,CAAC;AAAA,CAAC,CAAC;AAGHL,WAAA,GAAKC,IAAI,wBAAwB;EAAA,OAAO;IACtCO,gBAAgB,EAAEJ,aAAI,CAACC,EAAE,CAAC;EAC5B,CAAC;AAAA,CAAC,CAAC;AAGHL,WAAA,GAAKC,IAAI,CAAC,oBAAoB,EAAE;EAAA,OAAO;IACrCQ,MAAM,EAAE;MACNC,IAAI,EAAEN,aAAI,CAACC,EAAE,CAAC,CAAC;MACfM,KAAK,EAAEP,aAAI,CAACC,EAAE,CAAC,CAAC;MAChBO,IAAI,EAAER,aAAI,CAACC,EAAE,CAAC;IAChB;EACF,CAAC;AAAA,CAAC,CAAC;AAAC,IAAAQ,sBAAA,GAAAC,OAAA;AAAA,IAAAC,gBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAA,IAAAE,kBAAA,GAAAH,sBAAA,CAAAC,OAAA;AA3BJ,IAAAG,QAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,iBAAA,GAAAN,OAAA;AA0BA,IAAAO,eAAA,GAAAP,OAAA;AACA,IAAAQ,iBAAA,GAAAR,OAAA;AAAuD,SAAAS,QAAAC,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAJ,CAAA,OAAAG,MAAA,CAAAE,qBAAA,QAAAC,CAAA,GAAAH,MAAA,CAAAE,qBAAA,CAAAL,CAAA,GAAAC,CAAA,KAAAK,CAAA,GAAAA,CAAA,CAAAC,MAAA,WAAAN,CAAA,WAAAE,MAAA,CAAAK,wBAAA,CAAAR,CAAA,EAAAC,CAAA,EAAAQ,UAAA,OAAAP,CAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,CAAA,EAAAI,CAAA,YAAAJ,CAAA;AAAA,SAAAU,cAAAZ,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAY,SAAA,CAAAC,MAAA,EAAAb,CAAA,UAAAC,CAAA,WAAAW,SAAA,CAAAZ,CAAA,IAAAY,SAAA,CAAAZ,CAAA,QAAAA,CAAA,OAAAF,OAAA,CAAAI,MAAA,CAAAD,CAAA,OAAAa,OAAA,WAAAd,CAAA,QAAAV,gBAAA,CAAAyB,OAAA,EAAAhB,CAAA,EAAAC,CAAA,EAAAC,CAAA,CAAAD,CAAA,SAAAE,MAAA,CAAAc,yBAAA,GAAAd,MAAA,CAAAe,gBAAA,CAAAlB,CAAA,EAAAG,MAAA,CAAAc,yBAAA,CAAAf,CAAA,KAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,GAAAa,OAAA,WAAAd,CAAA,IAAAE,MAAA,CAAAgB,cAAA,CAAAnB,CAAA,EAAAC,CAAA,EAAAE,MAAA,CAAAK,wBAAA,CAAAN,CAAA,EAAAD,CAAA,iBAAAD,CAAA;AAAA,SAAAxB,YAAA;EAAA,IAAA4C,QAAA,GAAA9B,OAAA;IAAAV,IAAA,GAAAwC,QAAA,CAAAxC,IAAA;EAAAJ,WAAA,YAAAA,YAAA;IAAA,OAAAI,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEvD,IAAMyC,gBAAgB,GAAGC,qBAAgD;AACzE,IAAMC,kBAAkB,GAAG7C,8BAAoD;AAC/E,IAAM8C,oBAAoB,GAAGxC,kCAA6B;AAE1D,IAAAyC,iBAAQ,EAAC,kBAAkB,EAAE,YAAM;EACjC,IAAMC,cAAc,GAAG;IACrBC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,EAAE;IACfC,cAAc,EAAE,CAAC;IACjBC,eAAe,EAAE,CAAC;IAClBC,UAAU,EAAE,CAAC;IACbC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,GAAG;IACjBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EAED,IAAMC,iBAAiB,GAAG;IACxBC,SAAS,EAAE,IAAI;IACfC,SAAS,EAAE,KAAK;IAChBC,mBAAmB,EAAE;MACnBC,QAAQ,EAAE,IAAI;MACdC,IAAI,EAAE,SAAS;MACfC,QAAQ,EAAE,CAAC,kBAAkB,EAAE,aAAa,EAAE,QAAQ;IACxD,CAAC;IACDvD,KAAK,EAAE,IAAI;IACXwD,WAAW,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;IACvBC,WAAW,EAAElE,aAAI,CAACC,EAAE,CAAC,CAAC;IACtBkE,UAAU,EAAEnE,aAAI,CAACC,EAAE,CAAC,CAAC;IACrBmE,oBAAoB,EAAEpE,aAAI,CAACC,EAAE,CAAC,CAAC,CAACoE,eAAe,CAAC,IAAI,CAAC;IACrDC,mBAAmB,EAAEtE,aAAI,CAACC,EAAE,CAAC,CAAC,CAACoE,eAAe,CAAC,EAAE,CAAC;IAClDE,UAAU,EAAEvE,aAAI,CAACC,EAAE,CAAC,CAAC,CAACoE,eAAe,CAAC,IAAI,CAAC;IAC3CG,uBAAuB,EAAExE,aAAI,CAACC,EAAE,CAAC,CAAC,CAACoE,eAAe,CAAC,KAAK;EAC1D,CAAC;EAED,IAAAI,mBAAU,EAAC,YAAM;IACfzE,aAAI,CAAC0E,aAAa,CAAC,CAAC;IAGpBjC,gBAAgB,CAACkC,OAAO,CAACC,iBAAiB,CAAC,IAAI,CAAC;IAChDnC,gBAAgB,CAACoC,OAAO,CAACD,iBAAiB,CAACE,SAAS,CAAC;IAErDnC,kBAAkB,CAAC5C,aAAa,CAAC6E,iBAAiB,CAAC9B,cAAc,CAAC;IAClEF,oBAAoB,CAACyB,eAAe,CAACb,iBAAiB,CAAC;EACzD,CAAC,CAAC;EAEF,IAAAX,iBAAQ,EAAC,eAAe,EAAE,YAAM;IAC9B,IAAAkC,WAAE,EAAC,sCAAsC,EAAE,YAAM;MAC/C,IAAAC,WAAA,GAAmB,IAAAC,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAH,WAAA,CAANG,MAAM;MAEd,IAAAC,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,IAAI,CAAC;MAC3C,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACvB,QAAQ,CAAC,CAACyB,OAAO,CAAC,CAAC,CAAC,CAAC;MAC3C,IAAAH,eAAM,EAACD,MAAM,CAACE,OAAO,CAACG,UAAU,CAAC,CAACC,QAAQ,CAAC,CAAC;MAC5C,IAAAL,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC9E,KAAK,CAAC,CAACkF,QAAQ,CAAC,CAAC;IACzC,CAAC,CAAC;IAEF,IAAAV,WAAE,EAAC,mCAAmC,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAClD,IAAAsD,YAAA,GAAmB,IAAAT,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAO,YAAA,CAANP,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACG,UAAU,CAAC,CAACD,OAAO,CAACzC,cAAc,CAAC;MACzD,IAAAsC,eAAM,EAACzC,kBAAkB,CAAC5C,aAAa,CAAC,CAAC6F,gBAAgB,CAAC,CAAC;IAC7D,CAAC,EAAC;EACJ,CAAC,CAAC;EAEF,IAAA/C,iBAAQ,EAAC,wBAAwB,EAAE,YAAM;IACvC,IAAAkC,WAAE,EAAC,2DAA2D,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAC1E,IAAAyD,YAAA,GAAmB,IAAAZ,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAU,YAAA,CAANV,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACS,aAAa,CAAC,aAAa,CAAC,CAAC,CAACR,IAAI,CAAC,IAAI,CAAC;MAC9D,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACS,aAAa,CAAC,QAAQ,CAAC,CAAC,CAACR,IAAI,CAAC,IAAI,CAAC;MACzD,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACS,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAACR,IAAI,CAAC,IAAI,CAAC;IACrE,CAAC,EAAC;IAEF,IAAAP,WAAE,EAAC,uDAAuD,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MACtE,IAAM2D,cAAc,GAAA/D,aAAA,CAAAA,aAAA,KACfwB,iBAAiB;QACpBC,SAAS,EAAE,KAAK;QAChBc,UAAU,EAAEvE,aAAI,CAACC,EAAE,CAAC,CAAC,CAACoE,eAAe,CAAC,KAAK;MAAC,EAC7C;MAEDzB,oBAAoB,CAACyB,eAAe,CAAC0B,cAAc,CAAC;MAEpD,IAAAC,YAAA,GAAmB,IAAAf,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAa,YAAA,CAANb,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACS,aAAa,CAAC,aAAa,CAAC,CAAC,CAACR,IAAI,CAAC,KAAK,CAAC;MAC/D,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACS,aAAa,CAAC,QAAQ,CAAC,CAAC,CAACR,IAAI,CAAC,KAAK,CAAC;IAC5D,CAAC,EAAC;IAEF,IAAAP,WAAE,EAAC,oDAAoD,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MACnE,IAAM2D,cAAc,GAAA/D,aAAA,CAAAA,aAAA,KACfwB,iBAAiB;QACpBC,SAAS,EAAE,KAAK;QAChBc,UAAU,EAAEvE,aAAI,CAACC,EAAE,CAAC,CAAC,CAACoE,eAAe,CAAC,KAAK;MAAC,EAC7C;MAEDzB,oBAAoB,CAACyB,eAAe,CAAC0B,cAAc,CAAC;MAEpD,IAAAE,YAAA,GAAmB,IAAAhB,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAc,YAAA,CAANd,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAGF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACS,aAAa,CAAC,cAAc,CAAC,CAAC,CAACR,IAAI,CAAC,IAAI,CAAC;MAC/D,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACS,aAAa,CAAC,eAAe,CAAC,CAAC,CAACR,IAAI,CAAC,IAAI,CAAC;IAClE,CAAC,EAAC;EACJ,CAAC,CAAC;EAEF,IAAAzC,iBAAQ,EAAC,cAAc,EAAE,YAAM;IAC7B,IAAAkC,WAAE,EAAC,qCAAqC,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MACpD,IAAA8D,YAAA,GAAmB,IAAAjB,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAe,YAAA,CAANf,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAGF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACc,YAAY,CAAC,QAAQ,CAAC,CAAC,CAACb,IAAI,CAAC,IAAI,CAAC;MACxD,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACe,YAAY,CAAC,QAAQ,CAAC,CAAC,CAACd,IAAI,CAAC,EAAE,CAAC;MAGtD,IAAMe,cAAc,GAAArE,aAAA,CAAAA,aAAA,KAAQc,cAAc;QAAEC,UAAU,EAAE;MAAE,EAAE;MAC5DJ,kBAAkB,CAAC5C,aAAa,CAAC6E,iBAAiB,CAACyB,cAAc,CAAC;MAElE,MAAM,IAAAC,gBAAG,MAAA1F,kBAAA,CAAAwB,OAAA,EAAC,aAAY;QACpB,MAAM+C,MAAM,CAACE,OAAO,CAACkB,iBAAiB,CAAC,CAAC;MAC1C,CAAC,EAAC;MAEF,IAAAnB,eAAM,EAACD,MAAM,CAACE,OAAO,CAACc,YAAY,CAAC,QAAQ,CAAC,CAAC,CAACb,IAAI,CAAC,KAAK,CAAC;MACzD,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACe,YAAY,CAAC,QAAQ,CAAC,CAAC,CAACd,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC,EAAC;IAEF,IAAAP,WAAE,EAAC,sDAAsD,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MACrE,IAAAoE,YAAA,GAAmB,IAAAvB,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAqB,YAAA,CAANrB,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAGF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACc,YAAY,CAAC,aAAa,CAAC,CAAC,CAACb,IAAI,CAAC,IAAI,CAAC;MAC7D,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACe,YAAY,CAAC,aAAa,CAAC,CAAC,CAACd,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,EAAC;IAEF,IAAAP,WAAE,EAAC,2CAA2C,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAC1D,IAAAqE,YAAA,GAAmB,IAAAxB,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAsB,YAAA,CAANtB,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACS,aAAa,CAAC,iBAAiB,CAAC,CAAC,CAACR,IAAI,CAAC,KAAK,CAAC;MACnE,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACc,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAACb,IAAI,CAAC,KAAK,CAAC;MAClE,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACe,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAACd,IAAI,CAAC,CAAC,CAAC;IAChE,CAAC,EAAC;EACJ,CAAC,CAAC;EAEF,IAAAzC,iBAAQ,EAAC,gBAAgB,EAAE,YAAM;IAC/B,IAAAkC,WAAE,EAAC,4BAA4B,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAC3C,IAAAsE,YAAA,GAAmB,IAAAzB,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAuB,YAAA,CAANvB,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,MAAM,IAAAgB,gBAAG,MAAA1F,kBAAA,CAAAwB,OAAA,EAAC,aAAY;QACpB,IAAMuE,MAAM,SAASxB,MAAM,CAACE,OAAO,CAACuB,UAAU,CAAC,QAAQ,CAAC;QACxD,IAAAxB,eAAM,EAACuB,MAAM,CAAC,CAACrB,IAAI,CAAC,IAAI,CAAC;MAC3B,CAAC,EAAC;MAGF,IAAAF,eAAM,EAACzC,kBAAkB,CAAC5C,aAAa,CAAC,CAAC8G,qBAAqB,CAAC,CAAC,CAAC;IACnE,CAAC,EAAC;IAEF,IAAA9B,WAAE,EAAC,oCAAoC,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MACnD,IAAM0E,YAAY,GAAA9E,aAAA,CAAAA,aAAA,KAAQc,cAAc;QAAEC,UAAU,EAAE;MAAE,EAAE;MAC1DJ,kBAAkB,CAAC5C,aAAa,CAAC6E,iBAAiB,CAACkC,YAAY,CAAC;MAEhE,IAAAC,YAAA,GAAmB,IAAA9B,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAA4B,YAAA,CAAN5B,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,MAAM,IAAAgB,gBAAG,MAAA1F,kBAAA,CAAAwB,OAAA,EAAC,aAAY;QACpB,IAAMuE,MAAM,SAASxB,MAAM,CAACE,OAAO,CAACuB,UAAU,CAAC,QAAQ,CAAC;QACxD,IAAAxB,eAAM,EAACuB,MAAM,CAAC,CAACrB,IAAI,CAAC,KAAK,CAAC;MAC5B,CAAC,EAAC;IACJ,CAAC,EAAC;IAEF,IAAAP,WAAE,EAAC,mDAAmD,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAClE,IAAA4E,YAAA,GAAmB,IAAA/B,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAA6B,YAAA,CAAN7B,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAGF,KAAK,IAAI2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3B,MAAM,IAAAX,gBAAG,MAAA1F,kBAAA,CAAAwB,OAAA,EAAC,aAAY;UACpB,IAAMuE,MAAM,SAASxB,MAAM,CAACE,OAAO,CAACuB,UAAU,CAAC,aAAa,CAAC;UAC7D,IAAAxB,eAAM,EAACuB,MAAM,CAAC,CAACrB,IAAI,CAAC,IAAI,CAAC;QAC3B,CAAC,EAAC;MACJ;IACF,CAAC,EAAC;EACJ,CAAC,CAAC;EAEF,IAAAzC,iBAAQ,EAAC,wBAAwB,EAAE,YAAM;IACvC,IAAAkC,WAAE,EAAC,gDAAgD,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAC/D,IAAA8E,aAAA,GAAmB,IAAAjC,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAA+B,aAAA,CAAN/B,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAM6B,YAAY,GAAGhC,MAAM,CAACE,OAAO,CAAC+B,gBAAgB,CAAC,QAAQ,CAAC;MAC9D,IAAAhC,eAAM,EAAC+B,YAAY,CAAC,CAAC5B,OAAO,CAAC;QAC3B8B,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACR9D,SAAS,EAAE,IAAI;QACf+D,SAAS,EAAEpC,eAAM,CAACqC,GAAG,CAACzD,IAAI;MAC5B,CAAC,CAAC;MAEF,IAAM0D,YAAY,GAAGvC,MAAM,CAACE,OAAO,CAAC+B,gBAAgB,CAAC,QAAQ,CAAC;MAC9D,IAAAhC,eAAM,EAACsC,YAAY,CAACjE,SAAS,CAAC,CAAC6B,IAAI,CAAC,IAAI,CAAC;MACzC,IAAAF,eAAM,EAACsC,YAAY,CAACJ,KAAK,CAAC,CAAChC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,EAAC;IAEF,IAAAP,WAAE,EAAC,4DAA4D,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAC3E,IAAM2D,cAAc,GAAA/D,aAAA,CAAAA,aAAA,KACfwB,iBAAiB;QACpBC,SAAS,EAAE,KAAK;QAChBc,UAAU,EAAEvE,aAAI,CAACC,EAAE,CAAC,CAAC,CAACoE,eAAe,CAAC,KAAK;MAAC,EAC7C;MAEDzB,oBAAoB,CAACyB,eAAe,CAAC0B,cAAc,CAAC;MAEpD,IAAA4B,aAAA,GAAmB,IAAA1C,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAwC,aAAA,CAANxC,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAM6B,YAAY,GAAGhC,MAAM,CAACE,OAAO,CAAC+B,gBAAgB,CAAC,QAAQ,CAAC;MAC9D,IAAAhC,eAAM,EAAC+B,YAAY,CAACG,KAAK,CAAC,CAAChC,IAAI,CAAC,EAAE,CAAC;MACnC,IAAAF,eAAM,EAAC+B,YAAY,CAAC1D,SAAS,CAAC,CAAC6B,IAAI,CAAC,KAAK,CAAC;IAC5C,CAAC,EAAC;EACJ,CAAC,CAAC;EAEF,IAAAzC,iBAAQ,EAAC,qBAAqB,EAAE,YAAM;IACpC,IAAAkC,WAAE,EAAC,sCAAsC,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAAA,IAAAwF,qBAAA;MACrD,IAAAC,aAAA,GAAmB,IAAA5C,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAA0C,aAAA,CAAN1C,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAMwC,YAAY,GAAA9F,aAAA,CAAAA,aAAA,KAAQc,cAAc;QAAEC,UAAU,EAAE;MAAE,EAAE;MAC1DJ,kBAAkB,CAAC5C,aAAa,CAAC6E,iBAAiB,CAACkD,YAAY,CAAC;MAEhE,MAAM,IAAAxB,gBAAG,MAAA1F,kBAAA,CAAAwB,OAAA,EAAC,aAAY;QACpB,MAAM+C,MAAM,CAACE,OAAO,CAACkB,iBAAiB,CAAC,CAAC;MAC1C,CAAC,EAAC;MAEF,IAAAnB,eAAM,GAAAwC,qBAAA,GAACzC,MAAM,CAACE,OAAO,CAACG,UAAU,qBAAzBoC,qBAAA,CAA2B7E,UAAU,CAAC,CAACuC,IAAI,CAAC,EAAE,CAAC;MACtD,IAAAF,eAAM,EAACzC,kBAAkB,CAAC5C,aAAa,CAAC,CAAC8G,qBAAqB,CAAC,CAAC,CAAC;IACnE,CAAC,EAAC;IAEF,IAAA9B,WAAE,EAAC,yCAAyC,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MACxDO,kBAAkB,CAAC5C,aAAa,CAACgI,iBAAiB,CAAC,IAAIC,KAAK,CAAC,gBAAgB,CAAC,CAAC;MAE/E,IAAAC,aAAA,GAAmB,IAAAhD,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAA8C,aAAA,CAAN9C,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,MAAM,IAAAgB,gBAAG,MAAA1F,kBAAA,CAAAwB,OAAA,EAAC,aAAY;QACpB,MAAM+C,MAAM,CAACE,OAAO,CAACkB,iBAAiB,CAAC,CAAC;MAC1C,CAAC,EAAC;MAEF,IAAAnB,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC9E,KAAK,CAAC,CAAC+E,IAAI,CAAC,gBAAgB,CAAC;MAEnD,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACG,UAAU,CAAC,CAACD,OAAO,CAACzC,cAAc,CAAC;IAC3D,CAAC,EAAC;EACJ,CAAC,CAAC;EAEF,IAAAD,iBAAQ,EAAC,gBAAgB,EAAE,YAAM;IAC/B,IAAAkC,WAAE,EAAC,2CAA2C,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAC1DO,kBAAkB,CAAC5C,aAAa,CAACgI,iBAAiB,CAAC,IAAIC,KAAK,CAAC,gBAAgB,CAAC,CAAC;MAE/E,IAAAE,aAAA,GAAmB,IAAAjD,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAA+C,aAAA,CAAN/C,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC9E,KAAK,CAAC,CAAC+E,IAAI,CAAC,gBAAgB,CAAC;MACnD,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACG,UAAU,CAAC,CAACC,QAAQ,CAAC,CAAC;IAC9C,CAAC,EAAC;IAEF,IAAAV,WAAE,EAAC,8CAA8C,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAC7DK,gBAAgB,CAACkC,OAAO,CAACoD,iBAAiB,CAAC,IAAIC,KAAK,CAAC,eAAe,CAAC,CAAC;MAEtE,IAAAG,aAAA,GAAmB,IAAAlD,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAgD,aAAA,CAANhD,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAGF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACG,UAAU,CAAC,CAACD,OAAO,CAACzC,cAAc,CAAC;IAC3D,CAAC,EAAC;IAEF,IAAAiC,WAAE,EAAC,mDAAmD,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAElEO,kBAAkB,CAAC5C,aAAa,CAACqI,qBAAqB,CAAC,IAAIJ,KAAK,CAAC,aAAa,CAAC,CAAC;MAEhF,IAAAK,aAAA,GAAmB,IAAApD,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAkD,aAAA,CAANlD,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC9E,KAAK,CAAC,CAAC+E,IAAI,CAAC,aAAa,CAAC;MAClD,CAAC,CAAC;MAGF3C,kBAAkB,CAAC5C,aAAa,CAACuI,qBAAqB,CAACxF,cAAc,CAAC;MAEtE,MAAM,IAAAwD,gBAAG,MAAA1F,kBAAA,CAAAwB,OAAA,EAAC,aAAY;QACpB,MAAM+C,MAAM,CAACE,OAAO,CAACkB,iBAAiB,CAAC,CAAC;MAC1C,CAAC,EAAC;MAEF,IAAAnB,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC9E,KAAK,CAAC,CAACkF,QAAQ,CAAC,CAAC;IACzC,CAAC,EAAC;EACJ,CAAC,CAAC;EAEF,IAAA5C,iBAAQ,EAAC,4BAA4B,EAAE,YAAM;IAC3C,IAAAkC,WAAE,EAAC,wCAAwC,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MACvD,IAAImG,aAAa,GAAAvG,aAAA,KAAQwB,iBAAiB,CAAE;MAE5CZ,oBAAoB,CAAC4F,kBAAkB,CAAC;QAAA,OAAMD,aAAa;MAAA,EAAC;MAE5D,IAAAE,aAAA,GAA6B,IAAAxD,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAAzDC,MAAM,GAAAsD,aAAA,CAANtD,MAAM;QAAEuD,QAAQ,GAAAD,aAAA,CAARC,QAAQ;MAExB,MAAM,IAAA/C,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAGF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACS,aAAa,CAAC,QAAQ,CAAC,CAAC,CAACR,IAAI,CAAC,IAAI,CAAC;MAGzDiD,aAAa,GAAAvG,aAAA,CAAAA,aAAA,KACRwB,iBAAiB;QACpBC,SAAS,EAAE,KAAK;QAChBc,UAAU,EAAEvE,aAAI,CAACC,EAAE,CAAC,CAAC,CAACoE,eAAe,CAAC,KAAK;MAAC,EAC7C;MAEDqE,QAAQ,CAAC,CAAC;MAEV,MAAM,IAAA/C,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAACS,aAAa,CAAC,QAAQ,CAAC,CAAC,CAACR,IAAI,CAAC,KAAK,CAAC;MAC5D,CAAC,CAAC;IACJ,CAAC,EAAC;IAEF,IAAAP,WAAE,EAAC,6CAA6C,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAC5D,IAAMuG,aAAa,GAAA3G,aAAA,CAAAA,aAAA,KACdwB,iBAAiB;QACpBE,SAAS,EAAE;MAAI,EAChB;MAEDd,oBAAoB,CAACyB,eAAe,CAACsE,aAAa,CAAC;MAEnD,IAAAC,aAAA,GAAmB,IAAA3D,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAyD,aAAA,CAANzD,MAAM;MAGd,IAAAC,eAAM,EAACD,MAAM,CAACE,OAAO,CAACS,aAAa,CAAC,QAAQ,CAAC,CAAC,CAACR,IAAI,CAAC,IAAI,CAAC;IAC3D,CAAC,EAAC;EACJ,CAAC,CAAC;EAEF,IAAAzC,iBAAQ,EAAC,kBAAkB,EAAE,YAAM;IACjC,IAAAkC,WAAE,EAAC,qCAAqC,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MACpD,IAAAyG,aAAA,GAAmB,IAAA5D,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAA0D,aAAA,CAAN1D,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAAF,eAAM,EAAC3C,gBAAgB,CAACoC,OAAO,CAAC,CAACiE,oBAAoB,CACnD,sBAAsB,EACtB1D,eAAM,CAACqC,GAAG,CAACsB,MAAM,CACnB,CAAC;IACH,CAAC,EAAC;IAEF,IAAAhE,WAAE,EAAC,kCAAkC,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MACjD,IAAM4G,UAAU,GAAG;QACjBlF,QAAQ,EAAE;UAAEmF,MAAM,EAAE;YAAE5B,OAAO,EAAE,IAAI;YAAEC,KAAK,EAAE,EAAE;YAAEC,IAAI,EAAE;UAAG;QAAE,CAAC;QAC5D/B,UAAU,EAAE1C,cAAc;QAC1BoG,WAAW,EAAElF,IAAI,CAACC,GAAG,CAAC;MACxB,CAAC;MAEDxB,gBAAgB,CAACkC,OAAO,CAACC,iBAAiB,CAACuE,IAAI,CAACC,SAAS,CAACJ,UAAU,CAAC,CAAC;MAEtE,IAAAK,aAAA,GAAmB,IAAApE,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAkE,aAAA,CAANlE,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAACG,UAAU,CAAC,CAACD,OAAO,CAACzC,cAAc,CAAC;MAC3D,CAAC,CAAC;MAGF,IAAAsC,eAAM,EAACzC,kBAAkB,CAAC5C,aAAa,CAAC,CAACuJ,GAAG,CAAC1D,gBAAgB,CAAC,CAAC;IACjE,CAAC,EAAC;EACJ,CAAC,CAAC;EAEF,IAAA/C,iBAAQ,EAAC,YAAY,EAAE,YAAM;IAC3B,IAAAkC,WAAE,EAAC,iCAAiC,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAChD,IAAMmH,UAAU,GAAG;QACjBxG,UAAU,EAAE,CAAC;QACbC,WAAW,EAAE,CAAC;QACdC,cAAc,EAAE,CAAC;QACjBC,eAAe,EAAE,CAAC;QAClBC,UAAU,EAAE,CAAC;QACbC,WAAW,EAAE,CAAC;QACdC,YAAY,EAAE,CAAC;QACfC,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE;MACb,CAAC;MAEDZ,kBAAkB,CAAC5C,aAAa,CAAC6E,iBAAiB,CAAC2E,UAAU,CAAC;MAE9D,IAAAC,aAAA,GAAmB,IAAAvE,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAqE,aAAA,CAANrE,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACc,YAAY,CAAC,QAAQ,CAAC,CAAC,CAACb,IAAI,CAAC,KAAK,CAAC;MACzD,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACe,YAAY,CAAC,QAAQ,CAAC,CAAC,CAACd,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC,EAAC;IAEF,IAAAP,WAAE,EAAC,qCAAqC,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MACpD,IAAMqH,aAAa,GAAAzH,aAAA,CAAAA,aAAA,KACdc,cAAc;QACjBC,UAAU,EAAE,CAAC;MAAC,EACf;MAEDJ,kBAAkB,CAAC5C,aAAa,CAAC6E,iBAAiB,CAAC6E,aAAa,CAAC;MAEjE,IAAAC,aAAA,GAAmB,IAAAzE,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAuE,aAAA,CAANvE,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAGF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACe,YAAY,CAAC,QAAQ,CAAC,CAAC,CAACd,IAAI,CAAC,EAAE,CAAC;IACxD,CAAC,EAAC;IAEF,IAAAP,WAAE,EAAC,sCAAsC,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MACrD,IAAMuH,cAAc,GAAA3H,aAAA,CAAAA,aAAA,KACfc,cAAc;QACjBE,WAAW,EAAE;MAAM,EACpB;MAEDL,kBAAkB,CAAC5C,aAAa,CAAC6E,iBAAiB,CAAC+E,cAAc,CAAC;MAElE,IAAAC,aAAA,GAAmB,IAAA3E,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAyE,aAAA,CAANzE,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACc,YAAY,CAAC,QAAQ,CAAC,CAAC,CAACb,IAAI,CAAC,IAAI,CAAC;MACxD,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACe,YAAY,CAAC,QAAQ,CAAC,CAAC,CAACd,IAAI,CAAC,MAAM,CAAC;IAC5D,CAAC,EAAC;IAEF,IAAAP,WAAE,EAAC,iDAAiD,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAChE,IAAAyH,aAAA,GAAmB,IAAA5E,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAA0E,aAAA,CAAN1E,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAGF,IAAMwE,aAAa,GAAGC,KAAK,CAACC,IAAI,CAAC;QAAE9H,MAAM,EAAE;MAAG,CAAC,EAAE;QAAA,OAC/C,IAAAoE,gBAAG,MAAA1F,kBAAA,CAAAwB,OAAA,EAAC;UAAA,OAAY+C,MAAM,CAACE,OAAO,CAACuB,UAAU,CAAC,QAAQ,CAAC;QAAA,GAAC;MAAA,CACtD,CAAC;MAED,IAAMqD,OAAO,SAASC,OAAO,CAACC,GAAG,CAACL,aAAa,CAAC;MAGhD,IAAA1E,eAAM,EAAC6E,OAAO,CAACG,KAAK,CAAC,UAAA/I,CAAC;QAAA,OAAIA,CAAC,KAAK,IAAI;MAAA,EAAC,CAAC,CAACiE,IAAI,CAAC,IAAI,CAAC;IACnD,CAAC,EAAC;IAEF,IAAAP,WAAE,EAAC,gDAAgD,MAAAnE,kBAAA,CAAAwB,OAAA,EAAE,aAAY;MAE/D,IAAMiI,wBAAwB,GAAGzH,oBAAoB,CAAC0H,qBAAqB,CAAC,CAAC;MAE7E1H,oBAAoB,CAACyB,eAAe,CAAArC,aAAA,CAAAA,aAAA,KAC/BwB,iBAAiB;QACpBe,UAAU,EAAEO;MAAS,EACtB,CAAC;MAEF,IAAAyF,aAAA,GAAmB,IAAAtF,uBAAU,EAAC;UAAA,OAAM,IAAAC,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAA/CC,MAAM,GAAAoF,aAAA,CAANpF,MAAM;MAEd,MAAM,IAAAQ,oBAAO,EAAC,YAAM;QAClB,IAAAP,eAAM,EAACD,MAAM,CAACE,OAAO,CAAC3B,SAAS,CAAC,CAAC4B,IAAI,CAAC,KAAK,CAAC;MAC9C,CAAC,CAAC;MAGF,IAAAF,eAAM,EAACD,MAAM,CAACE,OAAO,CAACS,aAAa,CAAC,QAAQ,CAAC,CAAC,CAACR,IAAI,CAAC,IAAI,CAAC;IAC3D,CAAC,EAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}