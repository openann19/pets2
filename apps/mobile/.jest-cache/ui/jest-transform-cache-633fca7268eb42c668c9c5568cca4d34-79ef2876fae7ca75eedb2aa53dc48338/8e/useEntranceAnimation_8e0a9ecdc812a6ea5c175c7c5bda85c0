a9d386ed8534ce54d07a8144537d4254
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useEntranceAnimation = exports.default = void 0;
var _react = require("react");
var _reactNativeReanimated = require("react-native-reanimated");
var _constants = require("./constants");
var _worklet_7775353861017_init_data = {
  code: "function anonymous() {\n  const {\n    opacity,\n    translateY,\n    translateX,\n    scale\n  } = this._closure;\n  return {\n    opacity: opacity.value,\n    transform: [{\n      translateY: translateY.value\n    }, {\n      translateX: translateX.value\n    }, {\n      scale: scale.value\n    }]\n  };\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/hooks/animations/useEntranceAnimation.ts",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"opacity\",\"translateY\",\"translateX\",\"scale\",\"_closure\",\"value\",\"transform\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/hooks/animations/useEntranceAnimation.ts\"],\"mappings\":\"AA8DyC,SAAAA,UAAA;EAAA;IAAAC,OAAA;IAAAC,UAAA;IAAAC,UAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,OAAO;IAC5CJ,OAAO,EAAEA,OAAO,CAACK,KAAK;IACtBC,SAAS,EAAE,CACT;MAAEL,UAAU,EAAEA,UAAU,CAACI;IAAM,CAAC,EAChC;MAAEH,UAAU,EAAEA,UAAU,CAACG;IAAM,CAAC,EAChC;MAAEF,KAAK,EAAEA,KAAK,CAACE;IAAM,CAAC;EAE1B,CAAC;AAAA\",\"ignoreList\":[]}"
};
var useEntranceAnimation = exports.useEntranceAnimation = function useEntranceAnimation() {
  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "fadeIn";
  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var opacity = (0, _reactNativeReanimated.useSharedValue)(0);
  var translateY = (0, _reactNativeReanimated.useSharedValue)(50);
  var translateX = (0, _reactNativeReanimated.useSharedValue)(-50);
  var scale = (0, _reactNativeReanimated.useSharedValue)(0.8);
  (0, _react.useEffect)(function () {
    var animate = function animate() {
      switch (type) {
        case "fadeIn":
          opacity.value = (0, _reactNativeReanimated.withDelay)(delay, (0, _reactNativeReanimated.withTiming)(1, {
            duration: 500
          }));
          break;
        case "slideIn":
          translateY.value = (0, _reactNativeReanimated.withDelay)(delay, (0, _reactNativeReanimated.withSpring)(0, _constants.PREMIUM_ANIMATIONS.spring.gentle));
          opacity.value = (0, _reactNativeReanimated.withDelay)(delay, (0, _reactNativeReanimated.withTiming)(1, {
            duration: 500
          }));
          break;
        case "scaleIn":
          scale.value = (0, _reactNativeReanimated.withDelay)(delay, (0, _reactNativeReanimated.withSpring)(1, _constants.PREMIUM_ANIMATIONS.spring.bouncy));
          opacity.value = (0, _reactNativeReanimated.withDelay)(delay, (0, _reactNativeReanimated.withTiming)(1, {
            duration: 500
          }));
          break;
        case "bounceIn":
          scale.value = (0, _reactNativeReanimated.withDelay)(delay, (0, _reactNativeReanimated.withSequence)((0, _reactNativeReanimated.withTiming)(1.2, {
            duration: 300
          }), (0, _reactNativeReanimated.withTiming)(0.9, {
            duration: 200
          }), (0, _reactNativeReanimated.withTiming)(1, {
            duration: 300
          })));
          opacity.value = (0, _reactNativeReanimated.withDelay)(delay, (0, _reactNativeReanimated.withTiming)(1, {
            duration: 500
          }));
          break;
      }
    };
    animate();
  }, [type, delay]);
  var entranceStyle = (0, _reactNativeReanimated.useAnimatedStyle)(function () {
    var _e = [new global.Error(), -5, -27];
    var _f = function _f() {
      return {
        opacity: opacity.value,
        transform: [{
          translateY: translateY.value
        }, {
          translateX: translateX.value
        }, {
          scale: scale.value
        }]
      };
    };
    _f._closure = {
      opacity: opacity,
      translateY: translateY,
      translateX: translateX,
      scale: scale
    };
    _f.__initData = _worklet_7775353861017_init_data;
    _f.__workletHash = 7775353861017;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  var start = function start() {
    switch (type) {
      case "fadeIn":
        opacity.value = (0, _reactNativeReanimated.withTiming)(1, {
          duration: 500
        });
        break;
      case "slideIn":
        translateY.value = (0, _reactNativeReanimated.withSpring)(0, _constants.PREMIUM_ANIMATIONS.spring.gentle);
        opacity.value = (0, _reactNativeReanimated.withTiming)(1, {
          duration: 500
        });
        break;
      case "scaleIn":
        scale.value = (0, _reactNativeReanimated.withSpring)(1, _constants.PREMIUM_ANIMATIONS.spring.bouncy);
        opacity.value = (0, _reactNativeReanimated.withTiming)(1, {
          duration: 500
        });
        break;
      case "bounceIn":
        scale.value = (0, _reactNativeReanimated.withSequence)((0, _reactNativeReanimated.withTiming)(1.2, {
          duration: 300
        }), (0, _reactNativeReanimated.withTiming)(0.9, {
          duration: 200
        }), (0, _reactNativeReanimated.withTiming)(1, {
          duration: 300
        }));
        opacity.value = (0, _reactNativeReanimated.withTiming)(1, {
          duration: 500
        });
        break;
    }
  };
  return {
    entranceStyle: entranceStyle,
    animatedStyle: entranceStyle,
    start: start
  };
};
var _default = exports.default = useEntranceAnimation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,