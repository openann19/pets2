{"version":3,"names":["_getJestObj","mock","logger","info","jest","fn","error","_interopRequireDefault","require","_asyncToGenerator2","_globals","_reactNative","_useMessageActions","_api","_core","_require","mockMatchesAPI","matchesAPI","mockLogger","describe","matchId","beforeEach","clearAllMocks","sendMessage","mockResolvedValue","undefined","deleteMessage","mockMessages","_id","content","senderId","receiverId","createdAt","Date","toISOString","status","it","_renderHook","renderHook","useMessageActions","result","expect","current","retryMessage","toBeDefined","default","onMessageRetried","_renderHook2","toHaveBeenCalledWith","messageId","_renderHook3","not","toHaveBeenCalled","Error","mockRejectedValue","_renderHook4","rejects","toThrow","_renderHook5","onMessageDeleted","_renderHook6","_renderHook7","_renderHook8","_renderHook9"],"sources":["useMessageActions.test.ts"],"sourcesContent":["/**\n * Tests for useMessageActions hook\n * Tests message retry and delete functionality\n */\n\nimport { describe, it, expect, jest, beforeEach } from '@jest/globals';\nimport { renderHook } from '@testing-library/react-native';\nimport { useMessageActions } from '../useMessageActions';\nimport { matchesAPI } from '../../../services/api';\nimport { logger } from '@pawfectmatch/core';\nimport type { Message } from '../../useChatData';\n\n// Mock dependencies\njest.mock('../../../services/api');\njest.mock('@pawfectmatch/core', () => ({\n  logger: {\n    info: jest.fn(),\n    error: jest.fn(),\n  },\n}));\n\nconst mockMatchesAPI = matchesAPI as jest.Mocked<typeof matchesAPI>;\nconst mockLogger = logger as jest.Mocked<typeof logger>;\n\ndescribe('useMessageActions', () => {\n  const matchId = 'test-match-123';\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockMatchesAPI.sendMessage = jest.fn().mockResolvedValue(undefined);\n    mockMatchesAPI.deleteMessage = jest.fn().mockResolvedValue(undefined);\n  });\n\n  const mockMessages: Message[] = [\n    {\n      _id: 'msg-1',\n      content: 'Hello',\n      senderId: 'user-1',\n      receiverId: 'user-2',\n      createdAt: new Date().toISOString(),\n      status: 'sent',\n    },\n    {\n      _id: 'msg-2',\n      content: 'World',\n      senderId: 'user-1',\n      receiverId: 'user-2',\n      createdAt: new Date().toISOString(),\n      status: 'sent',\n    },\n  ];\n\n  describe('Initialization', () => {\n    it('should initialize with retry and delete functions', () => {\n      const { result } = renderHook(() =>\n        useMessageActions({ matchId }),\n      );\n\n      expect(result.current.retryMessage).toBeDefined();\n      expect(result.current.deleteMessage).toBeDefined();\n    });\n  });\n\n  describe('Retry Message', () => {\n    it('should retry an existing message', async () => {\n      const onMessageRetried = jest.fn();\n      const { result } = renderHook(() =>\n        useMessageActions({ matchId, onMessageRetried }),\n      );\n\n      await result.current.retryMessage('msg-1', mockMessages);\n\n      expect(mockMatchesAPI.sendMessage).toHaveBeenCalledWith(\n        matchId,\n        'Hello',\n      );\n      expect(onMessageRetried).toHaveBeenCalledWith('msg-1');\n      expect(mockLogger.info).toHaveBeenCalledWith('Message retried', {\n        messageId: 'msg-1',\n        matchId,\n      });\n    });\n\n    it('should not retry non-existent message', async () => {\n      const { result } = renderHook(() =>\n        useMessageActions({ matchId }),\n      );\n\n      await result.current.retryMessage('msg-999', mockMessages);\n\n      expect(mockMatchesAPI.sendMessage).not.toHaveBeenCalled();\n    });\n\n    it('should handle retry errors', async () => {\n      const error = new Error('Network error');\n      mockMatchesAPI.sendMessage.mockRejectedValue(error);\n\n      const { result } = renderHook(() =>\n        useMessageActions({ matchId }),\n      );\n\n      await expect(\n        result.current.retryMessage('msg-1', mockMessages),\n      ).rejects.toThrow(error);\n\n      expect(mockLogger.error).toHaveBeenCalledWith('Failed to retry message', {\n        error,\n        messageId: 'msg-1',\n      });\n    });\n\n    it('should work without callback', async () => {\n      const { result } = renderHook(() =>\n        useMessageActions({ matchId }),\n      );\n\n      await result.current.retryMessage('msg-2', mockMessages);\n\n      expect(mockMatchesAPI.sendMessage).toHaveBeenCalledWith(\n        matchId,\n        'World',\n      );\n    });\n  });\n\n  describe('Delete Message', () => {\n    it('should delete a message', async () => {\n      const onMessageDeleted = jest.fn();\n      const { result } = renderHook(() =>\n        useMessageActions({ matchId, onMessageDeleted }),\n      );\n\n      await result.current.deleteMessage('msg-1');\n\n      expect(mockMatchesAPI.deleteMessage).toHaveBeenCalledWith(\n        matchId,\n        'msg-1',\n      );\n      expect(onMessageDeleted).toHaveBeenCalledWith('msg-1');\n      expect(mockLogger.info).toHaveBeenCalledWith('Message deleted', {\n        messageId: 'msg-1',\n        matchId,\n      });\n    });\n\n    it('should handle delete errors', async () => {\n      const error = new Error('Network error');\n      mockMatchesAPI.deleteMessage.mockRejectedValue(error);\n\n      const { result } = renderHook(() =>\n        useMessageActions({ matchId }),\n      );\n\n      await expect(result.current.deleteMessage('msg-1')).rejects.toThrow(\n        error,\n      );\n\n      expect(mockLogger.error).toHaveBeenCalledWith(\n        'Failed to delete message',\n        {\n          error,\n          messageId: 'msg-1',\n        },\n      );\n    });\n\n    it('should work without callback', async () => {\n      const { result } = renderHook(() =>\n        useMessageActions({ matchId }),\n      );\n\n      await result.current.deleteMessage('msg-2');\n\n      expect(mockMatchesAPI.deleteMessage).toHaveBeenCalledWith(\n        matchId,\n        'msg-2',\n      );\n    });\n  });\n\n  describe('Integration', () => {\n    it('should retry then delete message', async () => {\n      const { result } = renderHook(() =>\n        useMessageActions({ matchId }),\n      );\n\n      await result.current.retryMessage('msg-1', mockMessages);\n\n      await result.current.deleteMessage('msg-1');\n\n      expect(mockMatchesAPI.sendMessage).toHaveBeenCalledWith(\n        matchId,\n        'Hello',\n      );\n      expect(mockMatchesAPI.deleteMessage).toHaveBeenCalledWith(\n        matchId,\n        'msg-1',\n      );\n    });\n  });\n});\n\n"],"mappings":"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","ignoreList":[]}