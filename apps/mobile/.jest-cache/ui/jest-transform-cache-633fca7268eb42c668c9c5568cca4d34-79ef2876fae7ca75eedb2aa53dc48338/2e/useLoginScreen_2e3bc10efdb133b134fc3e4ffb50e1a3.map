{"version":3,"names":["_react","require","_reactNative","Haptics","_interopRequireWildcard","_logger","_AuthService","_useFormState2","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useLoginScreen","_ref","navigation","validateForm","useCallback","values","errors","email","trim","test","password","length","_useState","useState","_useState2","_slicedToArray2","loading","setLoading","_useFormState","useFormState","initialValues","validate","touched","isValid","setValue","handleSubmitForm","handleSubmit","handleLogin","_asyncToGenerator2","impactAsync","ImpactFeedbackStyle","Light","catch","logger","info","response","authService","login","notificationAsync","NotificationFeedbackType","Success","userId","user","id","navigate","error","Error","errorMessage","AuthError","message","Alert","alert","text","style","_ref3","_x","apply","arguments","navigateToRegister","navigateToForgotPassword"],"sources":["useLoginScreen.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { Alert } from \"react-native\";\nimport * as Haptics from \"expo-haptics\";\nimport { logger } from \"../../services/logger\";\nimport { authService, AuthError } from \"../../services/AuthService\";\nimport { useFormState } from \"../utils/useFormState\";\nimport type { RootStackScreenProps } from \"../../navigation/types\";\n\ninterface LoginFormValues {\n  email: string;\n  password: string;\n}\n\ninterface UseLoginScreenOptions {\n  navigation: RootStackScreenProps<\"Login\">[\"navigation\"];\n}\n\ninterface UseLoginScreenReturn {\n  values: LoginFormValues;\n  errors: Partial<Record<keyof LoginFormValues, string>>;\n  touched: Partial<Record<keyof LoginFormValues, boolean>>;\n  isValid: boolean;\n  loading: boolean;\n  setValue: (name: keyof LoginFormValues, value: string) => void;\n  handleSubmit: (e?: any) => Promise<void>;\n  navigateToRegister: () => void;\n  navigateToForgotPassword: () => void;\n}\n\n/**\n * Hook for managing LoginScreen state and actions\n */\nexport function useLoginScreen({\n  navigation,\n}: UseLoginScreenOptions): UseLoginScreenReturn {\n  // Form validation rules\n  const validateForm = useCallback(\n    (\n      values: LoginFormValues,\n    ): Partial<Record<keyof LoginFormValues, string>> => {\n      const errors: Partial<Record<keyof LoginFormValues, string>> = {};\n\n      if (!values.email.trim()) {\n        errors.email = \"Email is required\";\n      } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n        errors.email = \"Email format is invalid\";\n      }\n\n      if (!values.password) {\n        errors.password = \"Password is required\";\n      } else if (values.password.length < 8) {\n        errors.password = \"Password must be at least 8 characters\";\n      }\n\n      return errors;\n    },\n    [],\n  );\n\n  // Form state management\n  const [loading, setLoading] = useState(false);\n  const {\n    values,\n    errors,\n    touched,\n    isValid,\n    setValue,\n    handleSubmit: handleSubmitForm,\n  } = useFormState<LoginFormValues>({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validate: validateForm,\n  });\n\n  // Handle login submission\n  const handleLogin = useCallback(async () => {\n    Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light).catch(() => {});\n    setLoading(true);\n    \n    try {\n      logger.info(\"Login attempt:\", { email: values.email });\n\n      const response = await authService.login({\n        email: values.email,\n        password: values.password,\n      });\n\n      // Success haptic feedback\n      Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success).catch(\n        () => {},\n      );\n\n      logger.info(\"Login successful\", { userId: response.user.id });\n\n      // Navigate to Home on successful login\n      navigation.navigate(\"Home\");\n    } catch (error) {\n      // Error haptic feedback\n      Haptics.notificationAsync(Haptics.NotificationFeedbackType.Error).catch(\n        () => {},\n      );\n\n      logger.error(\"Login failed\", { error: error as Error, email: values.email });\n\n      const errorMessage =\n        error instanceof AuthError\n          ? error.message\n          : \"Login failed. Please check your credentials and try again.\";\n\n      Alert.alert(\"Login Failed\", errorMessage, [{ text: \"OK\", style: \"default\" }]);\n    } finally {\n      setLoading(false);\n    }\n  }, [values.email, values.password, navigation]);\n\n  const handleSubmit = useCallback(\n    async (e?: any) => {\n      await handleSubmitForm(handleLogin)(e);\n    },\n    [handleSubmitForm, handleLogin]\n  );\n\n  const navigateToRegister = useCallback(() => {\n    navigation.navigate(\"Register\");\n  }, [navigation]);\n\n  const navigateToForgotPassword = useCallback(() => {\n    navigation.navigate(\"ForgotPassword\");\n  }, [navigation]);\n\n  return {\n    values,\n    errors,\n    touched,\n    isValid,\n    loading,\n    setValue,\n    handleSubmit,\n    navigateToRegister,\n    navigateToForgotPassword,\n  };\n}\n"],"mappings":"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","ignoreList":[]}