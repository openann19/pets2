525cbf329cc897d63edb91161433d6b2
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getActionFromState;
function getActionFromState(state, options) {
  var _state$index;
  var _normalizedConfig$scr;
  var normalizedConfig = options ? createNormalizedConfigItem(options) : {};
  var routes = state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;
  if (routes.length === 0) {
    return undefined;
  }
  if (!(routes.length === 1 && routes[0].key === undefined || routes.length === 2 && routes[0].key === undefined && routes[0].name === (normalizedConfig === null || normalizedConfig === void 0 ? void 0 : normalizedConfig.initialRouteName) && routes[1].key === undefined)) {
    return {
      type: 'RESET',
      payload: state
    };
  }
  var route = state.routes[(_state$index = state.index) != null ? _state$index : state.routes.length - 1];
  var current = route === null || route === void 0 ? void 0 : route.state;
  var config = normalizedConfig === null || normalizedConfig === void 0 ? void 0 : (_normalizedConfig$scr = normalizedConfig.screens) === null || _normalizedConfig$scr === void 0 ? void 0 : _normalizedConfig$scr[route === null || route === void 0 ? void 0 : route.name];
  var params = _objectSpread({}, route.params);
  var payload = route ? {
    name: route.name,
    path: route.path,
    params: params
  } : undefined;
  while (current) {
    var _config, _config2, _config2$screens;
    if (current.routes.length === 0) {
      return undefined;
    }
    var _routes = current.index != null ? current.routes.slice(0, current.index + 1) : current.routes;
    var _route = _routes[_routes.length - 1];
    Object.assign(params, {
      initial: undefined,
      screen: undefined,
      params: undefined,
      state: undefined
    });
    if (_routes.length === 1 && _routes[0].key === undefined) {
      params.initial = true;
      params.screen = _route.name;
    } else if (_routes.length === 2 && _routes[0].key === undefined && _routes[0].name === ((_config = config) === null || _config === void 0 ? void 0 : _config.initialRouteName) && _routes[1].key === undefined) {
      params.initial = false;
      params.screen = _route.name;
    } else {
      params.state = current;
      break;
    }
    if (_route.state) {
      params.params = _objectSpread({}, _route.params);
      params = params.params;
    } else {
      params.path = _route.path;
      params.params = _route.params;
    }
    current = _route.state;
    config = (_config2 = config) === null || _config2 === void 0 ? void 0 : (_config2$screens = _config2.screens) === null || _config2$screens === void 0 ? void 0 : _config2$screens[_route.name];
  }
  if (!payload) {
    return;
  }
  return {
    type: 'NAVIGATE',
    payload: payload
  };
}
var createNormalizedConfigItem = function createNormalizedConfigItem(config) {
  return typeof config === 'object' && config != null ? {
    initialRouteName: config.initialRouteName,
    screens: config.screens != null ? createNormalizedConfigs(config.screens) : undefined
  } : {};
};
var createNormalizedConfigs = function createNormalizedConfigs(options) {
  return Object.entries(options).reduce(function (acc, _ref) {
    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
      k = _ref2[0],
      v = _ref2[1];
    acc[k] = createNormalizedConfigItem(v);
    return acc;
  }, {});
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRBY3Rpb25Gcm9tU3RhdGUiLCJzdGF0ZSIsIm9wdGlvbnMiLCJfc3RhdGUkaW5kZXgiLCJfbm9ybWFsaXplZENvbmZpZyRzY3IiLCJub3JtYWxpemVkQ29uZmlnIiwiY3JlYXRlTm9ybWFsaXplZENvbmZpZ0l0ZW0iLCJyb3V0ZXMiLCJpbmRleCIsInNsaWNlIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwia2V5IiwibmFtZSIsImluaXRpYWxSb3V0ZU5hbWUiLCJ0eXBlIiwicGF5bG9hZCIsInJvdXRlIiwiY3VycmVudCIsImNvbmZpZyIsInNjcmVlbnMiLCJwYXJhbXMiLCJfb2JqZWN0U3ByZWFkIiwicGF0aCIsIl9jb25maWciLCJfY29uZmlnMiIsIl9jb25maWcyJHNjcmVlbnMiLCJPYmplY3QiLCJhc3NpZ24iLCJpbml0aWFsIiwic2NyZWVuIiwiY3JlYXRlTm9ybWFsaXplZENvbmZpZ3MiLCJlbnRyaWVzIiwicmVkdWNlIiwiYWNjIiwiX3JlZiIsIl9yZWYyIiwiX3NsaWNlZFRvQXJyYXkyIiwiZGVmYXVsdCIsImsiLCJ2Il0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL2dldEFjdGlvbkZyb21TdGF0ZS50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBOEJlLFNBQVNBLGtCQUFrQkEsQ0FDeENDLEtBQW9DLEVBQ3BDQyxPQUFpQixFQUNtRDtFQUFBLElBQUFDLFlBQUE7RUFBQSxJQUFBQyxxQkFBQTtFQUVwRSxJQUFNQyxnQkFBZ0IsR0FBR0gsT0FBTyxHQUM1QkksMEJBQTBCLENBQUNKLE9BQU8sQ0FBZ0MsR0FDbEUsQ0FBQyxDQUFDO0VBRU4sSUFBTUssTUFBTSxHQUNWTixLQUFLLENBQUNPLEtBQUssSUFBSSxJQUFJLEdBQUdQLEtBQUssQ0FBQ00sTUFBTSxDQUFDRSxLQUFLLENBQUMsQ0FBQyxFQUFFUixLQUFLLENBQUNPLEtBQUssR0FBRyxDQUFDLENBQUMsR0FBR1AsS0FBSyxDQUFDTSxNQUFNO0VB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