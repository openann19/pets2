{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","_RCTDeviceEventEmitter","_convertRequestBody","_NativeNetworkingIOS","ownKeys","e","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","RCTNetworking","addListener","eventType","listener","context","RCTDeviceEventEmitter","sendRequest","method","trackingName","url","headers","data","responseType","incrementalUpdates","timeout","callback","withCredentials","body","convertRequestBody","NativeNetworkingIOS","abortRequest","requestId","clearCookies","_default"],"sources":["RCTNetworking.ios.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport convertRequestBody, {type RequestBody} from './convertRequestBody';\nimport NativeNetworkingIOS from './NativeNetworkingIOS';\nimport {type NativeResponseType} from './XMLHttpRequest';\n\ntype RCTNetworkingEventDefinitions = $ReadOnly<{\n  didSendNetworkData: [\n    [\n      number, // requestId\n      number, // progress\n      number, // total\n    ],\n  ],\n  didReceiveNetworkResponse: [\n    [\n      number, // requestId\n      number, // status\n      ?{[string]: string}, // responseHeaders\n      ?string, // responseURL\n    ],\n  ],\n  didReceiveNetworkData: [\n    [\n      number, // requestId\n      string, // response\n    ],\n  ],\n  didReceiveNetworkIncrementalData: [\n    [\n      number, // requestId\n      string, // responseText\n      number, // progress\n      number, // total\n    ],\n  ],\n  didReceiveNetworkDataProgress: [\n    [\n      number, // requestId\n      number, // loaded\n      number, // total\n    ],\n  ],\n  didCompleteNetworkResponse: [\n    [\n      number, // requestId\n      string, // error\n      boolean, // timeOutError\n    ],\n  ],\n}>;\n\nconst RCTNetworking = {\n  addListener<K: $Keys<RCTNetworkingEventDefinitions>>(\n    eventType: K,\n    listener: (...$ElementType<RCTNetworkingEventDefinitions, K>) => mixed,\n    context?: mixed,\n  ): EventSubscription {\n    // $FlowFixMe[incompatible-call]\n    return RCTDeviceEventEmitter.addListener(eventType, listener, context);\n  },\n\n  sendRequest(\n    method: string,\n    trackingName: string,\n    url: string,\n    headers: {...},\n    data: RequestBody,\n    responseType: NativeResponseType,\n    incrementalUpdates: boolean,\n    timeout: number,\n    callback: (requestId: number) => void,\n    withCredentials: boolean,\n  ) {\n    const body = convertRequestBody(data);\n    NativeNetworkingIOS.sendRequest(\n      {\n        method,\n        url,\n        data: {...body, trackingName},\n        headers,\n        responseType,\n        incrementalUpdates,\n        timeout,\n        withCredentials,\n      },\n      callback,\n    );\n  },\n\n  abortRequest(requestId: number) {\n    NativeNetworkingIOS.abortRequest(requestId);\n  },\n\n  clearCookies(callback: (result: boolean) => void) {\n    NativeNetworkingIOS.clearCookies(callback);\n  },\n};\n\nexport default RCTNetworking;\n"],"mappings":"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","ignoreList":[]}