{"version":3,"names":["_react","require","useToggleState","initialValue","arguments","length","undefined","_useState","useState","_useState2","_slicedToArray2","default","isOn","setIsOn","toggle","useCallback","prev","setOn","setOff"],"sources":["useToggleState.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nexport interface UseToggleStateReturn {\n  isOn: boolean;\n  toggle: () => void;\n  setOn: () => void;\n  setOff: () => void;\n}\n\n/**\n * Hook for managing boolean toggle state\n *\n * @example\n * const { isOn, toggle, setOn, setOff } = useToggleState();\n */\nexport function useToggleState(\n  initialValue: boolean = false,\n): UseToggleStateReturn {\n  const [isOn, setIsOn] = useState(initialValue);\n\n  const toggle = useCallback(() => {\n    setIsOn((prev) => !prev);\n  }, []);\n\n  const setOn = useCallback(() => {\n    setIsOn(true);\n  }, []);\n\n  const setOff = useCallback(() => {\n    setIsOn(false);\n  }, []);\n\n  return {\n    isOn,\n    toggle,\n    setOn,\n    setOff,\n  };\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAeO,SAASC,cAAcA,CAAA,EAEN;EAAA,IADtBC,YAAqB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAE7B,IAAAG,SAAA,GAAwB,IAAAC,eAAQ,EAACL,YAAY,CAAC;IAAAM,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAAvCK,IAAI,GAAAH,UAAA;IAAEI,OAAO,GAAAJ,UAAA;EAEpB,IAAMK,MAAM,GAAG,IAAAC,kBAAW,EAAC,YAAM;IAC/BF,OAAO,CAAC,UAACG,IAAI;MAAA,OAAK,CAACA,IAAI;IAAA,EAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,KAAK,GAAG,IAAAF,kBAAW,EAAC,YAAM;IAC9BF,OAAO,CAAC,IAAI,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMK,MAAM,GAAG,IAAAH,kBAAW,EAAC,YAAM;IAC/BF,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLD,IAAI,EAAJA,IAAI;IACJE,MAAM,EAANA,MAAM;IACNG,KAAK,EAALA,KAAK;IACLC,MAAM,EAANA;EACF,CAAC;AACH","ignoreList":[]}