{"version":3,"names":["_getJestObj","mock","useAuthStore","login","mockLogin","isLoading","error","logger","info","jest","fn","_interopRequireDefault","require","_asyncToGenerator2","_reactNative","_useLoginScreen","_require","mockNavigate","mockNavigation","navigate","goBack","reset","describe","beforeEach","clearAllMocks","it","_renderHook","renderHook","useLoginScreen","navigation","result","expect","current","values","email","toBe","password","errors","toEqual","isSubmitting","_renderHook2","act","setValue","_renderHook3","_renderHook4","validateForm","_renderHook5","_renderHook6","toBeTruthy","toBeUndefined","_renderHook7","navigateToRegister","toHaveBeenCalledWith","_renderHook8","navigateToForgotPassword","default","_renderHook9","handleSubmit","_renderHook0","rerender","firstSetValue","firstValidate","firstSubmit","firstNavigateRegister"],"sources":["useLoginScreen.test.ts"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport { renderHook, act } from \"@testing-library/react-native\";\nimport { useLoginScreen } from \"../useLoginScreen\";\n\n// Mock navigation\nconst mockNavigate = jest.fn();\nconst mockNavigation = {\n  navigate: mockNavigate,\n  goBack: jest.fn(),\n  reset: jest.fn(),\n};\n\n// Mock auth store\nconst mockLogin = jest.fn();\n\njest.mock(\"@pawfectmatch/core\", () => ({\n  useAuthStore: () => ({\n    login: mockLogin,\n    isLoading: false,\n    error: null,\n  }),\n  logger: {\n    info: jest.fn(),\n    error: jest.fn(),\n  },\n}));\n\ndescribe(\"useLoginScreen\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it(\"should initialize with empty form values\", () => {\n    const { result } = renderHook(() =>\n      useLoginScreen({ navigation: mockNavigation }),\n    );\n\n    expect(result.current.values.email).toBe(\"\");\n    expect(result.current.values.password).toBe(\"\");\n    expect(result.current.errors).toEqual({});\n    expect(result.current.isSubmitting).toBe(false);\n  });\n\n  it(\"should update email field\", () => {\n    const { result } = renderHook(() =>\n      useLoginScreen({ navigation: mockNavigation }),\n    );\n\n    act(() => {\n      result.current.setValue(\"email\", \"test@example.com\");\n    });\n\n    expect(result.current.values.email).toBe(\"test@example.com\");\n  });\n\n  it(\"should update password field\", () => {\n    const { result } = renderHook(() =>\n      useLoginScreen({ navigation: mockNavigation }),\n    );\n\n    act(() => {\n      result.current.setValue(\"password\", \"password123\");\n    });\n\n    expect(result.current.values.password).toBe(\"password123\");\n  });\n\n  it(\"should validate email format\", () => {\n    const { result } = renderHook(() =>\n      useLoginScreen({ navigation: mockNavigation }),\n    );\n\n    act(() => {\n      result.current.setValue(\"email\", \"invalid-email\");\n      result.current.setValue(\"password\", \"password123\");\n      result.current.validateForm();\n    });\n\n    expect(result.current.errors.email).toBe(\n      \"Please enter a valid email address\",\n    );\n  });\n\n  it(\"should validate password presence\", () => {\n    const { result } = renderHook(() =>\n      useLoginScreen({ navigation: mockNavigation }),\n    );\n\n    act(() => {\n      result.current.setValue(\"email\", \"test@example.com\");\n      result.current.validateForm();\n    });\n\n    expect(result.current.errors.password).toBe(\"Password is required\");\n  });\n\n  it(\"should clear errors when valid data is entered\", () => {\n    const { result } = renderHook(() =>\n      useLoginScreen({ navigation: mockNavigation }),\n    );\n\n    // Set invalid data first\n    act(() => {\n      result.current.setValue(\"email\", \"invalid\");\n      result.current.setValue(\"password\", \"\");\n      result.current.validateForm();\n    });\n\n    expect(result.current.errors.email).toBeTruthy();\n    expect(result.current.errors.password).toBeTruthy();\n\n    // Set valid data\n    act(() => {\n      result.current.setValue(\"email\", \"valid@example.com\");\n      result.current.setValue(\"password\", \"validpassword\");\n      result.current.validateForm();\n    });\n\n    expect(result.current.errors.email).toBeUndefined();\n    expect(result.current.errors.password).toBeUndefined();\n  });\n\n  it(\"should navigate to register screen\", () => {\n    const { result } = renderHook(() =>\n      useLoginScreen({ navigation: mockNavigation }),\n    );\n\n    act(() => {\n      result.current.navigateToRegister();\n    });\n\n    expect(mockNavigate).toHaveBeenCalledWith(\"Register\");\n  });\n\n  it(\"should navigate to forgot password screen\", () => {\n    const { result } = renderHook(() =>\n      useLoginScreen({ navigation: mockNavigation }),\n    );\n\n    act(() => {\n      result.current.navigateToForgotPassword();\n    });\n\n    expect(mockNavigate).toHaveBeenCalledWith(\"ForgotPassword\");\n  });\n\n  it(\"should handle form submission\", async () => {\n    const { result } = renderHook(() =>\n      useLoginScreen({ navigation: mockNavigation }),\n    );\n\n    act(() => {\n      result.current.setValue(\"email\", \"test@example.com\");\n      result.current.setValue(\"password\", \"password123\");\n    });\n\n    await act(async () => {\n      await result.current.handleSubmit();\n    });\n\n    // Note: Actual submission logic depends on auth store implementation\n    // This test verifies the form validation and submission flow\n    expect(result.current.values.email).toBe(\"test@example.com\");\n    expect(result.current.values.password).toBe(\"password123\");\n  });\n\n  it(\"should return stable function references\", () => {\n    const { result, rerender } = renderHook(() =>\n      useLoginScreen({ navigation: mockNavigation }),\n    );\n\n    const firstSetValue = result.current.setValue;\n    const firstValidate = result.current.validateForm;\n    const firstSubmit = result.current.handleSubmit;\n    const firstNavigateRegister = result.current.navigateToRegister;\n\n    rerender();\n\n    expect(result.current.setValue).toBe(firstSetValue);\n    expect(result.current.validateForm).toBe(firstValidate);\n    expect(result.current.handleSubmit).toBe(firstSubmit);\n    expect(result.current.navigateToRegister).toBe(firstNavigateRegister);\n  });\n});\n"],"mappings":"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","ignoreList":[]}