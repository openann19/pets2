8fdade47309fa571dbd5eee9497d2664
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ThemeProvider = void 0;
Object.defineProperty(exports, "getExtendedColors", {
  enumerable: true,
  get: function get() {
    return _adapters.getExtendedColors;
  }
});
Object.defineProperty(exports, "getIsDark", {
  enumerable: true,
  get: function get() {
    return _adapters.getIsDark;
  }
});
Object.defineProperty(exports, "getThemeColors", {
  enumerable: true,
  get: function get() {
    return _adapters.getThemeColors;
  }
});
exports.useTheme = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _rnTokens = require("./rnTokens");
var _jsxRuntime = require("react/jsx-runtime");
var _adapters = require("./adapters");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var ThemeCtx = (0, _react.createContext)(null);
var ThemeProvider = exports.ThemeProvider = function ThemeProvider(_ref) {
  var _ref2;
  var scheme = _ref.scheme,
    children = _ref.children;
  var auto = (_ref2 = _reactNative.Appearance.getColorScheme()) != null ? _ref2 : "light";
  var value = (0, _react.useMemo)(function () {
    return (0, _rnTokens.createTheme)(scheme != null ? scheme : auto);
  }, [scheme, auto]);
  return (0, _jsxRuntime.jsx)(ThemeCtx.Provider, {
    value: value,
    children: children
  });
};
var useTheme = exports.useTheme = function useTheme() {
  var ctx = _react.default.useContext(ThemeCtx);
  if (!ctx) throw new Error("useTheme must be used within <ThemeProvider>");
  return ctx;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVhY3ROYXRpdmUiLCJfcm5Ub2tlbnMiLCJfanN4UnVudGltZSIsIl9hZGFwdGVycyIsImUiLCJ0IiwiV2Vha01hcCIsInIiLCJuIiwiX19lc01vZHVsZSIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImRlZmF1bHQiLCJoYXMiLCJnZXQiLCJzZXQiLCJfdCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiVGhlbWVDdHgiLCJjcmVhdGVDb250ZXh0IiwiVGhlbWVQcm92aWRlciIsImV4cG9ydHMiLCJfcmVmIiwiX3JlZjIiLCJzY2hlbWUiLCJjaGlsZHJlbiIsImF1dG8iLCJBcHBlYXJhbmNlIiwiZ2V0Q29sb3JTY2hlbWUiLCJ2YWx1ZSIsInVzZU1lbW8iLCJjcmVhdGVUaGVtZSIsImpzeCIsIlByb3ZpZGVyIiwidXNlVGhlbWUiLCJjdHgiLCJSZWFjdCIsInVzZUNvbnRleHQiLCJFcnJvciJdLCJzb3VyY2VzIjpbIlByb3ZpZGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIPCfjqggVU5JRklFRCBUSEVNRSBQUk9WSURFUlxuICogU2luZ2xlIHNvdXJjZSBvZiB0cnV0aCBmb3IgdGhlbWUgbWFuYWdlbWVudCBpbiB0aGUgbW9iaWxlIGFwcFxuICovXG5cbmltcG9ydCBSZWFjdCwgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBBcHBlYXJhbmNlLCB0eXBlIENvbG9yU2NoZW1lTmFtZSB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcbmltcG9ydCB0eXBlIHsgVGhlbWUsIENvbG9yU2NoZW1lIH0gZnJvbSBcIi4vdHlwZXNcIjtcbmltcG9ydCB7IGNyZWF0ZVRoZW1lIH0gZnJvbSBcIi4vcm5Ub2tlbnNcIjtcblxuY29uc3QgVGhlbWVDdHggPSBjcmVhdGVDb250ZXh0PFRoZW1lIHwgbnVsbD4obnVsbCk7XG5cbmV4cG9ydCBjb25zdCBUaGVtZVByb3ZpZGVyOiBSZWFjdC5GQzx7XG4gIHNjaGVtZT86IENvbG9yU2NoZW1lO1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufT4gPSAoeyBzY2hlbWUsIGNoaWxkcmVuIH0pID0+IHtcbiAgY29uc3QgYXV0bzogQ29sb3JTY2hlbWUgPSAoKEFwcGVhcmFuY2UuZ2V0Q29sb3JTY2hlbWUoKSBhcyBDb2xvclNjaGVtZU5hbWUpID8/XG4gICAgXCJsaWdodFwiKSBhcyBDb2xvclNjaGVtZTtcbiAgY29uc3QgdmFsdWUgPSB1c2VNZW1vKCgpID0+IGNyZWF0ZVRoZW1lKHNjaGVtZSA/PyBhdXRvKSwgW3NjaGVtZSwgYXV0b10pO1xuICByZXR1cm4gPFRoZW1lQ3R4LlByb3ZpZGVyIHZhbHVlPXt2YWx1ZX0+e2NoaWxkcmVufTwvVGhlbWVDdHguUHJvdmlkZXI+O1xufTtcblxuZXhwb3J0IGNvbnN0IHVzZVRoZW1lID0gKCk6IFRoZW1lID0+IHtcbiAgY29uc3QgY3R4ID0gUmVhY3QudXNlQ29udGV4dChUaGVtZUN0eCk7XG4gIGlmICghY3R4KSB0aHJvdyBuZXcgRXJyb3IoXCJ1c2VUaGVtZSBtdXN0IGJlIHVzZWQgd2l0aGluIDxUaGVtZVByb3ZpZGVyPlwiKTtcbiAgcmV0dXJuIGN0eDtcbn07XG5cbi8vIFJlLWV4cG9ydCBhZGFwdGVyIHV0aWxpdGllcyBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuZXhwb3J0IHsgZ2V0RXh0ZW5kZWRDb2xvcnMsIGdldFRoZW1lQ29sb3JzLCBnZXRJc0RhcmsgfSBmcm9tIFwiLi9hZGFwdGVyc1wiO1xuXG4vLyBBZGRpdGlvbmFsIHR5cGUgZXhwb3J0cyBmb3IgY29tcG9uZW50cyBleHBlY3RpbmcgdGhlc2UgdHlwZXNcbmV4cG9ydCB0eXBlIHsgXG4gIFNlbWFudGljQ29sb3JzLCBcbiAgVGhlbWUsXG4gIENvbG9yU2NoZW1lLFxuICBUaGVtZU1vZGUsXG4gIFRoZW1lQ29udGV4dFZhbHVlLFxufSBmcm9tIFwiLi90eXBlc1wiO1xuXG5leHBvcnQgdHlwZSB7IEV4dGVuZGVkQ29sb3JzIH0gZnJvbSBcIi4vYWRhcHRlcnNcIjtcblxuZXhwb3J0IHR5cGUgRHluYW1pY0NvbG9ycyA9IGltcG9ydChcIi4vdHlwZXNcIikuU2VtYW50aWNDb2xvcnM7XG5leHBvcnQgdHlwZSBUaGVtZUNvbG9ycyA9IGltcG9ydChcIi4vYWRhcHRlcnNcIikuRXh0ZW5kZWRDb2xvcnM7XG5cbi8vIFNoYWRvdyBhbmQgVHlwb2dyYXBoeSB0eXBlcyBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuZXhwb3J0IHR5cGUgRW5oYW5jZWRTaGFkb3dzID0gUmVjb3JkPHN0cmluZywgdW5rbm93bj47XG5leHBvcnQgdHlwZSBFbmhhbmNlZFR5cG9ncmFwaHkgPSBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPjtcblxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS0EsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBRUEsSUFBQUUsU0FBQSxHQUFBRixPQUFBO0FBQXlDLElBQUFHLFdBQUEsR0FBQUgsT0FBQTtBQXFCekMsSUFBQUksU0FBQSxHQUFBSixPQUFBO0FBQTBFLFNBQUFELHdCQUFBTSxDQUFBLEVBQUFDLENBQUEsNkJBQUFDLE9BQUEsTUFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBUix1QkFBQSxZQUFBQSx3QkFBQU0sQ0FBQSxFQUFBQyxDQUFBLFNBQUFBLENBQUEsSUFBQUQsQ0FBQSxJQUFBQSxDQUFBLENBQUFLLFVBQUEsU0FBQUwsQ0FBQSxNQUFBTSxDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQSxLQUFBQyxTQUFBLFFBQUFDLE9BQUEsRUFBQVYsQ0FBQSxpQkFBQUEsQ0FBQSx1QkFBQUEsQ0FBQSx5QkFBQUEsQ0FBQSxTQUFBUSxDQUFBLE1BQUFGLENBQUEsR0FBQUwsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsUUFBQUcsQ0FBQSxDQUFBSyxHQUFBLENBQUFYLENBQUEsVUFBQU0sQ0FBQSxDQUFBTSxHQUFBLENBQUFaLENBQUEsR0FBQU0sQ0FBQSxDQUFBTyxHQUFBLENBQUFiLENBQUEsRUFBQVEsQ0FBQSxjQUFBTSxFQUFBLElBQUFkLENBQUEsZ0JBQUFjLEVBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixDQUFBLEVBQUFjLEVBQUEsT0FBQVAsQ0FBQSxJQUFBRCxDQUFBLEdBQUFXLE1BQUEsQ0FBQUMsY0FBQSxLQUFBRCxNQUFBLENBQUFFLHdCQUFBLENBQUFuQixDQUFBLEVBQUFjLEVBQUEsT0FBQVAsQ0FBQSxDQUFBSyxHQUFBLElBQUFMLENBQUEsQ0FBQU0sR0FBQSxJQUFBUCxDQUFBLENBQUFFLENBQUEsRUFBQU0sRUFBQSxFQUFBUCxDQUFBLElBQUFDLENBQUEsQ0FBQU0sRUFBQSxJQUFBZCxDQUFBLENBQUFjLEVBQUEsV0FBQU4sQ0FBQSxLQUFBUixDQUFBLEVBQUFDLENBQUE7QUFuQjFFLElBQU1tQixRQUFRLEdBQUcsSUFBQUMsb0JBQWEsRUFBZSxJQUFJLENBQUM7QUFFM0MsSUFBTUMsYUFHWCxHQUFBQyxPQUFBLENBQUFELGFBQUEsR0FBRyxTQUhRQSxhQUdYQSxDQUFBRSxJQUFBLEVBQTZCO0VBQUEsSUFBQUMsS0FBQTtFQUFBLElBQXZCQyxNQUFNLEdBQUFGLElBQUEsQ0FBTkUsTUFBTTtJQUFFQyxRQUFRLEdBQUFILElBQUEsQ0FBUkcsUUFBUTtFQUN0QixJQUFNQyxJQUFpQixJQUFBSCxLQUFBLEdBQUtJLHVCQUFVLENBQUNDLGNBQWMsQ0FBQyxDQUFDLFlBQUFMLEtBQUEsR0FDckQsT0FBdUI7RUFDekIsSUFBTU0sS0FBSyxHQUFHLElBQUFDLGNBQU8sRUFBQztJQUFBLE9BQU0sSUFBQUMscUJBQVcsRUFBQ1AsTUFBTSxXQUFOQSxNQUFNLEdBQUlFLElBQUksQ0FBQztFQUFBLEdBQUUsQ0FBQ0YsTUFBTSxFQUFFRSxJQUFJLENBQUMsQ0FBQztFQUN4RSxPQUFPLElBQUE5QixXQUFBLENBQUFvQyxHQUFBLEVBQUNkLFFBQVEsQ0FBQ2UsUUFBUTtJQUFDSixLQUFLLEVBQUVBLEtBQU07SUFBQUosUUFBQSxFQUFFQTtFQUFRLENBQW9CLENBQUM7QUFDeEUsQ0FBQztBQUVNLElBQU1TLFFBQVEsR0FBQWIsT0FBQSxDQUFBYSxRQUFBLEdBQUcsU0FBWEEsUUFBUUEsQ0FBQSxFQUFnQjtFQUNuQyxJQUFNQyxHQUFHLEdBQUdDLGNBQUssQ0FBQ0MsVUFBVSxDQUFDbkIsUUFBUSxDQUFDO0VBQ3RDLElBQUksQ0FBQ2lCLEdBQUcsRUFBRSxNQUFNLElBQUlHLEtBQUssQ0FBQyw4Q0FBOEMsQ0FBQztFQUN6RSxPQUFPSCxHQUFHO0FBQ1osQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==