7c6a7bca22a5365b38320fdf1b8c05af
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMotionConfig = useMotionConfig;
exports.useReduceMotion = useReduceMotion;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _reactNative = require("react-native");
function useReduceMotion() {
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    reducedMotion = _useState2[0],
    setReducedMotion = _useState2[1];
  (0, _react.useEffect)(function () {
    var isMounted = true;
    _reactNative.AccessibilityInfo.isReduceMotionEnabled().then(function (isEnabled) {
      if (isMounted) {
        setReducedMotion(isEnabled);
      }
    }).catch(function () {
      if (isMounted) {
        setReducedMotion(false);
      }
    });
    var subscription = _reactNative.AccessibilityInfo.addEventListener('reduceMotionChanged', function (isEnabled) {
      if (isMounted) {
        setReducedMotion(isEnabled);
      }
    });
    return function () {
      isMounted = false;
      subscription.remove();
    };
  }, []);
  return reducedMotion;
}
function useMotionConfig() {
  var reduceMotion = useReduceMotion();
  return {
    reduceMotion: reduceMotion,
    animationConfig: reduceMotion ? {
      duration: 0,
      type: 'timing'
    } : {
      type: 'spring',
      damping: 20,
      stiffness: 300
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX3JlYWN0TmF0aXZlIiwidXNlUmVkdWNlTW90aW9uIiwiX3VzZVN0YXRlIiwidXNlU3RhdGUiLCJfdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkyIiwiZGVmYXVsdCIsInJlZHVjZWRNb3Rpb24iLCJzZXRSZWR1Y2VkTW90aW9uIiwidXNlRWZmZWN0IiwiaXNNb3VudGVkIiwiQWNjZXNzaWJpbGl0eUluZm8iLCJpc1JlZHVjZU1vdGlvbkVuYWJsZWQiLCJ0aGVuIiwiaXNFbmFibGVkIiwiY2F0Y2giLCJzdWJzY3JpcHRpb24iLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlIiwidXNlTW90aW9uQ29uZmlnIiwicmVkdWNlTW90aW9uIiwiYW5pbWF0aW9uQ29uZmlnIiwiZHVyYXRpb24iLCJ0eXBlIiwiZGFtcGluZyIsInN0aWZmbmVzcyJdLCJzb3VyY2VzIjpbInVzZVJlZHVjZWRNb3Rpb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBBY2Nlc3NpYmlsaXR5SW5mbyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbi8qKlxuICogSG9vayB0byBjaGVjayBpZiB1c2VyIHByZWZlcnMgcmVkdWNlZCBtb3Rpb25cbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgc3lzdGVtIHByZWZlcmVuY2UgaXMgZW5hYmxlZFxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlUmVkdWNlTW90aW9uKCk6IGJvb2xlYW4ge1xuICBjb25zdCBbcmVkdWNlZE1vdGlvbiwgc2V0UmVkdWNlZE1vdGlvbl0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBsZXQgaXNNb3VudGVkID0gdHJ1ZTtcblxuICAgIC8vIENoZWNrIGluaXRpYWwgc3RhdGVcbiAgICBBY2Nlc3NpYmlsaXR5SW5mby5pc1JlZHVjZU1vdGlvbkVuYWJsZWQoKVxuICAgICAgLnRoZW4oKGlzRW5hYmxlZCkgPT4ge1xuICAgICAgICBpZiAoaXNNb3VudGVkKSB7XG4gICAgICAgICAgc2V0UmVkdWNlZE1vdGlvbihpc0VuYWJsZWQpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmNhdGNoKCgpID0+IHtcbiAgICAgICAgLy8gRmFsbGJhY2sgaWYgbm90IHN1cHBvcnRlZFxuICAgICAgICBpZiAoaXNNb3VudGVkKSB7XG4gICAgICAgICAgc2V0UmVkdWNlZE1vdGlvbihmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgLy8gTGlzdGVuIGZvciBjaGFuZ2VzXG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gQWNjZXNzaWJpbGl0eUluZm8uYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICdyZWR1Y2VNb3Rpb25DaGFuZ2VkJyxcbiAgICAgIChpc0VuYWJsZWQpID0+IHtcbiAgICAgICAgaWYgKGlzTW91bnRlZCkge1xuICAgICAgICAgIHNldFJlZHVjZWRNb3Rpb24oaXNFbmFibGVkKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICk7XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgaXNNb3VudGVkID0gZmFsc2U7XG4gICAgICBzdWJzY3JpcHRpb24ucmVtb3ZlKCk7XG4gICAgfTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiByZWR1Y2VkTW90aW9uO1xufVxuXG4vKipcbiAqIEhvb2sgdG8gZ2V0IG1vdGlvbiBjb25maWd1cmF0aW9uIHdpdGggcmVkdWNlLW1vdGlvbiBzdXBwb3J0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNb3Rpb25Db25maWcoKSB7XG4gIGNvbnN0IHJlZHVjZU1vdGlvbiA9IHVzZVJlZHVjZU1vdGlvbigpO1xuXG4gIHJldHVybiB7XG4gICAgcmVkdWNlTW90aW9uLFxuICAgIGFuaW1hdGlvbkNvbmZpZzogcmVkdWNlTW90aW9uXG4gICAgICA/IHsgZHVyYXRpb246IDAsIHR5cGU6ICd0aW1pbmcnIGFzIGNvbnN0IH1cbiAgICAgIDoge1xuICAgICAgICAgIHR5cGU6ICdzcHJpbmcnIGFzIGNvbnN0LFxuICAgICAgICAgIGRhbXBpbmc6IDIwLFxuICAgICAgICAgIHN0aWZmbmVzczogMzAwLFxuICAgICAgICB9LFxuICB9O1xufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBTU8sU0FBU0UsZUFBZUEsQ0FBQSxFQUFZO0VBQ3pDLElBQUFDLFNBQUEsR0FBMEMsSUFBQUMsZUFBUSxFQUFDLEtBQUssQ0FBQztJQUFBQyxVQUFBLE9BQUFDLGVBQUEsQ0FBQUMsT0FBQSxFQUFBSixTQUFBO0lBQWxESyxhQUFhLEdBQUFILFVBQUE7SUFBRUksZ0JBQWdCLEdBQUFKLFVBQUE7RUFFdEMsSUFBQUssZ0JBQVMsRUFBQyxZQUFNO0lBQ2QsSUFBSUMsU0FBUyxHQUFHLElBQUk7SUFHcEJDLDhCQUFpQixDQUFDQyxxQkFBcUIsQ0FBQyxDQUFDLENBQ3RDQyxJQUFJLENBQUMsVUFBQ0MsU0FBUyxFQUFLO01BQ25CLElBQUlKLFNBQVMsRUFBRTtRQUNiRixnQkFBZ0IsQ0FBQ00sU0FBUyxDQUFDO01BQzdCO0lBQ0YsQ0FBQyxDQUFDLENBQ0RDLEtBQUssQ0FBQyxZQUFNO01BRVgsSUFBSUwsU0FBUyxFQUFFO1FBQ2JGLGdCQUFnQixDQUFDLEtBQUssQ0FBQztNQUN6QjtJQUNGLENBQUMsQ0FBQztJQUdKLElBQU1RLFlBQVksR0FBR0wsOEJBQWlCLENBQUNNLGdCQUFnQixDQUNyRCxxQkFBcUIsRUFDckIsVUFBQ0gsU0FBUyxFQUFLO01BQ2IsSUFBSUosU0FBUyxFQUFFO1FBQ2JGLGdCQUFnQixDQUFDTSxTQUFTLENBQUM7TUFDN0I7SUFDRixDQUNGLENBQUM7SUFFRCxPQUFPLFlBQU07TUFDWEosU0FBUyxHQUFHLEtBQUs7TUFDakJNLFlBQVksQ0FBQ0UsTUFBTSxDQUFDLENBQUM7SUFDdkIsQ0FBQztFQUNILENBQUMsRUFBRSxFQUFFLENBQUM7RUFFTixPQUFPWCxhQUFhO0FBQ3RCO0FBS08sU0FBU1ksZUFBZUEsQ0FBQSxFQUFHO0VBQ2hDLElBQU1DLFlBQVksR0FBR25CLGVBQWUsQ0FBQyxDQUFDO0VBRXRDLE9BQU87SUFDTG1CLFlBQVksRUFBWkEsWUFBWTtJQUNaQyxlQUFlLEVBQUVELFlBQVksR0FDekI7TUFBRUUsUUFBUSxFQUFFLENBQUM7TUFBRUMsSUFBSSxFQUFFO0lBQWtCLENBQUMsR0FDeEM7TUFDRUEsSUFBSSxFQUFFLFFBQWlCO01BQ3ZCQyxPQUFPLEVBQUUsRUFBRTtNQUNYQyxTQUFTLEVBQUU7SUFDYjtFQUNOLENBQUM7QUFDSCIsImlnbm9yZUxpc3QiOltdfQ==