5f32498c5bd2f33b6e1042b13d6cca0c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.EliteScrollContainer = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _EliteContainer = require("./EliteContainer");
var _animation = require("../../../animation");
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["children", "gradient"];
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var EliteScrollContainer = exports.EliteScrollContainer = (0, _react.forwardRef)(function (_ref, ref) {
  var children = _ref.children,
    _ref$gradient = _ref.gradient,
    gradient = _ref$gradient === void 0 ? "gradientPrimary" : _ref$gradient,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return (0, _jsxRuntime.jsx)(_EliteContainer.EliteContainer, {
    gradient: gradient,
    children: (0, _jsxRuntime.jsx)(_reactNative.ScrollView, _objectSpread(_objectSpread({
      ref: ref,
      contentContainerStyle: _animation.GlobalStyles.scrollContainer,
      showsVerticalScrollIndicator: false,
      bounces: true
    }, props), {}, {
      children: children
    }))
  });
});
EliteScrollContainer.displayName = "EliteScrollContainer";
var _default = exports.default = EliteScrollContainer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVhY3ROYXRpdmUiLCJfRWxpdGVDb250YWluZXIiLCJfYW5pbWF0aW9uIiwiX2pzeFJ1bnRpbWUiLCJfZXhjbHVkZWQiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIm93bktleXMiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZmlsdGVyIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5MiIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiRWxpdGVTY3JvbGxDb250YWluZXIiLCJleHBvcnRzIiwiZm9yd2FyZFJlZiIsIl9yZWYiLCJyZWYiLCJjaGlsZHJlbiIsIl9yZWYkZ3JhZGllbnQiLCJncmFkaWVudCIsInByb3BzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsImpzeCIsIkVsaXRlQ29udGFpbmVyIiwiU2Nyb2xsVmlldyIsImNvbnRlbnRDb250YWluZXJTdHlsZSIsIkdsb2JhbFN0eWxlcyIsInNjcm9sbENvbnRhaW5lciIsInNob3dzVmVydGljYWxTY3JvbGxJbmRpY2F0b3IiLCJib3VuY2VzIiwiZGlzcGxheU5hbWUiLCJfZGVmYXVsdCJdLCJzb3VyY2VzIjpbIkVsaXRlU2Nyb2xsQ29udGFpbmVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgZm9yd2FyZFJlZiwgdHlwZSBSZWFjdE5vZGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFNjcm9sbFZpZXcsIHR5cGUgU2Nyb2xsVmlld1Byb3BzIH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xuaW1wb3J0IHR5cGUgeyBTY3JvbGxWaWV3IGFzIFNjcm9sbFZpZXdUeXBlIH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xuXG5pbXBvcnQgeyBFbGl0ZUNvbnRhaW5lciB9IGZyb20gXCIuL0VsaXRlQ29udGFpbmVyXCI7XG5pbXBvcnQgeyBHbG9iYWxTdHlsZXMgfSBmcm9tIFwiLi4vLi4vLi4vYW5pbWF0aW9uXCI7XG5pbXBvcnQgeyBDb2xvcnMgfSBmcm9tIFwiLi4vLi4vLi4vYW5pbWF0aW9uXCI7XG5cbi8qKlxuICogRWxpdGVTY3JvbGxDb250YWluZXIgQ29tcG9uZW50XG4gKiBTY3JvbGxhYmxlIGVsaXRlIGNvbnRhaW5lciB3aXRoIGdyYWRpZW50IGJhY2tncm91bmRcbiAqL1xuXG5pbnRlcmZhY2UgRWxpdGVTY3JvbGxDb250YWluZXJQcm9wcyBleHRlbmRzIFNjcm9sbFZpZXdQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG4gIGdyYWRpZW50Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgRWxpdGVTY3JvbGxDb250YWluZXIgPSBmb3J3YXJkUmVmPFNjcm9sbFZpZXdUeXBlLCBFbGl0ZVNjcm9sbENvbnRhaW5lclByb3BzPigoe1xuICBjaGlsZHJlbixcbiAgZ3JhZGllbnQgPSBcImdyYWRpZW50UHJpbWFyeVwiLFxuICAuLi5wcm9wc1xufSwgcmVmKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEVsaXRlQ29udGFpbmVyIGdyYWRpZW50PXtncmFkaWVudH0+XG4gICAgICA8U2Nyb2xsVmlld1xuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgY29udGVudENvbnRhaW5lclN0eWxlPXtHbG9iYWxTdHlsZXMuc2Nyb2xsQ29udGFpbmVyfVxuICAgICAgICBzaG93c1ZlcnRpY2FsU2Nyb2xsSW5kaWNhdG9yPXtmYWxzZX1cbiAgICAgICAgYm91bmNlcz17dHJ1ZX1cbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L1Njcm9sbFZpZXc+XG4gICAgPC9FbGl0ZUNvbnRhaW5lcj5cbiAgKTtcbn0pO1xuXG5FbGl0ZVNjcm9sbENvbnRhaW5lci5kaXNwbGF5TmFtZSA9IFwiRWxpdGVTY3JvbGxDb250YWluZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgRWxpdGVTY3JvbGxDb250YWluZXI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUdBLElBQUFFLGVBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLFVBQUEsR0FBQUgsT0FBQTtBQUFrRCxJQUFBSSxXQUFBLEdBQUFKLE9BQUE7QUFBQSxJQUFBSyxTQUFBO0FBQUEsU0FBQU4sd0JBQUFPLENBQUEsRUFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxNQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFULHVCQUFBLFlBQUFBLHdCQUFBTyxDQUFBLEVBQUFDLENBQUEsU0FBQUEsQ0FBQSxJQUFBRCxDQUFBLElBQUFBLENBQUEsQ0FBQUssVUFBQSxTQUFBTCxDQUFBLE1BQUFNLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLEtBQUFDLFNBQUEsUUFBQUMsT0FBQSxFQUFBVixDQUFBLGlCQUFBQSxDQUFBLHVCQUFBQSxDQUFBLHlCQUFBQSxDQUFBLFNBQUFRLENBQUEsTUFBQUYsQ0FBQSxHQUFBTCxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxRQUFBRyxDQUFBLENBQUFLLEdBQUEsQ0FBQVgsQ0FBQSxVQUFBTSxDQUFBLENBQUFNLEdBQUEsQ0FBQVosQ0FBQSxHQUFBTSxDQUFBLENBQUFPLEdBQUEsQ0FBQWIsQ0FBQSxFQUFBUSxDQUFBLGNBQUFNLEVBQUEsSUFBQWQsQ0FBQSxnQkFBQWMs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