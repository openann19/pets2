{"version":3,"names":["_getJestObj","mock","React","require","_require","View","LinearGradient","_ref","children","rest","_objectWithoutProperties2","default","_excluded","_jsxRuntime","jsx","_objectSpread","accessibilityLabel","_require2","Text","TouchableOpacity","MapFiltersModal","testID","MapStatsPanel","PinDetailsModal","_ref2","visible","onClose","accessibilityRole","onPress","_interopRequireDefault","_asyncToGenerator2","_defineProperty2","_react","_reactNative","_testUtils","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","_require3","jest","baseHook","region","latitude","longitude","latitudeDelta","longitudeDelta","userLocation","filters","radius","types","walk","stats","activeDogs","activeCats","hotspots","filterPanelHeight","statsOpacity","activityTypes","setSelectedPin","fn","setFilters","getCurrentLocation","toggleFilterPanel","toggleActivity","getMarkerColor","activity","isMatch","getStableMatchFlag","pin","describe","afterEach","resetModules","clearAllMocks","it","doMock","useMapScreen","filteredPins","_id","message","title","selectedPin","_yield$import","Promise","resolve","then","MapScreen","_renderWithProviders","renderWithProviders","navigation","navigate","mockNavigate","as","any","getAllByTestId","getByTestId","getByLabelText","queryByTestId","markers","expect","toBeGreaterThan","fireEvent","press","toBeTruthy","toBeFalsy","navSpy","_yield$import2","_renderWithProviders2","getAllByText","not","toHaveBeenCalled"],"sources":["MapScreen.interactions.test.tsx"],"sourcesContent":["import React from \"react\";\nimport { fireEvent } from \"@testing-library/react-native\";\nimport { renderWithProviders, mockNavigate } from \"./test-utils\";\n\n/* Use shared pro map mock with onPress support */\njest.mock(\"react-native-maps\");\n\njest.mock(\"expo-linear-gradient\", () => {\n  const React = require(\"react\");\n  const { View } = require(\"react-native\");\n  return {\n    LinearGradient: ({ children, ...rest }: any) => (\n      <View accessibilityLabel=\"LinearGradient\" {...rest}>{children}</View>\n    ),\n  };\n});\n\njest.mock(\"../../components/map\", () => {\n  const React = require(\"react\");\n  const { View, Text, TouchableOpacity } = require(\"react-native\");\n  return {\n    MapFiltersModal: () => <View testID=\"MapFiltersModal\" />,\n    MapStatsPanel: () => <View testID=\"MapStatsPanel\"><Text>stats</Text></View>,\n    PinDetailsModal: ({ visible, onClose }: any) =>\n      visible ? (\n        <View testID=\"PinDetailsModal\">\n          <TouchableOpacity accessibilityLabel=\"close-pin\"  testID=\"MapScreen.interactions.test-button-2\" accessibilityRole=\"button\" onPress={onClose}>\n            <Text>Close Pin</Text>\n          </TouchableOpacity>\n        </View>\n      ) : null,\n  };\n});\n\nconst baseHook = {\n  region: {\n    latitude: 42.6977, longitude: 23.3219, latitudeDelta: 0.05, longitudeDelta: 0.05,\n  },\n  userLocation: { latitude: 42.6977, longitude: 23.3219 },\n  filters: { radius: 500, types: { walk: true } },\n  stats: { activeDogs: 3, activeCats: 1, hotspots: 2 },\n  filterPanelHeight: { }, statsOpacity: { },\n  activityTypes: [\"walk\",\"play\",\"lost_pet\"],\n  setSelectedPin: jest.fn(),\n  setFilters: jest.fn(),\n  getCurrentLocation: jest.fn(),\n  toggleFilterPanel: jest.fn(),\n  toggleActivity: jest.fn(),\n  getMarkerColor: (activity: string, isMatch: boolean) => isMatch ? \"#00ff88\" : activity===\"walk\" ? \"#4da6ff\" : \"#fff\",\n  getStableMatchFlag: (pin: any) => pin.activity === \"walk\",\n};\n\ndescribe(\"MapScreen (interactions)\", () => {\n  afterEach(() => {\n    jest.resetModules();\n    jest.clearAllMocks();\n  });\n\n  it(\"tapping a Marker calls setSelectedPin and opens PinDetailsModal; close hides it\", async () => {\n    jest.doMock(\"../../hooks/screens/useMapScreen\", () => ({\n      useMapScreen: () => ({\n        ...baseHook,\n        filteredPins: [\n          { _id: \"pin-1\", latitude: 1, longitude: 1, activity: \"walk\", message: \"hello\", title: \"Pin #1\" },\n        ],\n        selectedPin: { _id: \"pin-1\" },\n      }),\n    }));\n\n    const { default: MapScreen } = await import(\"../MapScreen\");\n    const { getAllByTestId, getByTestId, getByLabelText, queryByTestId } =\n      renderWithProviders(<MapScreen navigation={{navigate: mockNavigate}} as any />);\n\n    // Marker should be present and pressable\n    const markers = getAllByTestId(\"Marker\");\n    expect(markers.length).toBeGreaterThan(0);\n    fireEvent.press(markers[0]);\n\n    // PinDetails visible\n    expect(getByTestId(\"PinDetailsModal\")).toBeTruthy();\n\n    // Close\n    fireEvent.press(getByLabelText(\"close-pin\"));\n    expect(queryByTestId(\"PinDetailsModal\")).toBeFalsy();\n  });\n\n  it(\"AR FAB is disabled when userLocation is missing (no navigation occurs)\", async () => {\n    const navSpy = mockNavigate;\n    jest.doMock(\"../../hooks/screens/useMapScreen\", () => ({\n      useMapScreen: () => ({\n        ...baseHook,\n        userLocation: null,\n        filteredPins: [\n          { _id: \"pin-1\", latitude: 1, longitude: 1, activity: \"walk\", title: \"Pin #1\" },\n        ],\n        selectedPin: null,\n      }),\n    }));\n\n    const { default: MapScreen } = await import(\"../MapScreen\");\n    const { getAllByText } = renderWithProviders(<MapScreen navigation={{navigate: mockNavigate}} as any />);\n    fireEvent.press(getAllByText(\"üëÅÔ∏è\")[0]);\n    expect(navSpy).not.toHaveBeenCalled();\n  });\n});\n\n"],"mappings":"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","ignoreList":[]}