{"version":3,"names":["_interopRequireDefault","require","_slicedToArray2","Object","defineProperty","exports","value","useRealtimeSocket","react_1","logger_1","env_1","options","arguments","length","undefined","_options$url","url","process","env","_options$autoConnect","autoConnect","_ref","useState","_ref2","default","isConnected","setIsConnected","_ref3","_ref4","error","setError","socketRef","useRef","connect","useCallback","_socketRef$current","current","connected","logger","info","isBrowser","mockSocket","on","off","emit","disconnect","err","errorMessage","Error","message","emitTyping","matchId","isTyping","_socketRef$current2","warn","onTyping","callback","handler","data","_socketRef$current3","onMessage","_socketRef$current4","onOnlineStatus","_socketRef$current5","useEffect","socket"],"sources":["useRealtimeSocket.js"],"sourcesContent":["\"use strict\";\n/**\n * Real-time WebSocket Hook\n * Provides real-time updates via Socket.io\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useRealtimeSocket = useRealtimeSocket;\nconst react_1 = require(\"react\");\nconst logger_1 = require(\"../utils/logger\");\nconst env_1 = require(\"../utils/env\");\n/**\n * Hook for real-time WebSocket communication\n */\nfunction useRealtimeSocket(options = {}) {\n    const { url = process.env['NEXT_PUBLIC_SOCKET_URL'] || 'http://localhost:5000', autoConnect = true } = options;\n    const [isConnected, setIsConnected] = (0, react_1.useState)(false);\n    const [error, setError] = (0, react_1.useState)(null);\n    const socketRef = (0, react_1.useRef)(null);\n    // Connect to WebSocket\n    const connect = (0, react_1.useCallback)(() => {\n        if (socketRef.current?.connected) {\n            logger_1.logger.info('Socket already connected');\n            return;\n        }\n        try {\n            // Dynamic import to avoid SSR issues\n            if (!(0, env_1.isBrowser)())\n                return;\n            // Use existing socket.io client if available\n            // Token would be used here: getLocalStorageItem('accessToken')\n            // Create socket connection (simplified - actual implementation would use socket.io-client)\n            // For now, we'll create a mock socket that can be replaced with real implementation\n            const mockSocket = {\n                connected: false,\n                on: () => { },\n                off: () => { },\n                emit: () => { },\n                disconnect: () => { },\n            };\n            // In real implementation:\n            // import io from 'socket.io-client';\n            // const socket = io(url, {\n            //   auth: { token },\n            //   transports: ['websocket'],\n            // });\n            socketRef.current = mockSocket;\n            setIsConnected(true);\n            setError(null);\n            logger_1.logger.info('Socket connected', { url });\n        }\n        catch (err) {\n            const errorMessage = err instanceof Error ? err.message : 'Failed to connect';\n            setError(errorMessage);\n            logger_1.logger.error('Socket connection failed', { error: errorMessage });\n        }\n    }, [url]);\n    // Disconnect from WebSocket\n    const disconnect = (0, react_1.useCallback)(() => {\n        if (socketRef.current) {\n            socketRef.current.disconnect();\n            socketRef.current = null;\n            setIsConnected(false);\n            logger_1.logger.info('Socket disconnected');\n        }\n    }, []);\n    // Emit typing indicator\n    const emitTyping = (0, react_1.useCallback)((matchId, isTyping) => {\n        if (!socketRef.current?.connected) {\n            logger_1.logger.warn('Cannot emit typing - socket not connected');\n            return;\n        }\n        socketRef.current.emit('typing', { matchId, isTyping });\n        logger_1.logger.info('Typing indicator emitted', { matchId, isTyping });\n    }, []);\n    // Listen for typing indicators\n    const onTyping = (0, react_1.useCallback)((callback) => {\n        if (!socketRef.current)\n            return () => { };\n        const handler = (data) => {\n            callback(data);\n        };\n        socketRef.current.on('typing', handler);\n        return () => {\n            socketRef.current?.off('typing', handler);\n        };\n    }, []);\n    // Listen for new messages\n    const onMessage = (0, react_1.useCallback)((callback) => {\n        if (!socketRef.current)\n            return () => { };\n        const handler = (data) => {\n            callback(data);\n        };\n        socketRef.current.on('message', handler);\n        return () => {\n            socketRef.current?.off('message', handler);\n        };\n    }, []);\n    // Listen for online status changes\n    const onOnlineStatus = (0, react_1.useCallback)((callback) => {\n        if (!socketRef.current)\n            return () => { };\n        const handler = (data) => {\n            callback(data);\n        };\n        socketRef.current.on('onlineStatus', handler);\n        return () => {\n            socketRef.current?.off('onlineStatus', handler);\n        };\n    }, []);\n    // Auto-connect on mount\n    (0, react_1.useEffect)(() => {\n        if (autoConnect) {\n            connect();\n        }\n        return () => {\n            disconnect();\n        };\n    }, [autoConnect, connect, disconnect]);\n    return {\n        socket: socketRef.current,\n        isConnected,\n        error,\n        connect,\n        disconnect,\n        emitTyping,\n        onTyping,\n        onMessage,\n        onOnlineStatus,\n    };\n}\n"],"mappings":"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","ignoreList":[]}