897aaf73d99c18c813745a40b8f48c36
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.usePerformanceLogger = usePerformanceLogger;
var _GlobalPerformanceLogger = _interopRequireDefault(require("./GlobalPerformanceLogger"));
var _react = _interopRequireWildcard(require("react"));
var React = _react;
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var PerformanceLoggerContext = React.createContext(_GlobalPerformanceLogger.default);
if (__DEV__) {
  PerformanceLoggerContext.displayName = 'PerformanceLoggerContext';
}
function usePerformanceLogger() {
  return (0, _react.useContext)(PerformanceLoggerContext);
}
var _default = exports.default = PerformanceLoggerContext;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfR2xvYmFsUGVyZm9ybWFuY2VMb2dnZXIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiUmVhY3QiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlBlcmZvcm1hbmNlTG9nZ2VyQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJHbG9iYWxQZXJmb3JtYW5jZUxvZ2dlciIsIl9fREVWX18iLCJkaXNwbGF5TmFtZSIsInVzZVBlcmZvcm1hbmNlTG9nZ2VyIiwidXNlQ29udGV4dCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlBlcmZvcm1hbmNlTG9nZ2VyQ29udGV4dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0XG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0IHR5cGUge0lQZXJmb3JtYW5jZUxvZ2dlcn0gZnJvbSAnLi9jcmVhdGVQZXJmb3JtYW5jZUxvZ2dlcic7XG5cbmltcG9ydCBHbG9iYWxQZXJmb3JtYW5jZUxvZ2dlciBmcm9tICcuL0dsb2JhbFBlcmZvcm1hbmNlTG9nZ2VyJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7dXNlQ29udGV4dH0gZnJvbSAncmVhY3QnO1xuXG4vKipcbiAqIFRoaXMgaXMgYSBSZWFjdCBDb250ZXh0IHRoYXQgcHJvdmlkZXMgYSBzY29wZWQgaW5zdGFuY2Ugb2YgSVBlcmZvcm1hbmNlTG9nZ2VyLlxuICogV2Ugd3JhcCBldmVyeSA8QXBwQ29udGFpbmVyIC8+IHdpdGggYSBQcm92aWRlciBmb3IgdGhpcyBjb250ZXh0IHNvIHRoZSBsb2dnZXJcbiAqIHNob3VsZCBiZSBhdmFpbGFibGUgaW4gZXZlcnkgY29tcG9uZW50LlxuICogU2VlIFJlYWN0IGRvY3MgYWJvdXQgdXNpbmcgQ29udGV4dDogaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2NvbnRleHQuaHRtbFxuICovXG5jb25zdCBQZXJmb3JtYW5jZUxvZ2dlckNvbnRleHQ6IFJlYWN0LkNvbnRleHQ8SVBlcmZvcm1hbmNlTG9nZ2VyPiA9XG4gIFJlYWN0LmNyZWF0ZUNvbnRleHQoR2xvYmFsUGVyZm9ybWFuY2VMb2dnZXIpO1xuaWYgKF9fREVWX18pIHtcbiAgUGVyZm9ybWFuY2VMb2dnZXJDb250ZXh0LmRpc3BsYXlOYW1lID0gJ1BlcmZvcm1hbmNlTG9nZ2VyQ29udGV4dCc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VQZXJmb3JtYW5jZUxvZ2dlcigpOiBJUGVyZm9ybWFuY2VMb2dnZXIge1xuICByZXR1cm4gdXNlQ29udGV4dChQZXJmb3JtYW5jZUxvZ2dlckNvbnRleHQpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBQZXJmb3JtYW5jZUxvZ2dlckNvbnRleHQ7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBWUEsSUFBQUEsd0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUYsT0FBQTtBQUErQixJQUFBRyxLQUFBLEdBQUFGLE1BQUE7QUFBQSxTQUFBQyx3QkFBQUUsQ0FBQSxFQUFBQyxDQUFBLDZCQUFBQyxPQUFBLE1BQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUosdUJBQUEsWUFBQUEsd0JBQUFFLENBQUEsRUFBQUMsQ0FBQSxTQUFBQSxDQUFBLElBQUFELENBQUEsSUFBQUEsQ0FBQSxDQUFBSyxVQUFBLFNBQUFMLENBQUEsTUFBQU0sQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsS0FBQUMsU0FBQSxRQUFBQyxPQUFBLEVBQUFWLENBQUEsaUJBQUFBLENBQUEsdUJBQUFBLENBQUEseUJBQUFBLENBQUEsU0FBQVEsQ0FBQSxNQUFBRixDQUFBLEdBQUFMLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLFFBQUFHLENBQUEsQ0FBQUssR0FBQSxDQUFBWCxDQUFBLFVBQUFNLENBQUEsQ0FBQU0sR0FBQSxDQUFBWixDQUFBLEdBQUFNLENBQUEsQ0FBQU8sR0FBQSxDQUFBYixDQUFBLEVBQUFRLENBQUEsY0FBQU0sRUFBQSxJQUFBZCxDQUFBLGdCQUFBYyxFQUFBLE9BQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBaEIsQ0FBQSxFQUFBYyxFQUFBLE9BQUFQLENBQUEsSUFBQUQsQ0FBQSxHQUFBVyxNQUFBLENBQUFDLGNBQUEsS0FBQUQsTUFBQSxDQUFBRSx3QkFBQSxDQUFBbkIsQ0FBQSxFQUFBYyxFQUFBLE9BQUFQLENBQUEsQ0FBQUssR0FBQSxJQUFBTCxDQUFBLENBQUFNLEdBQUEsSUFBQVAsQ0FBQSxDQUFBRSxDQUFBLEVBQUFNLEVBQUEsRUFBQVAsQ0FBQSxJQUFBQyxDQUFBLENBQUFNLEVBQUEsSUFBQWQsQ0FBQSxDQUFBYyxFQUFBLFdBQUFOLENBQUEsS0FBQVIsQ0FBQSxFQUFBQyxDQUFBO0FBUy9CLElBQU1tQix3QkFBMkQsR0FDL0RyQixLQUFLLENBQUNzQixhQUFhLENBQUNDLGdDQUF1QixDQUFDO0FBQzlDLElBQUlDLE9BQU8sRUFBRTtFQUNYSCx3QkFBd0IsQ0FBQ0ksV0FBVyxHQUFHLDBCQUEwQjtBQUNuRTtBQUVPLFNBQVNDLG9CQUFvQkEsQ0FBQSxFQUF1QjtFQUN6RCxPQUFPLElBQUFDLGlCQUFVLEVBQUNOLHdCQUF3QixDQUFDO0FBQzdDO0FBQUMsSUFBQU8sUUFBQSxHQUFBQyxPQUFBLENBQUFsQixPQUFBLEdBRWNVLHdCQUF3QiIsImlnbm9yZUxpc3QiOltdfQ==