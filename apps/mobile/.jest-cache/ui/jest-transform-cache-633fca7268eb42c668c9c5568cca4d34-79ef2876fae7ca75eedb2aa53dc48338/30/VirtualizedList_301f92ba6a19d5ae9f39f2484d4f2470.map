{"version":3,"names":["_reactNative","require","_Batchinator","_interopRequireDefault","_clamp","_infoLog","_CellRenderMask","_ChildListCollection","_FillRateHelper","_StateSafePureComponent","_ViewabilityHelper","_VirtualizedListCellRenderer","_VirtualizedListContext","_VirtualizeUtils","_invariant","_nullthrows","React","_interopRequireWildcard","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","_callSuper","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","ON_EDGE_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onStartReachedThresholdOrDefault","onStartReachedThreshold","onEndReachedThresholdOrDefault","onEndReachedThreshold","getScrollingThreshold","threshold","visibleLength","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","findLastWhere","arr","predicate","VirtualizedList","_StateSafePureCompone","props","_this$props$updateCel","_this$props$maintainV","_this$props$maintainV2","_this","_classCallCheck2","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_registerAsNestedChild","childList","_nestedChildLists","add","ref","cellKey","_hasInteracted","recordInteraction","_unregisterAsNestedChild","remove","_onUpdateSeparators","newProps","key","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_averageCellLength","_frames","_footerLength","_hasTriggeredInitialScrollToIndex","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","Map","_lastFocusedCellKey","ChildListCollection","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","zoomScale","_scrollRef","_sentStartForContentLength","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","jsx","View","_props$refreshing","invariant","refreshing","JSON","stringify","ScrollView","refreshControl","RefreshControl","progressViewOffset","_onCellLayout","index","layout","nativeEvent","next","_selectOffset","_selectLength","inLayout","curr","Math","max","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_updateViewableItems","state","cellsAroundViewport","_onCellUnmount","_onLayout","measureLayoutRelativeToContainingList","onLayout","_maybeCallOnEdgeReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","getItemCount","data","scrollToIndex","animated","nullthrows","scrollToEnd","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_this$_convertParentS","perf","infoLog","prevDt","pendingScrollUpdateCount","setState","_fillRateHelper","activate","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","_adjustCellsAroundViewport","renderMask","_createRenderMask","_getNonViewportRenderRegions","first","last","equals","_createViewToken","isViewable","getItem","item","_keyExtractor","_getOffsetApprox","Number","isInteger","__getFrameMetricsApprox","frameMetrics","floor","remainder","frame","_getFrameMetrics","getItemLayout","_getItemKey","lastFocusedCellRenderer","focusedCellIndex","itemCount","heightOfCellsBeforeFocused","heightOfCellsAfterFocused","_checkProps","FillRateHelper","_updateCellsToRenderBatcher","Batchinator","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","ViewabilityHelper","viewabilityConfig","onViewableItemsChanged","_this$props","initialRenderRegion","_initialRenderRegion","minIndexForVisible","maintainVisibleContentPosition","firstVisibleItemKey","_inherits2","_createClass2","value","params","veryLast","scrollTo","console","warn","x","y","_this$props2","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","scrollToItem","_this$props3","scrollToOffset","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","_getCellKey","_this$context","hasMore","__isNative","__DEV__","flexWrap","flatStyles","StyleSheet","flatten","contentContainerStyle","_this$_scrollMetrics","distanceFromEnd","_constrainToItemCount","newCellsAroundViewport","disableVirtualization","renderAhead","min","computeWindowedRenderLimits","size","childIdx","_findFirstChildWithMore","ii","cellKeyForIndex","anyInCell","componentDidMount","registerAsNestedChild","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this2","_this$props4","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","prevCellKey","_loop","shouldListenForLayout","enabled","undefined","onUpdateSeparators","onCellFocusCapture","_onCellFocusCapture","onUnmount","onCellLayout","nestedContext","render","_this3","_this$props5","ListEmptyComponent","ListFooterComponent","_this$props6","inverted","styles","horizontallyInverted","verticallyInverted","Set","element","isValidElement","VirtualizedListCellContextProvider","children","collapsable","style","compose","ListHeaderComponentStyle","cloneElement","event","spacerKey","renderRegions","enumerateRegions","lastSpacer","isSpacer","section","isLastSpacer","constrainToMeasured","clamp","firstMetrics","lastMetrics","spacerSize","ListFooterComponentStyle","scrollProps","invertStickyHeaders","isInvertedVirtualizedList","innerRet","VirtualizedListContextProvider","getScrollMetrics","renderScrollComponent","ret","Context","Consumer","scrollContext","nesting","scrollEnabled","error","jsxs","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props7","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","forEachInCell","_this4","measureLayout","scrollMetrics","metricsChanged","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props8","onStartReached","onEndReached","_this$_scrollMetrics2","distanceFromStart","DEFAULT_THRESHOLD_PX","startThreshold","endThreshold","isWithinStartThreshold","isWithinEndThreshold","_this$state$cellsArou","_this$_scrollMetrics3","hiPri","distTop","distBottom","schedule","_this5","onUpdate","_findItemIndexWithKey","hint","curKey","additionalRegions","CellRenderMask","allRegions","concat","_toConsumableArray2","region","addCells","initialRegion","stickyIndicesSet","_ensureClosestStickyHeader","_props$initialScrollI","firstCellIndex","lastCellIndex","cellIdx","itemIdx","getDerivedStateFromProps","prevState","_newProps$maintainVis","_newProps$maintainVis2","numCells","maintainVisibleContentPositionAdjustment","prevFirstVisibleItemKey","newFirstVisibleItemKey","firstVisibleItemIndex","constrainedCells","keyExtractor","defaultKeyExtractor","String","type","displayName","StateSafePureComponent","contextType","VirtualizedListContext","create","Platform","OS","transform","scale","scaleY","scaleX","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"sources":["VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {ScrollResponderType} from 'react-native/Libraries/Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {\n  LayoutEvent,\n  ScrollEvent,\n} from 'react-native/Libraries/Types/CoreEventTypes';\nimport type {ViewToken} from './ViewabilityHelper';\nimport type {\n  FrameMetricProps,\n  Item,\n  Props,\n  RenderItemProps,\n  RenderItemType,\n  Separators,\n} from './VirtualizedListProps';\n\nimport {\n  Platform,\n  RefreshControl,\n  ScrollView,\n  View,\n  StyleSheet,\n  findNodeHandle,\n} from 'react-native';\nimport Batchinator from '../Interaction/Batchinator';\nimport clamp from '../Utilities/clamp';\nimport infoLog from '../Utilities/infoLog';\nimport {CellRenderMask} from './CellRenderMask';\nimport ChildListCollection from './ChildListCollection';\nimport FillRateHelper from './FillRateHelper';\nimport StateSafePureComponent from './StateSafePureComponent';\nimport ViewabilityHelper from './ViewabilityHelper';\nimport CellRenderer from './VirtualizedListCellRenderer';\nimport {\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n} from './VirtualizedListContext.js';\nimport {\n  computeWindowedRenderLimits,\n  keyExtractor as defaultKeyExtractor,\n} from './VirtualizeUtils';\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\n\nexport type {RenderItemProps, RenderItemType, Separators};\n\nconst ON_EDGE_REACHED_EPSILON = 0.001;\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype State = {\n  renderMask: CellRenderMask,\n  cellsAroundViewport: {first: number, last: number},\n  // Used to track items added at the start of the list for maintainVisibleContentPosition.\n  firstVisibleItemKey: ?string,\n  // When > 0 the scroll position available in JS is considered stale and should not be used.\n  pendingScrollUpdateCount: number,\n};\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal: ?boolean) {\n  return horizontal ?? false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRender)\nfunction initialNumToRenderOrDefault(initialNumToRender: ?number) {\n  return initialNumToRender ?? 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch: ?number) {\n  return maxToRenderPerBatch ?? 10;\n}\n\n// onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold)\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold: ?number) {\n  return onStartReachedThreshold ?? 2;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold: ?number) {\n  return onEndReachedThreshold ?? 2;\n}\n\n// getScrollingThreshold(visibleLength, onEndReachedThreshold)\nfunction getScrollingThreshold(threshold: number, visibleLength: number) {\n  return (threshold * visibleLength) / 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle: ?number) {\n  return scrollEventThrottle ?? 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize: ?number) {\n  return windowSize ?? 21;\n}\n\nfunction findLastWhere<T>(\n  arr: $ReadOnlyArray<T>,\n  predicate: (element: T) => boolean,\n): T | null {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n\n  return null;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends StateSafePureComponent<Props, State> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    if (veryLast < 0) {\n      return;\n    }\n    const frame = this.__getFrameMetricsApprox(veryLast, this.props);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }): $FlowFixMe {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${\n        getItemCount(data) - 1\n      }`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n    const offset =\n      Math.max(\n        0,\n        this._getOffsetApprox(index, this.props) -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.add(childList.ref, childList.cellKey);\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.remove(childList.ref);\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this._checkProps(props);\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod ?? 50,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else {\n      const {onViewableItemsChanged, viewabilityConfig} = this.props;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged,\n        });\n      }\n    }\n\n    const initialRenderRegion = VirtualizedList._initialRenderRegion(props);\n\n    const minIndexForVisible =\n      this.props.maintainVisibleContentPosition?.minIndexForVisible ?? 0;\n\n    this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(props, initialRenderRegion),\n      firstVisibleItemKey:\n        this.props.getItemCount(this.props.data) > minIndexForVisible\n          ? VirtualizedList._getItemKey(this.props, minIndexForVisible)\n          : null,\n      // When we have a non-zero initialScrollIndex, we will receive a\n      // scroll event later so this will prevent the window from updating\n      // until we get a valid offset.\n      pendingScrollUpdateCount:\n        this.props.initialScrollIndex != null &&\n        this.props.initialScrollIndex > 0\n          ? 1\n          : 0,\n    };\n  }\n\n  _checkProps(props: Props) {\n    const {onScroll, windowSize, getItemCount, data, initialScrollIndex} =\n      props;\n\n    invariant(\n      // $FlowFixMe[prop-missing]\n      !onScroll || !onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n    invariant(\n      windowSizeOrDefault(windowSize) > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    invariant(\n      getItemCount,\n      'VirtualizedList: The \"getItemCount\" prop must be provided',\n    );\n\n    const itemCount = getItemCount(data);\n\n    if (\n      initialScrollIndex != null &&\n      !this._hasTriggeredInitialScrollToIndex &&\n      (initialScrollIndex < 0 ||\n        (itemCount > 0 && initialScrollIndex >= itemCount)) &&\n      !this._hasWarned.initialScrollIndex\n    ) {\n      console.warn(\n        `initialScrollIndex \"${initialScrollIndex}\" is not valid (list has ${itemCount} items)`,\n      );\n      this._hasWarned.initialScrollIndex = true;\n    }\n\n    if (__DEV__ && !this._hasWarned.flexWrap) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      const flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n        this._hasWarned.flexWrap = true;\n      }\n    }\n  }\n\n  static _findItemIndexWithKey(\n    props: Props,\n    key: string,\n    hint: ?number,\n  ): ?number {\n    const itemCount = props.getItemCount(props.data);\n    if (hint != null && hint >= 0 && hint < itemCount) {\n      const curKey = VirtualizedList._getItemKey(props, hint);\n      if (curKey === key) {\n        return hint;\n      }\n    }\n    for (let ii = 0; ii < itemCount; ii++) {\n      const curKey = VirtualizedList._getItemKey(props, ii);\n      if (curKey === key) {\n        return ii;\n      }\n    }\n    return null;\n  }\n\n  static _getItemKey(\n    props: {\n      data: Props['data'],\n      getItem: Props['getItem'],\n      keyExtractor: Props['keyExtractor'],\n      ...\n    },\n    index: number,\n  ): string {\n    const item = props.getItem(props.data, index);\n    return VirtualizedList._keyExtractor(item, index, props);\n  }\n\n  static _createRenderMask(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    additionalRegions?: ?$ReadOnlyArray<{first: number, last: number}>,\n  ): CellRenderMask {\n    const itemCount = props.getItemCount(props.data);\n\n    invariant(\n      cellsAroundViewport.first >= 0 &&\n        cellsAroundViewport.last >= cellsAroundViewport.first - 1 &&\n        cellsAroundViewport.last < itemCount,\n      `Invalid cells around viewport \"[${cellsAroundViewport.first}, ${cellsAroundViewport.last}]\" was passed to VirtualizedList._createRenderMask`,\n    );\n\n    const renderMask = new CellRenderMask(itemCount);\n\n    if (itemCount > 0) {\n      const allRegions = [cellsAroundViewport, ...(additionalRegions ?? [])];\n      for (const region of allRegions) {\n        renderMask.addCells(region);\n      }\n\n      // The initially rendered cells are retained as part of the\n      // \"scroll-to-top\" optimization\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n        const initialRegion = VirtualizedList._initialRenderRegion(props);\n        renderMask.addCells(initialRegion);\n      }\n\n      // The layout coordinates of sticker headers may be off-screen while the\n      // actual header is on-screen. Keep the most recent before the viewport\n      // rendered, even if its layout coordinates are not in viewport.\n      const stickyIndicesSet = new Set(props.stickyHeaderIndices);\n      VirtualizedList._ensureClosestStickyHeader(\n        props,\n        stickyIndicesSet,\n        renderMask,\n        cellsAroundViewport.first,\n      );\n    }\n\n    return renderMask;\n  }\n\n  static _initialRenderRegion(props: Props): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n\n    const firstCellIndex = Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(props.initialScrollIndex ?? 0)),\n    );\n\n    const lastCellIndex =\n      Math.min(\n        itemCount,\n        firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender),\n      ) - 1;\n\n    return {\n      first: firstCellIndex,\n      last: lastCellIndex,\n    };\n  }\n\n  static _ensureClosestStickyHeader(\n    props: Props,\n    stickyIndicesSet: Set<number>,\n    renderMask: CellRenderMask,\n    cellIdx: number,\n  ) {\n    const stickyOffset = props.ListHeaderComponent ? 1 : 0;\n\n    for (let itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n        renderMask.addCells({first: itemIdx, last: itemIdx});\n        break;\n      }\n    }\n  }\n\n  _adjustCellsAroundViewport(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    pendingScrollUpdateCount: number,\n  ): {first: number, last: number} {\n    const {data, getItemCount} = props;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      props.onEndReachedThreshold,\n    );\n    const {contentLength, offset, visibleLength} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Wait until the scroll view metrics have been set up. And until then,\n    // we will trust the initialNumToRender suggestion\n    if (visibleLength <= 0 || contentLength <= 0) {\n      return cellsAroundViewport.last >= getItemCount(data)\n        ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n        : cellsAroundViewport;\n    }\n\n    let newCellsAroundViewport: {first: number, last: number};\n    if (props.disableVirtualization) {\n      const renderAhead =\n        distanceFromEnd < onEndReachedThreshold * visibleLength\n          ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch)\n          : 0;\n\n      newCellsAroundViewport = {\n        first: 0,\n        last: Math.min(\n          cellsAroundViewport.last + renderAhead,\n          getItemCount(data) - 1,\n        ),\n      };\n    } else {\n      // If we have a pending scroll update, we should not adjust the render window as it\n      // might override the correct window.\n      if (pendingScrollUpdateCount > 0) {\n        return cellsAroundViewport.last >= getItemCount(data)\n          ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n          : cellsAroundViewport;\n      }\n\n      newCellsAroundViewport = computeWindowedRenderLimits(\n        props,\n        maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch),\n        windowSizeOrDefault(props.windowSize),\n        cellsAroundViewport,\n        this.__getFrameMetricsApprox,\n        this._scrollMetrics,\n      );\n      invariant(\n        newCellsAroundViewport.last < getItemCount(data),\n        'computeWindowedRenderLimits() should return range in-bounds',\n      );\n    }\n\n    if (this._nestedChildLists.size() > 0) {\n      // If some cell in the new state has a child list in it, we should only render\n      // up through that item, so that we give that list a chance to render.\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\n      // their items.\n\n      // Will this prevent rendering if the nested list doesn't realize the end?\n      const childIdx = this._findFirstChildWithMore(\n        newCellsAroundViewport.first,\n        newCellsAroundViewport.last,\n      );\n\n      newCellsAroundViewport.last = childIdx ?? newCellsAroundViewport.last;\n    }\n\n    return newCellsAroundViewport;\n  }\n\n  _findFirstChildWithMore(first: number, last: number): number | null {\n    for (let ii = first; ii <= last; ii++) {\n      const cellKeyForIndex = this._indicesToKeys.get(ii);\n      if (\n        cellKeyForIndex != null &&\n        this._nestedChildLists.anyInCell(cellKeyForIndex, childList =>\n          childList.hasMore(),\n        )\n      ) {\n        return ii;\n      }\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        ref: this,\n        cellKey: this.context.cellKey,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({ref: this});\n    }\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    const itemCount = newProps.getItemCount(newProps.data);\n    if (itemCount === prevState.renderMask.numCells()) {\n      return prevState;\n    }\n\n    let maintainVisibleContentPositionAdjustment: ?number = null;\n    const prevFirstVisibleItemKey = prevState.firstVisibleItemKey;\n    const minIndexForVisible =\n      newProps.maintainVisibleContentPosition?.minIndexForVisible ?? 0;\n    const newFirstVisibleItemKey =\n      newProps.getItemCount(newProps.data) > minIndexForVisible\n        ? VirtualizedList._getItemKey(newProps, minIndexForVisible)\n        : null;\n    if (\n      newProps.maintainVisibleContentPosition != null &&\n      prevFirstVisibleItemKey != null &&\n      newFirstVisibleItemKey != null\n    ) {\n      if (newFirstVisibleItemKey !== prevFirstVisibleItemKey) {\n        // Fast path if items were added at the start of the list.\n        const hint =\n          itemCount - prevState.renderMask.numCells() + minIndexForVisible;\n        const firstVisibleItemIndex = VirtualizedList._findItemIndexWithKey(\n          newProps,\n          prevFirstVisibleItemKey,\n          hint,\n        );\n        maintainVisibleContentPositionAdjustment =\n          firstVisibleItemIndex != null\n            ? firstVisibleItemIndex - minIndexForVisible\n            : null;\n      } else {\n        maintainVisibleContentPositionAdjustment = null;\n      }\n    }\n\n    const constrainedCells = VirtualizedList._constrainToItemCount(\n      maintainVisibleContentPositionAdjustment != null\n        ? {\n            first:\n              prevState.cellsAroundViewport.first +\n              maintainVisibleContentPositionAdjustment,\n            last:\n              prevState.cellsAroundViewport.last +\n              maintainVisibleContentPositionAdjustment,\n          }\n        : prevState.cellsAroundViewport,\n      newProps,\n    );\n\n    return {\n      cellsAroundViewport: constrainedCells,\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells),\n      firstVisibleItemKey: newFirstVisibleItemKey,\n      pendingScrollUpdateCount:\n        maintainVisibleContentPositionAdjustment != null\n          ? prevState.pendingScrollUpdateCount + 1\n          : prevState.pendingScrollUpdateCount,\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      ListHeaderComponent,\n      ListItemComponent,\n      data,\n      debug,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      horizontal,\n      renderItem,\n    } = this.props;\n    const stickyOffset = ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = VirtualizedList._keyExtractor(item, ii, this.props);\n\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      const shouldListenForLayout =\n        getItemLayout == null || debug || this._fillRateHelper.enabled();\n\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          ListItemComponent={ListItemComponent}\n          cellKey={key}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onCellFocusCapture={e => this._onCellFocusCapture(key)}\n          onUnmount={this._onCellUnmount}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n          renderItem={renderItem}\n          {...(shouldListenForLayout && {\n            onCellLayout: this._onCellLayout,\n          })}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  static _constrainToItemCount(\n    cells: {first: number, last: number},\n    props: Props,\n  ): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n    const last = Math.min(itemCount - 1, cells.last);\n\n    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(\n      props.maxToRenderPerBatch,\n    );\n\n    return {\n      first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n      last,\n    };\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext &&\n      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)\n    );\n  }\n\n  _getSpacerKey = (isVertical: boolean): string =>\n    isVertical ? 'height' : 'width';\n\n  static _keyExtractor(\n    item: Item,\n    index: number,\n    props: {\n      keyExtractor?: ?(item: Item, index: number) => string,\n      ...\n    },\n  ): string {\n    if (props.keyExtractor != null) {\n      return props.keyExtractor(item, index);\n    }\n\n    const key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n\n  render(): React.Node {\n    this._checkProps(this.props);\n    const {ListEmptyComponent, ListFooterComponent, ListHeaderComponent} =\n      this.props;\n    const {data, horizontal} = this.props;\n    const inversionStyle = this.props.inverted\n      ? horizontalOrDefault(this.props.horizontal)\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells: Array<any | React.Node> = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n\n    // 1. Add cell for ListHeaderComponent\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            // We expect that header component will be a single native view so make it\n            // not collapsable to avoid this view being flattened and make this assumption\n            // no longer true.\n            collapsable={false}\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2a. Add a cell for ListEmptyComponent if applicable\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount === 0 && ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-empty'}\n          key=\"$empty\">\n          {React.cloneElement(element, {\n            onLayout: (event: LayoutEvent) => {\n              this._onLayoutEmpty(event);\n              if (element.props.onLayout) {\n                element.props.onLayout(event);\n              }\n            },\n            style: StyleSheet.compose(inversionStyle, element.props.style),\n          })}\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2b. Add cells and spacers for each item\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = this._getSpacerKey(!horizontal);\n\n      const renderRegions = this.state.renderMask.enumerateRegions();\n      const lastSpacer = findLastWhere(renderRegions, r => r.isSpacer);\n\n      for (const section of renderRegions) {\n        if (section.isSpacer) {\n          // Legacy behavior is to avoid spacers when virtualization is\n          // disabled (including head spacers on initial render).\n          if (this.props.disableVirtualization) {\n            continue;\n          }\n\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\n          // likely jump around as it renders in above the viewport.\n          const isLastSpacer = section === lastSpacer;\n          const constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n          const last = constrainToMeasured\n            ? clamp(\n                section.first - 1,\n                section.last,\n                this._highestMeasuredFrameIndex,\n              )\n            : section.last;\n\n          const firstMetrics = this.__getFrameMetricsApprox(\n            section.first,\n            this.props,\n          );\n          const lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n          const spacerSize =\n            lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n          cells.push(\n            <View\n              key={`$spacer-${section.first}`}\n              style={{[spacerKey]: spacerSize}}\n            />,\n          );\n        } else {\n          this._pushCells(\n            cells,\n            stickyHeaderIndices,\n            stickyIndicesFromProps,\n            section.first,\n            section.last,\n            inversionStyle,\n          );\n        }\n      }\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n    }\n\n    // 3. Add cell for ListFooterComponent\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 4. Render the ScrollView\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(\n        this.props.scrollEventThrottle,\n      ), // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n      isInvertedVirtualizedList: this.props.inverted,\n      maintainVisibleContentPosition:\n        this.props.maintainVisibleContentPosition != null\n          ? {\n              ...this.props.maintainVisibleContentPosition,\n              // Adjust index to account for ListHeaderComponent.\n              minIndexForVisible:\n                this.props.maintainVisibleContentPosition.minIndexForVisible +\n                (this.props.ListHeaderComponent ? 1 : 0),\n            }\n          : undefined,\n    };\n\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret: React.Node = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null &&\n              this.props.scrollEnabled !== false\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  _cellRefs: {[string]: null | CellRenderer<any>} = {};\n  _fillRateHelper: FillRateHelper;\n  _frames: {\n    [string]: {\n      inLayout?: boolean,\n      index: number,\n      length: number,\n      offset: number,\n    },\n  } = {};\n  _footerLength = 0;\n  // Used for preventing scrollToIndex from being called multiple times for initialScrollIndex\n  _hasTriggeredInitialScrollToIndex = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned: {[string]: boolean} = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _lastFocusedCellKey: ?string = null;\n  _nestedChildLists: ChildListCollection<VirtualizedList> =\n    new ChildListCollection();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  // $FlowFixMe[missing-local-annot]\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n    zoomScale: 1,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentStartForContentLength = 0;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state.cellsAroundViewport,\n      this._scrollMetrics,\n    );\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing ?? 'undefined') +\n          '`',\n      );\n      return (\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        // $FlowFixMe[incompatible-use]\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                // $FlowFixMe[incompatible-type]\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe[prop-missing] Invalid prop usage\n      // $FlowFixMe[incompatible-use]\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout = (e: LayoutEvent, cellKey: string, index: number): void => {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  };\n\n  _onCellFocusCapture(cellKey: string) {\n    this._lastFocusedCellKey = cellKey;\n    this._updateCellsToRender();\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    delete this._cellRefs[cellKey];\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\n      childList.measureLayoutRelativeToContainingList();\n    });\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n\n          const metricsChanged =\n            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||\n            this._scrollMetrics.offset !== scrollMetrics.offset;\n\n          if (metricsChanged) {\n            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            this._scrollMetrics.offset = scrollMetrics.offset;\n\n            // If metrics of the scrollView changed, then we triggered remeasure for child list\n            // to ensure VirtualizedList has the right information.\n            this._nestedChildLists.forEach(childList => {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: LayoutEvent) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEdgeReached();\n  };\n\n  _onLayoutEmpty = (e: LayoutEvent) => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = (e: LayoutEvent) => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = (e: LayoutEvent) => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  // $FlowFixMe[missing-local-annot]\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this.__getFrameMetricsApprox(ii, this.props);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this.__getFrameMetricsApprox(\n      this.state.cellsAroundViewport.first,\n      this.props,\n    ).offset;\n    const frameLast = this.__getFrameMetricsApprox(\n      this.state.cellsAroundViewport.last,\n      this.props,\n    );\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal)\n      ? metrics.height\n      : metrics.width;\n  }\n\n  _selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEdgeReached() {\n    const {\n      data,\n      getItemCount,\n      onStartReached,\n      onStartReachedThreshold,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    // If we have any pending scroll updates it means that the scroll metrics\n    // are out of date and we should not call any of the edge reached callbacks.\n    if (this.state.pendingScrollUpdateCount > 0) {\n      return;\n    }\n\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    let distanceFromStart = offset;\n    let distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distance values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the edge of the list with a distance approximating 0 but not quite there.\n    if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n      distanceFromStart = 0;\n    }\n    if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2px\n    // when oERT is not present (different from 2 viewports used elsewhere)\n    const DEFAULT_THRESHOLD_PX = 2;\n\n    const startThreshold =\n      onStartReachedThreshold != null\n        ? onStartReachedThreshold * visibleLength\n        : DEFAULT_THRESHOLD_PX;\n    const endThreshold =\n      onEndReachedThreshold != null\n        ? onEndReachedThreshold * visibleLength\n        : DEFAULT_THRESHOLD_PX;\n    const isWithinStartThreshold = distanceFromStart <= startThreshold;\n    const isWithinEndThreshold = distanceFromEnd <= endThreshold;\n\n    // First check if the user just scrolled within the end threshold\n    // and call onEndReached only once for a given content length,\n    // and only if onStartReached is not being executed\n    if (\n      onEndReached &&\n      this.state.cellsAroundViewport.last === getItemCount(data) - 1 &&\n      isWithinEndThreshold &&\n      this._scrollMetrics.contentLength !== this._sentEndForContentLength\n    ) {\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    }\n\n    // Next check if the user just scrolled within the start threshold\n    // and call onStartReached only once for a given content length,\n    // and only if onEndReached is not being executed\n    else if (\n      onStartReached != null &&\n      this.state.cellsAroundViewport.first === 0 &&\n      isWithinStartThreshold &&\n      this._scrollMetrics.contentLength !== this._sentStartForContentLength\n    ) {\n      this._sentStartForContentLength = this._scrollMetrics.contentLength;\n      onStartReached({distanceFromStart});\n    }\n\n    // If the user scrolls away from the start or end and back again,\n    // cause onStartReached or onEndReached to be triggered again\n    else {\n      this._sentStartForContentLength = isWithinStartThreshold\n        ? this._sentStartForContentLength\n        : 0;\n      this._sentEndForContentLength = isWithinEndThreshold\n        ? this._sentEndForContentLength\n        : 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasTriggeredInitialScrollToIndex\n    ) {\n      if (this.props.contentOffset == null) {\n        if (\n          this.props.initialScrollIndex <\n          this.props.getItemCount(this.props.data)\n        ) {\n          this.scrollToIndex({\n            animated: false,\n            index: nullthrows(this.props.initialScrollIndex),\n          });\n        } else {\n          this.scrollToEnd({animated: false});\n        }\n      }\n      this._hasTriggeredInitialScrollToIndex = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEdgeReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }): $FlowFixMe => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({visibleLength, contentLength, offset, dOffset} =\n        this._convertParentScrollMetrics({\n          visibleLength,\n          offset,\n        }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n\n    // For invalid negative values (w/ RTL), set this to 1.\n    const zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n      zoomScale,\n    };\n    if (this.state.pendingScrollUpdateCount > 0) {\n      this.setState(state => ({\n        pendingScrollUpdateCount: state.pendingScrollUpdateCount - 1,\n      }));\n    }\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEdgeReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state.cellsAroundViewport;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const onStartReachedThreshold = onStartReachedThresholdOrDefault(\n      this.props.onStartReachedThreshold,\n    );\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      this.props.onEndReachedThreshold,\n    );\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop =\n        offset - this.__getFrameMetricsApprox(first, this.props).offset;\n      hiPri =\n        distTop < 0 ||\n        (velocity < -2 &&\n          distTop <\n            getScrollingThreshold(onStartReachedThreshold, visibleLength));\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (!hiPri && last >= 0 && last < itemCount - 1) {\n      const distBottom =\n        this.__getFrameMetricsApprox(last, this.props).offset -\n        (offset + visibleLength);\n      hiPri =\n        distBottom < 0 ||\n        (velocity > 2 &&\n          distBottom <\n            getScrollingThreshold(onEndReachedThreshold, visibleLength));\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollEndDrag(e);\n    });\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollBegin = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollBegin(e);\n    });\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  _onMomentumScrollEnd = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollEnd(e);\n    });\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n\n    this.setState((state, props) => {\n      const cellsAroundViewport = this._adjustCellsAroundViewport(\n        props,\n        state.cellsAroundViewport,\n        state.pendingScrollUpdateCount,\n      );\n      const renderMask = VirtualizedList._createRenderMask(\n        props,\n        cellsAroundViewport,\n        this._getNonViewportRenderRegions(props),\n      );\n\n      if (\n        cellsAroundViewport.first === state.cellsAroundViewport.first &&\n        cellsAroundViewport.last === state.cellsAroundViewport.last &&\n        renderMask.equals(state.renderMask)\n      ) {\n        return null;\n      }\n\n      return {cellsAroundViewport, renderMask};\n    });\n  };\n\n  _createViewToken = (\n    index: number,\n    isViewable: boolean,\n    props: FrameMetricProps,\n    // $FlowFixMe[missing-local-annot]\n  ) => {\n    const {data, getItem} = props;\n    const item = getItem(data, index);\n    return {\n      index,\n      item,\n      key: VirtualizedList._keyExtractor(item, index, props),\n      isViewable,\n    };\n  };\n\n  /**\n   * Gets an approximate offset to an item at a given index. Supports\n   * fractional indices.\n   */\n  _getOffsetApprox = (index: number, props: FrameMetricProps): number => {\n    if (Number.isInteger(index)) {\n      return this.__getFrameMetricsApprox(index, props).offset;\n    } else {\n      const frameMetrics = this.__getFrameMetricsApprox(\n        Math.floor(index),\n        props,\n      );\n      const remainder = index - Math.floor(index);\n      return frameMetrics.offset + remainder * frameMetrics.length;\n    }\n  };\n\n  __getFrameMetricsApprox: (\n    index: number,\n    props: FrameMetricProps,\n  ) => {\n    length: number,\n    offset: number,\n    ...\n  } = (index, props) => {\n    const frame = this._getFrameMetrics(index, props);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {data, getItemCount, getItemLayout} = props;\n      invariant(\n        index >= 0 && index < getItemCount(data),\n        'Tried to get frame for out of range index ' + index,\n      );\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n    props: FrameMetricProps,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n    ...\n  } => {\n    const {data, getItemCount, getItemLayout} = props;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      'Tried to get frame for out of range index ' + index,\n    );\n    const frame = this._frames[VirtualizedList._getItemKey(props, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n         * suppresses an error found when Flow v0.63 was deployed. To see the error\n         * delete this comment and run Flow. */\n        return getItemLayout(data, index);\n      }\n    }\n    return frame;\n  };\n\n  _getNonViewportRenderRegions = (\n    props: FrameMetricProps,\n  ): $ReadOnlyArray<{\n    first: number,\n    last: number,\n  }> => {\n    // Keep a viewport's worth of content around the last focused cell to allow\n    // random navigation around it without any blanking. E.g. tabbing from one\n    // focused item out of viewport to another.\n    if (\n      !(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])\n    ) {\n      return [];\n    }\n\n    const lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\n    const focusedCellIndex = lastFocusedCellRenderer.props.index;\n    const itemCount = props.getItemCount(props.data);\n\n    // The last cell we rendered may be at a new index. Bail if we don't know\n    // where it is.\n    if (\n      focusedCellIndex >= itemCount ||\n      VirtualizedList._getItemKey(props, focusedCellIndex) !==\n        this._lastFocusedCellKey\n    ) {\n      return [];\n    }\n\n    let first = focusedCellIndex;\n    let heightOfCellsBeforeFocused = 0;\n    for (\n      let i = first - 1;\n      i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength;\n      i--\n    ) {\n      first--;\n      heightOfCellsBeforeFocused += this.__getFrameMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    let last = focusedCellIndex;\n    let heightOfCellsAfterFocused = 0;\n    for (\n      let i = last + 1;\n      i < itemCount &&\n      heightOfCellsAfterFocused < this._scrollMetrics.visibleLength;\n      i++\n    ) {\n      last++;\n      heightOfCellsAfterFocused += this.__getFrameMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    return [{first, last}];\n  };\n\n  _updateViewableItems(\n    props: FrameMetricProps,\n    cellsAroundViewport: {first: number, last: number},\n  ) {\n    // If we have any pending scroll updates it means that the scroll metrics\n    // are out of date and we should not call any of the visibility callbacks.\n    if (this.state.pendingScrollUpdateCount > 0) {\n      return;\n    }\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        props,\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        cellsAroundViewport,\n      );\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted:\n    Platform.OS === 'android'\n      ? {transform: [{scale: -1}]}\n      : {transform: [{scaleY: -1}]},\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"],"mappings":"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","ignoreList":[]}