{"version":3,"names":["_getJestObj","mock","logger","error","jest","fn","info","__esModule","default","getCategories","mockGetCategories","getLeaderboard","mockGetLeaderboard","getUserRank","mockGetUserRank","_interopRequireDefault","require","_toConsumableArray2","_asyncToGenerator2","_reactNative","_useLeaderboard","_require","mockCategories","id","name","icon","mockLeaderboardEntries","userId","username","score","rank","avatar","mockUserRank","entry","describe","beforeEach","clearAllMocks","mockResolvedValue","entries","hasMore","it","_renderHook","renderHook","useLeaderboard","result","expect","current","loading","toBe","toEqual","selectedCategory","selectedPeriod","page","showFilters","_renderHook2","waitFor","toHaveBeenCalled","categories","userRank","userEntry","_renderHook3","toHaveBeenCalledWith","period","_renderHook4","mockClear","act","setSelectedCategory","category","any","Number","_renderHook5","setSelectedPeriod","_renderHook6","setShowFilters","_renderHook7","refreshData","refreshing","_renderHook8","refreshingDuringCall","mockImplementation","Promise","resolve","_renderHook9","moreEntries","loadMore","toHaveLength","_renderHook0","initialEntries","newEntry","concat","_renderHook1","not","_renderHook10","_renderHook11","newEntries","_renderHook12","_renderHook13","undefined","mockRejectedValue","Error","_renderHook14","_renderHook15","periods","_loop","objectContaining","_renderHook16","rerender","firstRefreshData","firstLoadMore","firstSetSelectedCategory"],"sources":["useLeaderboard.test.ts"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport { renderHook, act, waitFor } from \"@testing-library/react-native\";\nimport { useLeaderboard } from \"../useLeaderboard\";\n\n// Mock logger\njest.mock(\"@pawfectmatch/core\", () => ({\n  logger: {\n    error: jest.fn(),\n    info: jest.fn(),\n  },\n}));\n\n// Mock LeaderboardService\nconst mockGetCategories = jest.fn();\nconst mockGetLeaderboard = jest.fn();\nconst mockGetUserRank = jest.fn();\n\njest.mock(\"../../../../services/LeaderboardService\", () => ({\n  __esModule: true,\n  default: {\n    getCategories: mockGetCategories,\n    getLeaderboard: mockGetLeaderboard,\n    getUserRank: mockGetUserRank,\n  },\n}));\n\nconst mockCategories = [\n  { id: \"all\", name: \"All\", icon: \"🏆\" },\n  { id: \"matches\", name: \"Matches\", icon: \"💕\" },\n  { id: \"chats\", name: \"Chats\", icon: \"💬\" },\n];\n\nconst mockLeaderboardEntries = [\n  {\n    id: \"1\",\n    userId: \"user1\",\n    username: \"alice\",\n    score: 1000,\n    rank: 1,\n    avatar: \"avatar1.jpg\",\n  },\n  {\n    id: \"2\",\n    userId: \"user2\",\n    username: \"bob\",\n    score: 900,\n    rank: 2,\n    avatar: \"avatar2.jpg\",\n  },\n  {\n    id: \"3\",\n    userId: \"user3\",\n    username: \"charlie\",\n    score: 800,\n    rank: 3,\n    avatar: \"avatar3.jpg\",\n  },\n];\n\nconst mockUserRank = {\n  rank: 5,\n  entry: {\n    id: \"current\",\n    userId: \"currentUser\",\n    username: \"me\",\n    score: 600,\n    rank: 5,\n    avatar: \"myavatar.jpg\",\n  },\n};\n\ndescribe(\"useLeaderboard\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockGetCategories.mockResolvedValue(mockCategories);\n    mockGetLeaderboard.mockResolvedValue({\n      entries: mockLeaderboardEntries,\n      hasMore: true,\n    });\n    mockGetUserRank.mockResolvedValue(mockUserRank);\n  });\n\n  it(\"should initialize with default state\", () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    expect(result.current.loading).toBe(true);\n    expect(result.current.entries).toEqual([]);\n    expect(result.current.selectedCategory).toBe(\"all\");\n    expect(result.current.selectedPeriod).toBe(\"weekly\");\n    expect(result.current.page).toBe(1);\n    expect(result.current.showFilters).toBe(false);\n  });\n\n  it(\"should load initial data on mount\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    expect(mockGetCategories).toHaveBeenCalled();\n    expect(mockGetLeaderboard).toHaveBeenCalled();\n    expect(mockGetUserRank).toHaveBeenCalled();\n\n    expect(result.current.categories).toEqual(mockCategories);\n    expect(result.current.entries).toEqual(mockLeaderboardEntries);\n    expect(result.current.userRank).toBe(5);\n    expect(result.current.userEntry).toEqual(mockUserRank.entry);\n  });\n\n  it(\"should load leaderboard with default filter\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    expect(mockGetLeaderboard).toHaveBeenCalledWith(\n      { period: \"weekly\" },\n      1,\n      20,\n    );\n  });\n\n  it(\"should change selected category\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    mockGetLeaderboard.mockClear();\n\n    act(() => {\n      result.current.setSelectedCategory(\"matches\");\n    });\n\n    await waitFor(() => {\n      expect(mockGetLeaderboard).toHaveBeenCalledWith(\n        { category: \"matches\", period: \"weekly\" },\n        expect.any(Number),\n        expect.any(Number),\n      );\n    });\n\n    expect(result.current.selectedCategory).toBe(\"matches\");\n  });\n\n  it(\"should change selected period\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    mockGetLeaderboard.mockClear();\n\n    act(() => {\n      result.current.setSelectedPeriod(\"monthly\");\n    });\n\n    await waitFor(() => {\n      expect(mockGetLeaderboard).toHaveBeenCalledWith(\n        { period: \"monthly\" },\n        expect.any(Number),\n        expect.any(Number),\n      );\n    });\n\n    expect(result.current.selectedPeriod).toBe(\"monthly\");\n  });\n\n  it(\"should toggle filters visibility\", () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    expect(result.current.showFilters).toBe(false);\n\n    act(() => {\n      result.current.setShowFilters(true);\n    });\n\n    expect(result.current.showFilters).toBe(true);\n\n    act(() => {\n      result.current.setShowFilters(false);\n    });\n\n    expect(result.current.showFilters).toBe(false);\n  });\n\n  it(\"should refresh data\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    mockGetLeaderboard.mockClear();\n    mockGetUserRank.mockClear();\n\n    await act(async () => {\n      await result.current.refreshData();\n    });\n\n    expect(result.current.refreshing).toBe(false);\n    expect(mockGetLeaderboard).toHaveBeenCalledWith(\n      { period: \"weekly\" },\n      1,\n      20,\n    );\n    expect(mockGetUserRank).toHaveBeenCalled();\n  });\n\n  it(\"should set refreshing state during refresh\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    let refreshingDuringCall = false;\n\n    mockGetLeaderboard.mockImplementation(() => {\n      refreshingDuringCall = result.current.refreshing;\n      return Promise.resolve({\n        entries: mockLeaderboardEntries,\n        hasMore: true,\n      });\n    });\n\n    await act(async () => {\n      await result.current.refreshData();\n    });\n\n    expect(refreshingDuringCall).toBe(true);\n    expect(result.current.refreshing).toBe(false);\n  });\n\n  it(\"should load more entries when available\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    const moreEntries = [\n      {\n        id: \"4\",\n        userId: \"user4\",\n        username: \"dave\",\n        score: 700,\n        rank: 4,\n        avatar: \"avatar4.jpg\",\n      },\n    ];\n\n    mockGetLeaderboard.mockResolvedValue({\n      entries: moreEntries,\n      hasMore: false,\n    });\n\n    await act(async () => {\n      await result.current.loadMore();\n    });\n\n    expect(mockGetLeaderboard).toHaveBeenCalledWith(\n      { period: \"weekly\" },\n      2, // Next page\n      20,\n    );\n\n    expect(result.current.entries).toHaveLength(4); // Original 3 + 1 new\n    expect(result.current.hasMore).toBe(false);\n    expect(result.current.page).toBe(2);\n  });\n\n  it(\"should append entries when loading more\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    const initialEntries = result.current.entries;\n\n    const newEntry = {\n      id: \"4\",\n      userId: \"user4\",\n      username: \"dave\",\n      score: 700,\n      rank: 4,\n      avatar: \"avatar4.jpg\",\n    };\n\n    mockGetLeaderboard.mockResolvedValue({\n      entries: [newEntry],\n      hasMore: true,\n    });\n\n    await act(async () => {\n      await result.current.loadMore();\n    });\n\n    expect(result.current.entries).toEqual([...initialEntries, newEntry]);\n  });\n\n  it(\"should not load more when hasMore is false\", async () => {\n    mockGetLeaderboard.mockResolvedValue({\n      entries: mockLeaderboardEntries,\n      hasMore: false,\n    });\n\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    mockGetLeaderboard.mockClear();\n\n    await act(async () => {\n      await result.current.loadMore();\n    });\n\n    expect(mockGetLeaderboard).not.toHaveBeenCalled();\n  });\n\n  it(\"should not load more when already loading\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    // Don't wait for initial load to finish\n    mockGetLeaderboard.mockClear();\n\n    await act(async () => {\n      await result.current.loadMore();\n    });\n\n    // Should not have been called because still loading\n    expect(mockGetLeaderboard).not.toHaveBeenCalled();\n  });\n\n  it(\"should replace entries when loading page 1\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    const newEntries = [\n      {\n        id: \"10\",\n        userId: \"user10\",\n        username: \"eve\",\n        score: 1100,\n        rank: 1,\n        avatar: \"avatar10.jpg\",\n      },\n    ];\n\n    mockGetLeaderboard.mockResolvedValue({\n      entries: newEntries,\n      hasMore: true,\n    });\n\n    await act(async () => {\n      await result.current.refreshData();\n    });\n\n    expect(result.current.entries).toEqual(newEntries);\n    expect(result.current.entries).toHaveLength(1);\n  });\n\n  it(\"should load user rank for specific category\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    mockGetUserRank.mockClear();\n\n    act(() => {\n      result.current.setSelectedCategory(\"matches\");\n    });\n\n    await waitFor(() => {\n      expect(mockGetUserRank).toHaveBeenCalledWith(\"matches\");\n    });\n  });\n\n  it(\"should load user rank for all categories\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    expect(mockGetUserRank).toHaveBeenCalledWith(undefined);\n  });\n\n  it(\"should handle error during initial load\", async () => {\n    mockGetCategories.mockRejectedValue(new Error(\"API error\"));\n\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    // Should still complete despite error\n    expect(result.current.loading).toBe(false);\n  });\n\n  it(\"should provide all periods options\", async () => {\n    const { result } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    // Test all period options\n    const periods: Array<\"daily\" | \"weekly\" | \"monthly\" | \"all_time\"> = [\n      \"daily\",\n      \"weekly\",\n      \"monthly\",\n      \"all_time\",\n    ];\n\n    for (const period of periods) {\n      mockGetLeaderboard.mockClear();\n\n      act(() => {\n        result.current.setSelectedPeriod(period);\n      });\n\n      await waitFor(() => {\n        expect(mockGetLeaderboard).toHaveBeenCalledWith(\n          expect.objectContaining({ period }),\n          expect.any(Number),\n          expect.any(Number),\n        );\n      });\n    }\n  });\n\n  it(\"should return stable function references\", async () => {\n    const { result, rerender } = renderHook(() => useLeaderboard());\n\n    await waitFor(() => {\n      expect(result.current.loading).toBe(false);\n    });\n\n    const firstRefreshData = result.current.refreshData;\n    const firstLoadMore = result.current.loadMore;\n    const firstSetSelectedCategory = result.current.setSelectedCategory;\n\n    rerender();\n\n    expect(result.current.refreshData).toBe(firstRefreshData);\n    expect(result.current.loadMore).toBe(firstLoadMore);\n    expect(result.current.setSelectedCategory).toBe(firstSetSelectedCategory);\n  });\n});\n"],"mappings":"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","ignoreList":[]}