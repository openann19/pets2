48c92ea6ce0e1f7ac41f32161cfffdf3
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MatchModal = MatchModal;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _ = require("../");
var _unifiedTheme = require("../../theme/unified-theme");
var _ConfettiBurst = require("./ConfettiBurst");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var _Dimensions$get = _reactNative.Dimensions.get('window'),
  screenWidth = _Dimensions$get.width;
function MatchModal(_ref) {
  var pet = _ref.pet,
    onKeepSwiping = _ref.onKeepSwiping,
    onSendMessage = _ref.onSendMessage,
    _ref$show = _ref.show,
    show = _ref$show === void 0 ? true : _ref$show;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    showConfetti = _useState2[0],
    setShowConfetti = _useState2[1];
  (0, _react.useEffect)(function () {
    if (show) {
      setShowConfetti(true);
      var timer = setTimeout(function () {
        setShowConfetti(false);
      }, 4000);
      return function () {
        clearTimeout(timer);
      };
    }
  }, [show]);
  if (!show) return (0, _jsxRuntime.jsx)(_reactNative.View, {});
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.overlay,
    children: [(0, _jsxRuntime.jsx)(_ConfettiBurst.ConfettiBurst, {
      show: showConfetti,
      intensity: "heavy",
      duration: 4000,
      onComplete: function onComplete() {
        setShowConfetti(false);
      }
    }), (0, _jsxRuntime.jsxs)(_.FXContainerPresets.premium, {
      style: styles.content,
      children: [(0, _jsxRuntime.jsx)(_.Heading1, {
        style: styles.title,
        children: "It's a Match! \uD83C\uDF89"
      }), (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.photos,
        children: (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: styles.photoContainer
        })
      }), (0, _jsxRuntime.jsxs)(_.Body, {
        style: styles.text,
        children: ["You and ", pet.name, " liked each other!"]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.buttons,
        children: [(0, _jsxRuntime.jsx)(_.EliteButtonPresets.glass, {
          title: "Keep Swiping",
          onPress: onKeepSwiping
        }), (0, _jsxRuntime.jsx)(_.EliteButtonPresets.premium, {
          title: "Send Message",
          leftIcon: "chatbubble",
          onPress: onSendMessage
        })]
      })]
    })]
  });
}
var styles = _reactNative.StyleSheet.create({
  overlay: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: 'rgba(0,0,0,0.85)',
    justifyContent: 'center',
    alignItems: 'center',
    zIndex: 10000
  },
  content: {
    width: screenWidth - _unifiedTheme.Theme.spacing['4xl'],
    padding: _unifiedTheme.Theme.spacing['4xl'],
    alignItems: 'center'
  },
  title: {
    textAlign: 'center',
    marginBottom: _unifiedTheme.Theme.spacing.xl
  },
  photos: {
    flexDirection: 'row',
    marginBottom: _unifiedTheme.Theme.spacing.xl,
    gap: _unifiedTheme.Theme.spacing.lg
  },
  photoContainer: {
    width: 80,
    height: 80,
    borderRadius: 40
  },
  text: {
    textAlign: 'center',
    marginBottom: _unifiedTheme.Theme.spacing.xl,
    color: _unifiedTheme.Theme.colors.text.secondary
  },
  buttons: {
    flexDirection: 'row',
    gap: _unifiedTheme.Theme.spacing.lg
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVhY3ROYXRpdmUiLCJfIiwiX3VuaWZpZWRUaGVtZSIsIl9Db25mZXR0aUJ1cnN0IiwiX2pzeFJ1bnRpbWUiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9EaW1lbnNpb25zJGdldCIsIkRpbWVuc2lvbnMiLCJzY3JlZW5XaWR0aCIsIndpZHRoIiwiTWF0Y2hNb2RhbCIsIl9yZWYiLCJwZXQiLCJvbktlZXBTd2lwaW5nIiwib25TZW5kTWVzc2FnZSIsIl9yZWYkc2hvdyIsInNob3ciLCJfdXNlU3RhdGUiLCJ1c2VTdGF0ZSIsIl91c2VTdGF0ZTIiLCJfc2xpY2VkVG9BcnJheTIiLCJzaG93Q29uZmV0dGkiLCJzZXRTaG93Q29uZmV0dGkiLCJ1c2VFZmZlY3QiLCJ0aW1lciIsInNldFRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJqc3giLCJWaWV3IiwianN4cyIsInN0eWxlIiwic3R5bGVzIiwib3ZlcmxheSIsImNoaWxkcmVuIiwiQ29uZmV0dGlCdXJzdCIsImludGVuc2l0eSIsImR1cmF0aW9uIiwib25Db21wbGV0ZSIsIkZYQ29udGFpbmVyUHJlc2V0cyIsInByZW1pdW0iLCJjb250ZW50IiwiSGVhZGluZzEiLCJ0aXRsZSIsInBob3RvcyIsInBob3RvQ29udGFpbmVyIiwiQm9keSIsInRleHQiLCJuYW1lIiwiYnV0dG9ucyIsIkVsaXRlQnV0dG9uUHJlc2V0cyIsImdsYXNzIiwib25QcmVzcyIsImxlZnRJY29uIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsInBvc2l0aW9uIiwidG9wIiwibGVmdCIsInJpZ2h0IiwiYm90dG9tIiwiYmFja2dyb3VuZENvbG9yIiwianVzdGlmeUNvbnRlbnQiLCJhbGlnbkl0ZW1zIiwiekluZGV4IiwiVGhlbWUiLCJzcGFjaW5nIiwicGFkZGluZyIsInRleHRBbGlnbiIsIm1hcmdpbkJvdHRvbSIsInhsIiwiZmxleERpcmVjdGlvbiIsImdhcCIsImxnIiwiaGVpZ2h0IiwiYm9yZGVyUmFkaXVzIiwiY29sb3IiLCJjb2xvcnMiLCJzZWNvbmRhcnkiXSwic291cmNlcyI6WyJNYXRjaE1vZGFsLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE1hdGNoTW9kYWwgQ29tcG9uZW50XG4gKiBEaXNwbGF5cyBtYXRjaCBjZWxlYnJhdGlvbiBtb2RhbCB3aXRoIGNvbmZldHRpIGJ1cnN0XG4gKiBFeHRyYWN0ZWQgZnJvbSBNb2Rlcm5Td2lwZVNjcmVlbiBmb3IgYmV0dGVyIG1vZHVsYXJpdHlcbiAqL1xuXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFZpZXcsIFRleHQsIFN0eWxlU2hlZXQsIERpbWVuc2lvbnMgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgRWxpdGVCdXR0b25QcmVzZXRzLCBGWENvbnRhaW5lclByZXNldHMsIEhlYWRpbmcxLCBCb2R5IH0gZnJvbSAnLi4vJztcbmltcG9ydCB7IFRoZW1lIH0gZnJvbSAnLi4vLi4vdGhlbWUvdW5pZmllZC10aGVtZSc7XG5pbXBvcnQgdHlwZSB7IFBldCB9IGZyb20gJ0BwYXdmZWN0bWF0Y2gvY29yZSc7XG5pbXBvcnQgeyBDb25mZXR0aUJ1cnN0IH0gZnJvbSAnLi9Db25mZXR0aUJ1cnN0JztcblxuY29uc3QgeyB3aWR0aDogc2NyZWVuV2lkdGggfSA9IERpbWVuc2lvbnMuZ2V0KCd3aW5kb3cnKTtcblxuZXhwb3J0IGludGVyZmFjZSBNYXRjaE1vZGFsUHJvcHMge1xuICBwZXQ6IFBldDtcbiAgb25LZWVwU3dpcGluZzogKCkgPT4gdm9pZDtcbiAgb25TZW5kTWVzc2FnZTogKCkgPT4gdm9pZDtcbiAgc2hvdz86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBNYXRjaE1vZGFsKHtcbiAgcGV0LFxuICBvbktlZXBTd2lwaW5nLFxuICBvblNlbmRNZXNzYWdlLFxuICBzaG93ID0gdHJ1ZSxcbn06IE1hdGNoTW9kYWxQcm9wcyk6IEpTWC5FbGVtZW50IHtcbiAgY29uc3QgW3Nob3dDb25mZXR0aSwgc2V0U2hvd0NvbmZldHRpXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChzaG93KSB7XG4gICAgICBzZXRTaG93Q29uZmV0dGkodHJ1ZSk7XG4gICAgICAvLyBTdG9wIGNvbmZldHRpIGFmdGVyIDQgc2Vjb25kc1xuICAgICAgY29uc3QgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgc2V0U2hvd0NvbmZldHRpKGZhbHNlKTtcbiAgICAgIH0sIDQwMDApO1xuICAgICAgcmV0dXJuICgpID0+IHsgY2xlYXJUaW1lb3V0KHRpbWVyKTsgfTtcbiAgICB9XG4gIH0sIFtzaG93XSk7XG5cbiAgaWYgKCFzaG93KSByZXR1cm4gPFZpZXcgLz47XG5cbiAgcmV0dXJuIChcbiAgICA8VmlldyBzdHlsZT17c3R5bGVzLm92ZXJsYXl9PlxuICAgICAgey8qIENvbmZldHRpIGJ1cnN0IGZvciBtYXRjaCBjZWxlYnJhdGlvbiAqL31cbiAgICAgIDxDb25mZXR0aUJ1cnN0XG4gICAgICAgIHNob3c9e3Nob3dDb25mZXR0aX1cbiAgICAgICAgaW50ZW5zaXR5PVwiaGVhdnlcIlxuICAgICAgICBkdXJhdGlvbj17NDAwMH1cbiAgICAgICAgb25Db21wbGV0ZT17KCkgPT4geyBzZXRTaG93Q29uZmV0dGkoZmFsc2UpOyB9fVxuICAgICAgLz5cblxuICAgICAgPEZYQ29udGFpbmVyUHJlc2V0cy5wcmVtaXVtIHN0eWxlPXtzdHlsZXMuY29udGVudH0+XG4gICAgICAgIDxIZWFkaW5nMSBzdHlsZT17c3R5bGVzLnRpdGxlfT5JdCdzIGEgTWF0Y2ghIPCfjok8L0hlYWRpbmcxPlxuXG4gICAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMucGhvdG9zfT5cbiAgICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLnBob3RvQ29udGFpbmVyfT5cbiAgICAgICAgICAgIHsvKiBNYXRjaCBwaG90byB3b3VsZCBnbyBoZXJlICovfVxuICAgICAgICAgIDwvVmlldz5cbiAgICAgICAgPC9WaWV3PlxuXG4gICAgICAgIDxCb2R5IHN0eWxlPXtzdHlsZXMudGV4dH0+XG4gICAgICAgICAgWW91IGFuZCB7cGV0Lm5hbWV9IGxpa2VkIGVhY2ggb3RoZXIhXG4gICAgICAgIDwvQm9keT5cblxuICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmJ1dHRvbnN9PlxuICAgICAgICAgIDxFbGl0ZUJ1dHRvblByZXNldHMuZ2xhc3NcbiAgICAgICAgICAgIHRpdGxlPVwiS2VlcCBTd2lwaW5nXCJcbiAgICAgICAgICAgIG9uUHJlc3M9e29uS2VlcFN3aXBpbmd9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8RWxpdGVCdXR0b25QcmVzZXRzLnByZW1pdW1cbiAgICAgICAgICAgIHRpdGxlPVwiU2VuZCBNZXNzYWdlXCJcbiAgICAgICAgICAgIGxlZnRJY29uPVwiY2hhdGJ1YmJsZVwiXG4gICAgICAgICAgICBvblByZXNzPXtvblNlbmRNZXNzYWdlfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvVmlldz5cbiAgICAgIDwvRlhDb250YWluZXJQcmVzZXRzLnByZW1pdW0+XG4gICAgPC9WaWV3PlxuICApO1xufVxuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIG92ZXJsYXk6IHtcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICB0b3A6IDAsXG4gICAgbGVmdDogMCxcbiAgICByaWdodDogMCxcbiAgICBib3R0b206IDAsXG4gICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLDAsMCwwLjg1KScsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIHpJbmRleDogMTAwMDAsXG4gIH0sXG4gIGNvbnRlbnQ6IHtcbiAgICB3aWR0aDogc2NyZWVuV2lkdGggLSBUaGVtZS5zcGFjaW5nWyc0eGwnXSxcbiAgICBwYWRkaW5nOiBUaGVtZS5zcGFjaW5nWyc0eGwnXSxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgfSxcbiAgdGl0bGU6IHtcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIG1hcmdpbkJvdHRvbTogVGhlbWUuc3BhY2luZy54bCxcbiAgfSxcbiAgcGhvdG9zOiB7XG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgbWFyZ2luQm90dG9tOiBUaGVtZS5zcGFjaW5nLnhsLFxuICAgIGdhcDogVGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgcGhvdG9Db250YWluZXI6IHtcbiAgICB3aWR0aDogODAsXG4gICAgaGVpZ2h0OiA4MCxcbiAgICBib3JkZXJSYWRpdXM6IDQwLFxuICB9LFxuICB0ZXh0OiB7XG4gICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICBtYXJnaW5Cb3R0b206IFRoZW1lLnNwYWNpbmcueGwsXG4gICAgY29sb3I6IFRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeSxcbiAgfSxcbiAgYnV0dG9uczoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGdhcDogVGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQU1BLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLENBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLGFBQUEsR0FBQUgsT0FBQTtBQUVBLElBQUFJLGNBQUEsR0FBQUosT0FBQTtBQUFnRCxJQUFBSyxXQUFBLEdBQUFMLE9BQUE7QUFBQSxTQUFB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