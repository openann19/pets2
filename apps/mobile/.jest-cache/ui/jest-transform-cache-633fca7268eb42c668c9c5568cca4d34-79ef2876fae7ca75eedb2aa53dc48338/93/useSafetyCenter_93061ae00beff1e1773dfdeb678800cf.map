{"version":3,"names":["_react","require","Haptics","_interopRequireWildcard","_reactNative","_core","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useSafetyCenter","exports","_useState","useState","_useState2","_slicedToArray2","emergencyMode","setEmergencyMode","_useState3","_useState4","isReporting","setIsReporting","toggleEmergencyMode","useCallback","_asyncToGenerator2","impactAsync","ImpactFeedbackStyle","Heavy","catch","newMode","Alert","alert","text","style","onPress","reportUser","_ref2","userId","reason","logger","info","Promise","resolve","setTimeout","error","_x","_x2","apply","arguments","contactSupport","viewSafetyGuidelines","navigateToPrivacySettings","setupEmergencyContacts","viewSafetyTips","handleSafetyOption","option","selectionAsync","action","safetyOptions","id","title","description","icon","color"],"sources":["useSafetyCenter.ts"],"sourcesContent":["/**\n * useSafetyCenter Hook\n * Manages safety center operations including emergency mode, reporting, and safety tools\n */\nimport { useCallback, useState } from \"react\";\nimport * as Haptics from \"expo-haptics\";\nimport { Alert } from \"react-native\";\nimport { logger } from \"@pawfectmatch/core\";\n\ninterface SafetyOption {\n  id: string;\n  title: string;\n  description: string;\n  icon: string;\n  color: string;\n  action: () => void;\n}\n\ninterface UseSafetyCenterReturn {\n  // Emergency mode\n  emergencyMode: boolean;\n  setEmergencyMode: (mode: boolean) => void;\n  toggleEmergencyMode: () => Promise<void>;\n\n  // Safety options\n  safetyOptions: SafetyOption[];\n  handleSafetyOption: (option: SafetyOption) => void;\n\n  // Actions\n  reportUser: (userId: string, reason: string) => Promise<boolean>;\n  contactSupport: () => void;\n  viewSafetyGuidelines: () => void;\n  navigateToPrivacySettings: () => void;\n  setupEmergencyContacts: () => void;\n  viewSafetyTips: () => void;\n\n  // State\n  isReporting: boolean;\n}\n\nexport const useSafetyCenter = (): UseSafetyCenterReturn => {\n  const [emergencyMode, setEmergencyMode] = useState(false);\n  const [isReporting, setIsReporting] = useState(false);\n\n  const toggleEmergencyMode = useCallback(async (): Promise<void> => {\n    Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Heavy).catch(() => {});\n\n    const newMode = !emergencyMode;\n\n    Alert.alert(\n      newMode ? \"Enable Emergency Mode\" : \"Disable Emergency Mode\",\n      newMode\n        ? \"Emergency mode will limit interactions and enhance safety features.\"\n        : \"This will restore normal app functionality.\",\n      [\n        { text: \"Cancel\", style: \"cancel\" },\n        {\n          text: newMode ? \"Enable\" : \"Disable\",\n          style: newMode ? \"destructive\" : \"default\",\n          onPress: () => {\n            setEmergencyMode(newMode);\n            Alert.alert(\n              \"Emergency Mode\",\n              newMode\n                ? \"Emergency mode enabled. Stay safe!\"\n                : \"Emergency mode disabled\",\n            );\n          },\n        },\n      ],\n    );\n  }, [emergencyMode]);\n\n  const reportUser = useCallback(\n    async (userId: string, reason: string): Promise<boolean> => {\n      setIsReporting(true);\n      try {\n        // In a real implementation, this would call the API\n        logger.info(\"Reporting user\", { userId, reason });\n\n        // Simulate API call\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n\n        Alert.alert(\n          \"Report Submitted\",\n          \"Thank you for your report. We will review it shortly.\",\n        );\n        return true;\n      } catch (error) {\n        logger.error(\"Failed to report user\", { error, userId });\n        Alert.alert(\"Error\", \"Failed to submit report. Please try again.\");\n        return false;\n      } finally {\n        setIsReporting(false);\n      }\n    },\n    [],\n  );\n\n  const contactSupport = useCallback(() => {\n    Alert.alert(\"Contact Support\", \"Support contact options coming soon!\");\n  }, []);\n\n  const viewSafetyGuidelines = useCallback(() => {\n    Alert.alert(\n      \"Safety Guidelines\",\n      \"Safety guidelines will be available soon!\",\n    );\n  }, []);\n\n  const navigateToPrivacySettings = useCallback(() => {\n    Alert.alert(\n      \"Privacy Settings\",\n      \"Navigate to Privacy Settings screen (coming soon)\",\n    );\n  }, []);\n\n  const setupEmergencyContacts = useCallback(() => {\n    Alert.alert(\"Emergency Contacts\", \"Emergency contact setup coming soon\");\n  }, []);\n\n  const viewSafetyTips = useCallback(() => {\n    Alert.alert(\n      \"Safety Tips\",\n      \"Safety tips and guidelines will be available soon\",\n    );\n  }, []);\n\n  const handleSafetyOption = useCallback((option: SafetyOption) => {\n    Haptics.selectionAsync().catch(() => {});\n    option.action();\n  }, []);\n\n  const safetyOptions: SafetyOption[] = [\n    {\n      id: \"report\",\n      title: \"Report User\",\n      description: \"Report inappropriate behavior or content\",\n      icon: \"flag-outline\",\n      color: \"#EF4444\",\n      action: () => {\n        Alert.alert(\n          \"Report User\",\n          \"This feature is coming soon. Please contact support for urgent issues.\",\n        );\n      },\n    },\n    {\n      id: \"block\",\n      title: \"Block & Report\",\n      description: \"Block a user and report their behavior\",\n      icon: \"person-remove-outline\",\n      color: \"#F59E0B\",\n      action: () => {\n        // This would navigate back to profile where blocking is handled\n        logger.info(\"Navigate back to profile for blocking\");\n      },\n    },\n    {\n      id: \"privacy\",\n      title: \"Privacy Settings\",\n      description: \"Control who can see your profile and contact you\",\n      icon: \"lock-closed-outline\",\n      color: \"#10B981\",\n      action: navigateToPrivacySettings,\n    },\n    {\n      id: \"emergency\",\n      title: \"Emergency Contacts\",\n      description: \"Set up emergency contacts for safety\",\n      icon: \"call-outline\",\n      color: \"#8B5CF6\",\n      action: setupEmergencyContacts,\n    },\n    {\n      id: \"safety-tips\",\n      title: \"Safety Tips\",\n      description: \"Learn about online safety and best practices\",\n      icon: \"shield-checkmark-outline\",\n      color: \"#06B6D4\",\n      action: viewSafetyTips,\n    },\n  ];\n\n  return {\n    // Emergency mode\n    emergencyMode,\n    setEmergencyMode,\n    toggleEmergencyMode,\n\n    // Safety options\n    safetyOptions,\n    handleSafetyOption,\n\n    // Actions\n    reportUser,\n    contactSupport,\n    viewSafetyGuidelines,\n    navigateToPrivacySettings,\n    setupEmergencyContacts,\n    viewSafetyTips,\n\n    // State\n    isReporting,\n  };\n};\n"],"mappings":"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","ignoreList":[]}