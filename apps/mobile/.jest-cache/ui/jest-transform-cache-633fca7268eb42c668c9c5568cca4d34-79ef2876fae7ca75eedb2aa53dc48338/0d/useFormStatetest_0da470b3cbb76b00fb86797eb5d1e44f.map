{"version":3,"names":["_reactNative","require","_useFormState","initialValues","email","password","age","validateForm","values","errors","includes","length","describe","it","_renderHook","renderHook","useFormState","validate","result","expect","current","toEqual","isValid","toBe","_renderHook2","act","setValue","_renderHook3","_renderHook4","_renderHook5","reset","_renderHook6","toBeUndefined","_renderHook7","_renderHook8","rerender","firstSetValue","firstValidate","firstReset"],"sources":["useFormState.test.ts"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport { renderHook, act } from \"@testing-library/react-native\";\nimport { useFormState } from \"../useFormState\";\n\ninterface TestFormData {\n  email: string;\n  password: string;\n  age: number;\n}\n\nconst initialValues: TestFormData = {\n  email: \"\",\n  password: \"\",\n  age: 18,\n};\n\nconst validateForm = (values: TestFormData) => {\n  const errors: Partial<TestFormData> = {};\n\n  if (!values.email) {\n    errors.email = \"Email is required\";\n  } else if (!values.email.includes(\"@\")) {\n    errors.email = \"Invalid email format\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Password is required\";\n  } else if (values.password.length < 6) {\n    errors.password = \"Password must be at least 6 characters\";\n  }\n\n  if (values.age < 18) {\n    errors.age = \"Must be at least 18 years old\";\n  }\n\n  return errors;\n};\n\ndescribe(\"useFormState\", () => {\n  it(\"should initialize with correct values and no errors\", () => {\n    const { result } = renderHook(() =>\n      useFormState({ initialValues, validate: validateForm }),\n    );\n\n    expect(result.current.values).toEqual(initialValues);\n    expect(result.current.errors).toEqual({});\n    expect(result.current.isValid).toBe(true);\n  });\n\n  it(\"should update field values\", () => {\n    const { result } = renderHook(() =>\n      useFormState({ initialValues, validate: validateForm }),\n    );\n\n    act(() => {\n      result.current.setValue(\"email\", \"test@example.com\");\n    });\n\n    expect(result.current.values.email).toBe(\"test@example.com\");\n    expect(result.current.values.password).toBe(\"\");\n    expect(result.current.values.age).toBe(18);\n  });\n\n  it(\"should validate form and show errors\", () => {\n    const { result } = renderHook(() =>\n      useFormState({ initialValues, validate: validateForm }),\n    );\n\n    act(() => {\n      result.current.validate();\n    });\n\n    expect(result.current.errors.email).toBe(\"Email is required\");\n    expect(result.current.errors.password).toBe(\"Password is required\");\n    expect(result.current.isValid).toBe(false);\n  });\n\n  it(\"should clear errors when valid data is entered\", () => {\n    const { result } = renderHook(() =>\n      useFormState({ initialValues, validate: validateForm }),\n    );\n\n    // First set invalid data\n    act(() => {\n      result.current.setValue(\"email\", \"invalid-email\");\n      result.current.setValue(\"password\", \"123\");\n      result.current.validate();\n    });\n\n    expect(result.current.isValid).toBe(false);\n\n    // Then set valid data\n    act(() => {\n      result.current.setValue(\"email\", \"valid@example.com\");\n      result.current.setValue(\"password\", \"validpassword\");\n      result.current.setValue(\"age\", 25);\n      result.current.validate();\n    });\n\n    expect(result.current.isValid).toBe(true);\n    expect(result.current.errors).toEqual({});\n  });\n\n  it(\"should reset form to initial values\", () => {\n    const { result } = renderHook(() =>\n      useFormState({ initialValues, validate: validateForm }),\n    );\n\n    // Modify values\n    act(() => {\n      result.current.setValue(\"email\", \"modified@example.com\");\n      result.current.setValue(\"password\", \"modifiedpass\");\n      result.current.setValue(\"age\", 30);\n    });\n\n    expect(result.current.values.email).toBe(\"modified@example.com\");\n\n    // Reset\n    act(() => {\n      result.current.reset();\n    });\n\n    expect(result.current.values).toEqual(initialValues);\n    expect(result.current.errors).toEqual({});\n  });\n\n  it(\"should handle dynamic validation\", () => {\n    const { result } = renderHook(() =>\n      useFormState({ initialValues, validate: validateForm }),\n    );\n\n    // Set email only (password still invalid)\n    act(() => {\n      result.current.setValue(\"email\", \"test@example.com\");\n      result.current.validate();\n    });\n\n    expect(result.current.errors.email).toBeUndefined();\n    expect(result.current.errors.password).toBe(\"Password is required\");\n    expect(result.current.isValid).toBe(false);\n  });\n\n  it(\"should work without validation function\", () => {\n    const { result } = renderHook(() => useFormState({ initialValues }));\n\n    act(() => {\n      result.current.setValue(\"email\", \"test@example.com\");\n    });\n\n    expect(result.current.values.email).toBe(\"test@example.com\");\n    expect(result.current.isValid).toBe(true);\n    expect(result.current.errors).toEqual({});\n  });\n\n  it(\"should return stable function references\", () => {\n    const { result, rerender } = renderHook(() =>\n      useFormState({ initialValues, validate: validateForm }),\n    );\n\n    const firstSetValue = result.current.setValue;\n    const firstValidate = result.current.validate;\n    const firstReset = result.current.reset;\n\n    rerender();\n\n    expect(result.current.setValue).toBe(firstSetValue);\n    expect(result.current.validate).toBe(firstValidate);\n    expect(result.current.reset).toBe(firstReset);\n  });\n});\n"],"mappings":"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","ignoreList":[]}