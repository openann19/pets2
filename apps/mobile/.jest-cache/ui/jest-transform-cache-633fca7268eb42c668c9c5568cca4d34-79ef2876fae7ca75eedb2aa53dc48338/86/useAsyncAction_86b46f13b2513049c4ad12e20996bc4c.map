{"version":3,"names":["_react","require","useAsyncAction","_ref","action","onSuccess","onError","_ref$immediate","immediate","_useState","useState","_useState2","_slicedToArray2","default","data","setData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","execute","useCallback","_asyncToGenerator2","undefined","result","apply","arguments","err","Error","String","reset"],"sources":["useAsyncAction.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nexport interface UseAsyncActionOptions<TResult, TArgs extends any[] = []> {\n  action: (...args: TArgs) => Promise<TResult>;\n  onSuccess?: (result: TResult) => void;\n  onError?: (error: Error) => void;\n  immediate?: boolean;\n}\n\nexport interface UseAsyncActionReturn<TResult, TArgs extends any[] = []> {\n  data: TResult | null;\n  isLoading: boolean;\n  error: Error | null;\n  execute: (...args: TArgs) => Promise<TResult | undefined>;\n  reset: () => void;\n}\n\n/**\n * Hook for managing async actions with loading, error, and success states\n *\n * @example\n * const { data, isLoading, error, execute } = useAsyncAction({\n *   action: async (userId: string) => await api.getUser(userId),\n *   onSuccess: (user) => logger.info('User loaded', { userId: user.id }),\n *   onError: (error) => logger.error('Failed to load user', { error })\n * });\n */\nexport function useAsyncAction<TResult, TArgs extends any[] = []>({\n  action,\n  onSuccess,\n  onError,\n  immediate = false,\n}: UseAsyncActionOptions<TResult, TArgs>): UseAsyncActionReturn<\n  TResult,\n  TArgs\n> {\n  const [data, setData] = useState<TResult | null>(null);\n  const [isLoading, setIsLoading] = useState(immediate);\n  const [error, setError] = useState<Error | null>(null);\n\n  const execute = useCallback(\n    async (...args: TArgs): Promise<TResult | undefined> => {\n      // Prevent duplicate execution while loading\n      if (isLoading) {\n        return undefined;\n      }\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const result = await action(...args);\n        setData(result);\n        onSuccess?.(result);\n        return result;\n      } catch (err) {\n        const error = err instanceof Error ? err : new Error(String(err));\n        setError(error);\n        onError?.(error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [action, onSuccess, onError, isLoading],\n  );\n\n  const reset = useCallback(() => {\n    setData(null);\n    setError(null);\n    setIsLoading(false);\n  }, []);\n\n  return {\n    data,\n    isLoading,\n    error,\n    execute,\n    reset,\n  };\n}\n"],"mappings":";;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AA2BO,SAASC,cAAcA,CAAAC,IAAA,EAQ5B;EAAA,IAPAC,MAAM,GAAAD,IAAA,CAANC,MAAM;IACNC,SAAS,GAAAF,IAAA,CAATE,SAAS;IACTC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAAC,cAAA,GAAAJ,IAAA,CACPK,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,KAAK,GAAAA,cAAA;EAKjB,IAAAE,SAAA,GAAwB,IAAAC,eAAQ,EAAiB,IAAI,CAAC;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAA/CK,IAAI,GAAAH,UAAA;IAAEI,OAAO,GAAAJ,UAAA;EACpB,IAAAK,UAAA,GAAkC,IAAAN,eAAQ,EAACF,SAAS,CAAC;IAAAS,UAAA,OAAAL,eAAA,CAAAC,OAAA,EAAAG,UAAA;IAA9CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAA0B,IAAAV,eAAQ,EAAe,IAAI,CAAC;IAAAW,UAAA,OAAAT,eAAA,CAAAC,OAAA,EAAAO,UAAA;IAA/CE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtB,IAAMG,OAAO,GAAG,IAAAC,kBAAW,MAAAC,kBAAA,CAAAb,OAAA,EACzB,aAAwD;IAEtD,IAAIK,SAAS,EAAE;MACb,OAAOS,SAAS;IAClB;IAEAR,YAAY,CAAC,IAAI,CAAC;IAClBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,IAAMK,MAAM,SAASxB,MAAM,CAAAyB,KAAA,SAAAC,SAAQ,CAAC;MACpCf,OAAO,CAACa,MAAM,CAAC;MACfvB,SAAS,oBAATA,SAAS,CAAGuB,MAAM,CAAC;MACnB,OAAOA,MAAM;IACf,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZ,IAAMT,MAAK,GAAGS,GAAG,YAAYC,KAAK,GAAGD,GAAG,GAAG,IAAIC,KAAK,CAACC,MAAM,CAACF,GAAG,CAAC,CAAC;MACjER,QAAQ,CAACD,MAAK,CAAC;MACfhB,OAAO,oBAAPA,OAAO,CAAGgB,MAAK,CAAC;MAChB,MAAMA,MAAK;IACb,CAAC,SAAS;MACRH,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,GACD,CAACf,MAAM,EAAEC,SAAS,EAAEC,OAAO,EAAEY,SAAS,CACxC,CAAC;EAED,IAAMgB,KAAK,GAAG,IAAAT,kBAAW,EAAC,YAAM;IAC9BV,OAAO,CAAC,IAAI,CAAC;IACbQ,QAAQ,CAAC,IAAI,CAAC;IACdJ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLL,IAAI,EAAJA,IAAI;IACJI,SAAS,EAATA,SAAS;IACTI,KAAK,EAALA,KAAK;IACLE,OAAO,EAAPA,OAAO;IACPU,KAAK,EAALA;EACF,CAAC;AACH","ignoreList":[]}