c2e76d899c7eeb1d140411406bbf7f00
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.__INTERNAL_VIEW_CONFIG = void 0;
var NativeComponentRegistry = _interopRequireWildcard(require("../../NativeComponent/NativeComponentRegistry"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'AndroidHorizontalScrollView',
  bubblingEventTypes: {},
  directEventTypes: {},
  validAttributes: {
    decelerationRate: true,
    disableIntervalMomentum: true,
    endFillColor: {
      process: require("../../StyleSheet/processColor").default
    },
    fadingEdgeLength: true,
    nestedScrollEnabled: true,
    overScrollMode: true,
    pagingEnabled: true,
    persistentScrollbar: true,
    scrollEnabled: true,
    scrollPerfTag: true,
    sendMomentumEvents: true,
    showsHorizontalScrollIndicator: true,
    snapToAlignment: true,
    snapToEnd: true,
    snapToInterval: true,
    snapToStart: true,
    snapToOffsets: true,
    contentOffset: true,
    borderBottomLeftRadius: true,
    borderBottomRightRadius: true,
    borderRadius: true,
    borderStyle: true,
    borderRightColor: {
      process: require("../../StyleSheet/processColor").default
    },
    borderColor: {
      process: require("../../StyleSheet/processColor").default
    },
    borderBottomColor: {
      process: require("../../StyleSheet/processColor").default
    },
    borderTopLeftRadius: true,
    borderTopColor: {
      process: require("../../StyleSheet/processColor").default
    },
    removeClippedSubviews: true,
    borderTopRightRadius: true,
    borderLeftColor: {
      process: require("../../StyleSheet/processColor").default
    },
    pointerEvents: true
  }
};
var AndroidHorizontalScrollViewNativeComponent = NativeComponentRegistry.get('AndroidHorizontalScrollView', function () {
  return __INTERNAL_VIEW_CONFIG;
});
var _default = exports.default = AndroidHorizontalScrollViewNativeComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOYXRpdmVDb21wb25lbnRSZWdpc3RyeSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsImUiLCJ0IiwiV2Vha01hcCIsInIiLCJuIiwiX19lc01vZHVsZSIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImRlZmF1bHQiLCJoYXMiLCJnZXQiLCJzZXQiLCJfdCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19JTlRFUk5BTF9WSUVXX0NPTkZJRyIsImV4cG9ydHMiLCJ1aVZpZXdDbGFzc05hbWUiLCJidWJibGluZ0V2ZW50VHlwZXMiLCJkaXJlY3RFdmVudFR5cGVzIiwidmFsaWRBdHRyaWJ1dGVzIiwiZGVjZWxlcmF0aW9uUmF0ZSIsImRpc2FibGVJbnRlcnZhbE1vbWVudHVtIiwiZW5kRmlsbENvbG9yIiwicHJvY2VzcyIsImZhZGluZ0VkZ2VMZW5ndGgiLCJuZXN0ZWRTY3JvbGxFbmFibGVkIiwib3ZlclNjcm9sbE1vZGUiLCJwYWdpbmdFbmFibGVkIiwicGVyc2lzdGVudFNjcm9sbGJhciIsInNjcm9sbEVuYWJsZWQiLCJzY3JvbGxQZXJmVGFnIiwic2VuZE1vbWVudHVtRXZlbnRzIiwic2hvd3NIb3Jpem9udGFsU2Nyb2xsSW5kaWNhdG9yIiwic25hcFRvQWxpZ25tZW50Iiwic25hcFRvRW5kIiwic25hcFRvSW50ZXJ2YWwiLCJzbmFwVG9TdGFydCIsInNuYXBUb09mZnNldHMiLCJjb250ZW50T2Zmc2V0IiwiYm9yZGVyQm90dG9tTGVmdFJhZGl1cyIsImJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzIiwiYm9yZGVyUmFkaXVzIiwiYm9yZGVyU3R5bGUiLCJib3JkZXJSaWdodENvbG9yIiwiYm9yZGVyQ29sb3IiLCJib3JkZXJCb3R0b21Db2xvciIsImJvcmRlclRvcExlZnRSYWRpdXMiLCJib3JkZXJUb3BDb2xvciIsInJlbW92ZUNsaXBwZWRTdWJ2aWV3cyIsImJvcmRlclRvcFJpZ2h0UmFkaXVzIiwiYm9yZGVyTGVmdENvbG9yIiwicG9pbnRlckV2ZW50cyIsIkFuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlld05hdGl2ZUNvbXBvbmVudCIsIl9kZWZhdWx0Il0sInNvdXJjZXMiOlsiQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3TmF0aXZlQ29tcG9uZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgdHlwZSB7XG4gIEhvc3RDb21wb25lbnQsXG4gIFBhcnRpYWxWaWV3Q29uZmlnLFxufSBmcm9tICcuLi8uLi9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZVR5cGVzJztcbmltcG9ydCB0eXBlIHtTY3JvbGxWaWV3TmF0aXZlUHJvcHMgYXMgUHJvcHN9IGZyb20gJy4vU2Nyb2xsVmlld05hdGl2ZUNvbXBvbmVudFR5cGUnO1xuXG5pbXBvcnQgKiBhcyBOYXRpdmVDb21wb25lbnRSZWdpc3RyeSBmcm9tICcuLi8uLi9OYXRpdmVDb21wb25lbnQvTmF0aXZlQ29tcG9uZW50UmVnaXN0cnknO1xuXG5leHBvcnQgY29uc3QgX19JTlRFUk5BTF9WSUVXX0NPTkZJRzogUGFydGlhbFZpZXdDb25maWcgPSB7XG4gIHVpVmlld0NsYXNzTmFtZTogJ0FuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlldycsXG4gIGJ1YmJsaW5nRXZlbnRUeXBlczoge30sXG4gIGRpcmVjdEV2ZW50VHlwZXM6IHt9LFxuICB2YWxpZEF0dHJpYnV0ZXM6IHtcbiAgICBkZWNlbGVyYXRpb25SYXRlOiB0cnVlLFxuICAgIGRpc2FibGVJbnRlcnZhbE1vbWVudHVtOiB0cnVlLFxuICAgIGVuZEZpbGxDb2xvcjoge3Byb2Nlc3M6IHJlcXVpcmUoJy4uLy4uL1N0eWxlU2hlZXQvcHJvY2Vzc0NvbG9yJykuZGVmYXVsdH0sXG4gICAgZmFkaW5nRWRnZUxlbmd0aDogdHJ1ZSxcbiAgICBuZXN0ZWRTY3JvbGxFbmFibGVkOiB0cnVlLFxuICAgIG92ZXJTY3JvbGxNb2RlOiB0cnVlLFxuICAgIHBhZ2luZ0VuYWJsZWQ6IHRydWUsXG4gICAgcGVyc2lzdGVudFNjcm9sbGJhcjogdHJ1ZSxcbiAgICBzY3JvbGxFbmFibGVkOiB0cnVlLFxuICAgIHNjcm9sbFBlcmZUYWc6IHRydWUsXG4gICAgc2VuZE1vbWVudHVtRXZlbnRzOiB0cnVlLFxuICAgIHNob3dzSG9yaXpvbnRhbFNjcm9sbEluZGljYXRvcjogdHJ1ZSxcbiAgICBzbmFwVG9BbGlnbm1lbnQ6IHRydWUsXG4gICAgc25hcFRvRW5kOiB0cnVlLFxuICAgIHNuYXBUb0ludGVydmFsOiB0cnVlLFxuICAgIHNuYXBUb1N0YXJ0OiB0cnVlLFxuICAgIHNuYXBUb09mZnNldHM6IHRydWUsXG4gICAgY29udGVudE9mZnNldDogdHJ1ZSxcbiAgICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiB0cnVlLFxuICAgIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzOiB0cnVlLFxuICAgIGJvcmRlclJhZGl1czogdHJ1ZSxcbiAgICBib3JkZXJTdHlsZTogdHJ1ZSxcbiAgICBib3JkZXJSaWdodENvbG9yOiB7XG4gICAgICBwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpLmRlZmF1bHQsXG4gICAgfSxcbiAgICBib3JkZXJDb2xvcjoge3Byb2Nlc3M6IHJlcXVpcmUoJy4uLy4uL1N0eWxlU2hlZXQvcHJvY2Vzc0NvbG9yJykuZGVmYXVsdH0sXG4gICAgYm9yZGVyQm90dG9tQ29sb3I6IHtcbiAgICAgIHByb2Nlc3M6IHJlcXVpcmUoJy4uLy4uL1N0eWxlU2hlZXQvcHJvY2Vzc0NvbG9yJykuZGVmYXVsdCxcbiAgICB9LFxuICAgIGJvcmRlclRvcExlZnRSYWRpdXM6IHRydWUsXG4gICAgYm9yZGVyVG9wQ29sb3I6IHtwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpLmRlZmF1bHR9LFxuICAgIHJlbW92ZUNsaXBwZWRTdWJ2aWV3czogdHJ1ZSxcbiAgICBib3JkZXJUb3BSaWdodFJhZGl1czogdHJ1ZSxcbiAgICBib3JkZXJMZWZ0Q29sb3I6IHtcbiAgICAgIHByb2Nlc3M6IHJlcXVpcmUoJy4uLy4uL1N0eWxlU2hlZXQvcHJvY2Vzc0NvbG9yJykuZGVmYXVsdCxcbiAgICB9LFxuICAgIHBvaW50ZXJFdmVudHM6IHRydWUsXG4gIH0sXG59O1xuXG5jb25zdCBBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnQ6IEhvc3RDb21wb25lbnQ8UHJvcHM+ID1cbiAgTmF0aXZlQ29tcG9uZW50UmVnaXN0cnkuZ2V0PFByb3BzPihcbiAgICAnQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3JyxcbiAgICAoKSA9PiBfX0lOVEVSTkFMX1ZJRVdfQ09ORklHLFxuICApO1xuXG5leHBvcnQgZGVmYXVsdCBBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnQ7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQWdCQSxJQUFBQSx1QkFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQXlGLFNBQUFELHdCQUFBRSxDQUFBLEVBQUFDLENBQUEsNkJBQUFDLE9BQUEsTUFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBSix1QkFBQSxZQUFBQSx3QkFBQUUsQ0FBQSxFQUFBQyxDQUFBLFNBQUFBLENBQUEsSUFBQUQsQ0FBQSxJQUFBQSxDQUFBLENBQUFLLFVBQUEsU0FBQUwsQ0FBQSxNQUFB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