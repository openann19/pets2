{"version":3,"names":["_getJestObj","mock","getItem","jest","fn","setItem","removeItem","_interopRequireDefault","require","_asyncToGenerator2","_reactNative","_useGDPRStatus","_asyncStorage","_require","mockAsyncStorage","AsyncStorage","describe","beforeEach","clearAllMocks","mockResolvedValue","it","_renderHook","renderHook","useGDPRStatus","result","expect","current","status","isPending","toBe","daysRemaining","gracePeriodEndsAt","canCancel","isLoading","default","JSON","stringify","deletionRequested","Date","now","toISOString","_renderHook2","waitFor","mockRejectedValue","Error","_renderHook3","_renderHook4","act","refresh","_renderHook5","firstRefresh","_renderHook6","result2"],"sources":["useGDPRStatus.test.ts"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport { renderHook, act, waitFor } from \"@testing-library/react-native\";\nimport { useGDPRStatus } from \"../useGDPRStatus\";\n\n// Mock AsyncStorage\njest.mock(\"@react-native-async-storage/async-storage\", () => ({\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n}));\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst mockAsyncStorage = AsyncStorage as jest.Mocked<typeof AsyncStorage>;\n\ndescribe(\"useGDPRStatus\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockAsyncStorage.getItem.mockResolvedValue(null);\n  });\n\n  it(\"should initialize with default state\", () => {\n    const { result } = renderHook(() => useGDPRStatus());\n\n    expect(result.current.status.isPending).toBe(false);\n    expect(result.current.status.daysRemaining).toBe(null);\n    expect(result.current.status.gracePeriodEndsAt).toBe(null);\n    expect(result.current.status.canCancel).toBe(false);\n    expect(result.current.isLoading).toBe(true);\n  });\n\n  it(\"should load pending deletion status\", async () => {\n    mockAsyncStorage.getItem.mockResolvedValue(\n      JSON.stringify({\n        deletionRequested: true,\n        gracePeriodEndsAt: new Date(\n          Date.now() + 30 * 24 * 60 * 60 * 1000,\n        ).toISOString(),\n        daysRemaining: 25,\n      }),\n    );\n\n    const { result } = renderHook(() => useGDPRStatus());\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    expect(result.current.status.isPending).toBe(true);\n    expect(result.current.status.daysRemaining).toBe(25);\n    expect(result.current.status.canCancel).toBe(true);\n  });\n\n  it(\"should handle AsyncStorage errors gracefully\", async () => {\n    mockAsyncStorage.getItem.mockRejectedValue(new Error(\"Storage error\"));\n\n    const { result } = renderHook(() => useGDPRStatus());\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    expect(result.current.status.isPending).toBe(false);\n    expect(result.current.status.daysRemaining).toBe(null);\n  });\n\n  it(\"should refresh status when called\", async () => {\n    mockAsyncStorage.getItem.mockResolvedValue(null);\n\n    const { result } = renderHook(() => useGDPRStatus());\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    // Change the mock to return pending status\n    mockAsyncStorage.getItem.mockResolvedValue(\n      JSON.stringify({\n        deletionRequested: true,\n        daysRemaining: 15,\n      }),\n    );\n\n    act(() => {\n      result.current.refresh();\n    });\n\n    expect(result.current.isLoading).toBe(true);\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    expect(result.current.status.isPending).toBe(true);\n    expect(result.current.status.daysRemaining).toBe(15);\n  });\n\n  it(\"should return stable refresh function reference\", () => {\n    const { result } = renderHook(() => useGDPRStatus());\n\n    const firstRefresh = result.current.refresh;\n\n    // In React Native testing, create a new hook instance to test stability\n    const { result: result2 } = renderHook(() => useGDPRStatus());\n\n    expect(result.current.refresh).toBe(firstRefresh);\n  });\n});\n"],"mappings":"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","ignoreList":[]}