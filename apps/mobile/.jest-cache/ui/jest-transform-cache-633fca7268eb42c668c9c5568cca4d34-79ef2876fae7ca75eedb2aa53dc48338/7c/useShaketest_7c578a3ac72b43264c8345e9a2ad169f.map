{"version":3,"names":["_getJestObj","mock","impactAsync","jest","fn","ImpactFeedbackStyle","Light","Medium","Heavy","useSharedValue","useAnimatedStyle","withSequence","withTiming","runOnJS","interpolate","Extrapolate","CLAMP","logger","info","error","warn","_globals","require","_reactNative","_useShake","_expoHaptics","_reactNativeReanimated","_require","mockImpactAsync","mockUseSharedValue","mockUseAnimatedStyle","mockWithSequence","mockWithTiming","mockRunOnJS","mockInterpolate","describe","mockSharedValue","value","get","set","mockAnimatedStyle","transform","translateX","beforeEach","clearAllMocks","mockReturnValue","mockResolvedValue","undefined","it","_renderHook","renderHook","useShake","result","expect","toHaveBeenCalledWith","toHaveBeenCalled","current","isShaking","toBe","animatedStyle","_renderHook2","intensity","duration","enableHaptics","repeatCount","config","_renderHook3","act","shake","_renderHook4","anything","_renderHook5","objectContaining","any","Function","_renderHook6","sequenceCall","calls","onCompleteCallback","length","_renderHook7","_renderHook8","hapticStyle","_renderHook9","not","mockRejectedValue","Error","_renderHook0","_renderHook1","toEqual","arrayContaining","_renderHook10","Array","_renderHook11","direction","translateY","_renderHook12","toHaveBeenCalledTimes","_renderHook13","_renderHook14","startShake","stopShake","_renderHook15","resetShake","_renderHook16","_renderHook17","_renderHook18","Platform","OS","_renderHook19","getPlatformShakeSupport","supported","hapticAvailable","animationSupported","_renderHook20","_renderHook21","toBeDefined","_renderHook22","rerender","firstStyle","secondStyle","renderCount","_renderHook23","toBeLessThanOrEqual","_renderHook24","mockImplementation","_renderHook25","_renderHook26","_renderHook27","mockImplementationOnce","onComplete","finished","_renderHook28","gestureHandler","getGestureHandler","onStart","onEnd","onCancel","_renderHook29","externalTrigger","getShakeTrigger","_renderHook30","respectReducedMotion","global","__reducedMotion","_renderHook31","accessibilityInfo","getAccessibilityInfo","isAnimating","animationType","canBeDisabled","alternativeText","_renderHook32","_renderHook33","_renderHook34","_renderHook35","unmount","_renderHook36","_renderHook37","_renderHook38"],"sources":["useShake.test.ts"],"sourcesContent":["/**\n * Comprehensive tests for useShake hook\n *\n * Coverage:\n * - Shake gesture detection and triggering\n * - Haptic feedback integration\n * - Animation state management\n * - Customizable shake parameters\n * - Platform-specific behavior\n * - Error handling and edge cases\n */\n\nimport { describe, it, expect, jest, beforeEach, afterEach } from '@jest/globals';\nimport { renderHook, act } from '@testing-library/react-native';\nimport { useShake } from '../useShake';\n\n// Mock expo-haptics\njest.mock('expo-haptics', () => ({\n  impactAsync: jest.fn(),\n  ImpactFeedbackStyle: {\n    Light: 'light',\n    Medium: 'medium',\n    Heavy: 'heavy',\n  },\n}));\n\n// Mock react-native-reanimated\njest.mock('react-native-reanimated', () => ({\n  useSharedValue: jest.fn(),\n  useAnimatedStyle: jest.fn(),\n  withSequence: jest.fn(),\n  withTiming: jest.fn(),\n  runOnJS: jest.fn(),\n  interpolate: jest.fn(),\n  Extrapolate: {\n    CLAMP: 'clamp',\n  },\n}));\n\n// Mock logger\njest.mock('@pawfectmatch/core', () => ({\n  logger: {\n    info: jest.fn(),\n    error: jest.fn(),\n    warn: jest.fn(),\n  },\n}));\n\nimport { impactAsync, ImpactFeedbackStyle } from 'expo-haptics';\nimport {\n  useSharedValue,\n  useAnimatedStyle,\n  withSequence,\n  withTiming,\n  runOnJS,\n  interpolate,\n} from 'react-native-reanimated';\n\nconst mockImpactAsync = impactAsync as jest.Mock;\nconst mockUseSharedValue = useSharedValue as jest.Mock;\nconst mockUseAnimatedStyle = useAnimatedStyle as jest.Mock;\nconst mockWithSequence = withSequence as jest.Mock;\nconst mockWithTiming = withTiming as jest.Mock;\nconst mockRunOnJS = runOnJS as jest.Mock;\nconst mockInterpolate = interpolate as jest.Mock;\n\ndescribe('useShake', () => {\n  const mockSharedValue = {\n    value: 0,\n    get: jest.fn(() => 0),\n    set: jest.fn(),\n  };\n\n  const mockAnimatedStyle = {\n    transform: [{ translateX: mockInterpolate() }],\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n\n    // Setup default mocks\n    mockUseSharedValue.mockReturnValue(mockSharedValue);\n    mockUseAnimatedStyle.mockReturnValue(mockAnimatedStyle);\n    mockWithSequence.mockReturnValue('shake-sequence');\n    mockWithTiming.mockReturnValue('timing-animation');\n    mockInterpolate.mockReturnValue(-10);\n    mockImpactAsync.mockResolvedValue(undefined);\n  });\n\n  describe('Initialization', () => {\n    it('should initialize with default configuration', () => {\n      const { result } = renderHook(() => useShake());\n\n      expect(mockUseSharedValue).toHaveBeenCalledWith(0);\n      expect(mockUseAnimatedStyle).toHaveBeenCalled();\n      expect(result.current.isShaking).toBe(false);\n      expect(result.current.animatedStyle).toBe(mockAnimatedStyle);\n    });\n\n    it('should initialize with custom configuration', () => {\n      const { result } = renderHook(() =>\n        useShake({\n          intensity: 20,\n          duration: 800,\n          enableHaptics: false,\n          repeatCount: 3,\n        })\n      );\n\n      expect(result.current.config.intensity).toBe(20);\n      expect(result.current.config.duration).toBe(800);\n      expect(result.current.config.enableHaptics).toBe(false);\n      expect(result.current.config.repeatCount).toBe(3);\n    });\n  });\n\n  describe('Shake Animation', () => {\n    it('should trigger shake animation', () => {\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(result.current.isShaking).toBe(true);\n      expect(mockWithSequence).toHaveBeenCalled();\n      expect(mockSharedValue.set).toHaveBeenCalledWith(0); // Reset to starting position\n    });\n\n    it('should create shake sequence with correct pattern', () => {\n      const { result } = renderHook(() =>\n        useShake({ intensity: 15, repeatCount: 2 })\n      );\n\n      act(() => {\n        result.current.shake();\n      });\n\n      // Should create sequence with alternating movements\n      expect(mockWithSequence).toHaveBeenCalledWith(\n        expect.anything(), // First movement\n        expect.anything(), // Return to center\n        expect.anything(), // Second movement\n        expect.anything(), // Return to center\n        expect.anything(), // Third movement\n        expect.anything()  // Final return to center\n      );\n    });\n\n    it('should use custom duration for shake timing', () => {\n      const { result } = renderHook(() =>\n        useShake({ duration: 600 })\n      );\n\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(mockWithTiming).toHaveBeenCalledWith(\n        expect.anything(),\n        expect.objectContaining({ duration: 600 }),\n        expect.any(Function) // onComplete callback\n      );\n    });\n\n    it('should reset shake state when animation completes', () => {\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(result.current.isShaking).toBe(true);\n\n      // Simulate animation completion by calling the onComplete callback\n      const sequenceCall = mockWithSequence.mock.calls[0];\n      const onCompleteCallback = sequenceCall[sequenceCall.length - 1];\n      if (typeof onCompleteCallback === 'function') {\n        act(() => {\n          onCompleteCallback(true); // finished = true\n        });\n      }\n\n      expect(result.current.isShaking).toBe(false);\n    });\n  });\n\n  describe('Haptic Feedback', () => {\n    it('should trigger haptic feedback during shake', () => {\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(mockImpactAsync).toHaveBeenCalledWith('medium');\n    });\n\n    it('should use custom haptic style', () => {\n      const { result } = renderHook(() =>\n        useShake({ hapticStyle: 'heavy' })\n      );\n\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(mockImpactAsync).toHaveBeenCalledWith('heavy');\n    });\n\n    it('should disable haptic feedback when configured', () => {\n      const { result } = renderHook(() =>\n        useShake({ enableHaptics: false })\n      );\n\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(mockImpactAsync).not.toHaveBeenCalled();\n    });\n\n    it('should handle haptic feedback errors gracefully', () => {\n      mockImpactAsync.mockRejectedValue(new Error('Haptic not available'));\n\n      const { result } = renderHook(() => useShake());\n\n      // Should not crash\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(mockImpactAsync).toHaveBeenCalled();\n    });\n  });\n\n  describe('Animation Styles', () => {\n    it('should provide animated style with horizontal translation', () => {\n      const { result } = renderHook(() => useShake());\n\n      expect(result.current.animatedStyle).toEqual({\n        transform: [{ translateX: -10 }], // Mock interpolate return value\n      });\n\n      expect(mockInterpolate).toHaveBeenCalledWith(\n        expect.anything(), // sharedValue\n        expect.arrayContaining([-1, 0, 1]), // input range for shake pattern\n        expect.arrayContaining([-10, 0, 10]), // output range based on intensity\n        'clamp'\n      );\n    });\n\n    it('should use custom intensity in animation', () => {\n      const { result } = renderHook(() =>\n        useShake({ intensity: 25 })\n      );\n\n      expect(mockInterpolate).toHaveBeenCalledWith(\n        expect.anything(),\n        expect.any(Array),\n        expect.arrayContaining([-25, 0, 25]), // Custom intensity\n        'clamp'\n      );\n    });\n\n    it('should support vertical shake animation', () => {\n      const { result } = renderHook(() =>\n        useShake({ direction: 'vertical' })\n      );\n\n      expect(result.current.animatedStyle).toEqual({\n        transform: [{ translateY: -10 }], // Vertical translation instead of horizontal\n      });\n    });\n  });\n\n  describe('Shake Control', () => {\n    it('should prevent concurrent shakes', () => {\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(result.current.isShaking).toBe(true);\n\n      // Try to shake again while already shaking\n      act(() => {\n        result.current.shake();\n      });\n\n      // Should only have been called once\n      expect(mockWithSequence).toHaveBeenCalledTimes(1);\n    });\n\n    it('should allow shake after completion', () => {\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n      });\n\n      // Complete the animation\n      const sequenceCall = mockWithSequence.mock.calls[0];\n      const onCompleteCallback = sequenceCall[sequenceCall.length - 1];\n      if (typeof onCompleteCallback === 'function') {\n        act(() => {\n          onCompleteCallback(true);\n        });\n      }\n\n      expect(result.current.isShaking).toBe(false);\n\n      // Should allow new shake\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(mockWithSequence).toHaveBeenCalledTimes(2);\n    });\n\n    it('should provide manual control methods', () => {\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.startShake();\n      });\n\n      expect(result.current.isShaking).toBe(true);\n\n      act(() => {\n        result.current.stopShake();\n      });\n\n      expect(result.current.isShaking).toBe(false);\n    });\n\n    it('should reset animation state', () => {\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n        result.current.resetShake();\n      });\n\n      expect(result.current.isShaking).toBe(false);\n      expect(mockSharedValue.set).toHaveBeenCalledWith(0);\n    });\n  });\n\n  describe('Configuration Validation', () => {\n    it('should handle invalid intensity values', () => {\n      const { result } = renderHook(() =>\n        useShake({ intensity: -5 }) // Invalid negative intensity\n      );\n\n      // Should use default or clamped value\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(mockWithSequence).toHaveBeenCalled();\n    });\n\n    it('should handle invalid duration values', () => {\n      const { result } = renderHook(() =>\n        useShake({ duration: 0 }) // Invalid zero duration\n      );\n\n      act(() => {\n        result.current.shake();\n      });\n\n      // Should still work with some default duration\n      expect(mockWithTiming).toHaveBeenCalled();\n    });\n\n    it('should handle invalid repeat count', () => {\n      const { result } = renderHook(() =>\n        useShake({ repeatCount: 0 }) // No repeats\n      );\n\n      act(() => {\n        result.current.shake();\n      });\n\n      // Should create minimal sequence\n      expect(mockWithSequence).toHaveBeenCalled();\n    });\n  });\n\n  describe('Platform Compatibility', () => {\n    it('should work on iOS platform', () => {\n      Platform.OS = 'ios';\n\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(result.current.getPlatformShakeSupport()).toEqual({\n        supported: true,\n        hapticAvailable: true,\n        animationSupported: true,\n      });\n    });\n\n    it('should work on Android platform', () => {\n      Platform.OS = 'android';\n\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(result.current.getPlatformShakeSupport().supported).toBe(true);\n    });\n\n    it('should handle web platform limitations', () => {\n      Platform.OS = 'web';\n\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n      });\n\n      // Should still provide animation even on web\n      expect(result.current.animatedStyle).toBeDefined();\n    });\n  });\n\n  describe('Performance Optimizations', () => {\n    it('should memoize animated style', () => {\n      const { result, rerender } = renderHook(() => useShake());\n\n      const firstStyle = result.current.animatedStyle;\n      rerender();\n      const secondStyle = result.current.animatedStyle;\n\n      expect(firstStyle).toBe(secondStyle);\n      expect(mockUseAnimatedStyle).toHaveBeenCalledTimes(1);\n    });\n\n    it('should minimize re-renders during animation', () => {\n      let renderCount = 0;\n\n      const { result } = renderHook(() => {\n        renderCount++;\n        return useShake();\n      });\n\n      expect(renderCount).toBe(1);\n\n      act(() => {\n        result.current.shake();\n      });\n\n      // Should not cause excessive re-renders\n      expect(renderCount).toBeLessThanOrEqual(2);\n    });\n\n    it('should reuse animation sequences when possible', () => {\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n      });\n\n      act(() => {\n        result.current.shake();\n      });\n\n      // Should reuse the same animation pattern\n      expect(mockWithSequence).toHaveBeenCalledTimes(2);\n    });\n  });\n\n  describe('Error Handling', () => {\n    it('should handle animation setup failures', () => {\n      mockUseSharedValue.mockImplementation(() => {\n        throw new Error('Shared value creation failed');\n      });\n\n      const { result } = renderHook(() => useShake());\n\n      // Should provide fallback functionality\n      expect(result.current.shake).toBeDefined();\n      expect(result.current.isShaking).toBeDefined();\n    });\n\n    it('should handle animation runtime errors', () => {\n      mockWithSequence.mockImplementation(() => {\n        throw new Error('Animation runtime error');\n      });\n\n      const { result } = renderHook(() => useShake());\n\n      // Should not crash\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(result.current.isShaking).toBe(true); // Still updates state\n    });\n\n    it('should handle callback errors gracefully', () => {\n      const { result } = renderHook(() => useShake());\n\n      // Override the mock to simulate callback error\n      mockWithSequence.mockImplementationOnce(() => {\n        return {\n          onComplete: (finished: boolean) => {\n            if (finished) {\n              throw new Error('Callback error');\n            }\n          },\n        };\n      });\n\n      act(() => {\n        result.current.shake();\n      });\n\n      // Should handle callback errors without crashing\n      expect(result.current.isShaking).toBe(true);\n    });\n  });\n\n  describe('Integration with Other Systems', () => {\n    it('should integrate with gesture handlers', () => {\n      const { result } = renderHook(() => useShake());\n\n      const gestureHandler = result.current.getGestureHandler();\n\n      expect(gestureHandler).toEqual({\n        onStart: expect.any(Function),\n        onEnd: expect.any(Function),\n        onCancel: expect.any(Function),\n      });\n\n      // Simulate gesture start\n      act(() => {\n        gestureHandler.onStart?.({} as any);\n      });\n\n      expect(result.current.isShaking).toBe(true);\n    });\n\n    it('should provide shake trigger for external systems', () => {\n      const { result } = renderHook(() => useShake());\n\n      const externalTrigger = result.current.getShakeTrigger();\n\n      expect(typeof externalTrigger).toBe('function');\n\n      act(() => {\n        externalTrigger();\n      });\n\n      expect(result.current.isShaking).toBe(true);\n    });\n  });\n\n  describe('Accessibility Features', () => {\n    it('should respect reduced motion preferences', () => {\n      const { result } = renderHook(() =>\n        useShake({ respectReducedMotion: true })\n      );\n\n      // Mock reduced motion enabled\n      (global as any).__reducedMotion = true;\n\n      act(() => {\n        result.current.shake();\n      });\n\n      // Should skip animation but still trigger haptics\n      expect(mockWithSequence).toHaveBeenCalled(); // Still called, but implementation handles reduced motion\n      expect(result.current.config.respectReducedMotion).toBe(true);\n\n      delete (global as any).__reducedMotion;\n    });\n\n    it('should provide accessibility information', () => {\n      const { result } = renderHook(() => useShake());\n\n      const accessibilityInfo = result.current.getAccessibilityInfo();\n\n      expect(accessibilityInfo).toEqual({\n        isAnimating: false,\n        animationType: 'shake',\n        canBeDisabled: true,\n        alternativeText: 'Shaking animation',\n      });\n    });\n\n    it('should update accessibility info during animation', () => {\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n      });\n\n      const accessibilityInfo = result.current.getAccessibilityInfo();\n\n      expect(accessibilityInfo.isAnimating).toBe(true);\n    });\n  });\n\n  describe('Edge Cases', () => {\n    it('should handle rapid consecutive shakes', () => {\n      const { result } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n        result.current.shake();\n        result.current.shake();\n      });\n\n      // Should only execute one shake at a time\n      expect(mockWithSequence).toHaveBeenCalledTimes(1);\n    });\n\n    it('should handle shake with zero intensity', () => {\n      const { result } = renderHook(() =>\n        useShake({ intensity: 0 })\n      );\n\n      act(() => {\n        result.current.shake();\n      });\n\n      // Should still create animation sequence\n      expect(mockWithSequence).toHaveBeenCalled();\n    });\n\n    it('should handle component unmount during shake', () => {\n      const { result, unmount } = renderHook(() => useShake());\n\n      act(() => {\n        result.current.shake();\n      });\n\n      expect(result.current.isShaking).toBe(true);\n\n      unmount();\n\n      // Should not cause memory leaks\n      expect(mockSharedValue.set).toHaveBeenCalled();\n    });\n\n    it('should handle extreme configuration values', () => {\n      const { result } = renderHook(() =>\n        useShake({\n          intensity: 1000, // Very high intensity\n          duration: 10000, // Very long duration\n          repeatCount: 100, // Many repeats\n        })\n      );\n\n      act(() => {\n        result.current.shake();\n      });\n\n      // Should handle extreme values gracefully\n      expect(mockWithSequence).toHaveBeenCalled();\n    });\n\n    it('should handle invalid configuration types', () => {\n      const { result } = renderHook(() =>\n        useShake({\n          intensity: 'invalid' as any,\n          duration: null as any,\n          enableHaptics: 'maybe' as any,\n        })\n      );\n\n      // Should not crash, should use defaults\n      expect(result.current.config.intensity).toBeDefined();\n      expect(result.current.config.duration).toBeDefined();\n      expect(result.current.config.enableHaptics).toBeDefined();\n    });\n\n    it('should handle platform-specific animation limitations', () => {\n      // Simulate platform without animation support\n      mockUseSharedValue.mockImplementation(() => {\n        throw new Error('Animations not supported');\n      });\n\n      const { result } = renderHook(() => useShake());\n\n      // Should provide fallback behavior\n      expect(result.current.shake).toBeDefined();\n      expect(result.current.animatedStyle).toBeDefined();\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}