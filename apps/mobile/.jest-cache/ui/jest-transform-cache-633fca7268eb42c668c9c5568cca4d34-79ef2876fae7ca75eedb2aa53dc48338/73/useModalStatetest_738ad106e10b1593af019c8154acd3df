76ecac38355a88e4f3d10415c9250865
"use strict";

var _reactNative = require("@testing-library/react-native");
var _useModalState = require("../useModalState");
describe("useModalState", function () {
  it("should initialize with false", function () {
    var _renderHook = (0, _reactNative.renderHook)(function () {
        return (0, _useModalState.useModalState)();
      }),
      result = _renderHook.result;
    expect(result.current.isOpen).toBe(false);
  });
  it("should open modal", function () {
    var _renderHook2 = (0, _reactNative.renderHook)(function () {
        return (0, _useModalState.useModalState)();
      }),
      result = _renderHook2.result;
    (0, _reactNative.act)(function () {
      result.current.open();
    });
    expect(result.current.isOpen).toBe(true);
  });
  it("should close modal", function () {
    var _renderHook3 = (0, _reactNative.renderHook)(function () {
        return (0, _useModalState.useModalState)();
      }),
      result = _renderHook3.result;
    (0, _reactNative.act)(function () {
      result.current.open();
      result.current.close();
    });
    expect(result.current.isOpen).toBe(false);
  });
  it("should toggle modal state", function () {
    var _renderHook4 = (0, _reactNative.renderHook)(function () {
        return (0, _useModalState.useModalState)();
      }),
      result = _renderHook4.result;
    (0, _reactNative.act)(function () {
      return result.current.toggle();
    });
    expect(result.current.isOpen).toBe(true);
    (0, _reactNative.act)(function () {
      return result.current.toggle();
    });
    expect(result.current.isOpen).toBe(false);
  });
  it("should return stable function references", function () {
    var _renderHook5 = (0, _reactNative.renderHook)(function () {
        return (0, _useModalState.useModalState)();
      }),
      result = _renderHook5.result;
    var firstOpen = result.current.open;
    var firstClose = result.current.close;
    var firstToggle = result.current.toggle;
    var _renderHook6 = (0, _reactNative.renderHook)(function () {
        return (0, _useModalState.useModalState)();
      }),
      result2 = _renderHook6.result;
    expect(result.current.open).toBe(firstOpen);
    expect(result.current.close).toBe(firstClose);
    expect(result.current.toggle).toBe(firstToggle);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3VzZU1vZGFsU3RhdGUiLCJkZXNjcmliZSIsIml0IiwiX3JlbmRlckhvb2siLCJyZW5kZXJIb29rIiwidXNlTW9kYWxTdGF0ZSIsInJlc3VsdCIsImV4cGVjdCIsImN1cnJlbnQiLCJpc09wZW4iLCJ0b0JlIiwiX3JlbmRlckhvb2syIiwiYWN0Iiwib3BlbiIsIl9yZW5kZXJIb29rMyIsImNsb3NlIiwiX3JlbmRlckhvb2s0IiwidG9nZ2xlIiwiX3JlbmRlckhvb2s1IiwiZmlyc3RPcGVuIiwiZmlyc3RDbG9zZSIsImZpcnN0VG9nZ2xlIiwiX3JlbmRlckhvb2s2IiwicmVzdWx0MiJdLCJzb3VyY2VzIjpbInVzZU1vZGFsU3RhdGUudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBqZXN0LWVudmlyb25tZW50IGpzZG9tXG4gKi9cbmltcG9ydCB7IHJlbmRlckhvb2ssIGFjdCB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZVwiO1xuaW1wb3J0IHsgdXNlTW9kYWxTdGF0ZSB9IGZyb20gXCIuLi91c2VNb2RhbFN0YXRlXCI7XG5cbmRlc2NyaWJlKFwidXNlTW9kYWxTdGF0ZVwiLCAoKSA9PiB7XG4gIGl0KFwic2hvdWxkIGluaXRpYWxpemUgd2l0aCBmYWxzZVwiLCAoKSA9PiB7XG4gICAgY29uc3QgeyByZXN1bHQgfSA9IHJlbmRlckhvb2soKCkgPT4gdXNlTW9kYWxTdGF0ZSgpKTtcbiAgICBleHBlY3QocmVzdWx0LmN1cnJlbnQuaXNPcGVuKS50b0JlKGZhbHNlKTtcbiAgfSk7XG5cbiAgaXQoXCJzaG91bGQgb3BlbiBtb2RhbFwiLCAoKSA9PiB7XG4gICAgY29uc3QgeyByZXN1bHQgfSA9IHJlbmRlckhvb2soKCkgPT4gdXNlTW9kYWxTdGF0ZSgpKTtcbiAgICBhY3QoKCkgPT4ge1xuICAgICAgcmVzdWx0LmN1cnJlbnQub3BlbigpO1xuICAgIH0pO1xuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5pc09wZW4pLnRvQmUodHJ1ZSk7XG4gIH0pO1xuXG4gIGl0KFwic2hvdWxkIGNsb3NlIG1vZGFsXCIsICgpID0+IHtcbiAgICBjb25zdCB7IHJlc3VsdCB9ID0gcmVuZGVySG9vaygoKSA9PiB1c2VNb2RhbFN0YXRlKCkpO1xuICAgIGFjdCgoKSA9PiB7XG4gICAgICByZXN1bHQuY3VycmVudC5vcGVuKCk7XG4gICAgICByZXN1bHQuY3VycmVudC5jbG9zZSgpO1xuICAgIH0pO1xuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5pc09wZW4pLnRvQmUoZmFsc2UpO1xuICB9KTtcblxuICBpdChcInNob3VsZCB0b2dnbGUgbW9kYWwgc3RhdGVcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHsgcmVzdWx0IH0gPSByZW5kZXJIb29rKCgpID0+IHVzZU1vZGFsU3RhdGUoKSk7XG5cbiAgICBhY3QoKCkgPT4gcmVzdWx0LmN1cnJlbnQudG9nZ2xlKCkpO1xuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5pc09wZW4pLnRvQmUodHJ1ZSk7XG5cbiAgICBhY3QoKCkgPT4gcmVzdWx0LmN1cnJlbnQudG9nZ2xlKCkpO1xuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5pc09wZW4pLnRvQmUoZmFsc2UpO1xuICB9KTtcblxuICBpdChcInNob3VsZCByZXR1cm4gc3RhYmxlIGZ1bmN0aW9uIHJlZmVyZW5jZXNcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHsgcmVzdWx0IH0gPSByZW5kZXJIb29rKCgpID0+IHVzZU1vZGFsU3RhdGUoKSk7XG4gICAgY29uc3QgZmlyc3RPcGVuID0gcmVzdWx0LmN1cnJlbnQub3BlbjtcbiAgICBjb25zdCBmaXJzdENsb3NlID0gcmVzdWx0LmN1cnJlbnQuY2xvc2U7XG4gICAgY29uc3QgZmlyc3RUb2dnbGUgPSByZXN1bHQuY3VycmVudC50b2dnbGU7XG5cbiAgICAvLyBJbiBSZWFjdCBOYXRpdmUgdGVzdGluZywgY3JlYXRlIGEgbmV3IGhvb2sgaW5zdGFuY2UgdG8gdGVzdCBzdGFiaWxpdHlcbiAgICBjb25zdCB7IHJlc3VsdDogcmVzdWx0MiB9ID0gcmVuZGVySG9vaygoKSA9PiB1c2VNb2RhbFN0YXRlKCkpO1xuXG4gICAgZXhwZWN0KHJlc3VsdC5jdXJyZW50Lm9wZW4pLnRvQmUoZmlyc3RPcGVuKTtcbiAgICBleHBlY3QocmVzdWx0LmN1cnJlbnQuY2xvc2UpLnRvQmUoZmlyc3RDbG9zZSk7XG4gICAgZXhwZWN0KHJlc3VsdC5jdXJyZW50LnRvZ2dsZSkudG9CZShmaXJzdFRvZ2dsZSk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7O0FBR0EsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsY0FBQSxHQUFBRCxPQUFBO0FBRUFFLFFBQVEsQ0FBQyxlQUFlLEVBQUUsWUFBTTtFQUM5QkMsRUFBRSxDQUFDLDhCQUE4QixFQUFFLFlBQU07SUFDdkMsSUFBQUMsV0FBQSxHQUFtQixJQUFBQyx1QkFBVSxFQUFDO1FBQUEsT0FBTSxJQUFBQyw0QkFBYSxFQUFDLENBQUM7TUFBQSxFQUFDO01BQTVDQyxNQUFNLEdBQUFILFdBQUEsQ0FBTkcsTUFBTTtJQUNkQyxNQUFNLENBQUNELE1BQU0sQ0FBQ0UsT0FBTyxDQUFDQyxNQUFNLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLEtBQUssQ0FBQztFQUMzQyxDQUFDLENBQUM7RUFFRlIsRUFBRSxDQUFDLG1CQUFtQixFQUFFLFlBQU07SUFDNUIsSUFBQVMsWUFBQSxHQUFtQixJQUFBUCx1QkFBVSxFQUFDO1FBQUEsT0FBTSxJQUFBQyw0QkFBYSxFQUFDLENBQUM7TUFBQSxFQUFDO01BQTVDQyxNQUFNLEdBQUFLLFlBQUEsQ0FBTkwsTUFBTTtJQUNkLElBQUFNLGdCQUFHLEVBQUMsWUFBTTtNQUNSTixNQUFNLENBQUNFLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDLENBQUM7SUFDdkIsQ0FBQyxDQUFDO0lBQ0ZOLE1BQU0sQ0FBQ0QsTUFBTSxDQUFDRSxPQUFPLENBQUNDLE1BQU0sQ0FBQyxDQUFDQyxJQUFJLENBQUMs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