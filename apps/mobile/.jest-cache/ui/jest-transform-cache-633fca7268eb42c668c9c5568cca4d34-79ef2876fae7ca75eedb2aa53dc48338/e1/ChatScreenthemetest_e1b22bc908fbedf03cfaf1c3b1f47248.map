{"version":3,"names":["_getJestObj","mock","useCallManager","startCall","jest","fn","isCallActive","chatAPI","getMessages","Promise","resolve","sendMessage","_id","content","markAsRead","_interopRequireDefault","require","_reactNative","_react","_Provider","_ChatScreen","_jsxRuntime","_require","mockRoute","params","matchId","petName","mockNavigation","goBack","navigate","describe","it","_render","render","jsx","ThemeProvider","children","default","navigation","route","getByText","expect","toBeTruthy","_render2","getByTestId","toBe"],"sources":["ChatScreen.theme.test.tsx"],"sourcesContent":["import { render } from \"@testing-library/react-native\";\nimport React from \"react\";\n\nimport { ThemeProvider } from \"../../theme/Provider\";\nimport ChatScreen from \"../ChatScreen\";\n\n// Mock the route params\nconst mockRoute = {\n  params: {\n    matchId: \"test-match-id\",\n    petName: \"Buddy\",\n  },\n};\n\nconst mockNavigation = {\n  goBack: jest.fn(),\n  navigate: jest.fn(),\n};\n\n// Mock the calling components\njest.mock(\"../../components/calling/CallManager\", () => ({\n  useCallManager: () => ({\n    startCall: jest.fn(),\n    isCallActive: () => false,\n  }),\n}));\n\n// Mock the chat API\njest.mock(\"../../services/api\", () => ({\n  chatAPI: {\n    getMessages: jest.fn(() => Promise.resolve([])),\n    sendMessage: jest.fn(() =>\n      Promise.resolve({ _id: \"test\", content: \"test\" }),\n    ),\n    markAsRead: jest.fn(() => Promise.resolve()),\n  },\n}));\n\ndescribe(\"ChatScreen with Theme\", () => {\n  it(\"renders without crashing with theme provider\", () => {\n    const { getByText } = render(\n      <ThemeProvider>\n        <ChatScreen navigation={mockNavigation} route={mockRoute} />\n      </ThemeProvider>,\n    );\n\n    expect(getByText(\"Buddy\")).toBeTruthy();\n  });\n\n  it(\"applies theme colors correctly\", () => {\n    const { getByTestId } = render(\n      <ThemeProvider>\n        <ChatScreen navigation={mockNavigation} route={mockRoute} />\n      </ThemeProvider>,\n    );\n\n    // The component should render without throwing errors\n    // This tests that theme colors are properly applied\n    expect(true).toBe(true);\n  });\n});\n"],"mappings":";;AAoBAA,WAAA,GAAKC,IAAI,yCAAyC;EAAA,OAAO;IACvDC,cAAc,EAAE,SAAhBA,cAAcA,CAAA;MAAA,OAAS;QACrBC,SAAS,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC;QACpBC,YAAY,EAAE,SAAdA,YAAYA,CAAA;UAAA,OAAQ,KAAK;QAAA;MAC3B,CAAC;IAAA;EACH,CAAC;AAAA,CAAC,CAAC;AAGHN,WAAA,GAAKC,IAAI,uBAAuB;EAAA,OAAO;IACrCM,OAAO,EAAE;MACPC,WAAW,EAAEJ,IAAI,CAACC,EAAE,CAAC;QAAA,OAAMI,OAAO,CAACC,OAAO,CAAC,EAAE,CAAC;MAAA,EAAC;MAC/CC,WAAW,EAAEP,IAAI,CAACC,EAAE,CAAC;QAAA,OACnBI,OAAO,CAACC,OAAO,CAAC;UAAEE,GAAG,EAAE,MAAM;UAAEC,OAAO,EAAE;QAAO,CAAC,CAAC;MAAA,CACnD,CAAC;MACDC,UAAU,EAAEV,IAAI,CAACC,EAAE,CAAC;QAAA,OAAMI,OAAO,CAACC,OAAO,CAAC,CAAC;MAAA;IAC7C;EACF,CAAC;AAAA,CAAC,CAAC;AAAC,IAAAK,sBAAA,GAAAC,OAAA;AApCJ,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAH,sBAAA,CAAAC,OAAA;AAEA,IAAAG,SAAA,GAAAH,OAAA;AACA,IAAAI,WAAA,GAAAL,sBAAA,CAAAC,OAAA;AAAuC,IAAAK,WAAA,GAAAL,OAAA;AAAA,SAAAhB,YAAA;EAAA,IAAAsB,QAAA,GAAAN,OAAA;IAAAZ,IAAA,GAAAkB,QAAA,CAAAlB,IAAA;EAAAJ,WAAA,YAAAA,YAAA;IAAA,OAAAI,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGvC,IAAMmB,SAAS,GAAG;EAChBC,MAAM,EAAE;IACNC,OAAO,EAAE,eAAe;IACxBC,OAAO,EAAE;EACX;AACF,CAAC;AAED,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAExB,IAAI,CAACC,EAAE,CAAC,CAAC;EACjBwB,QAAQ,EAAEzB,IAAI,CAACC,EAAE,CAAC;AACpB,CAAC;AAqBDyB,QAAQ,CAAC,uBAAuB,EAAE,YAAM;EACtCC,EAAE,CAAC,8CAA8C,EAAE,YAAM;IACvD,IAAAC,OAAA,GAAsB,IAAAC,mBAAM,EAC1B,IAAAZ,WAAA,CAAAa,GAAA,EAACf,SAAA,CAAAgB,aAAa;QAAAC,QAAA,EACZ,IAAAf,WAAA,CAAAa,GAAA,EAACd,WAAA,CAAAiB,OAAU;UAACC,UAAU,EAAEX,cAAe;UAACY,KAAK,EAAEhB;QAAU,CAAE;MAAC,CAC/C,CACjB,CAAC;MAJOiB,SAAS,GAAAR,OAAA,CAATQ,SAAS;IAMjBC,MAAM,CAACD,SAAS,CAAC,OAAO,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EACzC,CAAC,CAAC;EAEFX,EAAE,CAAC,gCAAgC,EAAE,YAAM;IACzC,IAAAY,QAAA,GAAwB,IAAAV,mBAAM,EAC5B,IAAAZ,WAAA,CAAAa,GAAA,EAACf,SAAA,CAAAgB,aAAa;QAAAC,QAAA,EACZ,IAAAf,WAAA,CAAAa,GAAA,EAACd,WAAA,CAAAiB,OAAU;UAACC,UAAU,EAAEX,cAAe;UAACY,KAAK,EAAEhB;QAAU,CAAE;MAAC,CAC/C,CACjB,CAAC;MAJOqB,WAAW,GAAAD,QAAA,CAAXC,WAAW;IAQnBH,MAAM,CAAC,IAAI,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC;EACzB,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}