{"version":3,"names":["_getJestObj","mock","actual","jest","requireActual","_objectSpread","useNavigation","navigate","mockNavigate","_interopRequireDefault","require","Object","defineProperty","exports","value","renderWithProviders","_defineProperty2","_react","_reactNative","_native","_jsxRuntime","ownKeys","e","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","arguments","length","forEach","default","getOwnPropertyDescriptors","defineProperties","_require","fn","Providers","_ref","children","jsx","NavigationContainer","ui","options","render","wrapper"],"sources":["test-utils.tsx"],"sourcesContent":["import React, { type PropsWithChildren } from \"react\";\nimport { render, type RenderOptions } from \"@testing-library/react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nexport const mockNavigate = jest.fn();\n\njest.mock(\"@react-navigation/native\", () => {\n  // @ts-expect-error - jest.requireActual is defined by jest\n  const actual = jest.requireActual(\"@react-navigation/native\") as typeof import(\"@react-navigation/native\");\n  return {\n    ...actual,\n    useNavigation: () => ({ navigate: mockNavigate }),\n  };\n});\n\nfunction Providers({ children }: PropsWithChildren<{}>) {\n  // Keep providers minimal; MapScreen already receives navigation prop in tests where needed\n  return <NavigationContainer>{children}</NavigationContainer>;\n}\n\nexport function renderWithProviders(\n  ui: React.ReactElement,\n  options?: Omit<RenderOptions, \"queries\">\n) {\n  return render(ui, { wrapper: Providers, ...options });\n}\n\n"],"mappings":";;AAMAA,WAAA,GAAKC,IAAI,CAAC,0BAA0B,EAAE,YAAM;EAE1C,IAAMC,MAAM,GAAGC,IAAI,CAACC,aAAa,CAAC,0BAA0B,CAA8C;EAC1G,OAAAC,aAAA,CAAAA,aAAA,KACKH,MAAM;IACTI,aAAa,EAAE,SAAfA,aAAaA,CAAA;MAAA,OAAS;QAAEC,QAAQ,EAAEC;MAAa,CAAC;IAAA;EAAC;AAErD,CAAC,CAAC;AAAC,IAAAC,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAL,YAAA;AAAAK,OAAA,CAAAE,mBAAA,GAAAA,mBAAA;AAAA,IAAAC,gBAAA,GAAAP,sBAAA,CAAAC,OAAA;AAbH,IAAAO,MAAA,GAAAR,sBAAA,CAAAC,OAAA;AACA,IAAAQ,YAAA,GAAAR,OAAA;AACA,IAAAS,OAAA,GAAAT,OAAA;AAA+D,IAAAU,WAAA,GAAAV,OAAA;AAAA,SAAAW,QAAAC,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAb,MAAA,CAAAc,IAAA,CAAAH,CAAA,OAAAX,MAAA,CAAAe,qBAAA,QAAAC,CAAA,GAAAhB,MAAA,CAAAe,qBAAA,CAAAJ,CAAA,GAAAC,CAAA,KAAAI,CAAA,GAAAA,CAAA,CAAAC,MAAA,WAAAL,CAAA,WAAAZ,MAAA,CAAAkB,wBAAA,CAAAP,CAAA,EAAAC,CAAA,EAAAO,UAAA,OAAAN,CAAA,CAAAO,IAAA,CAAAC,KAAA,CAAAR,CAAA,EAAAG,CAAA,YAAAH,CAAA;AAAA,SAAAnB,cAAAiB,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAU,SAAA,CAAAC,MAAA,EAAAX,CAAA,UAAAC,CAAA,WAAAS,SAAA,CAAAV,CAAA,IAAAU,SAAA,CAAAV,CAAA,QAAAA,CAAA,OAAAF,OAAA,CAAAV,MAAA,CAAAa,CAAA,OAAAW,OAAA,WAAAZ,CAAA,QAAAP,gBAAA,CAAAoB,OAAA,EAAAd,CAAA,EAAAC,CAAA,EAAAC,CAAA,CAAAD,CAAA,SAAAZ,MAAA,CAAA0B,yBAAA,GAAA1B,MAAA,CAAA2B,gBAAA,CAAAhB,CAAA,EAAAX,MAAA,CAAA0B,yBAAA,CAAAb,CAAA,KAAAH,OAAA,CAAAV,MAAA,CAAAa,CAAA,GAAAW,OAAA,WAAAZ,CAAA,IAAAZ,MAAA,CAAAC,cAAA,CAAAU,CAAA,EAAAC,CAAA,EAAAZ,MAAA,CAAAkB,wBAAA,CAAAL,CAAA,EAAAD,CAAA,iBAAAD,CAAA;AAAA,SAAAtB,YAAA;EAAA,IAAAuC,QAAA,GAAA7B,OAAA;IAAAP,IAAA,GAAAoC,QAAA,CAAApC,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAExD,IAAMK,YAAY,GAAAK,OAAA,CAAAL,YAAA,GAAGL,IAAI,CAACqC,EAAE,CAAC,CAAC;AAWrC,SAASC,SAASA,CAAAC,IAAA,EAAsC;EAAA,IAAnCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAE3B,OAAO,IAAAvB,WAAA,CAAAwB,GAAA,EAACzB,OAAA,CAAA0B,mBAAmB;IAAAF,QAAA,EAAEA;EAAQ,CAAsB,CAAC;AAC9D;AAEO,SAAS5B,mBAAmBA,CACjC+B,EAAsB,EACtBC,OAAwC,EACxC;EACA,OAAO,IAAAC,mBAAM,EAACF,EAAE,EAAAzC,aAAA;IAAI4C,OAAO,EAAER;EAAS,GAAKM,OAAO,CAAE,CAAC;AACvD","ignoreList":[]}