{"version":3,"names":["_getJestObj","mock","logger","info","jest","fn","error","_interopRequireDefault","require","_asyncToGenerator2","_reactNative","_reactNative2","_useBlockedUsers","_require","spyOn","Alert","describe","beforeEach","clearAllMocks","useFakeTimers","afterEach","runOnlyPendingTimers","useRealTimers","it","_renderHook","renderHook","useBlockedUsers","result","expect","current","isLoading","toBe","blockedUsers","toEqual","isRefreshing","default","_renderHook2","act","loadBlockedUsers","waitFor","toHaveLength","totalBlocked","_renderHook3","advanceTimersByTime","_renderHook4","refreshData","_renderHook5","initialCount","length","unblockUser","alert","toHaveBeenCalledWith","arrayContaining","objectContaining","text","style","_renderHook6","success","blockUser","mockLogger","mockImplementationOnce","Error","_renderHook7","firstUser","toHaveProperty","reason","_renderHook8","blockedAt","toBeDefined","Date","toBeInstanceOf","_renderHook9","firstRefreshData","firstBlockUser","firstUnblockUser"],"sources":["useBlockedUsers.test.ts"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport { renderHook, act, waitFor } from \"@testing-library/react-native\";\nimport { Alert } from \"react-native\";\nimport { useBlockedUsers } from \"../useBlockedUsers\";\n\n// Mock Alert\njest.spyOn(Alert, \"alert\");\n\n// Mock logger\njest.mock(\"@pawfectmatch/core\", () => ({\n  logger: {\n    info: jest.fn(),\n    error: jest.fn(),\n  },\n}));\n\ndescribe(\"useBlockedUsers\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n  });\n\n  it(\"should initialize with loading state\", () => {\n    const { result } = renderHook(() => useBlockedUsers());\n\n    expect(result.current.isLoading).toBe(true);\n    expect(result.current.blockedUsers).toEqual([]);\n    expect(result.current.isRefreshing).toBe(false);\n  });\n\n  it(\"should load blocked users manually\", async () => {\n    const { result } = renderHook(() => useBlockedUsers());\n\n    // Manually load users\n    await act(async () => {\n      await result.current.loadBlockedUsers();\n    });\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    expect(result.current.blockedUsers).toHaveLength(2);\n    expect(result.current.totalBlocked).toBe(2);\n  });\n\n  it(\"should load blocked users on mount with timer\", async () => {\n    const { result } = renderHook(() => useBlockedUsers());\n\n    // Wait for the useEffect to trigger loadBlockedUsers\n    act(() => {\n      jest.advanceTimersByTime(1000);\n    });\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    expect(result.current.blockedUsers).toHaveLength(2);\n  });\n\n  it(\"should refresh blocked users\", async () => {\n    const { result } = renderHook(() => useBlockedUsers());\n\n    // Initial load\n    act(() => {\n      jest.advanceTimersByTime(1000);\n    });\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    // Refresh\n    await act(async () => {\n      await result.current.refreshData();\n    });\n\n    expect(result.current.isRefreshing).toBe(false);\n  });\n\n  it(\"should unblock a user\", async () => {\n    const { result } = renderHook(() => useBlockedUsers());\n\n    // Load users first\n    act(() => {\n      jest.advanceTimersByTime(1000);\n    });\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    const initialCount = result.current.blockedUsers.length;\n\n    // Mock the alert confirmation by calling the onPress directly\n    await act(async () => {\n      // Simulate user confirming unblock\n      await result.current.unblockUser(\"user1\", \"John Doe\");\n    });\n\n    // Since Alert.alert is mocked, we need to simulate the confirmation\n    // In a real scenario, the alert callback would be called\n    // For testing, we'll just verify the alert was shown\n    expect(Alert.alert).toHaveBeenCalledWith(\n      \"Unblock User\",\n      \"Are you sure you want to unblock John Doe?\",\n      expect.arrayContaining([\n        expect.objectContaining({ text: \"Cancel\", style: \"cancel\" }),\n        expect.objectContaining({ text: \"Unblock\", style: \"destructive\" }),\n      ]),\n    );\n  });\n\n  it(\"should block a user\", async () => {\n    const { result } = renderHook(() => useBlockedUsers());\n\n    await act(async () => {\n      const success = await result.current.blockUser(\"user3\", \"Spam\");\n      expect(success).toBe(true);\n    });\n  });\n\n  it(\"should handle blocking user failure\", async () => {\n    // Mock logger to throw error\n    const mockLogger = require(\"@pawfectmatch/core\").logger;\n    mockLogger.info.mockImplementationOnce(() => {\n      throw new Error(\"Network error\");\n    });\n\n    const { result } = renderHook(() => useBlockedUsers());\n\n    await act(async () => {\n      const success = await result.current.blockUser(\"user3\", \"Spam\");\n      expect(success).toBe(false);\n    });\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    const firstUser = result.current.blockedUsers[0];\n    expect(firstUser).toHaveProperty(\"id\");\n    expect(firstUser).toHaveProperty(\"name\");\n    expect(firstUser).toHaveProperty(\"email\");\n    expect(firstUser).toHaveProperty(\"blockedAt\");\n    expect(firstUser).toHaveProperty(\"reason\");\n    expect(firstUser.reason).toBe(\"Inappropriate behavior\");\n  });\n\n  it(\"should track blocked timestamp\", async () => {\n    const { result } = renderHook(() => useBlockedUsers());\n\n    act(() => {\n      jest.advanceTimersByTime(1000);\n    });\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    const firstUser = result.current.blockedUsers[0];\n    expect(firstUser.blockedAt).toBeDefined();\n    expect(new Date(firstUser.blockedAt)).toBeInstanceOf(Date);\n  });\n\n  it(\"should return stable function references\", () => {\n    const { result } = renderHook(() => useBlockedUsers());\n\n    act(() => {\n      jest.advanceTimersByTime(1000);\n    });\n\n    const firstRefreshData = result.current.refreshData;\n    const firstBlockUser = result.current.blockUser;\n    const firstUnblockUser = result.current.unblockUser;\n\n    // Re-render the hook (React will re-run the hook body)\n    act(() => {\n      // Trigger a re-render by changing some state or just wait\n      jest.advanceTimersByTime(100);\n    });\n\n    // Functions should be stable references\n    expect(result.current.refreshData).toBe(firstRefreshData);\n    expect(result.current.blockUser).toBe(firstBlockUser);\n    expect(result.current.unblockUser).toBe(firstUnblockUser);\n  });\n});\n"],"mappings":"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","ignoreList":[]}