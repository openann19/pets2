{"version":3,"names":["_react","require","_reactNative","_core","useBlockedUsers","exports","_useState","useState","_useState2","_slicedToArray2","default","blockedUsers","setBlockedUsers","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isRefreshing","setIsRefreshing","loadBlockedUsers","useCallback","_asyncToGenerator2","refresh","arguments","length","undefined","logger","info","Promise","resolve","setTimeout","mockUsers","id","name","email","blockedAt","Date","now","toISOString","reason","avatar","error","Alert","alert","unblockUser","_ref2","userId","userName","text","style","onPress","_onPress","prev","filter","user","apply","_x","_x2","blockUser","_ref3","_x3","_x4","refreshData","useEffect","totalBlocked"],"sources":["useBlockedUsers.ts"],"sourcesContent":["/**\n * useBlockedUsers Hook\n * Manages blocked users list, blocking/unblocking operations\n */\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Alert } from \"react-native\";\nimport { logger } from \"@pawfectmatch/core\";\n\ninterface BlockedUser {\n  id: string;\n  name: string;\n  email: string;\n  blockedAt: string;\n  reason?: string;\n  avatar?: string;\n}\n\ninterface UseBlockedUsersReturn {\n  // Data\n  blockedUsers: BlockedUser[];\n  isLoading: boolean;\n  isRefreshing: boolean;\n\n  // Actions\n  loadBlockedUsers: (refresh?: boolean) => Promise<void>;\n  unblockUser: (userId: string, userName: string) => Promise<void>;\n  blockUser: (userId: string, reason?: string) => Promise<boolean>;\n  refreshData: () => Promise<void>;\n\n  // Computed\n  totalBlocked: number;\n}\n\nexport const useBlockedUsers = (): UseBlockedUsersReturn => {\n  const [blockedUsers, setBlockedUsers] = useState<BlockedUser[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  const loadBlockedUsers = useCallback(async (refresh = false) => {\n    try {\n      if (refresh) setIsRefreshing(true);\n      else setIsLoading(true);\n\n      // In a real implementation, this would call the API\n      // For now, we'll simulate loading some mock data\n      logger.info(\"Loading blocked users\", { refresh });\n\n      // Simulate API call delay\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      // Mock data - in real app this would come from API\n      const mockUsers: BlockedUser[] = [\n        {\n          id: \"user1\",\n          name: \"John Doe\",\n          email: \"john@example.com\",\n          blockedAt: new Date(Date.now() - 86400000).toISOString(), // 1 day ago\n          reason: \"Inappropriate behavior\",\n          avatar: \"https://via.placeholder.com/40\",\n        },\n        {\n          id: \"user2\",\n          name: \"Jane Smith\",\n          email: \"jane@example.com\",\n          blockedAt: new Date(Date.now() - 172800000).toISOString(), // 2 days ago\n          reason: \"Spam messages\",\n        },\n      ];\n\n      setBlockedUsers(mockUsers);\n    } catch (error) {\n      logger.error(\"Failed to load blocked users\", { error });\n      Alert.alert(\"Error\", \"Failed to load blocked users. Please try again.\");\n    } finally {\n      setIsLoading(false);\n      setIsRefreshing(false);\n    }\n  }, []);\n\n  const unblockUser = useCallback(async (userId: string, userName: string) => {\n    Alert.alert(\n      \"Unblock User\",\n      `Are you sure you want to unblock ${userName}?`,\n      [\n        { text: \"Cancel\", style: \"cancel\" },\n        {\n          text: \"Unblock\",\n          style: \"destructive\",\n          onPress: async () => {\n            try {\n              // In a real implementation, this would call the API\n              logger.info(\"Unblocking user\", { userId, userName });\n\n              // Simulate API call\n              await new Promise((resolve) => setTimeout(resolve, 500));\n\n              // Remove from local state\n              setBlockedUsers((prev) =>\n                prev.filter((user) => user.id !== userId),\n              );\n              Alert.alert(\"Success\", `${userName} has been unblocked`);\n            } catch (error) {\n              logger.error(\"Failed to unblock user\", { error, userId });\n              Alert.alert(\"Error\", \"Failed to unblock user. Please try again.\");\n            }\n          },\n        },\n      ],\n    );\n  }, []);\n\n  const blockUser = useCallback(\n    async (userId: string, reason?: string): Promise<boolean> => {\n      try {\n        // In a real implementation, this would call the API\n        logger.info(\"Blocking user\", { userId, reason });\n\n        // Simulate API call\n        await new Promise((resolve) => setTimeout(resolve, 500));\n\n        // In a real app, you might want to refresh the list or update local state\n        return true;\n      } catch (error) {\n        logger.error(\"Failed to block user\", { error, userId });\n        return false;\n      }\n    },\n    [],\n  );\n\n  const refreshData = useCallback(async () => {\n    await loadBlockedUsers(true);\n  }, [loadBlockedUsers]);\n\n  // Initial load\n  useEffect(() => {\n    void loadBlockedUsers();\n  }, [loadBlockedUsers]);\n\n  const totalBlocked = blockedUsers.length;\n\n  return {\n    // Data\n    blockedUsers,\n    isLoading,\n    isRefreshing,\n\n    // Actions\n    loadBlockedUsers,\n    unblockUser,\n    blockUser,\n    refreshData,\n\n    // Computed\n    totalBlocked,\n  };\n};\n"],"mappings":"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","ignoreList":[]}