a800eaa8fa6e6a8cf821a3f208353e86
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatPercentage = formatPercentage;
exports.getAccessibilityFeatures = getAccessibilityFeatures;
exports.getAdaptiveDuration = getAdaptiveDuration;
exports.getAdaptiveHapticIntensity = getAdaptiveHapticIntensity;
exports.getHighContrastColors = getHighContrastColors;
exports.getSafeTouchTarget = getSafeTouchTarget;
exports.getVoiceOverLabels = getVoiceOverLabels;
exports.isReduceMotionEnabled = isReduceMotionEnabled;
exports.isScreenReaderEnabled = isScreenReaderEnabled;
exports.useA11yProps = useA11yProps;
exports.useAdaptiveDuration = useAdaptiveDuration;
exports.useReducedMotion = useReducedMotion;
exports.useScreenReader = useScreenReader;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _reactNative = require("react-native");
var _react = require("react");
function getAccessibilityFeatures() {
  return _getAccessibilityFeatures.apply(this, arguments);
}
function _getAccessibilityFeatures() {
  _getAccessibilityFeatures = (0, _asyncToGenerator2.default)(function* () {
    var _yield$Promise$all = yield Promise.all([_reactNative.AccessibilityInfo.isReduceMotionEnabled(), _reactNative.AccessibilityInfo.isScreenReaderEnabled(), Promise.resolve("light")]),
      _yield$Promise$all2 = (0, _slicedToArray2.default)(_yield$Promise$all, 3),
      reduceMotion = _yield$Promise$all2[0],
      screenReader = _yield$Promise$all2[1],
      colorScheme = _yield$Promise$all2[2];
    return {
      highContrast: false,
      reduceMotion: reduceMotion,
      screenReader: screenReader,
      colorScheme: colorScheme
    };
  });
  return _getAccessibilityFeatures.apply(this, arguments);
}
function isScreenReaderEnabled() {
  return _isScreenReaderEnabled.apply(this, arguments);
}
function _isScreenReaderEnabled() {
  _isScreenReaderEnabled = (0, _asyncToGenerator2.default)(function* () {
    return _reactNative.AccessibilityInfo.isScreenReaderEnabled();
  });
  return _isScreenReaderEnabled.apply(this, arguments);
}
function isReduceMotionEnabled() {
  return _isReduceMotionEnabled.apply(this, arguments);
}
function _isReduceMotionEnabled() {
  _isReduceMotionEnabled = (0, _asyncToGenerator2.default)(function* () {
    return _reactNative.AccessibilityInfo.isReduceMotionEnabled();
  });
  return _isReduceMotionEnabled.apply(this, arguments);
}
function getAdaptiveDuration(_x) {
  return _getAdaptiveDuration.apply(this, arguments);
}
function _getAdaptiveDuration() {
  _getAdaptiveDuration = (0, _asyncToGenerator2.default)(function* (normalDuration) {
    var reduceMotion = yield isReduceMotionEnabled();
    return reduceMotion ? 0 : normalDuration;
  });
  return _getAdaptiveDuration.apply(this, arguments);
}
function getAdaptiveHapticIntensity(_x2) {
  return _getAdaptiveHapticIntensity.apply(this, arguments);
}
function _getAdaptiveHapticIntensity() {
  _getAdaptiveHapticIntensity = (0, _asyncToGenerator2.default)(function* (defaultIntensity) {
    var reduceMotion = yield isReduceMotionEnabled();
    if (reduceMotion) {
      return "light";
    }
    return defaultIntensity;
  });
  return _getAdaptiveHapticIntensity.apply(this, arguments);
}
function getVoiceOverLabels() {
  return {
    brightness: "Brightness slider. Adjust image lightness.",
    contrast: "Contrast slider. Adjust image difference.",
    saturation: "Saturation slider. Adjust color intensity.",
    warmth: "Warmth slider. Adjust color temperature.",
    blur: "Blur slider. Add background blur effect.",
    sharpen: "Clarity slider. Enhance image sharpness.",
    autoCrop: "Auto crop button. Automatically crop image using face detection.",
    ratioOneOne: "One to one ratio button. Square image.",
    ratioFourFive: "Four to five ratio button. Portrait image.",
    ratioNineSixteen: "Nine to sixteen ratio button. Vertical story.",
    tightCrop: "Tight crop option. Close framing.",
    mediumCrop: "Medium crop option. Balanced framing.",
    looseCrop: "Loose crop option. Environmental framing.",
    save: "Save button. Save edited photo.",
    cancel: "Cancel button. Discard changes and exit.",
    undo: "Undo button. Revert last change.",
    redo: "Redo button. Restore reverted change.",
    compareOriginal: "Compare button. Hold to view original photo.",
    gridGuides: "Grid button. Toggle composition guides."
  };
}
function getHighContrastColors() {
  return {
    background: "#000000",
    surface: "#1a1a1a",
    text: "#ffffff",
    textSecondary: "#cccccc",
    primary: "#ffffff",
    border: "#ffffff",
    error: "#ff0000",
    success: "#00ff00",
    warning: "#ffff00"
  };
}
function getSafeTouchTarget(size) {
  return Math.max(size, 44);
}
function formatPercentage(value, min, max) {
  var percent = Math.round((value - min) / (max - min) * 100);
  return `${percent}%`;
}
function useReducedMotion() {
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    reduceMotion = _useState2[0],
    setReduceMotion = _useState2[1];
  (0, _react.useEffect)(function () {
    var mounted = true;
    _reactNative.AccessibilityInfo.isReduceMotionEnabled().then(function (enabled) {
      if (mounted) {
        setReduceMotion(enabled);
      }
    });
    var subscription = _reactNative.AccessibilityInfo.addEventListener('reduceMotionChanged', function (event) {
      if (mounted) {
        setReduceMotion(event);
      }
    });
    return function () {
      mounted = false;
      subscription.remove();
    };
  }, []);
  return reduceMotion;
}
function useScreenReader() {
  var _useState3 = (0, _react.useState)(false),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    isEnabled = _useState4[0],
    setIsEnabled = _useState4[1];
  (0, _react.useEffect)(function () {
    var mounted = true;
    _reactNative.AccessibilityInfo.isScreenReaderEnabled().then(function (enabled) {
      if (mounted) {
        setIsEnabled(enabled);
      }
    });
    var subscription = _reactNative.AccessibilityInfo.addEventListener('screenReaderChanged', function (event) {
      if (mounted) {
        setIsEnabled(event);
      }
    });
    return function () {
      mounted = false;
      subscription.remove();
    };
  }, []);
  return isEnabled;
}
function useAdaptiveDuration(normalDuration) {
  var reduceMotion = useReducedMotion();
  return reduceMotion ? 0 : normalDuration;
}
function useA11yProps(props) {
  var label = props.label,
    hint = props.hint,
    role = props.role,
    state = props.state,
    value = props.value,
    testID = props.testID;
  return {
    accessible: true,
    accessibilityLabel: label,
    accessibilityHint: hint,
    accessibilityRole: role,
    accessibilityState: state ? (0, _defineProperty2.default)({}, state, true) : undefined,
    accessibilityValue: value ? {
      text: value
    } : undefined,
    testID: testID
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3JlYWN0IiwiZ2V0QWNjZXNzaWJpbGl0eUZlYXR1cmVzIiwiX2dldEFjY2Vzc2liaWxpdHlGZWF0dXJlcyIsImFwcGx5IiwiYXJndW1lbnRzIiwiX2FzeW5jVG9HZW5lcmF0b3IyIiwiZGVmYXVsdCIsIl95aWVsZCRQcm9taXNlJGFsbCIsIlByb21pc2UiLCJhbGwiLCJBY2Nlc3NpYmlsaXR5SW5mbyIsImlzUmVkdWNlTW90aW9uRW5hYmxlZCIsImlzU2NyZWVuUmVhZGVyRW5hYmxlZCIsInJlc29sdmUiLCJfeWllbGQkUHJvbWlzZSRhbGwyIiwiX3NsaWNlZFRvQXJyYXkyIiwicmVkdWNlTW90aW9uIiwic2NyZWVuUmVhZGVyIiwiY29sb3JTY2hlbWUiLCJoaWdoQ29udHJhc3QiLCJfaXNTY3JlZW5SZWFkZXJFbmFibGVkIiwiX2lzUmVkdWNlTW90aW9uRW5hYmxlZCIsImdldEFkYXB0aXZlRHVyYXRpb24iLCJfeCIsIl9nZXRBZGFwdGl2ZUR1cmF0aW9uIiwibm9ybWFsRHVyYXRpb24iLCJnZXRBZGFwdGl2ZUhhcHRpY0ludGVuc2l0eSIsIl94MiIsIl9nZXRBZGFwdGl2ZUhhcHRpY0ludGVuc2l0eSIsImRlZmF1bHRJbnRlbnNpdHkiLCJnZXRWb2ljZU92ZXJMYWJlbHMiLCJicmlnaHRuZXNzIiwiY29udHJhc3QiLCJzYXR1cmF0aW9uIiwid2FybXRoIiwiYmx1ciIsInNoYXJwZW4iLCJhdXRvQ3JvcCIsInJhdGlvT25lT25lIiwicmF0aW9Gb3VyRml2ZSIsInJhdGlvTmluZVNpeHRlZW4iLCJ0aWdodENyb3AiLCJtZWRpdW1Dcm9wIiwibG9vc2VDcm9wIiwic2F2ZSIsImNhbmNlbCIsInVuZG8iLCJyZWRvIiwiY29tcGFyZU9yaWdpbmFsIiwiZ3JpZEd1aWRlcyIsImdldEhpZ2hDb250cmFzdENvbG9ycyIsImJhY2tncm91bmQiLCJzdXJmYWNlIiwidGV4dCIsInRleHRTZWNvbmRhcnkiLCJwcmltYXJ5IiwiYm9yZGVyIiwiZXJyb3IiLCJzdWNjZXNzIiwid2FybmluZyIsImdldFNhZmVUb3VjaFRhcmdldCIsInNpemUiLCJNYXRoIiwibWF4IiwiZm9ybWF0UGVyY2VudGFnZSIsInZhbHVlIiwibWluIiwicGVyY2VudCIsInJvdW5kIiwidXNlUmVkdWNlZE1vdGlvbiIsIl91c2VTdGF0ZSIsInVzZVN0YXRlIiwiX3VzZVN0YXRlMiIsInNldFJlZHVjZU1vdGlvbiIsInVzZUVmZmVjdCIsIm1vdW50ZWQiLCJ0aGVuIiwiZW5hYmxlZCIsInN1YnNjcmlwdGlvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInJlbW92ZSIsInVzZVNjcmVlblJlYWRlciIsIl91c2VTdGF0ZTMiLCJfdXNlU3RhdGU0IiwiaXNFbmFibGVkIiwic2V0SXNFbmFibGVkIiwidXNlQWRhcHRpdmVEdXJhdGlvbiIsInVzZUExMXlQcm9wcyIsInByb3BzIiwibGFiZWwiLCJoaW50Iiwicm9sZSIsInN0YXRlIiwidGVzdElEIiwiYWNjZXNzaWJsZSIsImFjY2Vzc2liaWxpdHlMYWJlbCIsImFjY2Vzc2liaWxpdHlIaW50IiwiYWNjZXNzaWJpbGl0eVJvbGUiLCJhY2Nlc3NpYmlsaXR5U3RhdGUiLCJfZGVmaW5lUHJvcGVydHkyIiwidW5kZWZpbmVkIiwiYWNjZXNzaWJpbGl0eVZhbHVlIl0sInNvdXJjZXMiOlsiQTExeUhlbHBlcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBY2Nlc3NpYmlsaXR5IEhlbHBlcnNcbiAqIFZvaWNlT3ZlciBoaW50cywgaGlnaCBjb250cmFzdCBzdXBwb3J0LCBSZWR1Y2UgTW90aW9uXG4gKi9cblxuaW1wb3J0IHsgQWNjZXNzaWJpbGl0eUluZm8sIHVzZUNvbG9yU2NoZW1lIH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuXG50eXBlIENvbG9yU2NoZW1lID0gJ2xpZ2h0JyB8ICdkYXJrJyB8IG51bGw7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWNjZXNzaWJpbGl0eUZlYXR1cmVzIHtcbiAgLyoqIEhpZ2ggY29udHJhc3QgbW9kZSBlbmFibGVkICovXG4gIGhpZ2hDb250cmFzdDogYm9vbGVhbjtcbiAgLyoqIFJlZHVjZSBtb3Rpb24gZW5hYmxlZCAqL1xuICByZWR1Y2VNb3Rpb246IGJvb2xlYW47XG4gIC8qKiBTY3JlZW4gcmVhZGVyIGVuYWJsZWQgKi9cbiAgc2NyZWVuUmVhZGVyOiBib29sZWFuO1xuICAvKiogQ29sb3Igc2NoZW1lIChsaWdodC9kYXJrKSAqL1xuICBjb2xvclNjaGVtZTogQ29sb3JTY2hlbWU7XG59XG5cbi8qKlxuICogR2V0IGN1cnJlbnQgYWNjZXNzaWJpbGl0eSBmZWF0dXJlc1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWNjZXNzaWJpbGl0eUZlYXR1cmVzKCk6IFByb21pc2U8QWNjZXNzaWJpbGl0eUZlYXR1cmVzPiB7XG4gIGNvbnN0IFtyZWR1Y2VNb3Rpb24sIHNjcmVlblJlYWRlciwgY29sb3JTY2hlbWVdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgIEFjY2Vzc2liaWxpdHlJbmZvLmlzUmVkdWNlTW90aW9uRW5hYmxlZCgpLFxuICAgIEFjY2Vzc2liaWxpdHlJbmZvLmlzU2NyZWVuUmVhZGVyRW5hYmxlZCgpLFxuICAgIFByb21pc2UucmVzb2x2ZShcImxpZ2h0XCIgYXMgQ29sb3JTY2hlbWUpLCAvLyBXb3VsZCBuZWVkIG5hdGl2ZSBtb2R1bGUgZm9yIGFjdHVhbCBzY2hlbWVcbiAgXSk7XG5cbiAgcmV0dXJuIHtcbiAgICBoaWdoQ29udHJhc3Q6IGZhbHNlLCAvLyBXb3VsZCBuZWVkIG5hdGl2ZSBtb2R1bGVcbiAgICByZWR1Y2VNb3Rpb24sXG4gICAgc2NyZWVuUmVhZGVyLFxuICAgIGNvbG9yU2NoZW1lLFxuICB9O1xufVxuXG4vKipcbiAqIENoZWNrIGlmIHNjcmVlbiByZWFkZXIgaXMgYWN0aXZlXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpc1NjcmVlblJlYWRlckVuYWJsZWQoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gIHJldHVybiBBY2Nlc3NpYmlsaXR5SW5mby5pc1NjcmVlblJlYWRlckVuYWJsZWQoKTtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiByZWR1Y2UgbW90aW9uIGlzIGVuYWJsZWRcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGlzUmVkdWNlTW90aW9uRW5hYmxlZCgpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgcmV0dXJuIEFjY2Vzc2liaWxpdHlJbmZvLmlzUmVkdWNlTW90aW9uRW5hYmxlZCgpO1xufVxuXG4vKipcbiAqIEdldCBhcHByb3ByaWF0ZSBhbmltYXRpb24gZHVyYXRpb24gYmFzZWQgb24gcmVkdWNlIG1vdGlvbiBwcmVmZXJlbmNlXG4gKiBAcGFyYW0gbm9ybWFsRHVyYXRpb24gLSBOb3JtYWwgYW5pbWF0aW9uIGR1cmF0aW9uIGluIG1zXG4gKiBAcmV0dXJucyBBcHByb3ByaWF0ZSBkdXJhdGlvbiAoMCBpZiByZWR1Y2UgbW90aW9uIGlzIG9uKVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWRhcHRpdmVEdXJhdGlvbihub3JtYWxEdXJhdGlvbjogbnVtYmVyKTogUHJvbWlzZTxudW1iZXI+IHtcbiAgY29uc3QgcmVkdWNlTW90aW9uID0gYXdhaXQgaXNSZWR1Y2VNb3Rpb25FbmFibGVkKCk7XG4gIHJldHVybiByZWR1Y2VNb3Rpb24gPyAwIDogbm9ybWFsRHVyYXRpb247XG59XG5cbi8qKlxuICogR2V0IGFwcHJvcHJpYXRlIGhhcHRpYyBpbnRlbnNpdHkgYmFzZWQgb24gdXNlciBwcmVmZXJlbmNlc1xuICogQHBhcmFtIGRlZmF1bHRJbnRlbnNpdHkgLSBEZWZhdWx0IGhhcHRpYyBpbnRlbnNpdHlcbiAqIEByZXR1cm5zIEFwcHJvcHJpYXRlIGludGVuc2l0eSAobWF5IGJlIHJlZHVjZWQgZm9yIGFjY2Vzc2liaWxpdHkpXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBZGFwdGl2ZUhhcHRpY0ludGVuc2l0eShkZWZhdWx0SW50ZW5zaXR5OiBcImxpZ2h0XCIgfCBcIm1lZGl1bVwiIHwgXCJoZWF2eVwiKTogUHJvbWlzZTxcImxpZ2h0XCIgfCBcIm1lZGl1bVwiIHwgXCJoZWF2eVwiPiB7XG4gIGNvbnN0IHJlZHVjZU1vdGlvbiA9IGF3YWl0IGlzUmVkdWNlTW90aW9uRW5hYmxlZCgpO1xuICBcbiAgLy8gUmVkdWNlIGhhcHRpY3MgZm9yIHVzZXJzIHdobyB3YW50IGxlc3Mgc3RpbXVsYXRpb25cbiAgaWYgKHJlZHVjZU1vdGlvbikge1xuICAgIHJldHVybiBcImxpZ2h0XCI7XG4gIH1cbiAgXG4gIHJldHVybiBkZWZhdWx0SW50ZW5zaXR5O1xufVxuXG4vKipcbiAqIEdlbmVyYXRlIFZvaWNlT3ZlciBsYWJlbHMgZm9yIHBob3RvIGVkaXRvciBjb250cm9sc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0Vm9pY2VPdmVyTGFiZWxzKCkge1xuICByZXR1cm4ge1xuICAgIGJyaWdodG5lc3M6IFwiQnJpZ2h0bmVzcyBzbGlkZXIuIEFkanVzdCBpbWFnZSBsaWdodG5lc3MuXCIsXG4gICAgY29udHJhc3Q6IFwiQ29udHJhc3Qgc2xpZGVyLiBBZGp1c3QgaW1hZ2UgZGlmZmVyZW5jZS5cIixcbiAgICBzYXR1cmF0aW9uOiBcIlNhdHVyYXRpb24gc2xpZGVyLiBBZGp1c3QgY29sb3IgaW50ZW5zaXR5LlwiLFxuICAgIHdhcm10aDogXCJXYXJtdGggc2xpZGVyLiBBZGp1c3QgY29sb3IgdGVtcGVyYXR1cmUuXCIsXG4gICAgYmx1cjogXCJCbHVyIHNsaWRlci4gQWRkIGJhY2tncm91bmQgYmx1ciBlZmZlY3QuXCIsXG4gICAgc2hhcnBlbjogXCJDbGFyaXR5IHNsaWRlci4gRW5oYW5jZSBpbWFnZSBzaGFycG5lc3MuXCIsXG4gICAgYXV0b0Nyb3A6IFwiQXV0byBjcm9wIGJ1dHRvbi4gQXV0b21hdGljYWxseSBjcm9wIGltYWdlIHVzaW5nIGZhY2UgZGV0ZWN0aW9uLlwiLFxuICAgIHJhdGlvT25lT25lOiBcIk9uZSB0byBvbmUgcmF0aW8gYnV0dG9uLiBTcXVhcmUgaW1hZ2UuXCIsXG4gICAgcmF0aW9Gb3VyRml2ZTogXCJGb3VyIHRvIGZpdmUgcmF0aW8gYnV0dG9uLiBQb3J0cmFpdCBpbWFnZS5cIixcbiAgICByYXRpb05pbmVTaXh0ZWVuOiBcIk5pbmUgdG8gc2l4dGVlbiByYXRpbyBidXR0b24uIFZlcnRpY2FsIHN0b3J5LlwiLFxuICAgIHRpZ2h0Q3JvcDogXCJUaWdodCBjcm9wIG9wdGlvbi4gQ2xvc2UgZnJhbWluZy5cIixcbiAgICBtZWRpdW1Dcm9wOiBcIk1lZGl1bSBjcm9wIG9wdGlvbi4gQmFsYW5jZWQgZnJhbWluZy5cIixcbiAgICBsb29zZUNyb3A6IFwiTG9vc2UgY3JvcCBvcHRpb24uIEVudmlyb25tZW50YWwgZnJhbWluZy5cIixcbiAgICBzYXZlOiBcIlNhdmUgYnV0dG9uLiBTYXZlIGVkaXRlZCBwaG90by5cIixcbiAgICBjYW5jZWw6IFwiQ2FuY2VsIGJ1dHRvbi4gRGlzY2FyZCBjaGFuZ2VzIGFuZCBleGl0LlwiLFxuICAgIHVuZG86IFwiVW5kbyBidXR0b24uIFJldmVydCBsYXN0IGNoYW5nZS5cIixcbiAgICByZWRvOiBcIlJlZG8gYnV0dG9uLiBSZXN0b3JlIHJldmVydGVkIGNoYW5nZS5cIixcbiAgICBjb21wYXJlT3JpZ2luYWw6IFwiQ29tcGFyZSBidXR0b24uIEhvbGQgdG8gdmlldyBvcmlnaW5hbCBwaG90by5cIixcbiAgICBncmlkR3VpZGVzOiBcIkdyaWQgYnV0dG9uLiBUb2dnbGUgY29tcG9zaXRpb24gZ3VpZGVzLlwiLFxuICB9O1xufVxuXG4vKipcbiAqIEdldCBoaWdoIGNvbnRyYXN0IGNvbG9yIHBhbGV0dGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEhpZ2hDb250cmFzdENvbG9ycygpIHtcbiAgcmV0dXJuIHtcbiAgICBiYWNrZ3JvdW5kOiBcIiMwMDAwMDBcIixcbiAgICBzdXJmYWNlOiBcIiMxYTFhMWFcIixcbiAgICB0ZXh0OiBcIiNmZmZmZmZcIixcbiAgICB0ZXh0U2Vjb25kYXJ5OiBcIiNjY2NjY2NcIixcbiAgICBwcmltYXJ5OiBcIiNmZmZmZmZcIixcbiAgICBib3JkZXI6IFwiI2ZmZmZmZlwiLFxuICAgIGVycm9yOiBcIiNmZjAwMDBcIixcbiAgICBzdWNjZXNzOiBcIiMwMGZmMDBcIixcbiAgICB3YXJuaW5nOiBcIiNmZmZmMDBcIixcbiAgfTtcbn1cblxuLyoqXG4gKiBHZXQgc2FmZSB0b3VjaCB0YXJnZXRzIChtaW5pbXVtIDQ0eDQ0IHBvaW50cyBmb3IgYWNjZXNzaWJpbGl0eSlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNhZmVUb3VjaFRhcmdldChzaXplOiBudW1iZXIpOiBudW1iZXIge1xuICByZXR1cm4gTWF0aC5tYXgoc2l6ZSwgNDQpO1xufVxuXG4vKipcbiAqIEZvcm1hdCBwZXJjZW50YWdlIHZhbHVlIGZvciBWb2ljZU92ZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFBlcmNlbnRhZ2UodmFsdWU6IG51bWJlciwgbWluOiBudW1iZXIsIG1heDogbnVtYmVyKTogc3RyaW5nIHtcbiAgY29uc3QgcGVyY2VudCA9IE1hdGgucm91bmQoKCh2YWx1ZSAtIG1pbikgLyAobWF4IC0gbWluKSkgKiAxMDApO1xuICByZXR1cm4gYCR7cGVyY2VudH0lYDtcbn1cblxuLyoqXG4gKiBIb29rIHRvIGNoZWNrIGlmIHJlZHVjZSBtb3Rpb24gaXMgZW5hYmxlZFxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlUmVkdWNlZE1vdGlvbigpOiBib29sZWFuIHtcbiAgY29uc3QgW3JlZHVjZU1vdGlvbiwgc2V0UmVkdWNlTW90aW9uXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBtb3VudGVkID0gdHJ1ZTtcbiAgICBcbiAgICAvLyBDaGVjayBpbml0aWFsIHN0YXRlXG4gICAgQWNjZXNzaWJpbGl0eUluZm8uaXNSZWR1Y2VNb3Rpb25FbmFibGVkKCkudGhlbigoZW5hYmxlZCkgPT4ge1xuICAgICAgaWYgKG1vdW50ZWQpIHtcbiAgICAgICAgc2V0UmVkdWNlTW90aW9uKGVuYWJsZWQpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gTGlzdGVuIGZvciBjaGFuZ2VzXG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gQWNjZXNzaWJpbGl0eUluZm8uYWRkRXZlbnRMaXN0ZW5lcigncmVkdWNlTW90aW9uQ2hhbmdlZCcsIChldmVudCkgPT4ge1xuICAgICAgaWYgKG1vdW50ZWQpIHtcbiAgICAgICAgc2V0UmVkdWNlTW90aW9uKGV2ZW50KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBtb3VudGVkID0gZmFsc2U7XG4gICAgICBzdWJzY3JpcHRpb24ucmVtb3ZlKCk7XG4gICAgfTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiByZWR1Y2VNb3Rpb247XG59XG5cbi8qKlxuICogSG9vayB0byBjaGVjayBpZiBzY3JlZW4gcmVhZGVyIGlzIGVuYWJsZWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVNjcmVlblJlYWRlcigpOiBib29sZWFuIHtcbiAgY29uc3QgW2lzRW5hYmxlZCwgc2V0SXNFbmFibGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBtb3VudGVkID0gdHJ1ZTtcbiAgICBcbiAgICBBY2Nlc3NpYmlsaXR5SW5mby5pc1NjcmVlblJlYWRlckVuYWJsZWQoKS50aGVuKChlbmFibGVkKSA9PiB7XG4gICAgICBpZiAobW91bnRlZCkge1xuICAgICAgICBzZXRJc0VuYWJsZWQoZW5hYmxlZCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBBY2Nlc3NpYmlsaXR5SW5mby5hZGRFdmVudExpc3RlbmVyKCdzY3JlZW5SZWFkZXJDaGFuZ2VkJywgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAobW91bnRlZCkge1xuICAgICAgICBzZXRJc0VuYWJsZWQoZXZlbnQpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIG1vdW50ZWQgPSBmYWxzZTtcbiAgICAgIHN1YnNjcmlwdGlvbi5yZW1vdmUoKTtcbiAgICB9O1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIGlzRW5hYmxlZDtcbn1cblxuLyoqXG4gKiBHZXQgYWRhcHRpdmUgYW5pbWF0aW9uIGR1cmF0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VBZGFwdGl2ZUR1cmF0aW9uKG5vcm1hbER1cmF0aW9uOiBudW1iZXIpOiBudW1iZXIge1xuICBjb25zdCByZWR1Y2VNb3Rpb24gPSB1c2VSZWR1Y2VkTW90aW9uKCk7XG4gIHJldHVybiByZWR1Y2VNb3Rpb24gPyAwIDogbm9ybWFsRHVyYXRpb247XG59XG5cbi8qKlxuICogR2VuZXJhdGUgYWNjZXNzaWJpbGl0eSBwcm9wcyBmb3IgaW50ZXJhY3RpdmUgY29tcG9uZW50c1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEExMXlQcm9wcyB7XG4gIGxhYmVsPzogc3RyaW5nO1xuICBoaW50Pzogc3RyaW5nO1xuICByb2xlPzogJ2J1dHRvbicgfCAnbGluaycgfCAndGV4dCcgfCAnaGVhZGVyJyB8ICdzZWFyY2hib3gnIHwgJ2ltYWdlJyB8ICdub25lJztcbiAgc3RhdGU/OiBzdHJpbmc7XG4gIHZhbHVlPzogc3RyaW5nO1xuICB0ZXN0SUQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VBMTF5UHJvcHMocHJvcHM6IEExMXlQcm9wcykge1xuICBjb25zdCB7IGxhYmVsLCBoaW50LCByb2xlLCBzdGF0ZSwgdmFsdWUsIHRlc3RJRCB9ID0gcHJvcHM7XG5cbiAgcmV0dXJuIHtcbiAgICBhY2Nlc3NpYmxlOiB0cnVlLFxuICAgIGFjY2Vzc2liaWxpdHlMYWJlbDogbGFiZWwsXG4gICAgYWNjZXNzaWJpbGl0eUhpbnQ6IGhpbnQsXG4gICAgYWNjZXNzaWJpbGl0eVJvbGU6IHJvbGUsXG4gICAgYWNjZXNzaWJpbGl0eVN0YXRlOiBzdGF0ZSA/IHsgW3N0YXRlXTogdHJ1ZSB9IDogdW5kZWZpbmVkLFxuICAgIGFjY2Vzc2liaWxpdHlWYWx1ZTogdmFsdWUgPyB7IHRleHQ6IHZhbHVlIH0gOiB1bmRlZmluZWQsXG4gICAgdGVzdElELFxuICB9O1xufVxuXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFLQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxNQUFBLEdBQUFELE9BQUE7QUFBNEMsU0FrQnRCRSx3QkFBd0JBLENBQUE7RUFBQSxPQUFBQyx5QkFBQSxDQUFBQyxLQUFBLE9BQUFDLFNBQUE7QUFBQTtBQUFBLFNBQUFGLDBCQUFBO0VBQUFBLHlCQUFBLE9BQUFHLGtCQUFBLENBQUFDLE9BQUEsRUFBdkMsYUFBMEU7SUFDL0UsSUFBQUMsa0JBQUEsU0FBd0RDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLENBQ2xFQyw4QkFBaUIsQ0FBQ0MscUJBQXFCLENBQUMsQ0FBQyxFQUN6Q0QsOEJBQWlCLENBQUNFLHFCQUFxQixDQUFDLENBQUMsRUFDekNKLE9BQU8sQ0FBQ0ssT0FBTyxDQUFDLE9BQXNCLENBQUMsQ0FDeEMsQ0FBQztNQUFBQyxtQkFBQSxPQUFBQyxlQUFBLENBQUFULE9BQUEsRUFBQUMsa0JBQUE7TUFKS1MsWUFBWSxHQUFBRixtQkFBQTtNQUFFRyxZQUFZLEdBQUFILG1CQUFBO01BQUVJLFdBQVcsR0FBQUosbUJBQUE7SUFNOUMsT0FBTztNQUNMSyxZQUFZLEVBQUUsS0FBSztNQUNuQkgsWUFBWSxFQUFaQSxZQUFZO01BQ1pDLFlBQVksRUFBWkEsWUFBWTtNQUNaQyxXQUFXLEVBQVhBO0lBQ0YsQ0FBQztFQUNILENBQUM7RUFBQSxPQUFBaEIseUJBQUEsQ0FBQUMsS0FBQSxPQUFBQyxTQUFBO0FBQUE7QUFBQSxTQUtxQlEscUJBQXFCQSxDQUFBO0VBQUEsT0FBQVEsc0JBQUEsQ0FBQWpCLEtBQUEsT0FBQUMsU0FBQTtBQUFBO0FBQUEsU0FBQWdCLHVCQUFBO0VBQUFB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