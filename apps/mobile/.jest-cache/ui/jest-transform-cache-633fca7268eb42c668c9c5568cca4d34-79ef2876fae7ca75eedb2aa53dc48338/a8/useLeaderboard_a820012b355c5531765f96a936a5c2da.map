{"version":3,"names":["_react","require","_core","_LeaderboardService","_interopRequireDefault","useLeaderboard","exports","_useState","useState","_useState2","_slicedToArray2","default","entries","setEntries","_useState3","_useState4","categories","setCategories","_useState5","_useState6","selectedCategory","setSelectedCategory","_useState7","_useState8","selectedPeriod","setSelectedPeriod","_useState9","_useState0","userRank","setUserRank","_useState1","_useState10","userEntry","setUserEntry","_useState11","_useState12","loading","setLoading","_useState13","_useState14","refreshing","setRefreshing","_useState15","_useState16","page","setPage","_useState17","_useState18","hasMore","setHasMore","_useState19","_useState20","showFilters","setShowFilters","loadCategories","useCallback","_asyncToGenerator2","categoriesData","LeaderboardService","getCategories","error","logger","loadLeaderboard","pageNum","arguments","length","undefined","filter","period","category","response","getLeaderboard","prev","concat","_toConsumableArray2","loadUserRank","rankData","getUserRank","rank","entry","loadInitialData","Promise","all","refreshData","loadMore","useEffect"],"sources":["useLeaderboard.ts"],"sourcesContent":["/**\n * useLeaderboard Hook\n * Manages leaderboard data, filtering, pagination, and user ranking\n */\nimport { useCallback, useEffect, useState } from \"react\";\nimport { logger } from \"@pawfectmatch/core\";\nimport type {\n  LeaderboardCategory,\n  LeaderboardEntry,\n  LeaderboardFilter,\n} from \"../../../services/LeaderboardService\";\nimport LeaderboardService from \"../../../services/LeaderboardService\";\n\ninterface UseLeaderboardReturn {\n  // Data\n  entries: LeaderboardEntry[];\n  categories: LeaderboardCategory[];\n  userRank: number | null;\n  userEntry: LeaderboardEntry | null;\n\n  // State\n  loading: boolean;\n  refreshing: boolean;\n  page: number;\n  hasMore: boolean;\n  showFilters: boolean;\n\n  // Filters\n  selectedCategory: string;\n  selectedPeriod: \"daily\" | \"weekly\" | \"monthly\" | \"all_time\";\n\n  // Actions\n  setSelectedCategory: (category: string) => void;\n  setSelectedPeriod: (\n    period: \"daily\" | \"weekly\" | \"monthly\" | \"all_time\",\n  ) => void;\n  setShowFilters: (show: boolean) => void;\n  refreshData: () => Promise<void>;\n  loadMore: () => Promise<void>;\n  loadInitialData: () => Promise<void>;\n}\n\nexport const useLeaderboard = (): UseLeaderboardReturn => {\n  const [entries, setEntries] = useState<LeaderboardEntry[]>([]);\n  const [categories, setCategories] = useState<LeaderboardCategory[]>([]);\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"all\");\n  const [selectedPeriod, setSelectedPeriod] = useState<\n    \"daily\" | \"weekly\" | \"monthly\" | \"all_time\"\n  >(\"weekly\");\n  const [userRank, setUserRank] = useState<number | null>(null);\n  const [userEntry, setUserEntry] = useState<LeaderboardEntry | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [showFilters, setShowFilters] = useState(false);\n\n  const loadCategories = useCallback(async () => {\n    try {\n      const categoriesData = await LeaderboardService.getCategories();\n      setCategories(categoriesData);\n    } catch (error) {\n      logger.error(\"Failed to load categories:\", { error });\n      throw error;\n    }\n  }, []);\n\n  const loadLeaderboard = useCallback(\n    async (pageNum = 1) => {\n      try {\n        const filter: LeaderboardFilter =\n          selectedCategory === \"all\"\n            ? { period: selectedPeriod }\n            : { category: selectedCategory, period: selectedPeriod };\n\n        const response = await LeaderboardService.getLeaderboard(\n          filter,\n          pageNum,\n          20,\n        );\n\n        if (pageNum === 1) {\n          setEntries(response.entries);\n        } else {\n          setEntries((prev) => [...prev, ...response.entries]);\n        }\n\n        setHasMore(response.hasMore);\n        setPage(pageNum);\n      } catch (error) {\n        logger.error(\"Failed to load leaderboard:\", { error });\n        throw error;\n      }\n    },\n    [selectedCategory, selectedPeriod],\n  );\n\n  const loadUserRank = useCallback(async () => {\n    try {\n      const rankData = await LeaderboardService.getUserRank(\n        selectedCategory === \"all\" ? undefined : selectedCategory,\n      );\n      setUserRank(rankData.rank);\n      setUserEntry(rankData.entry);\n    } catch (error) {\n      logger.error(\"Failed to load user rank:\", { error });\n      throw error;\n    }\n  }, [selectedCategory]);\n\n  const loadInitialData = useCallback(async () => {\n    try {\n      setLoading(true);\n      await Promise.all([loadCategories(), loadLeaderboard(), loadUserRank()]);\n    } catch (error) {\n      logger.error(\"Failed to load initial data:\", { error });\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, [loadCategories, loadLeaderboard, loadUserRank]);\n\n  const refreshData = useCallback(async () => {\n    try {\n      setRefreshing(true);\n      await Promise.all([loadLeaderboard(1), loadUserRank()]);\n    } catch (error) {\n      logger.error(\"Failed to refresh data:\", { error });\n      throw error;\n    } finally {\n      setRefreshing(false);\n    }\n  }, [loadLeaderboard, loadUserRank]);\n\n  const loadMore = useCallback(async () => {\n    if (!hasMore || loading) return;\n\n    try {\n      await loadLeaderboard(page + 1);\n    } catch (error) {\n      logger.error(\"Failed to load more entries:\", { error });\n      throw error;\n    }\n  }, [hasMore, loading, loadLeaderboard, page]);\n\n  // Load initial data\n  useEffect(() => {\n    void loadInitialData();\n  }, []);\n\n  // Reload when category or period changes\n  useEffect(() => {\n    if (categories.length > 0) {\n      void loadLeaderboard();\n      void loadUserRank();\n    }\n  }, [selectedCategory, selectedPeriod]);\n\n  return {\n    // Data\n    entries,\n    categories,\n    userRank,\n    userEntry,\n\n    // State\n    loading,\n    refreshing,\n    page,\n    hasMore,\n    showFilters,\n\n    // Filters\n    selectedCategory,\n    selectedPeriod,\n\n    // Actions\n    setSelectedCategory,\n    setSelectedPeriod,\n    setShowFilters,\n    refreshData,\n    loadMore,\n    loadInitialData,\n  };\n};\n"],"mappings":"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","ignoreList":[]}