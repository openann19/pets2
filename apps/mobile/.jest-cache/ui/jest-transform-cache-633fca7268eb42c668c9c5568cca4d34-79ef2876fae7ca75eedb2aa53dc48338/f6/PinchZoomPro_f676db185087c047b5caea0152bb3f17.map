{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativeGestureHandler","_reactNativeReanimated","Haptics","_elastic","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_Dimensions$get","Dimensions","SCREEN_WIDTH","width","_worklet_1267397540959_init_data","code","location","sourceMap","_worklet_12962998627236_init_data","_worklet_6702583258887_init_data","_worklet_178480105268_init_data","_worklet_15239965989834_init_data","_worklet_15091395185955_init_data","_worklet_11971310123882_init_data","_worklet_10279186787711_init_data","PinchZoomPro","_ref","source","_ref$width","_ref$height","height","_ref$initialScale","initialScale","_ref$minScale","minScale","_ref$maxScale","maxScale","_ref$enableMomentum","enableMomentum","onScaleChange","_ref$disabled","disabled","_ref$resizeMode","resizeMode","_ref$backgroundColor","backgroundColor","_ref$haptics","haptics","scale","useSharedValue","lastScale","tx","ty","lastTx","lastTy","trigger","useCallback","style","map","Light","ImpactFeedbackStyle","Medium","Heavy","impactAsync","pinch","Gesture","Pinch","enabled","onStart","_e","global","Error","_f","value","runOnJS","_closure","__initData","__workletHash","__stackDetails","__version","onUpdate","raw","s","rubberScale","onEnd","withSpring","pan","Pan","maxX","maxY","nx","translationX","ny","translationY","rubberClamp","zoomed","withDecay","velocity","velocityX","clamp","velocityY","hardClamp","doubleTap","Tap","numberOfTaps","maxDelay","success","target","Math","min","damping","stiffness","composed","Simultaneous","imageStyle","useAnimatedStyle","transform","translateX","translateY","jsx","GestureDetector","gesture","children","View","styles","container","center","Image","StyleSheet","create","overflow","borderRadius","alignItems","justifyContent","_default","exports"],"sources":["PinchZoomPro.tsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport { Image, StyleSheet, Dimensions } from \"react-native\";\nimport { Gesture, GestureDetector } from \"react-native-gesture-handler\";\nimport Animated, {\n  runOnJS,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n  withDecay,\n} from \"react-native-reanimated\";\nimport * as Haptics from \"expo-haptics\";\nimport { rubberClamp, rubberScale, hardClamp } from \"../../utils/elastic\";\n\nconst { width: SCREEN_WIDTH } = Dimensions.get(\"window\");\n\nexport interface PinchZoomProProps {\n  source: { uri: string } | number;\n  width?: number;\n  height?: number;\n  initialScale?: number;\n  minScale?: number;\n  maxScale?: number;\n  enableMomentum?: boolean;\n  onScaleChange?: (s: number) => void;\n  disabled?: boolean;\n  resizeMode?: \"cover\" | \"contain\" | \"stretch\" | \"repeat\" | \"center\";\n  backgroundColor?: string;\n  haptics?: boolean;\n}\n\nexport function PinchZoomPro({\n  source,\n  width = SCREEN_WIDTH,\n  height = 320,\n  initialScale = 1,\n  minScale = 1,\n  maxScale = 4,\n  enableMomentum = true,\n  onScaleChange,\n  disabled = false,\n  resizeMode = \"cover\",\n  backgroundColor = \"#0a0a0a\",\n  haptics = true,\n}: PinchZoomProProps) {\n  const scale = useSharedValue(initialScale);\n  const lastScale = useSharedValue(initialScale);\n\n  const tx = useSharedValue(0);\n  const ty = useSharedValue(0);\n  const lastTx = useSharedValue(0);\n  const lastTy = useSharedValue(0);\n\n  const trigger = useCallback((style: \"Light\" | \"Medium\" | \"Heavy\") => {\n    if (!haptics) return;\n    const map = {\n      Light: Haptics.ImpactFeedbackStyle.Light,\n      Medium: Haptics.ImpactFeedbackStyle.Medium,\n      Heavy: Haptics.ImpactFeedbackStyle.Heavy,\n    };\n    Haptics.impactAsync(map[style]);\n  }, [haptics]);\n\n  const pinch = Gesture.Pinch()\n    .enabled(!disabled)\n    .onStart(() => {\n      lastScale.value = scale.value;\n      if (haptics) runOnJS(trigger)(\"Light\");\n    })\n    .onUpdate((e) => {\n      // raw scale\n      const raw = lastScale.value * e.scale;\n      // rubber-band while out-of-bounds\n      const s = rubberScale(raw, minScale, maxScale, 0.42);\n      scale.value = s;\n      if (onScaleChange) runOnJS(onScaleChange)(s);\n    })\n    .onEnd(() => {\n      // snap back to hard clamp\n      if (scale.value < minScale) scale.value = withSpring(minScale);\n      if (scale.value > maxScale) scale.value = withSpring(maxScale);\n      if (haptics) runOnJS(trigger)(\"Medium\");\n    });\n\n  const pan = Gesture.Pan()\n    .enabled(!disabled)\n    .onStart(() => {\n      lastTx.value = tx.value;\n      lastTy.value = ty.value;\n    })\n    .onUpdate((e) => {\n      // content bounds at current scale\n      const maxX = (width * (scale.value - 1)) / 2;\n      const maxY = (height * (scale.value - 1)) / 2;\n\n      // desired translation\n      const nx = lastTx.value + e.translationX;\n      const ny = lastTy.value + e.translationY;\n\n      // elastic while panning outside bounds\n      tx.value = rubberClamp(nx, -maxX, maxX, 0.5);\n      ty.value = rubberClamp(ny, -maxY, maxY, 0.5);\n    })\n    .onEnd((e) => {\n      // only momentum when zoomed-in & allowed\n      const zoomed = scale.value > minScale + 0.001;\n      if (enableMomentum && zoomed) {\n        const maxX = (width * (scale.value - 1)) / 2;\n        const maxY = (height * (scale.value - 1)) / 2;\n        tx.value = withDecay({\n          velocity: e.velocityX,\n          clamp: [-maxX, maxX],\n        });\n        ty.value = withDecay({\n          velocity: e.velocityY,\n          clamp: [-maxY, maxY],\n        });\n      } else {\n        // snap to hard clamp\n        const maxX = (width * (scale.value - 1)) / 2;\n        const maxY = (height * (scale.value - 1)) / 2;\n        tx.value = withSpring(hardClamp(tx.value, -maxX, maxX));\n        ty.value = withSpring(hardClamp(ty.value, -maxY, maxY));\n      }\n    });\n\n  const doubleTap = Gesture.Tap()\n    .numberOfTaps(2)\n    .enabled(!disabled)\n    .maxDelay(280)\n    .onEnd((_e, success) => {\n      \"worklet\";\n      if (!success) return;\n      // quick zoom toggle with center snap\n      const target = scale.value > 1.001 ? 1 : Math.min(2, maxScale);\n      scale.value = withSpring(target, { damping: 18, stiffness: 230 });\n      tx.value = withSpring(0);\n      ty.value = withSpring(0);\n    });\n\n  const composed = Gesture.Simultaneous(pinch, pan, doubleTap);\n\n  const imageStyle = useAnimatedStyle(() => ({\n    transform: [\n      { translateX: tx.value },\n      { translateY: ty.value },\n      { scale: scale.value },\n    ],\n  }));\n\n  return (\n    <GestureDetector gesture={composed}>\n      <Animated.View style={[styles.container, { width, height, backgroundColor }]}>\n        <Animated.View style={[styles.center, imageStyle]}>\n          <Image\n            source={source}\n            style={{ width, height, backgroundColor: \"#111\" }}\n            resizeMode={resizeMode}\n          />\n        </Animated.View>\n      </Animated.View>\n    </GestureDetector>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { overflow: \"hidden\", borderRadius: 12 },\n  center: { alignItems: \"center\", justifyContent: \"center\" },\n});\n\nexport default PinchZoomPro;\n"],"mappings":"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","ignoreList":[]}