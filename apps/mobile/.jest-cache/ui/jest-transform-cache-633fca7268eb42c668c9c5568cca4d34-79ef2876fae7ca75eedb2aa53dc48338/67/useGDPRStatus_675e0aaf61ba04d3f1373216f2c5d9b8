53087aae578b1e31fd0fbab33625575c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useGDPRStatus = useGDPRStatus;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _gdprService = _interopRequireDefault(require("../../../services/gdprService"));
var _core = require("@pawfectmatch/core");
function useGDPRStatus() {
  var _useState = (0, _react.useState)({
      isPending: false,
      daysRemaining: null,
      gracePeriodEndsAt: null,
      canCancel: false
    }),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    status = _useState2[0],
    setStatus = _useState2[1];
  var _useState3 = (0, _react.useState)(true),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    isLoading = _useState4[0],
    setIsLoading = _useState4[1];
  var refresh = (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {
    setIsLoading(true);
    try {
      var result = yield _gdprService.default.getAccountStatus();
      if (result.success && result.status === 'pending') {
        var _result$daysRemaining, _result$scheduledDele, _result$canCancel;
        setStatus({
          isPending: true,
          daysRemaining: (_result$daysRemaining = result.daysRemaining) != null ? _result$daysRemaining : 30,
          gracePeriodEndsAt: (_result$scheduledDele = result.scheduledDeletionDate) != null ? _result$scheduledDele : null,
          canCancel: (_result$canCancel = result.canCancel) != null ? _result$canCancel : true
        });
      } else {
        setStatus({
          isPending: false,
          daysRemaining: null,
          gracePeriodEndsAt: null,
          canCancel: false
        });
      }
    } catch (error) {
      _core.logger.error("Failed to check GDPR status:", {
        error: error
      });
    } finally {
      setIsLoading(false);
    }
  }), []);
  (0, _react.useEffect)(function () {
    void refresh();
  }, [refresh]);
  return {
    status: status,
    isLoading: isLoading,
    refresh: refresh
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX2dkcHJTZXJ2aWNlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9jb3JlIiwidXNlR0RQUlN0YXR1cyIsIl91c2VTdGF0ZSIsInVzZVN0YXRlIiwiaXNQZW5kaW5nIiwiZGF5c1JlbWFpbmluZyIsImdyYWNlUGVyaW9kRW5kc0F0IiwiY2FuQ2FuY2VsIiwiX3VzZVN0YXRlMiIsIl9zbGljZWRUb0FycmF5MiIsImRlZmF1bHQiLCJzdGF0dXMiLCJzZXRTdGF0dXMiLCJfdXNlU3RhdGUzIiwiX3VzZVN0YXRlNCIsImlzTG9hZGluZyIsInNldElzTG9hZGluZyIsInJlZnJlc2giLCJ1c2VDYWxsYmFjayIsIl9hc3luY1RvR2VuZXJhdG9yMiIsInJlc3VsdCIsImdkcHJTZXJ2aWNlIiwiZ2V0QWNjb3VudFN0YXR1cyIsInN1Y2Nlc3MiLCJfcmVzdWx0JGRheXNSZW1haW5pbmciLCJfcmVzdWx0JHNjaGVkdWxlZERlbGUiLCJfcmVzdWx0JGNhbkNhbmNlbCIsInNjaGVkdWxlZERlbGV0aW9uRGF0ZSIsImVycm9yIiwibG9nZ2VyIiwidXNlRWZmZWN0Il0sInNvdXJjZXMiOlsidXNlR0RQUlN0YXR1cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IGdkcHJTZXJ2aWNlIGZyb20gXCIuLi8uLi8uLi9zZXJ2aWNlcy9nZHByU2VydmljZVwiO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSBcIkBwYXdmZWN0bWF0Y2gvY29yZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdEUFJTdGF0dXMge1xuICBpc1BlbmRpbmc6IGJvb2xlYW47XG4gIGRheXNSZW1haW5pbmc6IG51bWJlciB8IG51bGw7XG4gIGdyYWNlUGVyaW9kRW5kc0F0OiBzdHJpbmcgfCBudWxsO1xuICBjYW5DYW5jZWw6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVXNlR0RQUlN0YXR1c1JldHVybiB7XG4gIHN0YXR1czogR0RQUlN0YXR1cztcbiAgaXNMb2FkaW5nOiBib29sZWFuO1xuICByZWZyZXNoOiAoKSA9PiBQcm9taXNlPHZvaWQ+O1xufVxuXG4vKipcbiAqIEhvb2sgZm9yIGNoZWNraW5nIEdEUFIgZGVsZXRpb24gc3RhdHVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VHRFBSU3RhdHVzKCk6IFVzZUdEUFJTdGF0dXNSZXR1cm4ge1xuICBjb25zdCBbc3RhdHVzLCBzZXRTdGF0dXNdID0gdXNlU3RhdGU8R0RQUlN0YXR1cz4oe1xuICAgIGlzUGVuZGluZzogZmFsc2UsXG4gICAgZGF5c1JlbWFpbmluZzogbnVsbCxcbiAgICBncmFjZVBlcmlvZEVuZHNBdDogbnVsbCxcbiAgICBjYW5DYW5jZWw6IGZhbHNlLFxuICB9KTtcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuXG4gIGNvbnN0IHJlZnJlc2ggPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgc2V0SXNMb2FkaW5nKHRydWUpO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBnZHByU2VydmljZS5nZXRBY2NvdW50U3RhdHVzKCk7XG4gICAgICBcbiAgICAgIGlmIChyZXN1bHQuc3VjY2VzcyAmJiByZXN1bHQuc3RhdHVzID09PSAncGVuZGluZycpIHtcbiAgICAgICAgc2V0U3RhdHVzKHtcbiAgICAgICAgICBpc1BlbmRpbmc6IHRydWUsXG4gICAgICAgICAgZGF5c1JlbWFpbmluZzogcmVzdWx0LmRheXNSZW1haW5pbmcgPz8gMzAsXG4gICAgICAgICAgZ3JhY2VQZXJpb2RFbmRzQXQ6IHJlc3VsdC5zY2hlZHVsZWREZWxldGlvbkRhdGUgPz8gbnVsbCxcbiAgICAgICAgICBjYW5DYW5jZWw6IHJlc3VsdC5jYW5DYW5jZWwgPz8gdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRTdGF0dXMoe1xuICAgICAgICAgIGlzUGVuZGluZzogZmFsc2UsXG4gICAgICAgICAgZGF5c1JlbWFpbmluZzogbnVsbCxcbiAgICAgICAgICBncmFjZVBlcmlvZEVuZHNBdDogbnVsbCxcbiAgICAgICAgICBjYW5DYW5jZWw6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgbG9nZ2VyLmVycm9yKFwiRmFpbGVkIHRvIGNoZWNrIEdEUFIgc3RhdHVzOlwiLCB7IGVycm9yIH0pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfSwgW10pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgdm9pZCByZWZyZXNoKCk7XG4gIH0sIFtyZWZyZXNoXSk7XG5cbiAgcmV0dXJuIHtcbiAgICBzdGF0dXMsXG4gICAgaXNMb2FkaW5nLFxuICAgIHJlZnJlc2gsXG4gIH07XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLEtBQUEsR0FBQUgsT0FBQTtBQWtCTyxTQUFTSSxhQUFhQSxDQUFBLEVBQXdCO0VBQ25ELElBQUFDLFNBQUEsR0FBNEIsSUFBQUMsZUFBUSxFQUFhO01BQy9DQyxTQUFTLEVBQUUsS0FBSztNQUNoQkMsYUFBYSxFQUFFLElBQUk7TUFDbkJDLGlCQUFpQixFQUFFLElBQUk7TUFDdkJDLFNBQVMsRUFBRTtJQUNiLENBQUMsQ0FBQztJQUFBQyxVQUFBLE9BQUFDLGVBQUEsQ0FBQUMsT0FBQSxFQUFBUixTQUFBO0lBTEtTLE1BQU0sR0FBQUgsVUFBQTtJQUFFSSxTQUFTLEdBQUFKLFVBQUE7RUFNeEIsSUFBQUssVUFBQSxHQUFrQyxJQUFBVixlQUFRLEVBQUMsSUFBSSxDQUFDO0lBQUFXLFVBQUEsT0FBQUwsZUFBQSxDQUFBQyxPQUFBLEVBQUFHLFVBQUE7SUFBekNFLFNBQVMsR0FBQUQsVUFBQTtJQUFFRSxZQUFZLEdBQUFGLFVBQUE7RUFFOUIsSUFBTUcsT0FBTyxHQUFHLElBQUFDLGtCQUFXLE1BQUFDLGtCQUFBLENBQUFULE9BQUEsRUFBQyxhQUFZO0lBQ3RDTSxZQUFZLENBQUMsSUFBSSxDQUFDO0lBQ2xCLElBQUk7TUFDRixJQUFNSSxNQUFNLFNBQVNDLG9CQUFXLENBQUNDLGdCQUFnQixDQUFDLENBQUM7TUFFbkQsSUFBSUYsTUFBTSxDQUFDRyxPQUFPLElBQUlILE1BQU0sQ0FBQ1QsTUFBTSxLQUFLLFNBQVMsRUFBRTtRQUFBLElBQUFhLHFCQUFBLEVBQUFDLHFCQUFBLEVBQUFDLGlCQUFBO1FBQ2pEZCxTQUFTLENBQUM7VUFDUlIsU0FBUyxFQUFFLElBQUk7VUFDZkMsYUFBYSxHQUFBbUIscUJBQUEsR0FBRUosTUFBTSxDQUFDZixhQUFhLFlBQUFtQixxQkFBQSxHQUFJLEVBQUU7VUFDekNsQixpQkFBaUIsR0FBQW1CLHFCQUFBLEdBQUVMLE1BQU0sQ0FBQ08scUJBQXFCLFlBQUFGLHFCQUFBLEdBQUksSUFBSTtVQUN2RGxCLFNBQVMsR0FBQW1CLGlCQUFBLEdBQUVOLE1BQU0sQ0FBQ2IsU0FBUyxZQUFBbUIsaUJBQUEsR0FBSTtRQUNqQyxDQUFDLENBQUM7TUFDSixDQUFDLE1BQU07UUFDTGQsU0FBUyxDQUFDO1VBQ1JSLFNBQVMsRUFBRSxLQUFLO1VBQ2hCQyxhQUFhLEVBQUUsSUFBSTtVQUNuQkMsaUJBQWlCLEVBQUUsSUFBSTtVQUN2QkMsU0FBUyxFQUFFO1FBQ2IsQ0FBQyxDQUFDO01BQ0o7SUFDRixDQUFDLENBQUMsT0FBT3FCLEtBQUssRUFBRTtNQUNkQyxZQUFNLENBQUNELEtBQUssQ0FBQyw4QkFBOEIsRUFBRTtRQUFFQSxLQUFLLEVBQUxBO01BQU0sQ0FBQyxDQUFDO0lBQ3pELENBQUMsU0FBUztNQUNSWixZQUFZLENBQUMsS0FBSyxDQUFDO0lBQ3JCO0VBQ0YsQ0FBQyxHQUFFLEVBQUUsQ0FBQztFQUVOLElBQUFjLGdCQUFTLEVBQUMsWUFBTTtJQUNkLEtBQUtiLE9BQU8sQ0FBQyxDQUFDO0VBQ2hCLENBQUMsRUFBRSxDQUFDQSxPQUFPLENBQUMsQ0FBQztFQUViLE9BQU87SUFDTE4sTUFBTSxFQUFOQSxNQUFNO0lBQ05JLFNBQVMsRUFBVEEsU0FBUztJQUNURSxPQUFPLEVBQVBBO0VBQ0YsQ0FBQztBQUNIIiwiaWdub3JlTGlzdCI6W119