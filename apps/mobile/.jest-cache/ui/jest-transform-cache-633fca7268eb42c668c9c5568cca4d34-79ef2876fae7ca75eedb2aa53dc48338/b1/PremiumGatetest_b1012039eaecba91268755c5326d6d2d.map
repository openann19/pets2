{"version":3,"names":["_getJestObj","mock","_interopRequireDefault","require","_react","_PremiumGate","_jsxRuntime","_require","jest","mockNavigation","navigate","fn","describe","beforeEach","clearAllMocks","useTheme","mockReturnValue","colors","primary","secondary","background","text","isDark","it","useAuthStore","user","id","firstName","premium","isActive","plan","mockPremiumContent","jsx","default","Fragment","children","_render","render","navigation","premiumContent","featureDescription","getByText","queryByText","expect","toBeTruthy","toBeNull","_render2","getByTestId","_render3","fireEvent","press","toHaveBeenCalledWith","_render4","customMessage","card","_render5","container","props","style","toBeDefined"],"sources":["PremiumGate.test.tsx"],"sourcesContent":["import React from \"react\";\nimport {} from \"@testing-library/react-native\";\nimport \"@testing-library/jest-native/extend-expect\";\nimport PremiumGate from \"../../Premium/PremiumGate\";\nimport {} from \"@pawfectmatch/core\";\nimport {} from \"../../../theme/Provider\";\nimport { Theme } from '../../../theme/unified-theme';\n\n// Mock dependencies\njest.mock(\"@pawfectmatch/core\");\njest.mock(\"../../../theme/Provider\");\n\nconst mockNavigation = {\n  navigate: jest.fn(),\n};\n\ndescribe(\"PremiumGate\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n\n    // Mock theme context\n    (useTheme as jest.Mock).mockReturnValue({\n      colors: {\n        primary: \"#7c3aed\",\n        secondary: \"Theme.colors.primary[500]\",\n        background: \"Theme.colors.neutral[0]\",\n        text: \"Theme.colors.neutral[950]\",\n      },\n      isDark: false,\n    });\n  });\n\n  it(\"renders premium content when user is premium\", () => {\n    // Mock user as premium\n    (useAuthStore as jest.Mock).mockReturnValue({\n      user: {\n        id: \"user-123\",\n        firstName: \"Test\",\n        premium: {\n          isActive: true,\n          plan: \"premium\",\n        },\n      },\n    });\n\n    const mockPremiumContent = jest.fn(() => (\n      <React.Fragment>Premium Content</React.Fragment>\n    ));\n    const { getByText, queryByText } = render(\n      <PremiumGate\n        navigation={mockNavigation}\n        premiumContent={mockPremiumContent}\n        featureDescription=\"This feature\"\n      />,\n    );\n\n    // Should render premium content\n    expect(getByText(\"Premium Content\")).toBeTruthy();\n\n    // Should not render paywall\n    expect(queryByText(\"Premium Feature\")).toBeNull();\n  });\n\n  it(\"renders paywall when user is not premium\", () => {\n    // Mock user as non-premium\n    (useAuthStore as jest.Mock).mockReturnValue({\n      user: {\n        id: \"user-123\",\n        firstName: \"Test\",\n        premium: {\n          isActive: false,\n        },\n      },\n    });\n\n    const mockPremiumContent = jest.fn(() => (\n      <React.Fragment>Premium Content</React.Fragment>\n    ));\n    const { getByText, queryByText, getByTestId } = render(\n      <PremiumGate\n        navigation={mockNavigation}\n        premiumContent={mockPremiumContent}\n        featureDescription=\"Advanced filters\"\n      />,\n    );\n\n    // Should render paywall\n    expect(getByText(\"Premium Feature\")).toBeTruthy();\n    expect(\n      getByText(\"Advanced filters requires a premium subscription\"),\n    ).toBeTruthy();\n\n    // Should not render premium content\n    expect(queryByText(\"Premium Content\")).toBeNull();\n\n    // Should show upgrade button\n    expect(getByTestId(\"upgrade-button\")).toBeTruthy();\n  });\n\n  it(\"navigates to Premium screen when upgrade button is pressed\", () => {\n    // Mock user as non-premium\n    (useAuthStore as jest.Mock).mockReturnValue({\n      user: {\n        id: \"user-123\",\n        firstName: \"Test\",\n        premium: {\n          isActive: false,\n        },\n      },\n    });\n\n    const mockPremiumContent = jest.fn(() => (\n      <React.Fragment>Premium Content</React.Fragment>\n    ));\n    const { getByText } = render(\n      <PremiumGate\n        navigation={mockNavigation}\n        premiumContent={mockPremiumContent}\n        featureDescription=\"Advanced filters\"\n      />,\n    );\n\n    // Press upgrade button\n    fireEvent.press(getByText(\"Upgrade to Premium\"));\n\n    // Should navigate to Premium screen\n    expect(mockNavigation.navigate).toHaveBeenCalledWith(\"Premium\");\n  });\n\n  it(\"renders custom message when provided\", () => {\n    // Mock user as non-premium\n    (useAuthStore as jest.Mock).mockReturnValue({\n      user: {\n        id: \"user-123\",\n        firstName: \"Test\",\n        premium: {\n          isActive: false,\n        },\n      },\n    });\n\n    const mockPremiumContent = jest.fn(() => (\n      <React.Fragment>Premium Content</React.Fragment>\n    ));\n    const { getByText } = render(\n      <PremiumGate\n        navigation={mockNavigation}\n        premiumContent={mockPremiumContent}\n        featureDescription=\"Advanced filters\"\n        customMessage=\"Get premium to unlock advanced filters!\"\n      />,\n    );\n\n    // Should render custom message\n    expect(getByText(\"Get premium to unlock advanced filters!\")).toBeTruthy();\n  });\n\n  it(\"renders with dark theme style\", () => {\n    // Mock dark theme\n    (useTheme as jest.Mock).mockReturnValue({\n      colors: {\n        primary: \"#7c3aed\",\n        secondary: \"Theme.colors.primary[500]\",\n        background: \"Theme.colors.neutral[800]\",\n        text: \"Theme.colors.neutral[0]\",\n        card: \"Theme.colors.neutral[700]\",\n      },\n      isDark: true,\n    });\n\n    // Mock user as non-premium\n    (useAuthStore as jest.Mock).mockReturnValue({\n      user: {\n        id: \"user-123\",\n        firstName: \"Test\",\n        premium: {\n          isActive: false,\n        },\n      },\n    });\n\n    const mockPremiumContent = jest.fn(() => (\n      <React.Fragment>Premium Content</React.Fragment>\n    ));\n    const { getByTestId } = render(\n      <PremiumGate\n        navigation={mockNavigation}\n        premiumContent={mockPremiumContent}\n        featureDescription=\"Advanced filters\"\n      />,\n    );\n\n    // Should have dark theme style\n    const container = getByTestId(\"premium-gate-container\");\n    expect(container.props.style).toBeDefined();\n  });\n});\n"],"mappings":"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","ignoreList":[]}