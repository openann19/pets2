{"version":3,"names":["_react","require","_reactNative","_core","Haptics","_interopRequireWildcard","_useErrorHandler2","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useAdminDashboardScreen","_ref","navigation","_useErrorHandler","useErrorHandler","handleNetworkError","handleOfflineError","_useState","useState","totalUsers","activeUsers","totalPets","totalMatches","pendingVerifications","reportedContent","systemHealth","_useState2","_slicedToArray2","metrics","setMetrics","_useState3","_useState4","recentActivity","setRecentActivity","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","isRefreshing","setIsRefreshing","_useState9","_useState0","lastUpdated","setLastUpdated","loadDashboardData","useCallback","_ref2","_asyncToGenerator2","options","force","Promise","resolve","setTimeout","mockMetrics","mockActivity","id","type","message","timestamp","Date","now","priority","logger","info","activityCount","length","error","err","Error","_x","apply","arguments","useEffect","onRefresh","onNavigateToUsers","impactAsync","ImpactFeedbackStyle","Light","catch","navigate","onNavigateToChats","onNavigateToVerifications","onNavigateToUploads","onNavigateToAnalytics","onNavigateToSecurity","onNavigateToBilling","quickActions","title","subtitle","icon","action","Alert","alert","disabled","toUpperCase","onQuickAction","actionId","find","a","Medium","_default","exports"],"sources":["useAdminDashboardScreen.ts"],"sourcesContent":["/**\n * Admin Dashboard Screen Hook\n * Provides analytics, metrics, and quick actions for admin overview\n */\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Alert } from \"react-native\";\nimport { logger } from \"@pawfectmatch/core\";\nimport * as Haptics from \"expo-haptics\";\nimport type { AdminScreenProps } from \"../../navigation/types\";\nimport { useErrorHandler } from \"../useErrorHandler\";\n\ninterface DashboardMetrics {\n  totalUsers: number;\n  activeUsers: number;\n  totalPets: number;\n  totalMatches: number;\n  pendingVerifications: number;\n  reportedContent: number;\n  systemHealth: \"healthy\" | \"warning\" | \"critical\";\n}\n\ninterface RecentActivity {\n  id: string;\n  type:\n    | \"user_joined\"\n    | \"pet_created\"\n    | \"match_made\"\n    | \"report_filed\"\n    | \"verification_submitted\";\n  message: string;\n  timestamp: Date;\n  priority: \"low\" | \"medium\" | \"high\";\n}\n\ninterface QuickAction {\n  id: string;\n  title: string;\n  subtitle: string;\n  icon: string;\n  action: () => void;\n  disabled?: boolean;\n}\n\ninterface UseAdminDashboardScreenParams {\n  navigation: AdminScreenProps<\"AdminDashboard\">[\"navigation\"];\n}\n\nexport interface AdminDashboardScreenState {\n  // Data\n  metrics: DashboardMetrics;\n  recentActivity: RecentActivity[];\n  quickActions: QuickAction[];\n\n  // UI State\n  isLoading: boolean;\n  isRefreshing: boolean;\n  lastUpdated: Date | null;\n\n  // Actions\n  onRefresh: () => Promise<void>;\n  onNavigateToUsers: () => void;\n  onNavigateToChats: () => void;\n  onNavigateToVerifications: () => void;\n  onNavigateToUploads: () => void;\n  onNavigateToAnalytics: () => void;\n  onNavigateToSecurity: () => void;\n  onNavigateToBilling: () => void;\n  onQuickAction: (actionId: string) => void;\n}\n\n/**\n * Hook for admin dashboard screen\n * Provides comprehensive overview and navigation\n */\nexport function useAdminDashboardScreen({\n  navigation,\n}: UseAdminDashboardScreenParams): AdminDashboardScreenState {\n  const { handleNetworkError, handleOfflineError } = useErrorHandler();\n  const [metrics, setMetrics] = useState<DashboardMetrics>({\n    totalUsers: 0,\n    activeUsers: 0,\n    totalPets: 0,\n    totalMatches: 0,\n    pendingVerifications: 0,\n    reportedContent: 0,\n    systemHealth: \"healthy\",\n  });\n  const [recentActivity, setRecentActivity] = useState<RecentActivity[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\n\n  // Mock data loading - in real app, this would call admin APIs\n  const loadDashboardData = useCallback(\n    async (options?: { force?: boolean }) => {\n      try {\n        if (!options?.force) {\n          setIsLoading(true);\n        }\n\n        // Simulate API calls\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n\n        // Mock data - replace with real API calls\n        const mockMetrics: DashboardMetrics = {\n          totalUsers: 15420,\n          activeUsers: 12890,\n          totalPets: 8760,\n          totalMatches: 45230,\n          pendingVerifications: 23,\n          reportedContent: 7,\n          systemHealth: \"healthy\",\n        };\n\n        const mockActivity: RecentActivity[] = [\n          {\n            id: \"1\",\n            type: \"verification_submitted\",\n            message: \"New pet verification submitted\",\n            timestamp: new Date(Date.now() - 5 * 60 * 1000),\n            priority: \"medium\",\n          },\n          {\n            id: \"2\",\n            type: \"report_filed\",\n            message: \"Content report filed\",\n            timestamp: new Date(Date.now() - 12 * 60 * 1000),\n            priority: \"high\",\n          },\n          {\n            id: \"3\",\n            type: \"user_joined\",\n            message: \"New user registered\",\n            timestamp: new Date(Date.now() - 18 * 60 * 1000),\n            priority: \"low\",\n          },\n          {\n            id: \"4\",\n            type: \"match_made\",\n            message: \"New match created\",\n            timestamp: new Date(Date.now() - 25 * 60 * 1000),\n            priority: \"low\",\n          },\n        ];\n\n        setMetrics(mockMetrics);\n        setRecentActivity(mockActivity);\n        setLastUpdated(new Date());\n\n        logger.info(\"Admin dashboard data loaded\", {\n          metrics: mockMetrics,\n          activityCount: mockActivity.length,\n        });\n      } catch (error) {\n        const err =\n          error instanceof Error\n            ? error\n            : new Error(\"Failed to load dashboard\");\n        logger.error(\"Failed to load admin dashboard\", { error: err });\n\n        handleNetworkError(err, \"admin.dashboard.load\", () => {\n          void loadDashboardData(options);\n        });\n      } finally {\n        setIsLoading(false);\n        setIsRefreshing(false);\n      }\n    },\n    [handleNetworkError],\n  );\n\n  useEffect(() => {\n    void loadDashboardData();\n  }, [loadDashboardData]);\n\n  const onRefresh = useCallback(async () => {\n    setIsRefreshing(true);\n    await loadDashboardData({ force: true });\n  }, [loadDashboardData]);\n\n  // Navigation handlers\n  const onNavigateToUsers = useCallback(() => {\n    void Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light).catch(() => {});\n    navigation.navigate(\"AdminUsers\");\n  }, [navigation]);\n\n  const onNavigateToChats = useCallback(() => {\n    void Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light).catch(() => {});\n    navigation.navigate(\"AdminChats\");\n  }, [navigation]);\n\n  const onNavigateToVerifications = useCallback(() => {\n    void Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light).catch(() => {});\n    navigation.navigate(\"AdminVerifications\");\n  }, [navigation]);\n\n  const onNavigateToUploads = useCallback(() => {\n    void Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light).catch(() => {});\n    navigation.navigate(\"AdminUploads\");\n  }, [navigation]);\n\n  const onNavigateToAnalytics = useCallback(() => {\n    void Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light).catch(() => {});\n    navigation.navigate(\"AdminAnalytics\");\n  }, [navigation]);\n\n  const onNavigateToSecurity = useCallback(() => {\n    void Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light).catch(() => {});\n    navigation.navigate(\"AdminSecurity\");\n  }, [navigation]);\n\n  const onNavigateToBilling = useCallback(() => {\n    void Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light).catch(() => {});\n    navigation.navigate(\"AdminBilling\");\n  }, [navigation]);\n\n  // Quick actions\n  const quickActions: QuickAction[] = [\n    {\n      id: \"moderate_reports\",\n      title: \"Review Reports\",\n      subtitle: `${metrics.reportedContent} pending`,\n      icon: \"flag\",\n      action: () => {\n        Alert.alert(\"Moderate Reports\", \"Navigate to reports moderation\");\n      },\n      disabled: metrics.reportedContent === 0,\n    },\n    {\n      id: \"verify_pets\",\n      title: \"Verify Pets\",\n      subtitle: `${metrics.pendingVerifications} pending`,\n      icon: \"checkmark-circle\",\n      action: () => { onNavigateToVerifications(); },\n      disabled: metrics.pendingVerifications === 0,\n    },\n    {\n      id: \"system_health\",\n      title: \"System Health\",\n      subtitle:\n        metrics.systemHealth === \"healthy\"\n          ? \"All systems normal\"\n          : \"Check system status\",\n      icon: metrics.systemHealth === \"healthy\" ? \"shield-checkmark\" : \"warning\",\n      action: () => {\n        Alert.alert(\n          \"System Health\",\n          `Status: ${metrics.systemHealth.toUpperCase()}`,\n        );\n      },\n    },\n    {\n      id: \"export_data\",\n      title: \"Export Data\",\n      subtitle: \"Download system reports\",\n      icon: \"download\",\n      action: () => {\n        Alert.alert(\"Export Data\", \"Data export feature coming soon\");\n      },\n    },\n  ];\n\n  const onQuickAction = useCallback(\n    (actionId: string) => {\n      const action = quickActions.find((a) => a.id === actionId);\n      if (action && !action.disabled) {\n        void Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium).catch(\n          () => {},\n        );\n        action.action();\n      }\n    },\n    [quickActions],\n  );\n\n  return {\n    // Data\n    metrics,\n    recentActivity,\n    quickActions,\n\n    // UI State\n    isLoading,\n    isRefreshing,\n    lastUpdated,\n\n    // Actions\n    onRefresh,\n    onNavigateToUsers,\n    onNavigateToChats,\n    onNavigateToVerifications,\n    onNavigateToUploads,\n    onNavigateToAnalytics,\n    onNavigateToSecurity,\n    onNavigateToBilling,\n    onQuickAction,\n  };\n}\n\nexport default useAdminDashboardScreen;\n"],"mappings":"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","ignoreList":[]}