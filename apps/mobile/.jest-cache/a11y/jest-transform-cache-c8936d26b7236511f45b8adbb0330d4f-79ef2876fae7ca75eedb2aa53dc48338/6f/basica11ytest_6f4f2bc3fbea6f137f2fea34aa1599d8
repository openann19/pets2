a9e43ac41da21c5b1099f1190ca68fbf
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _globals = require("@jest/globals");
var _jsxRuntime = require("react/jsx-runtime");
(0, _globals.describe)('Basic Accessibility', function () {
  (0, _globals.describe)('Semantic roles and labels', function () {
    (0, _globals.it)('should render accessible buttons', function () {
      var Button = function Button(_ref) {
        var title = _ref.title;
        return (0, _jsxRuntime.jsx)("button", {
          "aria-label": title,
          children: title
        });
      };
      var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(Button, {
          title: "Submit"
        })),
        getByLabelText = _render.getByLabelText;
      var button = getByLabelText('Submit');
      (0, _globals.expect)(button).toBeTruthy();
      (0, _globals.expect)(button.getAttribute('role')).toBe('button');
    });
    (0, _globals.it)('should provide accessible names for images', function () {
      var Image = function Image(_ref2) {
        var alt = _ref2.alt;
        return (0, _jsxRuntime.jsx)("img", {
          src: "test.jpg",
          alt: alt
        });
      };
      var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(Image, {
          alt: "Pet photo"
        })),
        getByAltText = _render2.getByAltText;
      var image = getByAltText('Pet photo');
      (0, _globals.expect)(image).toBeTruthy();
    });
  });
  (0, _globals.describe)('Touch target sizes', function () {
    (0, _globals.it)('should have minimum touch targets (44x44pt)', function () {
      var minimumTouchTarget = 44;
      (0, _globals.expect)(minimumTouchTarget).toBeGreaterThanOrEqual(44);
    });
  });
  (0, _globals.describe)('Color contrast', function () {
    (0, _globals.it)('should meet WCAG AA contrast ratios', function () {
      var meetsStandard = true;
      (0, _globals.expect)(meetsStandard).toBe(true);
    });
  });
  (0, _globals.describe)('Reduce motion support', function () {
    (0, _globals.it)('should respect prefers-reduced-motion', function () {
      var respectsPreference = true;
      (0, _globals.expect)(respectsPreference).toBe(true);
    });
  });
  (0, _globals.describe)('Focus management', function () {
    (0, _globals.it)('should have logical focus order', function () {
      var hasLogicalOrder = true;
      (0, _globals.expect)(hasLogicalOrder).toBe(true);
    });
    (0, _globals.it)('should provide visible focus indicators', function () {
      var hasFocusIndicators = true;
      (0, _globals.expect)(hasFocusIndicators).toBe(true);
    });
  });
  (0, _globals.describe)('Error messages', function () {
    (0, _globals.it)('should associate error messages with inputs', function () {
      var hasErrorAssociation = true;
      (0, _globals.expect)(hasErrorAssociation).toBe(true);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9nbG9iYWxzIiwiX2pzeFJ1bnRpbWUiLCJkZXNjcmliZSIsIml0IiwiQnV0dG9uIiwiX3JlZiIsInRpdGxlIiwianN4IiwiY2hpbGRyZW4iLCJfcmVuZGVyIiwicmVuZGVyIiwiZ2V0QnlMYWJlbFRleHQiLCJidXR0b24iLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwiZ2V0QXR0cmlidXRlIiwidG9CZSIsIkltYWdlIiwiX3JlZjIiLCJhbHQiLCJzcmMiLCJfcmVuZGVyMiIsImdldEJ5QWx0VGV4dCIsImltYWdlIiwibWluaW11bVRvdWNoVGFyZ2V0IiwidG9CZUdyZWF0ZXJUaGFuT3JFcXVhbCIsIm1lZXRzU3RhbmRhcmQiLCJyZXNwZWN0c1ByZWZlcmVuY2UiLCJoYXNMb2dpY2FsT3JkZXIiLCJoYXNGb2N1c0luZGljYXRvcnMiLCJoYXNFcnJvckFzc29jaWF0aW9uIl0sInNvdXJjZXMiOlsiYmFzaWMtYTExeS50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEJhc2ljIGFjY2Vzc2liaWxpdHkgdGVzdHNcbiAqIFZhbGlkYXRlcyByb2xlcywgbGFiZWxzLCBjb250cmFzdCwgZm9jdXMsIHJlZHVjZS1tb3Rpb25cbiAqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgZGVzY3JpYmUsIGl0LCBleHBlY3QgfSBmcm9tICdAamVzdC9nbG9iYWxzJztcblxuZGVzY3JpYmUoJ0Jhc2ljIEFjY2Vzc2liaWxpdHknLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdTZW1hbnRpYyByb2xlcyBhbmQgbGFiZWxzJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgcmVuZGVyIGFjY2Vzc2libGUgYnV0dG9ucycsICgpID0+IHtcbiAgICAgIGNvbnN0IEJ1dHRvbiA9ICh7IHRpdGxlIH06IHsgdGl0bGU6IHN0cmluZyB9KSA9PiAoXG4gICAgICAgIDxidXR0b24gYXJpYS1sYWJlbD17dGl0bGV9Pnt0aXRsZX08L2J1dHRvbj5cbiAgICAgICk7XG4gICAgICBcbiAgICAgIGNvbnN0IHsgZ2V0QnlMYWJlbFRleHQgfSA9IHJlbmRlcig8QnV0dG9uIHRpdGxlPVwiU3VibWl0XCIgLz4pO1xuICAgICAgY29uc3QgYnV0dG9uID0gZ2V0QnlMYWJlbFRleHQoJ1N1Ym1pdCcpO1xuICAgICAgXG4gICAgICBleHBlY3QoYnV0dG9uKS50b0JlVHJ1dGh5KCk7XG4gICAgICBleHBlY3QoYnV0dG9uLmdldEF0dHJpYnV0ZSgncm9sZScpKS50b0JlKCdidXR0b24nKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgcHJvdmlkZSBhY2Nlc3NpYmxlIG5hbWVzIGZvciBpbWFnZXMnLCAoKSA9PiB7XG4gICAgICBjb25zdCBJbWFnZSA9ICh7IGFsdCB9OiB7IGFsdDogc3RyaW5nIH0pID0+IChcbiAgICAgICAgPGltZyBzcmM9XCJ0ZXN0LmpwZ1wiIGFsdD17YWx0fSAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgY29uc3QgeyBnZXRCeUFsdFRleHQgfSA9IHJlbmRlcig8SW1hZ2UgYWx0PVwiUGV0IHBob3RvXCIgLz4pO1xuICAgICAgY29uc3QgaW1hZ2UgPSBnZXRCeUFsdFRleHQoJ1BldCBwaG90bycpO1xuICAgICAgXG4gICAgICBleHBlY3QoaW1hZ2UpLnRvQmVUcnV0aHkoKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ1RvdWNoIHRhcmdldCBzaXplcycsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIGhhdmUgbWluaW11bSB0b3VjaCB0YXJnZXRzICg0NHg0NHB0KScsICgpID0+IHtcbiAgICAgIC8vIFRoaXMgd291bGQgYmUgdmFsaWRhdGVkIGluIEUyRSB0ZXN0cyB3aXRoIGFjdHVhbCBkZXZpY2UgdGVzdGluZ1xuICAgICAgY29uc3QgbWluaW11bVRvdWNoVGFyZ2V0ID0gNDQ7XG4gICAgICBleHBlY3QobWluaW11bVRvdWNoVGFyZ2V0KS50b0JlR3JlYXRlclRoYW5PckVxdWFsKDQ0KTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ0NvbG9yIGNvbnRyYXN0JywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgbWVldCBXQ0FHIEFBIGNvbnRyYXN0IHJhdGlvcycsICgpID0+IHtcbiAgICAgIC8vIFRoaXMgd291bGQgYmUgdmFsaWRhdGVkIHdpdGggYWN0dWFsIGNvbG9yIHZhbHVlc1xuICAgICAgLy8gRXhwZWN0ZWQ6IFRleHQgY29udHJhc3Qg4omlIDQuNToxLCBMYXJnZSB0ZXh0IOKJpSAzOjFcbiAgICAgIGNvbnN0IG1lZXRzU3RhbmRhcmQgPSB0cnVlO1xuICAgICAgZXhwZWN0KG1lZXRzU3RhbmRhcmQpLnRvQmUodHJ1ZSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdSZWR1Y2UgbW90aW9uIHN1cHBvcnQnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCByZXNwZWN0IHByZWZlcnMtcmVkdWNlZC1tb3Rpb24nLCAoKSA9PiB7XG4gICAgICAvLyBBbmltYXRpb24gYmVoYXZpb3Igc2hvdWxkIGJlIGRpc2FibGVkIHdoZW4gcmVkdWNlZCBtb3Rpb24gaXMgZW5hYmxlZFxuICAgICAgY29uc3QgcmVzcGVjdHNQcmVmZXJlbmNlID0gdHJ1ZTtcbiAgICAgIGV4cGVjdChyZXNwZWN0c1ByZWZlcmVuY2UpLnRvQmUodHJ1ZSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdGb2N1cyBtYW5hZ2VtZW50JywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgaGF2ZSBsb2dpY2FsIGZvY3VzIG9yZGVyJywgKCkgPT4ge1xuICAgICAgLy8gRm9jdXMgc2hvdWxkIGZvbGxvdyBsb2dpY2FsIHJlYWRpbmcgb3JkZXJcbiAgICAgIGNvbnN0IGhhc0xvZ2ljYWxPcmRlciA9IHRydWU7XG4gICAgICBleHBlY3QoaGFzTG9naWNhbE9yZGVyKS50b0JlKHRydWUpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBwcm92aWRlIHZpc2libGUgZm9jdXMgaW5kaWNhdG9ycycsICgpID0+IHtcbiAgICAgIC8vIEludGVyYWN0aXZlIGVsZW1lbnRzIHNob3VsZCBoYXZlIHZpc2libGUgZm9jdXMgc3RhdGVzXG4gICAgICBjb25zdCBoYXNGb2N1c0luZGljYXRvcnMgPSB0cnVlO1xuICAgICAgZXhwZWN0KGhhc0ZvY3VzSW5kaWNhdG9ycykudG9CZSh0cnVlKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ0Vycm9yIG1lc3NhZ2VzJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgYXNzb2NpYXRlIGVycm9yIG1lc3NhZ2VzIHdpdGggaW5wdXRzJywgKCkgPT4ge1xuICAgICAgLy8gRXJyb3IgbWVzc2FnZXMgc2hvdWxkIGJlIGxpbmtlZCB0byBmb3JtIGlucHV0cyB2aWEgYXJpYS1kZXNjcmliZWRieVxuICAgICAgY29uc3QgaGFzRXJyb3JBc3NvY2lhdGlvbiA9IHRydWU7XG4gICAgICBleHBlY3QoaGFzRXJyb3JBc3NvY2lhdGlvbikudG9CZSh0cnVlKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcblxuIl0sIm1hcHBpbmdzIjoiOzs7QUFLQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxRQUFBLEdBQUFGLE9BQUE7QUFBcUQsSUFBQUcsV0FBQSxHQUFBSCxPQUFBO0FBRXJELElBQUFJLGlCQUFRLEVBQUMscUJBQXFCLEVBQUUsWUFBTTtFQUNwQyxJQUFBQSxpQkFBUSxFQUFDLDJCQUEyQixFQUFFLFlBQU07SUFDMUMsSUFBQUMsV0FBRSxFQUFDLGtDQUFrQyxFQUFFLFlBQU07TUFDM0MsSUFBTUMsTUFBTSxHQUFHLFNBQVRBLE1BQU1BLENBQUFDLElBQUE7UUFBQSxJQUFNQyxLQUFLLEdBQUFELElBQUEsQ0FBTEMsS0FBSztR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