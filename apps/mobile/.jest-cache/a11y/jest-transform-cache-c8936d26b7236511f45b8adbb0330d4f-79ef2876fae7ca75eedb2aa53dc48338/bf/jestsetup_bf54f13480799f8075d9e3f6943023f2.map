{"version":3,"names":["_getJestObj","mock","logger","info","jest","fn","warn","error","debug","security","bufferOfflineLog","mockResolvedValue","undefined","flushOfflineLogs","setUserInfo","clearUserInfo","getSessionId","mockReturnValue","destroy","require","_require2","global","ReanimatedDataMock","now","Date","process","env","NODE_ENV","_require","server","beforeAll","listen","onUnhandledRequest","afterEach","resetHandlers","afterAll","close"],"sources":["jest.setup.ts"],"sourcesContent":["/**\n * Main Jest setup file\n * Loads modular setup files conditionally based on test needs\n */\n\nimport '@testing-library/jest-native/extend-expect';\n\n// React Native Reanimated recommended mock tweak\n// @ts-ignore\nglobal.ReanimatedDataMock = { now: () => Date.now() };\n\n// Silence RN Animated warnings in tests\njest.mock('react-native/Libraries/Animated/NativeAnimatedHelper');\n\n// Mock logger globally to prevent infinite loops\njest.mock('./src/services/logger', () => ({\n  logger: {\n    info: jest.fn(),\n    warn: jest.fn(),\n    error: jest.fn(),\n    debug: jest.fn(),\n    security: jest.fn(),\n    bufferOfflineLog: jest.fn().mockResolvedValue(undefined),\n    flushOfflineLogs: jest.fn().mockResolvedValue(undefined),\n    setUserInfo: jest.fn(),\n    clearUserInfo: jest.fn(),\n    getSessionId: jest.fn().mockReturnValue('test-session'),\n    destroy: jest.fn(),\n  }\n}));\n\n// Setup MSW server for API mocking (only in unit/integration tests)\nif (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') {\n  const { server } = require('./src/test-utils/msw/server');\n  \n  // Establish API mocking before all tests\n  beforeAll(() => server.listen({ onUnhandledRequest: 'warn' }));\n  \n  // Reset any request handlers that may have been added during tests\n  afterEach(() => server.resetHandlers());\n  \n  // Clean up after all tests\n  afterAll(() => server.close());\n}\n\n// Always load core setup\nimport './jest.setup.core';\n\n// Load all mocks - modular files handle conditional logic internally\n// Using require to ensure proper load order\nrequire('./jest.setup.mocks.native');\nrequire('./jest.setup.mocks.expo');\nrequire('./jest.setup.mocks.navigation');\nrequire('./jest.setup.mocks.external');\n"],"mappings":";;AAYAA,WAAA,GAAKC,IAAI,CAAC,sDAAsD,CAAC;AAGjED,WAAA,GAAKC,IAAI,0BAA0B;EAAA,OAAO;IACxCC,MAAM,EAAE;MACNC,IAAI,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC;MACfC,IAAI,EAAEF,IAAI,CAACC,EAAE,CAAC,CAAC;MACfE,KAAK,EAAEH,IAAI,CAACC,EAAE,CAAC,CAAC;MAChBG,KAAK,EAAEJ,IAAI,CAACC,EAAE,CAAC,CAAC;MAChBI,QAAQ,EAAEL,IAAI,CAACC,EAAE,CAAC,CAAC;MACnBK,gBAAgB,EAAEN,IAAI,CAACC,EAAE,CAAC,CAAC,CAACM,iBAAiB,CAACC,SAAS,CAAC;MACxDC,gBAAgB,EAAET,IAAI,CAACC,EAAE,CAAC,CAAC,CAACM,iBAAiB,CAACC,SAAS,CAAC;MACxDE,WAAW,EAAEV,IAAI,CAACC,EAAE,CAAC,CAAC;MACtBU,aAAa,EAAEX,IAAI,CAACC,EAAE,CAAC,CAAC;MACxBW,YAAY,EAAEZ,IAAI,CAACC,EAAE,CAAC,CAAC,CAACY,eAAe,CAAC,cAAc,CAAC;MACvDC,OAAO,EAAEd,IAAI,CAACC,EAAE,CAAC;IACnB;EACF,CAAC;AAAA,CAAC,CAAC;AAxBHc,OAAA;AAyCAA,OAAA;AAA2B,SAAAnB,YAAA;EAAA,IAAAoB,SAAA,GAAAD,OAAA;IAAAf,IAAA,GAAAgB,SAAA,CAAAhB,IAAA;EAAAJ,WAAA,YAAAA,YAAA;IAAA,OAAAI,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AArC3BiB,MAAM,CAACC,kBAAkB,GAAG;EAAEC,GAAG,EAAE,SAALA,GAAGA,CAAA;IAAA,OAAQC,IAAI,CAACD,GAAG,CAAC,CAAC;EAAA;AAAC,CAAC;AAuBrD,IAAI,OAAOE,OAAO,KAAK,WAAW,IAAIA,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,EAAE;EACrE,IAAAC,QAAA,GAAmBT,OAAO,8BAA8B,CAAC;IAAjDU,MAAM,GAAAD,QAAA,CAANC,MAAM;EAGdC,SAAS,CAAC;IAAA,OAAMD,MAAM,CAACE,MAAM,CAAC;MAAEC,kBAAkB,EAAE;IAAO,CAAC,CAAC;EAAA,EAAC;EAG9DC,SAAS,CAAC;IAAA,OAAMJ,MAAM,CAACK,aAAa,CAAC,CAAC;EAAA,EAAC;EAGvCC,QAAQ,CAAC;IAAA,OAAMN,MAAM,CAACO,KAAK,CAAC,CAAC;EAAA,EAAC;AAChC;AAOAjB,OAAO,4BAA4B,CAAC;AACpCA,OAAO,0BAA0B,CAAC;AAClCA,OAAO,gCAAgC,CAAC;AACxCA,OAAO,8BAA8B,CAAC","ignoreList":[]}