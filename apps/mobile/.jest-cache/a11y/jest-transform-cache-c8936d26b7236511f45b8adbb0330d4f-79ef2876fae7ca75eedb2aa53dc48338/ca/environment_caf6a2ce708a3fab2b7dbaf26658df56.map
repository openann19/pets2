{"version":3,"names":["defaultConfig","cov_fr860tc7o","s","API_BASE_URL","SOCKET_URL","AI_SERVICE_URL","ENVIRONMENT","ENABLE_LOGGING","ENABLE_ANALYTICS","API_TIMEOUT","environments","development","staging","production","getCurrentEnvironment","f","__DEV__","b","process","env","NODE_ENV","currentEnv","envConfig","config","exports","_objectSpread","_ref","API_URL","isDevelopment","isStaging","isProduction","Promise","resolve","then","_interopRequireWildcard","require","_ref2","logger","info","environment","apiBaseUrl","socketUrl","aiServiceUrl","logging","analytics"],"sources":["environment.ts"],"sourcesContent":["/**\n * Environment configuration for mobile app\n * Handles different environments (development, staging, production)\n */\n\nexport interface EnvironmentConfig {\n  API_BASE_URL: string;\n  SOCKET_URL: string;\n  AI_SERVICE_URL: string;\n  ENVIRONMENT: \"development\" | \"staging\" | \"production\";\n  ENABLE_LOGGING: boolean;\n  ENABLE_ANALYTICS: boolean;\n  API_TIMEOUT: number;\n}\n\n// Default configuration\nconst defaultConfig: EnvironmentConfig = {\n  API_BASE_URL: \"http://localhost:5001\",\n  SOCKET_URL: \"http://localhost:5001\",\n  AI_SERVICE_URL: \"http://localhost:8000\",\n  ENVIRONMENT: \"development\",\n  ENABLE_LOGGING: true,\n  ENABLE_ANALYTICS: false,\n  API_TIMEOUT: 30000,\n};\n\n// Environment-specific configurations\nconst environments: Record<string, Partial<EnvironmentConfig>> = {\n  development: {\n    API_BASE_URL: \"http://localhost:5001\",\n    SOCKET_URL: \"http://localhost:5001\",\n    AI_SERVICE_URL: \"http://localhost:8000\",\n    ENVIRONMENT: \"development\",\n    ENABLE_LOGGING: true,\n    ENABLE_ANALYTICS: false,\n    API_TIMEOUT: 30000,\n  },\n  staging: {\n    API_BASE_URL: \"https://api-staging.pawfectmatch.com\",\n    SOCKET_URL: \"https://api-staging.pawfectmatch.com\",\n    AI_SERVICE_URL: \"https://ai-staging.pawfectmatch.com\",\n    ENVIRONMENT: \"staging\",\n    ENABLE_LOGGING: true,\n    ENABLE_ANALYTICS: true,\n    API_TIMEOUT: 30000,\n  },\n  production: {\n    API_BASE_URL: \"https://api.pawfectmatch.com\",\n    SOCKET_URL: \"https://api.pawfectmatch.com\",\n    AI_SERVICE_URL: \"https://ai.pawfectmatch.com\",\n    ENVIRONMENT: \"production\",\n    ENABLE_LOGGING: false,\n    ENABLE_ANALYTICS: true,\n    API_TIMEOUT: 15000,\n  },\n};\n\n// Get current environment from process.env or default to development\nconst getCurrentEnvironment = (): string => {\n  // In React Native, we can use __DEV__ to detect development mode\n  if (__DEV__) {\n    return \"development\";\n  }\n\n  // For production builds, check environment variables\n  // These would be set during build time\n  return process.env.NODE_ENV || \"development\";\n};\n\n// Merge default config with environment-specific config\nconst currentEnv = getCurrentEnvironment();\nconst envConfig = environments[currentEnv] || {};\n\nexport const config: EnvironmentConfig = {\n  ...defaultConfig,\n  ...envConfig,\n};\n\n// Export individual config values for convenience\nexport const {\n  API_BASE_URL,\n  SOCKET_URL,\n  AI_SERVICE_URL,\n  ENVIRONMENT,\n  ENABLE_LOGGING,\n  ENABLE_ANALYTICS,\n  API_TIMEOUT,\n} = config;\n\n// Alias for backward compatibility\nexport const API_URL = API_BASE_URL;\n\n// Helper functions\nexport const isDevelopment = (): boolean => ENVIRONMENT === \"development\";\nexport const isStaging = (): boolean => ENVIRONMENT === \"staging\";\nexport const isProduction = (): boolean => ENVIRONMENT === \"production\";\n\n// Log configuration in development\nif (isDevelopment() && ENABLE_LOGGING) {\n  // Using dynamic import to avoid circular dependency\n  void import(\"../services/logger\").then(({ logger }) => {\n    logger.info(\"ðŸ”§ Environment Configuration\", {\n      environment: ENVIRONMENT,\n      apiBaseUrl: API_BASE_URL,\n      socketUrl: SOCKET_URL,\n      aiServiceUrl: AI_SERVICE_URL,\n      logging: ENABLE_LOGGING,\n      analytics: ENABLE_ANALYTICS,\n    });\n  });\n}\n"],"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","ignoreList":[]}