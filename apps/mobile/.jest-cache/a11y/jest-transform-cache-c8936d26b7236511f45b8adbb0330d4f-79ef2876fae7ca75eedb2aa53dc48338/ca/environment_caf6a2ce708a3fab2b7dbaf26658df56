27ece93a8447ce17b513368c4bad4049
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isStaging = exports.isProduction = exports.isDevelopment = exports.config = exports.SOCKET_URL = exports.ENVIRONMENT = exports.ENABLE_LOGGING = exports.ENABLE_ANALYTICS = exports.API_URL = exports.API_TIMEOUT = exports.API_BASE_URL = exports.AI_SERVICE_URL = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
function cov_fr860tc7o() {
  var path = "/home/ben/Downloads/pets-fresh/apps/mobile/src/config/environment.ts";
  var hash = "cac8bf89f4c832e6695b30e338144ab19f06fe93";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ben/Downloads/pets-fresh/apps/mobile/src/config/environment.ts",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 41
        },
        end: {
          line: 25,
          column: 1
        }
      },
      "1": {
        start: {
          line: 28,
          column: 65
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "2": {
        start: {
          line: 59,
          column: 30
        },
        end: {
          line: 68,
          column: 1
        }
      },
      "3": {
        start: {
          line: 61,
          column: 2
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "4": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "5": {
        start: {
          line: 67,
          column: 2
        },
        end: {
          line: 67,
          column: 47
        }
      },
      "6": {
        start: {
          line: 71,
          column: 19
        },
        end: {
          line: 71,
          column: 42
        }
      },
      "7": {
        start: {
          line: 72,
          column: 18
        },
        end: {
          line: 72,
          column: 48
        }
      },
      "8": {
        start: {
          line: 74,
          column: 41
        },
        end: {
          line: 77,
          column: 1
        }
      },
      "9": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "10": {
        start: {
          line: 91,
          column: 23
        },
        end: {
          line: 91,
          column: 35
        }
      },
      "11": {
        start: {
          line: 94,
          column: 29
        },
        end: {
          line: 94,
          column: 73
        }
      },
      "12": {
        start: {
          line: 94,
          column: 44
        },
        end: {
          line: 94,
          column: 73
        }
      },
      "13": {
        start: {
          line: 95,
          column: 25
        },
        end: {
          line: 95,
          column: 65
        }
      },
      "14": {
        start: {
          line: 95,
          column: 40
        },
        end: {
          line: 95,
          column: 65
        }
      },
      "15": {
        start: {
          line: 96,
          column: 28
        },
        end: {
          line: 96,
          column: 71
        }
      },
      "16": {
        start: {
          line: 96,
          column: 43
        },
        end: {
          line: 96,
          column: 71
        }
      },
      "17": {
        start: {
          line: 99,
          column: 0
        },
        end: {
          line: 111,
          column: 1
        }
      },
      "18": {
        start: {
          line: 101,
          column: 2
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "19": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 109,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 59,
            column: 31
          }
        },
        loc: {
          start: {
            line: 59,
            column: 44
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 59
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 94,
            column: 29
          },
          end: {
            line: 94,
            column: 30
          }
        },
        loc: {
          start: {
            line: 94,
            column: 44
          },
          end: {
            line: 94,
            column: 73
          }
        },
        line: 94
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 26
          }
        },
        loc: {
          start: {
            line: 95,
            column: 40
          },
          end: {
            line: 95,
            column: 65
          }
        },
        line: 95
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 96,
            column: 28
          },
          end: {
            line: 96,
            column: 29
          }
        },
        loc: {
          start: {
            line: 96,
            column: 43
          },
          end: {
            line: 96,
            column: 71
          }
        },
        line: 96
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 101,
            column: 41
          },
          end: {
            line: 101,
            column: 42
          }
        },
        loc: {
          start: {
            line: 101,
            column: 57
          },
          end: {
            line: 110,
            column: 3
          }
        },
        line: 101
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 63,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 63,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "1": {
        loc: {
          start: {
            line: 67,
            column: 9
          },
          end: {
            line: 67,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 9
          },
          end: {
            line: 67,
            column: 29
          }
        }, {
          start: {
            line: 67,
            column: 33
          },
          end: {
            line: 67,
            column: 46
          }
        }],
        line: 67
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 18
          },
          end: {
            line: 72,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 18
          },
          end: {
            line: 72,
            column: 42
          }
        }, {
          start: {
            line: 72,
            column: 46
          },
          end: {
            line: 72,
            column: 48
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 99,
            column: 0
          },
          end: {
            line: 111,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 0
          },
          end: {
            line: 111,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "4": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 19
          }
        }, {
          start: {
            line: 99,
            column: 23
          },
          end: {
            line: 99,
            column: 37
          }
        }],
        line: 99
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cac8bf89f4c832e6695b30e338144ab19f06fe93"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_fr860tc7o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fr860tc7o();
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var defaultConfig = (cov_fr860tc7o().s[0]++, {
  API_BASE_URL: "http://localhost:5001",
  SOCKET_URL: "http://localhost:5001",
  AI_SERVICE_URL: "http://localhost:8000",
  ENVIRONMENT: "development",
  ENABLE_LOGGING: true,
  ENABLE_ANALYTICS: false,
  API_TIMEOUT: 30000
});
var environments = (cov_fr860tc7o().s[1]++, {
  development: {
    API_BASE_URL: "http://localhost:5001",
    SOCKET_URL: "http://localhost:5001",
    AI_SERVICE_URL: "http://localhost:8000",
    ENVIRONMENT: "development",
    ENABLE_LOGGING: true,
    ENABLE_ANALYTICS: false,
    API_TIMEOUT: 30000
  },
  staging: {
    API_BASE_URL: "https://api-staging.pawfectmatch.com",
    SOCKET_URL: "https://api-staging.pawfectmatch.com",
    AI_SERVICE_URL: "https://ai-staging.pawfectmatch.com",
    ENVIRONMENT: "staging",
    ENABLE_LOGGING: true,
    ENABLE_ANALYTICS: true,
    API_TIMEOUT: 30000
  },
  production: {
    API_BASE_URL: "https://api.pawfectmatch.com",
    SOCKET_URL: "https://api.pawfectmatch.com",
    AI_SERVICE_URL: "https://ai.pawfectmatch.com",
    ENVIRONMENT: "production",
    ENABLE_LOGGING: false,
    ENABLE_ANALYTICS: true,
    API_TIMEOUT: 15000
  }
});
cov_fr860tc7o().s[2]++;
var getCurrentEnvironment = function getCurrentEnvironment() {
  cov_fr860tc7o().f[0]++;
  cov_fr860tc7o().s[3]++;
  if (__DEV__) {
    cov_fr860tc7o().b[0][0]++;
    cov_fr860tc7o().s[4]++;
    return "development";
  } else {
    cov_fr860tc7o().b[0][1]++;
  }
  cov_fr860tc7o().s[5]++;
  return (cov_fr860tc7o().b[1][0]++, process.env.NODE_ENV) || (cov_fr860tc7o().b[1][1]++, "development");
};
var currentEnv = (cov_fr860tc7o().s[6]++, getCurrentEnvironment());
var envConfig = (cov_fr860tc7o().s[7]++, (cov_fr860tc7o().b[2][0]++, environments[currentEnv]) || (cov_fr860tc7o().b[2][1]++, {}));
var config = exports.config = (cov_fr860tc7o().s[8]++, _objectSpread(_objectSpread({}, defaultConfig), envConfig));
var _ref = (cov_fr860tc7o().s[9]++, config),
  API_BASE_URL = exports.API_BASE_URL = _ref.API_BASE_URL,
  SOCKET_URL = exports.SOCKET_URL = _ref.SOCKET_URL,
  AI_SERVICE_URL = exports.AI_SERVICE_URL = _ref.AI_SERVICE_URL,
  ENVIRONMENT = exports.ENVIRONMENT = _ref.ENVIRONMENT,
  ENABLE_LOGGING = exports.ENABLE_LOGGING = _ref.ENABLE_LOGGING,
  ENABLE_ANALYTICS = exports.ENABLE_ANALYTICS = _ref.ENABLE_ANALYTICS,
  API_TIMEOUT = exports.API_TIMEOUT = _ref.API_TIMEOUT;
var API_URL = exports.API_URL = (cov_fr860tc7o().s[10]++, API_BASE_URL);
cov_fr860tc7o().s[11]++;
var isDevelopment = exports.isDevelopment = function isDevelopment() {
  cov_fr860tc7o().f[1]++;
  cov_fr860tc7o().s[12]++;
  return ENVIRONMENT === "development";
};
cov_fr860tc7o().s[13]++;
var isStaging = exports.isStaging = function isStaging() {
  cov_fr860tc7o().f[2]++;
  cov_fr860tc7o().s[14]++;
  return ENVIRONMENT === "staging";
};
cov_fr860tc7o().s[15]++;
var isProduction = exports.isProduction = function isProduction() {
  cov_fr860tc7o().f[3]++;
  cov_fr860tc7o().s[16]++;
  return ENVIRONMENT === "production";
};
cov_fr860tc7o().s[17]++;
if ((cov_fr860tc7o().b[4][0]++, isDevelopment()) && (cov_fr860tc7o().b[4][1]++, ENABLE_LOGGING)) {
  cov_fr860tc7o().b[3][0]++;
  cov_fr860tc7o().s[18]++;
  void Promise.resolve().then(function () {
    return _interopRequireWildcard(require("../services/logger"));
  }).then(function (_ref2) {
    var logger = _ref2.logger;
    cov_fr860tc7o().f[4]++;
    cov_fr860tc7o().s[19]++;
    logger.info("🔧 Environment Configuration", {
      environment: ENVIRONMENT,
      apiBaseUrl: API_BASE_URL,
      socketUrl: SOCKET_URL,
      aiServiceUrl: AI_SERVICE_URL,
      logging: ENABLE_LOGGING,
      analytics: ENABLE_ANALYTICS
    });
  });
} else {
  cov_fr860tc7o().b[3][1]++;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,