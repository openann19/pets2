a0254fedca3fae5f3fe42b766fd895c1
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _globals = require("@jest/globals");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
(0, _globals.describe)('GDPR API Contracts', function () {
  (0, _globals.describe)('GET /users/export-data', function () {
    (0, _globals.it)('should return complete user data export', function () {
      var response = {
        data: {
          profile: {
            id: 'user-id',
            email: 'user@example.com',
            name: 'User Name',
            createdAt: '2023-01-01T00:00:00Z'
          },
          pets: [{
            _id: 'pet-id',
            name: 'Pet Name',
            type: 'dog'
          }],
          matches: [{
            _id: 'match-id',
            matchedPetId: 'matched-pet-id',
            createdAt: '2023-01-01T00:00:00Z'
          }],
          messages: [{
            _id: 'message-id',
            content: 'Message content',
            sentAt: '2023-01-01T00:00:00Z'
          }],
          settings: {
            notifications: true,
            privacy: 'public'
          }
        },
        format: 'json',
        generatedAt: '2023-01-01T00:00:00Z'
      };
      (0, _globals.expect)(response).toHaveProperty('data');
      (0, _globals.expect)(response.data).toHaveProperty('profile');
      (0, _globals.expect)(response.data).toHaveProperty('pets');
      (0, _globals.expect)(response.data).toHaveProperty('matches');
      (0, _globals.expect)(response.data).toHaveProperty('messages');
    });
  });
  (0, _globals.describe)('DELETE /users/delete-account', function () {
    (0, _globals.it)('should initiate account deletion', function () {
      var request = {
        password: 'user-password',
        reason: 'No longer using service',
        feedback: 'Optional feedback'
      };
      var response = {
        success: true,
        message: 'Account deletion initiated',
        gracePeriodEndsAt: '2023-02-01T00:00:00Z',
        confirmToken: 'confirmation-token'
      };
      (0, _globals.expect)(response.success).toBe(true);
      (0, _globals.expect)(response).toHaveProperty('gracePeriodEndsAt');
      (0, _globals.expect)(response).toHaveProperty('confirmToken');
    });
    (0, _globals.it)('should require password confirmation', function () {
      var invalidRequest = {
        reason: 'Want to delete'
      };
      (0, _globals.expect)(invalidRequest).not.toHaveProperty('password');
    });
  });
  (0, _globals.describe)('POST /users/confirm-deletion', function () {
    (0, _globals.it)('should permanently delete account', function () {
      var request = {
        confirmToken: 'confirmation-token',
        password: 'user-password'
      };
      var response = {
        success: true,
        message: 'Account deleted permanently',
        deletedAt: '2023-01-01T00:00:00Z'
      };
      (0, _globals.expect)(response.success).toBe(true);
      (0, _globals.expect)(response).toHaveProperty('deletedAt');
    });
  });
  (0, _globals.describe)('Privacy controls', function () {
    (0, _globals.it)('should support privacy settings update', function () {
      var request = {
        shareLocation: false,
        showPhotos: true,
        allowMessaging: true
      };
      var response = {
        success: true,
        privacy: _objectSpread(_objectSpread({}, request), {}, {
          updatedAt: '2023-01-01T00:00:00Z'
        })
      };
      (0, _globals.expect)(response.success).toBe(true);
      (0, _globals.expect)(response.privacy).toHaveProperty('shareLocation');
      (0, _globals.expect)(response.privacy).toHaveProperty('showPhotos');
      (0, _globals.expect)(response.privacy).toHaveProperty('allowMessaging');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,