{"version":3,"names":["_globals","require","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","describe","it","response","data","profile","id","email","name","createdAt","pets","_id","type","matches","matchedPetId","messages","content","sentAt","settings","notifications","privacy","format","generatedAt","expect","toHaveProperty","request","password","reason","feedback","success","message","gracePeriodEndsAt","confirmToken","toBe","invalidRequest","not","deletedAt","shareLocation","showPhotos","allowMessaging","updatedAt"],"sources":["gdpr-api.contract.test.ts"],"sourcesContent":["/**\n * Contract tests for GDPR API endpoints\n * Validates data export, account deletion, and privacy features\n */\n\nimport { describe, it, expect } from '@jest/globals';\n\ndescribe('GDPR API Contracts', () => {\n  describe('GET /users/export-data', () => {\n    it('should return complete user data export', () => {\n      const response = {\n        data: {\n          profile: {\n            id: 'user-id',\n            email: 'user@example.com',\n            name: 'User Name',\n            createdAt: '2023-01-01T00:00:00Z',\n          },\n          pets: [\n            {\n              _id: 'pet-id',\n              name: 'Pet Name',\n              type: 'dog',\n            },\n          ],\n          matches: [\n            {\n              _id: 'match-id',\n              matchedPetId: 'matched-pet-id',\n              createdAt: '2023-01-01T00:00:00Z',\n            },\n          ],\n          messages: [\n            {\n              _id: 'message-id',\n              content: 'Message content',\n              sentAt: '2023-01-01T00:00:00Z',\n            },\n          ],\n          settings: {\n            notifications: true,\n            privacy: 'public',\n          },\n        },\n        format: 'json',\n        generatedAt: '2023-01-01T00:00:00Z',\n      };\n\n      expect(response).toHaveProperty('data');\n      expect(response.data).toHaveProperty('profile');\n      expect(response.data).toHaveProperty('pets');\n      expect(response.data).toHaveProperty('matches');\n      expect(response.data).toHaveProperty('messages');\n    });\n  });\n\n  describe('DELETE /users/delete-account', () => {\n    it('should initiate account deletion', () => {\n      const request = {\n        password: 'user-password',\n        reason: 'No longer using service',\n        feedback: 'Optional feedback',\n      };\n\n      const response = {\n        success: true,\n        message: 'Account deletion initiated',\n        gracePeriodEndsAt: '2023-02-01T00:00:00Z',\n        confirmToken: 'confirmation-token',\n      };\n\n      expect(response.success).toBe(true);\n      expect(response).toHaveProperty('gracePeriodEndsAt');\n      expect(response).toHaveProperty('confirmToken');\n    });\n\n    it('should require password confirmation', () => {\n      const invalidRequest = {\n        reason: 'Want to delete',\n        // Missing password\n      };\n\n      expect(invalidRequest).not.toHaveProperty('password');\n    });\n  });\n\n  describe('POST /users/confirm-deletion', () => {\n    it('should permanently delete account', () => {\n      const request = {\n        confirmToken: 'confirmation-token',\n        password: 'user-password',\n      };\n\n      const response = {\n        success: true,\n        message: 'Account deleted permanently',\n        deletedAt: '2023-01-01T00:00:00Z',\n      };\n\n      expect(response.success).toBe(true);\n      expect(response).toHaveProperty('deletedAt');\n    });\n  });\n\n  describe('Privacy controls', () => {\n    it('should support privacy settings update', () => {\n      const request = {\n        shareLocation: false,\n        showPhotos: true,\n        allowMessaging: true,\n      };\n\n      const response = {\n        success: true,\n        privacy: {\n          ...request,\n          updatedAt: '2023-01-01T00:00:00Z',\n        },\n      };\n\n      expect(response.success).toBe(true);\n      expect(response.privacy).toHaveProperty('shareLocation');\n      expect(response.privacy).toHaveProperty('showPhotos');\n      expect(response.privacy).toHaveProperty('allowMessaging');\n    });\n  });\n});\n\n"],"mappings":"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","ignoreList":[]}