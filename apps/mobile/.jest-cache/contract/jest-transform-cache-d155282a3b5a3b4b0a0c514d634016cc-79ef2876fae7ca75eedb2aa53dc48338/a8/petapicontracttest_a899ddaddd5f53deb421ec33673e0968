97ed29eb541a077f643df43a0e495fc5
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _globals = require("@jest/globals");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
(0, _globals.describe)('Pet API Contracts', function () {
  (0, _globals.describe)('GET /pets', function () {
    (0, _globals.it)('should return paginated list of pets', function () {
      var response = {
        pets: [{
          _id: '507f1f77bcf86cd799439011',
          name: 'Fluffy',
          type: 'dog',
          breed: 'Golden Retriever',
          age: 3,
          photos: ['https://example.com/photo.jpg']
        }],
        pagination: {
          page: 1,
          totalPages: 1,
          totalItems: 1
        }
      };
      (0, _globals.expect)(response.pets).toBeInstanceOf(Array);
      (0, _globals.expect)(response.pagination).toHaveProperty('page');
      (0, _globals.expect)(response.pagination).toHaveProperty('totalPages');
      (0, _globals.expect)(response.pagination).toHaveProperty('totalItems');
      if (response.pets.length > 0) {
        var pet = response.pets[0];
        (0, _globals.expect)(pet).toHaveProperty('_id');
        (0, _globals.expect)(pet).toHaveProperty('name');
        (0, _globals.expect)(pet).toHaveProperty('type');
        (0, _globals.expect)(pet).toHaveProperty('photos');
        (0, _globals.expect)(Array.isArray(pet.photos)).toBe(true);
      }
    });
    (0, _globals.it)('should support pagination parameters', function () {
      var requestParams = {
        page: '1',
        limit: '20',
        type: 'dog'
      };
      (0, _globals.expect)(typeof requestParams.page).toBe('string');
      (0, _globals.expect)(typeof requestParams.limit).toBe('string');
      (0, _globals.expect)(typeof requestParams.type).toBe('string');
    });
  });
  (0, _globals.describe)('GET /pets/:id', function () {
    (0, _globals.it)('should return detailed pet information', function () {
      var response = {
        _id: '507f1f77bcf86cd799439011',
        name: 'Fluffy',
        type: 'dog',
        breed: 'Golden Retriever',
        age: 3,
        photos: ['https://example.com/photo.jpg'],
        owner: {
          id: '507f1f77bcf86cd799439012',
          name: 'John Doe'
        },
        location: {
          lat: 37.7749,
          lng: -122.4194
        }
      };
      (0, _globals.expect)(response).toHaveProperty('_id');
      (0, _globals.expect)(response).toHaveProperty('name');
      (0, _globals.expect)(response).toHaveProperty('type');
      (0, _globals.expect)(response).toHaveProperty('photos');
      (0, _globals.expect)(response).toHaveProperty('owner');
      (0, _globals.expect)(response).toHaveProperty('location');
      (0, _globals.expect)(response.owner).toHaveProperty('id');
      (0, _globals.expect)(response.owner).toHaveProperty('name');
      (0, _globals.expect)(response.location).toHaveProperty('lat');
      (0, _globals.expect)(response.location).toHaveProperty('lng');
    });
    (0, _globals.it)('should return 404 for non-existent pet', function () {
      var errorResponse = {
        error: 'Pet not found',
        statusCode: 404
      };
      (0, _globals.expect)(errorResponse).toHaveProperty('error');
      (0, _globals.expect)(errorResponse).toHaveProperty('statusCode');
    });
  });
  (0, _globals.describe)('POST /pets', function () {
    (0, _globals.it)('should create a new pet', function () {
      var request = {
        name: 'Buddy',
        type: 'dog',
        breed: 'Labrador',
        age: 2,
        photos: ['https://example.com/photo.jpg'],
        location: {
          lat: 37.7749,
          lng: -122.4194
        }
      };
      (0, _globals.expect)(request).toHaveProperty('name');
      (0, _globals.expect)(request).toHaveProperty('type');
      (0, _globals.expect)(typeof request.name).toBe('string');
      (0, _globals.expect)(typeof request.type).toBe('string');
      var response = _objectSpread({
        _id: '507f1f77bcf86cd799439013'
      }, request);
      (0, _globals.expect)(response).toHaveProperty('_id');
      (0, _globals.expect)(response.name).toBe(request.name);
      (0, _globals.expect)(response.type).toBe(request.type);
    });
    (0, _globals.it)('should validate required fields', function () {
      var invalidRequests = [{
        type: 'dog'
      }, {
        name: 'Buddy'
      }];
      invalidRequests.forEach(function (request) {
        (0, _globals.expect)(request).not.toHaveProperty('name');
      });
    });
  });
  (0, _globals.describe)('PUT /pets/:id', function () {
    (0, _globals.it)('should update pet information', function () {
      var request = {
        name: 'Buddy Updated',
        age: 3
      };
      var response = {
        _id: '507f1f77bcf86cd799439013',
        name: 'Buddy Updated',
        type: 'dog',
        breed: 'Labrador',
        age: 3,
        photos: ['https://example.com/photo.jpg']
      };
      (0, _globals.expect)(response).toHaveProperty('_id');
      (0, _globals.expect)(response.name).toBe(request.name);
      (0, _globals.expect)(response.age).toBe(request.age);
    });
  });
  (0, _globals.describe)('DELETE /pets/:id', function () {
    (0, _globals.it)('should delete a pet', function () {
      var response = {
        success: true,
        message: 'Pet deleted successfully'
      };
      (0, _globals.expect)(response).toHaveProperty('success');
      (0, _globals.expect)(response.success).toBe(true);
    });
    (0, _globals.it)('should return 403 for unauthorized deletion', function () {
      var errorResponse = {
        error: 'Unauthorized',
        statusCode: 403
      };
      (0, _globals.expect)(errorResponse).toHaveProperty('error');
      (0, _globals.expect)(errorResponse.statusCode).toBe(403);
    });
  });
  (0, _globals.describe)('Error responses', function () {
    (0, _globals.it)('should return 400 for validation errors', function () {
      var errorResponse = {
        error: 'Validation failed',
        statusCode: 400,
        details: [{
          field: 'name',
          message: 'Name is required'
        }]
      };
      (0, _globals.expect)(errorResponse).toHaveProperty('error');
      (0, _globals.expect)(errorResponse).toHaveProperty('statusCode');
      (0, _globals.expect)(errorResponse.statusCode).toBe(400);
    });
    (0, _globals.it)('should return 500 for server errors', function () {
      var errorResponse = {
        error: 'Internal server error',
        statusCode: 500
      };
      (0, _globals.expect)(errorResponse).toHaveProperty('error');
      (0, _globals.expect)(errorResponse.statusCode).toBe(500);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,