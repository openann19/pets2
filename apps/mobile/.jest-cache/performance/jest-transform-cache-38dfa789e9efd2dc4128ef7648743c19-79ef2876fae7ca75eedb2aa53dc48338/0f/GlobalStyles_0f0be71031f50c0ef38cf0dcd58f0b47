87e3648ab474d4312c3c2c9d6d6d1ef0
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Typography = exports.Spacing = exports.Shadows = exports.GlobalStyles = exports.Device = exports.Colors = exports.BorderRadius = exports.AnimationConfigs = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _reactNative = require("react-native");
var _designTokens = require("@pawfectmatch/design-tokens");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var getScreenDimensions = function getScreenDimensions() {
  try {
    return _reactNative.Dimensions.get("window");
  } catch (_error) {
    return {
      width: 375,
      height: 812
    };
  }
};
var _getScreenDimensions = getScreenDimensions(),
  screenWidth = _getScreenDimensions.width,
  screenHeight = _getScreenDimensions.height;
var Colors = exports.Colors = {
  primary: _designTokens.COLORS.primary[500],
  primaryLight: _designTokens.COLORS.primary[400],
  primaryDark: _designTokens.COLORS.primary[700],
  secondary: _designTokens.COLORS.secondary[500],
  secondaryLight: _designTokens.COLORS.secondary[400],
  secondaryDark: _designTokens.COLORS.secondary[700],
  accent: _designTokens.COLORS.info[500],
  accentLight: _designTokens.COLORS.info[400],
  accentDark: _designTokens.COLORS.info[700],
  success: _designTokens.COLORS.success[500],
  warning: _designTokens.COLORS.warning[500],
  error: _designTokens.COLORS.error[500],
  info: _designTokens.COLORS.info[500],
  white: _designTokens.COLORS.neutral[0],
  black: _designTokens.COLORS.neutral[900],
  gray50: _designTokens.COLORS.neutral[50],
  gray100: _designTokens.COLORS.neutral[100],
  gray200: _designTokens.COLORS.neutral[200],
  gray300: _designTokens.COLORS.neutral[300],
  gray400: _designTokens.COLORS.neutral[400],
  gray500: _designTokens.COLORS.neutral[500],
  gray600: _designTokens.COLORS.neutral[600],
  gray700: _designTokens.COLORS.neutral[700],
  gray800: _designTokens.COLORS.neutral[800],
  gray900: _designTokens.COLORS.neutral[900],
  glassWhite: "rgba(255,255,255,0.9)",
  glassWhiteLight: "rgba(255,255,255,0.7)",
  glassWhiteDark: "rgba(255,255,255,0.3)",
  glassDark: "rgba(0,0,0,0.1)",
  glassDarkMedium: "rgba(0,0,0,0.2)",
  glassDarkStrong: "rgba(0,0,0,0.3)",
  gradientPrimary: [_designTokens.COLORS.primary[50], _designTokens.COLORS.primary[100], _designTokens.COLORS.primary[200]],
  gradientSecondary: [_designTokens.COLORS.secondary[50], _designTokens.COLORS.secondary[100], _designTokens.COLORS.secondary[200]],
  gradientAccent: [_designTokens.COLORS.info[50], _designTokens.COLORS.info[100], _designTokens.COLORS.info[200]],
  gradientSuccess: [_designTokens.COLORS.success[50], _designTokens.COLORS.success[100], _designTokens.COLORS.success[200]],
  gradientWarning: [_designTokens.COLORS.warning[50], _designTokens.COLORS.warning[100], _designTokens.COLORS.warning[200]],
  gradientError: [_designTokens.COLORS.error[50], _designTokens.COLORS.error[100], _designTokens.COLORS.error[200]],
  background: _designTokens.COLORS.neutral[0],
  surface: _designTokens.COLORS.neutral[50],
  surfaceElevated: _designTokens.COLORS.neutral[100],
  text: _designTokens.COLORS.neutral[900],
  textSecondary: _designTokens.COLORS.neutral[600],
  border: _designTokens.COLORS.neutral[200],
  borderLight: _designTokens.COLORS.neutral[100],
  card: _designTokens.COLORS.neutral[50],
  tertiary: _designTokens.COLORS.neutral[400],
  inverse: _designTokens.COLORS.neutral[900],
  shadow: "rgba(0, 0, 0, 0.1)"
};
var Typography = exports.Typography = {
  weights: _designTokens.TYPOGRAPHY.fontWeights,
  sizes: {
    xs: parseFloat(_designTokens.TYPOGRAPHY.fontSizes.xs),
    sm: parseFloat(_designTokens.TYPOGRAPHY.fontSizes.sm),
    base: parseFloat(_designTokens.TYPOGRAPHY.fontSizes.base),
    lg: parseFloat(_designTokens.TYPOGRAPHY.fontSizes.lg),
    xl: parseFloat(_designTokens.TYPOGRAPHY.fontSizes.xl),
    "2xl": parseFloat(_designTokens.TYPOGRAPHY.fontSizes["2xl"]),
    "3xl": parseFloat(_designTokens.TYPOGRAPHY.fontSizes["3xl"]),
    "4xl": parseFloat(_designTokens.TYPOGRAPHY.fontSizes["4xl"]),
    "5xl": parseFloat(_designTokens.TYPOGRAPHY.fontSizes["5xl"]),
    "6xl": parseFloat(_designTokens.TYPOGRAPHY.fontSizes["6xl"])
  },
  lineHeights: {
    tight: parseFloat(_designTokens.TYPOGRAPHY.lineHeights.tight),
    normal: parseFloat(_designTokens.TYPOGRAPHY.lineHeights.normal),
    relaxed: parseFloat(_designTokens.TYPOGRAPHY.lineHeights.relaxed)
  },
  letterSpacing: {
    tight: parseFloat(_designTokens.TYPOGRAPHY.letterSpacing.tight),
    normal: parseFloat(_designTokens.TYPOGRAPHY.letterSpacing.normal),
    wide: parseFloat(_designTokens.TYPOGRAPHY.letterSpacing.wide)
  }
};
var Spacing = exports.Spacing = {
  xs: parseFloat(_designTokens.SPACING[1]),
  sm: parseFloat(_designTokens.SPACING[2]),
  md: parseFloat(_designTokens.SPACING[3]),
  lg: parseFloat(_designTokens.SPACING[4]),
  xl: parseFloat(_designTokens.SPACING[5]),
  "2xl": parseFloat(_designTokens.SPACING[6]),
  "3xl": parseFloat(_designTokens.SPACING[8]),
  "4xl": parseFloat(_designTokens.SPACING[12]),
  "5xl": parseFloat(_designTokens.SPACING[16]),
  "6xl": parseFloat(_designTokens.SPACING[20]),
  "7xl": parseFloat(_designTokens.SPACING[24]),
  "8xl": parseFloat(_designTokens.SPACING[32])
};
var BorderRadius = exports.BorderRadius = {
  none: parseFloat(_designTokens.RADIUS.none),
  sm: parseFloat(_designTokens.RADIUS.sm),
  md: parseFloat(_designTokens.RADIUS.md),
  lg: parseFloat(_designTokens.RADIUS.lg),
  xl: parseFloat(_designTokens.RADIUS.xl),
  "2xl": parseFloat(_designTokens.RADIUS["2xl"]),
  "3xl": parseFloat(_designTokens.RADIUS["3xl"]),
  full: parseFloat(_designTokens.RADIUS.full)
};
var Shadows = exports.Shadows = {
  sm: {
    shadowColor: _designTokens.COLORS.neutral[900],
    shadowOffset: {
      width: 0,
      height: 1
    },
    shadowOpacity: 0.05,
    shadowRadius: 2,
    elevation: 1
  },
  md: {
    shadowColor: _designTokens.COLORS.neutral[900],
    shadowOffset: {
      width: 0,
      height: 4
    },
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 4
  },
  lg: {
    shadowColor: _designTokens.COLORS.neutral[900],
    shadowOffset: {
      width: 0,
      height: 8
    },
    shadowOpacity: 0.15,
    shadowRadius: 16,
    elevation: 8
  },
  xl: {
    shadowColor: _designTokens.COLORS.neutral[900],
    shadowOffset: {
      width: 0,
      height: 12
    },
    shadowOpacity: 0.2,
    shadowRadius: 24,
    elevation: 12
  },
  "2xl": {
    shadowColor: _designTokens.COLORS.neutral[900],
    shadowOffset: {
      width: 0,
      height: 16
    },
    shadowOpacity: 0.25,
    shadowRadius: 32,
    elevation: 16
  },
  primaryShadow: {
    shadowColor: _designTokens.COLORS.primary[500],
    shadowOffset: {
      width: 0,
      height: 8
    },
    shadowOpacity: 0.15,
    shadowRadius: 24,
    elevation: 12
  },
  secondaryShadow: {
    shadowColor: _designTokens.COLORS.secondary[500],
    shadowOffset: {
      width: 0,
      height: 8
    },
    shadowOpacity: 0.15,
    shadowRadius: 24,
    elevation: 12
  }
};
var GlobalStyles = exports.GlobalStyles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    position: "relative"
  },
  safeArea: {
    flex: 1
  },
  scrollContainer: {
    flexGrow: 1,
    paddingHorizontal: Spacing["2xl"],
    paddingVertical: Spacing.xl
  },
  content: {
    flex: 1,
    justifyContent: "center",
    minHeight: "100%"
  },
  backgroundGradient: {
    position: "absolute",
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  glassContainer: {
    backgroundColor: Colors.glassWhite,
    borderWidth: 1,
    borderColor: Colors.glassWhiteDark,
    overflow: "hidden"
  },
  glassBlur: {
    backgroundColor: Colors.glassWhiteLight,
    borderWidth: 1,
    borderColor: Colors.glassWhiteDark,
    overflow: "hidden"
  },
  header: {
    alignItems: "center",
    marginBottom: Spacing["6xl"]
  },
  headerBlur: {
    position: "absolute",
    top: 0,
    left: 0,
    right: 0,
    zIndex: 1000,
    paddingTop: _reactNative.Platform.OS === "ios" ? 0 : 24,
    borderBottomWidth: 0.5,
    borderBottomColor: Colors.glassDark
  },
  headerContent: {
    flexDirection: "row",
    alignItems: "center",
    paddingHorizontal: Spacing.lg,
    paddingVertical: Spacing.md,
    minHeight: 60
  },
  logoContainer: {
    borderRadius: BorderRadius["2xl"],
    paddingHorizontal: Spacing.xl,
    paddingVertical: Spacing.md,
    marginBottom: Spacing["2xl"],
    overflow: "hidden",
    backgroundColor: Colors.glassWhiteDark
  },
  logo: {
    fontSize: Typography.sizes["3xl"],
    fontWeight: Typography.weights.extrabold,
    color: Colors.primary,
    textAlign: "center"
  },
  title: {
    fontSize: Typography.sizes["4xl"],
    fontWeight: Typography.weights.extrabold,
    color: Colors.gray800,
    textAlign: "center",
    marginBottom: Spacing.lg,
    letterSpacing: Typography.letterSpacing.tight
  },
  subtitle: {
    fontSize: Typography.sizes.lg,
    color: Colors.gray500,
    textAlign: "center",
    lineHeight: Typography.sizes.lg * Typography.lineHeights.relaxed,
    paddingHorizontal: Spacing["2xl"],
    fontWeight: Typography.weights.medium
  },
  heading1: {
    fontSize: Typography.sizes["3xl"],
    fontWeight: Typography.weights.bold,
    color: Colors.gray800,
    letterSpacing: Typography.letterSpacing.tight
  },
  heading2: {
    fontSize: Typography.sizes["2xl"],
    fontWeight: Typography.weights.bold,
    color: Colors.gray800
  },
  heading3: {
    fontSize: Typography.sizes.xl,
    fontWeight: Typography.weights.semibold,
    color: Colors.gray700
  },
  bodyLarge: {
    fontSize: Typography.sizes.lg,
    color: Colors.gray600,
    lineHeight: Typography.sizes.lg * Typography.lineHeights.normal,
    fontWeight: Typography.weights.medium
  },
  body: {
    fontSize: Typography.sizes.base,
    color: Colors.gray600,
    lineHeight: Typography.sizes.base * Typography.lineHeights.normal
  },
  bodySmall: {
    fontSize: Typography.sizes.sm,
    color: Colors.gray500,
    lineHeight: Typography.sizes.sm * Typography.lineHeights.normal
  },
  caption: {
    fontSize: Typography.sizes.xs,
    color: Colors.gray400,
    fontWeight: Typography.weights.medium
  },
  card: _objectSpread({
    backgroundColor: Colors.white,
    borderRadius: BorderRadius["2xl"],
    overflow: "hidden"
  }, Shadows.lg),
  cardGlass: _objectSpread({
    borderRadius: BorderRadius["2xl"],
    overflow: "hidden"
  }, Shadows.primaryShadow),
  cardContent: {
    padding: Spacing["3xl"],
    borderRadius: BorderRadius["2xl"],
    borderWidth: 1,
    borderColor: Colors.glassWhiteLight
  },
  buttonPrimary: _objectSpread({
    borderRadius: BorderRadius["2xl"],
    overflow: "hidden"
  }, Shadows.md),
  buttonSecondary: _objectSpread({
    borderRadius: BorderRadius["2xl"],
    overflow: "hidden",
    backgroundColor: Colors.white,
    borderWidth: 2,
    borderColor: Colors.primary
  }, Shadows.sm),
  buttonGhost: {
    borderRadius: BorderRadius["2xl"],
    backgroundColor: "transparent"
  },
  buttonContent: {
    paddingHorizontal: Spacing["2xl"],
    paddingVertical: Spacing.lg,
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center",
    gap: Spacing.sm
  },
  buttonText: {
    fontSize: Typography.sizes.base,
    fontWeight: Typography.weights.semibold,
    textAlign: "center"
  },
  buttonTextPrimary: {
    color: Colors.white
  },
  buttonTextSecondary: {
    color: Colors.primary
  },
  inputContainer: {
    marginBottom: Spacing.xl
  },
  inputLabel: {
    fontSize: Typography.sizes.base,
    fontWeight: Typography.weights.semibold,
    color: Colors.gray700,
    marginBottom: Spacing.sm
  },
  input: _objectSpread({
    backgroundColor: Colors.gray50,
    borderRadius: BorderRadius.xl,
    paddingHorizontal: Spacing.lg,
    paddingVertical: Spacing.md,
    fontSize: Typography.sizes.base,
    lineHeight: Typography.sizes.base * Typography.lineHeights.normal,
    color: Colors.gray800,
    borderWidth: 1,
    borderColor: Colors.gray200
  }, Shadows.sm),
  inputFocused: _objectSpread({
    borderColor: Colors.primary,
    backgroundColor: Colors.white
  }, Shadows.md),
  inputError: {
    borderColor: Colors.error,
    backgroundColor: "#fef2f2"
  },
  listContainer: {
    paddingHorizontal: Spacing.lg,
    paddingVertical: Spacing.md,
    paddingBottom: Spacing.xl
  },
  listItem: _objectSpread({
    backgroundColor: Colors.white,
    borderRadius: BorderRadius.lg,
    padding: Spacing.lg,
    marginBottom: Spacing.md
  }, Shadows.sm),
  listItemPressed: _objectSpread({
    backgroundColor: Colors.gray50
  }, Shadows.md),
  modalOverlay: {
    flex: 1,
    backgroundColor: "rgba(0,0,0,0.5)",
    justifyContent: "center",
    alignItems: "center",
    padding: Spacing["2xl"]
  },
  modalContent: _objectSpread({
    backgroundColor: Colors.white,
    borderRadius: BorderRadius["2xl"],
    padding: Spacing["3xl"],
    width: "100%",
    maxWidth: screenWidth - Spacing["4xl"]
  }, Shadows["2xl"]),
  avatar: _objectSpread({
    borderRadius: BorderRadius.full,
    borderWidth: 2,
    borderColor: Colors.white
  }, Shadows.md),
  avatarSmall: {
    width: 32,
    height: 32
  },
  avatarMedium: {
    width: 48,
    height: 48
  },
  avatarLarge: {
    width: 64,
    height: 64
  },
  badge: {
    paddingHorizontal: Spacing.sm,
    paddingVertical: Spacing.xs,
    borderRadius: BorderRadius.full,
    alignSelf: "flex-start"
  },
  badgeSuccess: {
    backgroundColor: Colors.success
  },
  badgeWarning: {
    backgroundColor: Colors.warning
  },
  badgeError: {
    backgroundColor: Colors.error
  },
  badgeInfo: {
    backgroundColor: Colors.info
  },
  badgeText: {
    fontSize: Typography.sizes.xs,
    fontWeight: Typography.weights.semibold,
    color: Colors.white
  },
  loadingContainer: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    padding: Spacing["4xl"]
  },
  loadingText: {
    fontSize: Typography.sizes.lg,
    color: Colors.gray500,
    marginTop: Spacing.lg,
    textAlign: "center"
  },
  emptyContainer: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    paddingHorizontal: Spacing["4xl"]
  },
  emptyTitle: {
    fontSize: Typography.sizes["2xl"],
    fontWeight: Typography.weights.bold,
    color: Colors.gray700,
    marginTop: Spacing.xl,
    textAlign: "center"
  },
  emptySubtitle: {
    fontSize: Typography.sizes.base,
    color: Colors.gray500,
    textAlign: "center",
    marginTop: Spacing.md,
    marginBottom: Spacing["3xl"],
    lineHeight: Typography.sizes.base * Typography.lineHeights.relaxed
  },
  flexRow: {
    flexDirection: "row"
  },
  flexColumn: {
    flexDirection: "column"
  },
  alignCenter: {
    alignItems: "center"
  },
  alignStart: {
    alignItems: "flex-start"
  },
  alignEnd: {
    alignItems: "flex-end"
  },
  justifyCenter: {
    justifyContent: "center"
  },
  justifyBetween: {
    justifyContent: "space-between"
  },
  justifyAround: {
    justifyContent: "space-around"
  },
  textCenter: {
    textAlign: "center"
  },
  textLeft: {
    textAlign: "left"
  },
  textRight: {
    textAlign: "right"
  },
  mt0: {
    marginTop: 0
  },
  mt1: {
    marginTop: Spacing.xs
  },
  mt2: {
    marginTop: Spacing.sm
  },
  mt3: {
    marginTop: Spacing.md
  },
  mt4: {
    marginTop: Spacing.lg
  },
  mt5: {
    marginTop: Spacing.xl
  },
  mt6: {
    marginTop: Spacing["2xl"]
  },
  mt8: {
    marginTop: Spacing["4xl"]
  },
  mb0: {
    marginBottom: 0
  },
  mb1: {
    marginBottom: Spacing.xs
  },
  mb2: {
    marginBottom: Spacing.sm
  },
  mb3: {
    marginBottom: Spacing.md
  },
  mb4: {
    marginBottom: Spacing.lg
  },
  mb5: {
    marginBottom: Spacing.xl
  },
  mb6: {
    marginBottom: Spacing["2xl"]
  },
  mb8: {
    marginBottom: Spacing["4xl"]
  },
  mx0: {
    marginHorizontal: 0
  },
  mx1: {
    marginHorizontal: Spacing.xs
  },
  mx2: {
    marginHorizontal: Spacing.sm
  },
  mx3: {
    marginHorizontal: Spacing.md
  },
  mx4: {
    marginHorizontal: Spacing.lg
  },
  mx5: {
    marginHorizontal: Spacing.xl
  },
  mx6: {
    marginHorizontal: Spacing["2xl"]
  },
  p0: {
    padding: 0
  },
  p1: {
    padding: Spacing.xs
  },
  p2: {
    padding: Spacing.sm
  },
  p3: {
    padding: Spacing.md
  },
  p4: {
    padding: Spacing.lg
  },
  p5: {
    padding: Spacing.xl
  },
  p6: {
    padding: Spacing["2xl"]
  },
  p8: {
    padding: Spacing["4xl"]
  },
  px0: {
    paddingHorizontal: 0
  },
  px1: {
    paddingHorizontal: Spacing.xs
  },
  px2: {
    paddingHorizontal: Spacing.sm
  },
  px3: {
    paddingHorizontal: Spacing.md
  },
  px4: {
    paddingHorizontal: Spacing.lg
  },
  px5: {
    paddingHorizontal: Spacing.xl
  },
  px6: {
    paddingHorizontal: Spacing["2xl"]
  },
  py0: {
    paddingVertical: 0
  },
  py1: {
    paddingVertical: Spacing.xs
  },
  py2: {
    paddingVertical: Spacing.sm
  },
  py3: {
    paddingVertical: Spacing.md
  },
  py4: {
    paddingVertical: Spacing.lg
  },
  py5: {
    paddingVertical: Spacing.xl
  },
  py6: {
    paddingVertical: Spacing["2xl"]
  }
});
var AnimationConfigs = exports.AnimationConfigs = {
  spring: {
    damping: 20,
    stiffness: 400,
    mass: 0.8
  },
  springGentle: {
    damping: 25,
    stiffness: 300,
    mass: 1
  },
  springBouncy: {
    damping: 15,
    stiffness: 500,
    mass: 0.6
  },
  timing: {
    duration: 600,
    easing: "bezier(0.4, 0, 0.2, 1)"
  },
  timingFast: {
    duration: 300,
    easing: "bezier(0.4, 0, 0.2, 1)"
  },
  timingSlow: {
    duration: 800,
    easing: "bezier(0.4, 0, 0.2, 1)"
  }
};
var Device = exports.Device = {
  width: screenWidth,
  height: screenHeight,
  isSmall: screenWidth < 375,
  isMedium: screenWidth >= 375 && screenWidth < 414,
  isLarge: screenWidth >= 414,
  isIOS: _reactNative.Platform.OS === "ios",
  isAndroid: _reactNative.Platform.OS === "android"
};
var _default = exports.default = GlobalStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,