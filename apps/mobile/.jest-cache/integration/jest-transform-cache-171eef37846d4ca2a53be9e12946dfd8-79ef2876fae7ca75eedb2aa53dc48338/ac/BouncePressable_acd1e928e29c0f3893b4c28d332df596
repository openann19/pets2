5c7ee9af9a11a8178d4f8d1c857ce81c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
var Haptics = _interopRequireWildcard(require("expo-haptics"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["children", "scaleFrom", "scaleTo", "haptics", "onPressIn", "onPressOut", "onPress"];
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t2 in e) "default" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]); return f; })(e, t); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _worklet_9388892420318_init_data = {
  code: "function anonymous() {\n  const {\n    s\n  } = this._closure;\n  return {\n    transform: [{\n      scale: s.value\n    }]\n  };\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/micro/BouncePressable.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"s\",\"_closure\",\"transform\",\"scale\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/micro/BouncePressable.tsx\"],\"mappings\":\"AAgBiC,SAAAA,UAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,OAAO;IAAEC,SAAS,EAAE,CAAC;MAAEC,KAAK,EAAEH,CAAC,CAACI;IAAM,CAAC;EAAE,CAAC;AAAA\",\"ignoreList\":[]}"
};
var BouncePressable = (0, _react.memo)(function BouncePressable(_ref) {
  var children = _ref.children,
    _ref$scaleFrom = _ref.scaleFrom,
    scaleFrom = _ref$scaleFrom === void 0 ? 0.96 : _ref$scaleFrom,
    _ref$scaleTo = _ref.scaleTo,
    scaleTo = _ref$scaleTo === void 0 ? 1 : _ref$scaleTo,
    _ref$haptics = _ref.haptics,
    haptics = _ref$haptics === void 0 ? true : _ref$haptics,
    _onPressIn = _ref.onPressIn,
    _onPressOut = _ref.onPressOut,
    onPress = _ref.onPress,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var s = (0, _reactNativeReanimated.useSharedValue)(scaleTo);
  var style = (0, _reactNativeReanimated.useAnimatedStyle)(function () {
    var _e = [new global.Error(), -2, -27];
    var _f = function _f() {
      return {
        transform: [{
          scale: s.value
        }]
      };
    };
    _f._closure = {
      s: s
    };
    _f.__initData = _worklet_9388892420318_init_data;
    _f.__workletHash = 9388892420318;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  return (0, _jsxRuntime.jsx)(_reactNative.Pressable, _objectSpread(_objectSpread({}, rest), {}, {
    onPressIn: function onPressIn(e) {
      s.value = (0, _reactNativeReanimated.withSpring)(scaleFrom, {
        stiffness: 500,
        damping: 28,
        mass: 0.7
      });
      if (haptics) Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);
      _onPressIn == null ? void 0 : _onPressIn(e);
    },
    onPressOut: function onPressOut(e) {
      s.value = (0, _reactNativeReanimated.withSpring)(scaleTo, {
        stiffness: 380,
        damping: 22,
        mass: 0.7
      });
      _onPressOut == null ? void 0 : _onPressOut(e);
    },
    onPress: onPress,
    style: function style(_ref2) {
      var pressed = _ref2.pressed;
      return [{
        opacity: pressed ? 0.95 : 1
      }];
    },
    children: typeof children === 'function' ? (0, _jsxRuntime.jsx)(_reactNativeReanimated.default.View, {
      style: style,
      children: children({
        pressed: false
      })
    }) : (0, _jsxRuntime.jsx)(_reactNativeReanimated.default.View, {
      style: style,
      children: children
    })
  }));
});
var _default = exports.default = BouncePressable;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,