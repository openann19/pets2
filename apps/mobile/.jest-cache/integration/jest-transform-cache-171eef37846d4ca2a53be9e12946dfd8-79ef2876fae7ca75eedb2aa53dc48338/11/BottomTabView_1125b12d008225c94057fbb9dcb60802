e98f5f791799cd41bcfff50738ee21b1
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));
var _toConsumableArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/toConsumableArray"));
var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BottomTabView;
var _elements = require("@react-navigation/elements");
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeSafeAreaContext = require("react-native-safe-area-context");
var _BottomTabBarHeightCallbackContext = _interopRequireDefault(require("../utils/BottomTabBarHeightCallbackContext"));
var _BottomTabBarHeightContext = _interopRequireDefault(require("../utils/BottomTabBarHeightContext"));
var _BottomTabBar = _interopRequireWildcard(require("./BottomTabBar"));
var _ScreenFallback = require("./ScreenFallback");
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function BottomTabView(props) {
  var _props$tabBar = props.tabBar,
    tabBar = _props$tabBar === void 0 ? function (props) {
      return React.createElement(_BottomTabBar.default, props);
    } : _props$tabBar,
    state = props.state,
    navigation = props.navigation,
    descriptors = props.descriptors,
    safeAreaInsets = props.safeAreaInsets,
    _props$detachInactive = props.detachInactiveScreens,
    detachInactiveScreens = _props$detachInactive === void 0 ? _reactNative.Platform.OS === 'web' || _reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' : _props$detachInactive,
    sceneContainerStyle = props.sceneContainerStyle;
  var focusedRouteKey = state.routes[state.index].key;
  var _React$useState = React.useState([focusedRouteKey]),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    loaded = _React$useState2[0],
    setLoaded = _React$useState2[1];
  if (!loaded.includes(focusedRouteKey)) {
    setLoaded([].concat((0, _toConsumableArray2.default)(loaded), [focusedRouteKey]));
  }
  var dimensions = _elements.SafeAreaProviderCompat.initialMetrics.frame;
  var _React$useState3 = React.useState(function () {
      return (0, _BottomTabBar.getTabBarHeight)({
        state: state,
        descriptors: descriptors,
        dimensions: dimensions,
        layout: {
          width: dimensions.width,
          height: 0
        },
        insets: _objectSpread(_objectSpread({}, _elements.SafeAreaProviderCompat.initialMetrics.insets), props.safeAreaInsets),
        style: descriptors[state.routes[state.index].key].options.tabBarStyle
      });
    }),
    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
    tabBarHeight = _React$useState4[0],
    setTabBarHeight = _React$useState4[1];
  var renderTabBar = function renderTabBar() {
    return React.createElement(_reactNativeSafeAreaContext.SafeAreaInsetsContext.Consumer, null, function (insets) {
      var _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;
      return tabBar({
        state: state,
        descriptors: descriptors,
        navigation: navigation,
        insets: {
          top: (_ref2 = (_ref3 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) != null ? _ref3 : insets === null || insets === void 0 ? void 0 : insets.top) != null ? _ref2 : 0,
          right: (_ref4 = (_ref5 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) != null ? _ref5 : insets === null || insets === void 0 ? void 0 : insets.right) != null ? _ref4 : 0,
          bottom: (_ref6 = (_ref7 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) != null ? _ref7 : insets === null || insets === void 0 ? void 0 : insets.bottom) != null ? _ref6 : 0,
          left: (_ref8 = (_ref9 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) != null ? _ref9 : insets === null || insets === void 0 ? void 0 : insets.left) != null ? _ref8 : 0
        }
      });
    });
  };
  var routes = state.routes;
  return React.createElement(_elements.SafeAreaProviderCompat, null, React.createElement(_ScreenFallback.MaybeScreenContainer, {
    enabled: detachInactiveScreens,
    hasTwoStates: true,
    style: styles.container
  }, routes.map(function (route, index) {
    var descriptor = descriptors[route.key];
    var _descriptor$options = descriptor.options,
      _descriptor$options$l = _descriptor$options.lazy,
      lazy = _descriptor$options$l === void 0 ? true : _descriptor$options$l,
      unmountOnBlur = _descriptor$options.unmountOnBlur;
    var isFocused = state.index === index;
    if (unmountOnBlur && !isFocused) {
      return null;
    }
    if (lazy && !loaded.includes(route.key) && !isFocused) {
      return null;
    }
    var _descriptor$options2 = descriptor.options,
      freezeOnBlur = _descriptor$options2.freezeOnBlur,
      _descriptor$options2$ = _descriptor$options2.header,
      header = _descriptor$options2$ === void 0 ? function (_ref) {
        var layout = _ref.layout,
          options = _ref.options;
        return React.createElement(_elements.Header, _extends({}, options, {
          layout: layout,
          title: (0, _elements.getHeaderTitle)(options, route.name)
        }));
      } : _descriptor$options2$,
      headerShown = _descriptor$options2.headerShown,
      headerStatusBarHeight = _descriptor$options2.headerStatusBarHeight,
      headerTransparent = _descriptor$options2.headerTransparent;
    return React.createElement(_ScreenFallback.MaybeScreen, {
      key: route.key,
      style: [_reactNative.StyleSheet.absoluteFill, {
        zIndex: isFocused ? 0 : -1
      }],
      visible: isFocused,
      enabled: detachInactiveScreens,
      freezeOnBlur: freezeOnBlur
    }, React.createElement(_BottomTabBarHeightContext.default.Provider, {
      value: tabBarHeight
    }, React.createElement(_elements.Screen, {
      focused: isFocused,
      route: descriptor.route,
      navigation: descriptor.navigation,
      headerShown: headerShown,
      headerStatusBarHeight: headerStatusBarHeight,
      headerTransparent: headerTransparent,
      header: header({
        layout: dimensions,
        route: descriptor.route,
        navigation: descriptor.navigation,
        options: descriptor.options
      }),
      style: sceneContainerStyle
    }, descriptor.render())));
  })), React.createElement(_BottomTabBarHeightCallbackContext.default.Provider, {
    value: setTabBarHeight
  }, renderTabBar()));
}
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    overflow: 'hidden'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,