23c4d54a0e4d30f25994e375f1b80d57
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useLinkBuilder;
var _core = require("@react-navigation/core");
var React = _interopRequireWildcard(require("react"));
var _LinkingContext = _interopRequireDefault(require("./LinkingContext"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
var _getRootStateForNavigate = function getRootStateForNavigate(navigation, state) {
  var parent = navigation.getParent();
  if (parent) {
    var parentState = parent.getState();
    return _getRootStateForNavigate(parent, {
      index: 0,
      routes: [_objectSpread(_objectSpread({}, parentState.routes[parentState.index]), {}, {
        state: state
      })]
    });
  }
  return state;
};
function useLinkBuilder() {
  var navigation = React.useContext(_core.NavigationHelpersContext);
  var linking = React.useContext(_LinkingContext.default);
  var buildLink = React.useCallback(function (name, params) {
    var options = linking.options;
    if ((options === null || options === void 0 ? void 0 : options.enabled) === false) {
      return undefined;
    }
    var state = navigation ? _getRootStateForNavigate(navigation, {
      index: 0,
      routes: [{
        name: name,
        params: params
      }]
    }) : {
      index: 0,
      routes: [{
        name: name,
        params: params
      }]
    };
    var path = options !== null && options !== void 0 && options.getPathFromState ? options.getPathFromState(state, options === null || options === void 0 ? void 0 : options.config) : (0, _core.getPathFromState)(state, options === null || options === void 0 ? void 0 : options.config);
    return path;
  }, [linking, navigation]);
  return buildLink;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29yZSIsInJlcXVpcmUiLCJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX0xpbmtpbmdDb250ZXh0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJnZXRSb290U3RhdGVGb3JOYXZpZ2F0ZSIsIm5hdmlnYXRpb24iLCJzdGF0ZSIsInBhcmVudCIsImdldFBhcmVudCIsInBhcmVudFN0YXRlIiwiZ2V0U3RhdGUiLCJpbmRleCIsInJvdXRlcyIsIl9vYmplY3RTcHJlYWQiLCJ1c2VMaW5rQnVpbGRlciIsInVzZUNvbnRleHQiLCJOYXZpZ2F0aW9uSGVscGVyc0NvbnRleHQiLCJsaW5raW5nIiwiYnVpbGRMaW5rIiwidXNlQ2FsbGJhY2siLCJuYW1lIiwicGFyYW1zIiwib3B0aW9ucyIsImVuYWJsZWQiLCJ1bmRlZmluZWQiLCJwYXRoIiwiZ2V0UGF0aEZyb21TdGF0ZSIsImNvbmZpZyJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91c2VMaW5rQnVpbGRlci50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxLQUFBLEdBQUFDLE9BQUE7QUFPQSxJQUFBQyxLQUFBLEdBQUFDLHVCQUFBLENBQUFGLE9BQUE7QUFFQSxJQUFBRyxlQUFBLEdBQUFDLHNCQUFBLENBQUFKLE9BQUE7QUFBOEMs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