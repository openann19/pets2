{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_expoBlur","Haptics","_vectorIcons","_native","_reactNativeReanimated","_reactNativeSafeAreaContext","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","SPRING","damping","stiffness","mass","getIcon","routeName","focused","_worklet_5136796338017_init_data","code","location","sourceMap","_worklet_4831822296595_init_data","ActivePillTabBar","_ref","state","descriptors","navigation","_useTheme","useTheme","colors","dark","insets","useSafeAreaInsets","layoutsRef","useRef","lastTapRef","indicatorX","useSharedValue","indicatorW","routesLength","routes","length","iconScales","useMemo","map","useEffect","route","index","layout","current","key","value","withSpring","x","w","s","impactAsync","ImpactFeedbackStyle","Light","catch","pillStyle","useAnimatedStyle","_e","global","Error","_f","transform","translateX","width","_closure","__initData","__workletHash","__stackDetails","__version","getBadgeCount","onTabLayout","_e$nativeEvent$layout","nativeEvent","currentRoute","withTiming","duration","jsx","View","style","styles","root","paddingBottom","Math","max","bottom","backgroundColor","Platform","OS","children","jsxs","BlurView","intensity","tint","bar","borderColor","pill","_descriptor$options","_ref2","_options$tabBarLabel","descriptor","options","label","tabBarLabel","title","name","isFocused","badgeCount","showBadge","scale","iconStyle","_scale$value","onPress","_lastTapRef$current$r","now","Date","last","delta","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","onLongPress","TouchableOpacity","onLayout","accessibilityRole","accessibilityState","selected","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","tab","activeOpacity","iconWrap","Ionicons","size","color","primary","text","badge","Text","badgeText","String","fontWeight","numberOfLines","StyleSheet","create","paddingTop","marginHorizontal","height","borderRadius","overflow","borderWidth","flexDirection","alignItems","paddingHorizontal","position","top","flex","justifyContent","right","minWidth","fontSize","marginTop"],"sources":["ActivePillTabBar.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef } from \"react\";\nimport {\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport type { LayoutChangeEvent } from \"react-native\";\nimport { BlurView } from \"expo-blur\";\nimport * as Haptics from \"expo-haptics\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useTheme } from \"@react-navigation/native\";\nimport Animated, {\n  Extrapolate,\n  interpolate,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n  withTiming,\n} from \"react-native-reanimated\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\n\ntype TabRoute = { key: string; name: string };\ntype State = { index: number; routes: TabRoute[] };\n\ntype Props = {\n  state: State;\n  descriptors: any;\n  navigation: any;\n};\n\nconst SPRING = { damping: 22, stiffness: 260, mass: 0.9 };\n\nconst getIcon = (routeName: string, focused: boolean): any => {\n  switch (routeName) {\n    case \"Home\":\n      return focused ? \"home\" : \"home-outline\";\n    case \"Swipe\":\n      return focused ? \"heart\" : \"heart-outline\";\n    case \"Map\":\n      return focused ? \"map\" : \"map-outline\";\n    case \"Matches\":\n      return focused ? \"chatbubbles\" : \"chatbubbles-outline\";\n    case \"Profile\":\n      return focused ? \"person\" : \"person-outline\";\n    case \"AdoptionManager\":\n      return focused ? \"list\" : \"list-outline\";\n    case \"Premium\":\n      return focused ? \"star\" : \"star-outline\";\n    default:\n      return \"home-outline\";\n  }\n};\n\nexport default function ActivePillTabBar({\n  state,\n  descriptors,\n  navigation,\n}: Props) {\n  const { colors, dark } = useTheme();\n  const insets = useSafeAreaInsets();\n\n  // measure each tab\n  const layoutsRef = useRef<Record<string, { x: number; w: number }>>({});\n  \n  // Keep track of last tap times for double-tap detection\n  const lastTapRef = useRef<Record<string, number>>({});\n\n  const indicatorX = useSharedValue(0);\n  const indicatorW = useSharedValue(0);\n\n  // icon scale per tab - create stable array of shared values\n  const routesLength = state.routes.length;\n  const iconScales = useMemo(\n    () => {\n      // Recreate array only when routes count changes to maintain stable references\n      return state.routes.map(() => useSharedValue(1));\n    },\n    [routesLength],\n  );\n\n  useEffect(() => {\n    const route = state.routes[state.index];\n    if (!route) return;\n    const layout = layoutsRef.current[route.key];\n    if (!layout) return;\n\n    indicatorX.value = withSpring(layout.x, SPRING);\n    indicatorW.value = withSpring(layout.w, SPRING);\n\n    // bounce the focused icon a touch\n    const s = iconScales[state.index];\n    if (s) {\n      s.value = 1.15;\n      s.value = withSpring(1, { damping: 12, stiffness: 300 });\n    }\n    // subtle haptic\n    Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light).catch(() => {});\n  }, [state.index, iconScales, indicatorX, indicatorW, state.routes]);\n\n  const pillStyle = useAnimatedStyle(() => ({\n    transform: [{ translateX: indicatorX.value }],\n    width: indicatorW.value,\n  }));\n\n  // mock counts (replace with your store later)\n  const getBadgeCount = (routeName: string) => {\n    switch (routeName) {\n      case \"Matches\":\n        return 3;\n      case \"Home\":\n        return 2;\n      case \"Map\":\n        return 1;\n      default:\n        return 0;\n    }\n  };\n\n  const onTabLayout =\n    (key: string) =>\n    (e: LayoutChangeEvent): void => {\n      const { x, width } = e.nativeEvent.layout;\n      layoutsRef.current[key] = { x, w: width };\n      // seed initial position on first layout pass\n      const currentRoute = state.routes[state.index];\n      if (currentRoute && key === currentRoute.key) {\n        indicatorX.value = withTiming(x, { duration: 0 });\n        indicatorW.value = withTiming(width, { duration: 0 });\n      }\n    };\n\n  return (\n    <View\n      style={[\n        styles.root,\n        {\n          paddingBottom: Math.max(insets.bottom, 8),\n          backgroundColor:\n            Platform.OS === \"android\"\n              ? (dark ? \"#16181d\" : \"#ffffff\")\n              : \"transparent\",\n        },\n      ]}\n    >\n      <BlurView\n        intensity={Platform.OS === \"ios\" ? 80 : 100}\n        tint={dark ? \"dark\" : \"light\"}\n        style={[styles.bar, { borderColor: dark ? \"#2a2e36\" : \"#e5e7eb\" }]}\n      >\n        {/* active pill */}\n        <Animated.View\n          style={[\n            styles.pill,\n            {\n              backgroundColor: dark ? \"rgba(255,255,255,0.08)\" : \"rgba(0,0,0,0.06)\",\n            },\n            pillStyle,\n          ]}\n        />\n\n        {state.routes.map((route, index) => {\n          const descriptor = descriptors[route.key];\n          const options = descriptor?.options ?? {};\n          const label =\n            options.tabBarLabel ??\n            options.title ??\n            route.name;\n\n          const isFocused = state.index === index;\n          const badgeCount = getBadgeCount(route.name);\n          const showBadge = badgeCount > 0;\n\n          const scale = iconScales[index];\n          const iconStyle = useAnimatedStyle(() => ({\n            transform: [{ scale: scale?.value ?? 1 }],\n          }));\n\n          const onPress = () => {\n            const now = Date.now();\n            const last = lastTapRef.current[route.key] ?? 0;\n            const delta = now - last;\n            lastTapRef.current[route.key] = now;\n\n            // Bounce animation on icon press\n            if (scale) {\n              scale.value = 0.9;\n              scale.value = withSpring(1, { damping: 10, stiffness: 420 });\n            }\n            \n            const event = navigation.emit({\n              type: \"tabPress\",\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            // Double-tap detection: if focused and tapped within 300ms, fire custom event\n            if (isFocused && delta < 300) {\n              navigation.emit({ type: \"tabDoublePress\", target: route.key });\n            }\n\n            if (!isFocused && !event.defaultPrevented) {\n              navigation.navigate(route.name);\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({ type: \"tabLongPress\", target: route.key });\n          };\n\n          return (\n            <TouchableOpacity\n              key={route.key}\n              onLayout={onTabLayout(route.key)}\n              accessibilityRole=\"tab\"\n              accessibilityState={isFocused ? { selected: true } : {}}\n              accessibilityLabel={options.tabBarAccessibilityLabel || `${label} tab`}\n              testID={options.tabBarTestID}\n              onPress={onPress}\n              onLongPress={onLongPress}\n              style={styles.tab}\n              activeOpacity={0.9}\n            >\n              <View style={styles.iconWrap}>\n                <Animated.View style={iconStyle}>\n                  <Ionicons\n                    name={getIcon(route.name, isFocused)}\n                    size={22}\n                    color={isFocused ? colors.primary : colors.text}\n                  />\n                </Animated.View>\n\n                {showBadge ? (\n                  <View\n                    style={[\n                      styles.badge,\n                      {\n                        backgroundColor: \"#ef4444\",\n                        borderColor: dark ? \"#0b0d11\" : \"#ffffff\",\n                      },\n                    ]}\n                  >\n                    <Text style={styles.badgeText}>\n                      {badgeCount > 99 ? \"99+\" : String(badgeCount)}\n                    </Text>\n                  </View>\n                ) : null}\n              </View>\n\n              <Text\n                style={[\n                  styles.label,\n                  {\n                    color: isFocused ? colors.primary : colors.text,\n                    fontWeight: isFocused ? \"600\" : \"400\",\n                  },\n                ]}\n                numberOfLines={1}\n              >\n                {label}\n              </Text>\n            </TouchableOpacity>\n          );\n        })}\n      </BlurView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    paddingTop: 8,\n  },\n  bar: {\n    marginHorizontal: 12,\n    height: 64,\n    borderRadius: 18,\n    overflow: \"hidden\",\n    borderWidth: Platform.OS === \"ios\" ? 0 : 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 6,\n  },\n  pill: {\n    position: \"absolute\",\n    top: 6,\n    bottom: 6,\n    borderRadius: 14,\n  },\n  tab: {\n    flex: 1,\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  iconWrap: {\n    position: \"relative\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  badge: {\n    position: \"absolute\",\n    top: -4,\n    right: -12,\n    minWidth: 18,\n    height: 18,\n    paddingHorizontal: 4,\n    borderRadius: 9,\n    borderWidth: 2,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  badgeText: {\n    color: \"#fff\",\n    fontSize: 10,\n    fontWeight: \"700\",\n  },\n  label: {\n    fontSize: 11,\n    marginTop: 2,\n  },\n});\n\n"],"mappings":"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","ignoreList":[]}