85f42f85239d3fe31ba8fe5bfc8ce66a
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SendSparkle = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var GLYPHS = ["✦", "✧", "✺", "✨"];
var _worklet_1145890008131_init_data = {
  code: "function anonymous() {\n  const {\n    items,\n    cancelAnimation,\n    withSpring,\n    withTiming,\n    withDelay,\n    duration\n  } = this._closure;\n  const spread = 34;\n  items.forEach(function (p) {\n    cancelAnimation(p.x);\n    cancelAnimation(p.y);\n    cancelAnimation(p.s);\n    cancelAnimation(p.o);\n    cancelAnimation(p.r);\n    const angle = Math.random() * Math.PI * 2;\n    const radius = spread * (0.4 + Math.random() * 1);\n    const dx = Math.cos(angle) * radius;\n    const dy = -Math.abs(Math.sin(angle) * radius);\n    p.x.value = 0;\n    p.y.value = 0;\n    p.s.value = 0;\n    p.o.value = 0;\n    p.r.value = 0;\n    p.s.value = withSpring(1, {\n      damping: 12,\n      stiffness: 240\n    });\n    p.o.value = withTiming(1, {\n      duration: 80\n    });\n    p.x.value = withSpring(dx, {\n      damping: 16,\n      stiffness: 160\n    });\n    p.y.value = withSpring(dy, {\n      damping: 16,\n      stiffness: 160\n    });\n    p.r.value = withSpring((Math.random() > 0.5 ? 1 : -1) * (10 + Math.random() * 25));\n    p.o.value = withDelay(120, withTiming(0, {\n      duration: duration\n    }));\n    p.s.value = withDelay(120, withTiming(0.2, {\n      duration: duration\n    }));\n  });\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/SendSparkle.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"items\",\"cancelAnimation\",\"withSpring\",\"withTiming\",\"withDelay\",\"duration\",\"_closure\",\"spread\",\"forEach\",\"p\",\"x\",\"y\",\"s\",\"o\",\"r\",\"angle\",\"Math\",\"random\",\"PI\",\"radius\",\"dx\",\"cos\",\"dy\",\"abs\",\"sin\",\"value\",\"damping\",\"stiffness\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/SendSparkle.tsx\"],\"mappings\":\"AAkDkB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,KAAA;IAAAC,eAAA;IAAAC,UAAA;IAAAC,UAAA;IAAAC,SAAA;IAAAC;EAAA,SAAAC,QAAA;EAElB,MAAMC,MAAM,GAAG,EAAE;EACjBP,KAAK,CAACQ,OAAO,CAAE,UAAAC,CAAC,EAAK;IACnBR,eAAe,CAACQ,CAAC,CAACC,CAAC,CAAC;IACpBT,eAAe,CAACQ,CAAC,CAACE,CAAC,CAAC;IACpBV,eAAe,CAACQ,CAAC,CAACG,CAAC,CAAC;IACpBX,eAAe,CAACQ,CAAC,CAACI,CAAC,CAAC;IACpBZ,eAAe,CAACQ,CAAC,CAACK,CAAC,CAAC;IAGpB,MAAMC,KAAK,GAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGD,IAAI,CAACE,EAAE,GAAG,CAAE;IAC3C,MAAMC,MAAM,GAAGZ,MAAM,IAAI,GAAG,GAAGS,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACjD,MAAMG,EAAE,GAAGJ,IAAI,CAACK,GAAG,CAACN,KAAK,CAAC,GAAGI,MAAM;IACnC,MAAMG,EAAE,GAAG,CAACN,IAAI,CAACO,GAAG,CAACP,IAAI,CAACQ,GAAG,CAACT,KAAK,CAAC,GAAGI,MAAM,CAAC;IAE9CV,CAAC,CAACC,CAAC,CAACe,KAAK,GAAG,CAAC;IACbhB,CAAC,CAACE,CAAC,CAACc,KAAK,GAAG,CAAC;IACbhB,CAAC,CAACG,CAAC,CAACa,KAAK,GAAG,CAAC;IACbhB,CAAC,CAACI,CAAC,CAACY,KAAK,GAAG,CAAC;IACbhB,CAAC,CAACK,CAAC,CAACW,KAAK,GAAG,CAAC;IAEbhB,CAAC,CAACG,CAAC,CAACa,KAAK,GAAGvB,UAAU,CAAC,CAAC,EAAE;MAAEwB,OAAO,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAI,CAAC,CAAC;IAC1DlB,CAAC,CAACI,CAAC,CAACY,KAAK,GAAGtB,UAAU,CAAC,CAAC,EAAE;MAAEE,QAAQ,EAAE;IAAG,CAAC,CAAC;IAC3CI,CAAC,CAACC,CAAC,CAACe,KAAK,GAAGvB,UAAU,CAACkB,EAAE,EAAE;MAAEM,OAAO,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAI,CAAC,CAAC;IAC3DlB,CAAC,CAACE,CAAC,CAACc,KAAK,GAAGvB,UAAU,CAACoB,EAAE,EAAE;MAAEI,OAAO,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAI,CAAC,CAAC;IAC3DlB,CAAC,CAACK,CAAC,CAACW,KAAK,GAAGvB,UAAU,CAAC,CAACc,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAGD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAGlFR,CAAC,CAACI,CAAC,CAACY,KAAK,GAAGrB,SAAS,CAAC,GAAG,EAAED,UAAU,CAAC,CAAC,EAAE;MAAEE,QAAA,EAAAA;IAAS,CAAC,CAAC,CAAC;IACvDI,CAAC,CAACG,CAAC,CAACa,KAAK,GAAGrB,SAAS,CAAC,GAAG,EAAED,UAAU,CAAC,GAAG,EAAE;MAAEE,QAAA,EAAAA;IAAS,CAAC,CAAC,CAAC;EAC3D,CAAC,CAAC;AACJ\",\"ignoreList\":[]}"
};
var _worklet_1256343299839_init_data = {
  code: "function anonymous() {\n  const {\n    p\n  } = this._closure;\n  return {\n    transform: [{\n      translateX: p.x.value\n    }, {\n      translateY: p.y.value\n    }, {\n      rotate: p.r.value + \"deg\"\n    }, {\n      scale: p.s.value\n    }],\n    opacity: p.o.value\n  };\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/SendSparkle.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"p\",\"_closure\",\"transform\",\"translateX\",\"x\",\"value\",\"translateY\",\"y\",\"rotate\",\"r\",\"scale\",\"s\",\"opacity\",\"o\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/SendSparkle.tsx\"],\"mappings\":\"AAyFuC,SAAAA,UAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,OAAO;IAClCC,SAAS,EAAE,CACT;MAAEC,UAAU,EAAEH,CAAC,CAACI,CAAC,CAACC;IAAM,CAAC,EACzB;MAAEC,UAAU,EAAEN,CAAC,CAACO,CAAC,CAACF;IAAM,CAAC,EACzB;MAAEG,MAAM,EAAKR,CAAC,CAACS,CAAC,CAACJ,KAAK;IAAM,CAAC,EAC7B;MAAEK,KAAK,EAAEV,CAAC,CAACW,CAAC,CAACN;IAAM,CAAC,CACrB;IACDO,OAAO,EAAEZ,CAAC,CAACa,CAAC,CAACR;EACf,CAAC;AAAA\",\"ignoreList\":[]}"
};
var SendSparkle = exports.SendSparkle = (0, _react.forwardRef)(function (_ref, ref) {
  var _ref$count = _ref.count,
    count = _ref$count === void 0 ? 10 : _ref$count,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 14 : _ref$size,
    _ref$duration = _ref.duration,
    duration = _ref$duration === void 0 ? 450 : _ref$duration,
    _ref$colors = _ref.colors,
    colors = _ref$colors === void 0 ? ["#ffffff", "#fde047", "#f472b6", "#60a5fa"] : _ref$colors,
    style = _ref.style;
  var items = (0, _react.useMemo)(function () {
    return Array.from({
      length: count
    }, function (_, i) {
      return {
        i: i,
        glyph: GLYPHS[i % GLYPHS.length],
        color: colors[i % colors.length],
        x: (0, _reactNativeReanimated.useSharedValue)(0),
        y: (0, _reactNativeReanimated.useSharedValue)(0),
        s: (0, _reactNativeReanimated.useSharedValue)(0),
        o: (0, _reactNativeReanimated.useSharedValue)(0),
        r: (0, _reactNativeReanimated.useSharedValue)(0)
      };
    });
  }, [count, colors]);
  var burst = function () {
    var _e = [new global.Error(), -7, -27];
    var _f = function _f() {
      var spread = 34;
      items.forEach(function (p) {
        (0, _reactNativeReanimated.cancelAnimation)(p.x);
        (0, _reactNativeReanimated.cancelAnimation)(p.y);
        (0, _reactNativeReanimated.cancelAnimation)(p.s);
        (0, _reactNativeReanimated.cancelAnimation)(p.o);
        (0, _reactNativeReanimated.cancelAnimation)(p.r);
        var angle = Math.random() * Math.PI * 2;
        var radius = spread * (0.4 + Math.random() * 1);
        var dx = Math.cos(angle) * radius;
        var dy = -Math.abs(Math.sin(angle) * radius);
        p.x.value = 0;
        p.y.value = 0;
        p.s.value = 0;
        p.o.value = 0;
        p.r.value = 0;
        p.s.value = (0, _reactNativeReanimated.withSpring)(1, {
          damping: 12,
          stiffness: 240
        });
        p.o.value = (0, _reactNativeReanimated.withTiming)(1, {
          duration: 80
        });
        p.x.value = (0, _reactNativeReanimated.withSpring)(dx, {
          damping: 16,
          stiffness: 160
        });
        p.y.value = (0, _reactNativeReanimated.withSpring)(dy, {
          damping: 16,
          stiffness: 160
        });
        p.r.value = (0, _reactNativeReanimated.withSpring)((Math.random() > 0.5 ? 1 : -1) * (10 + Math.random() * 25));
        p.o.value = (0, _reactNativeReanimated.withDelay)(120, (0, _reactNativeReanimated.withTiming)(0, {
          duration: duration
        }));
        p.s.value = (0, _reactNativeReanimated.withDelay)(120, (0, _reactNativeReanimated.withTiming)(0.2, {
          duration: duration
        }));
      });
    };
    _f._closure = {
      items: items,
      cancelAnimation: _reactNativeReanimated.cancelAnimation,
      withSpring: _reactNativeReanimated.withSpring,
      withTiming: _reactNativeReanimated.withTiming,
      withDelay: _reactNativeReanimated.withDelay,
      duration: duration
    };
    _f.__initData = _worklet_1145890008131_init_data;
    _f.__workletHash = 1145890008131;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }();
  (0, _react.useImperativeHandle)(ref, function () {
    return {
      burst: burst
    };
  }, [items]);
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    pointerEvents: "none",
    style: [styles.wrap, style],
    children: items.map(function (p) {
      var sty = (0, _reactNativeReanimated.useAnimatedStyle)(function () {
        var _e = [new global.Error(), -2, -27];
        var _f = function _f() {
          return {
            transform: [{
              translateX: p.x.value
            }, {
              translateY: p.y.value
            }, {
              rotate: `${p.r.value}deg`
            }, {
              scale: p.s.value
            }],
            opacity: p.o.value
          };
        };
        _f._closure = {
          p: p
        };
        _f.__initData = _worklet_1256343299839_init_data;
        _f.__workletHash = 1256343299839;
        _f.__stackDetails = _e;
        _f.__version = "3.3.0";
        return _f;
      }());
      return (0, _jsxRuntime.jsx)(_reactNativeReanimated.default.Text, {
        style: [styles.glyph, sty, {
          fontSize: size,
          color: p.color
        }],
        children: p.glyph
      }, p.i);
    })
  });
});
var styles = _reactNative.StyleSheet.create({
  wrap: {
    position: "absolute",
    right: 0,
    bottom: 0,
    width: 0,
    height: 0
  },
  glyph: {
    position: "absolute",
    left: -6,
    top: -6,
    textShadowColor: "rgba(0,0,0,0.25)",
    textShadowOffset: {
      width: 0,
      height: 1
    },
    textShadowRadius: 2
  }
});
var _default = exports.default = SendSparkle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,