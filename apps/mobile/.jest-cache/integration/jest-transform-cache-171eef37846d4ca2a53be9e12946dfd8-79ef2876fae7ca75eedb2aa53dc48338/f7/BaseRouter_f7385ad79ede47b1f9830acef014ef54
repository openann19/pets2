ba15a2d9465faeb3591ce0fa36f87ca5
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _nonSecure = require("nanoid/non-secure");
var BaseRouter = {
  getStateForAction: function getStateForAction(state, action) {
    switch (action.type) {
      case 'SET_PARAMS':
        {
          var index = action.source ? state.routes.findIndex(function (r) {
            return r.key === action.source;
          }) : state.index;
          if (index === -1) {
            return null;
          }
          return _objectSpread(_objectSpread({}, state), {}, {
            routes: state.routes.map(function (r, i) {
              return i === index ? _objectSpread(_objectSpread({}, r), {}, {
                params: _objectSpread(_objectSpread({}, r.params), action.payload.params)
              }) : r;
            })
          });
        }
      case 'RESET':
        {
          var nextState = action.payload;
          if (nextState.routes.length === 0 || nextState.routes.some(function (route) {
            return !state.routeNames.includes(route.name);
          })) {
            return null;
          }
          if (nextState.stale === false) {
            if (state.routeNames.length !== nextState.routeNames.length || nextState.routeNames.some(function (name) {
              return !state.routeNames.includes(name);
            })) {
              return null;
            }
            return _objectSpread(_objectSpread({}, nextState), {}, {
              routes: nextState.routes.map(function (route) {
                return route.key ? route : _objectSpread(_objectSpread({}, route), {}, {
                  key: `${route.name}-${(0, _nonSecure.nanoid)()}`
                });
              })
            });
          }
          return nextState;
        }
      default:
        return null;
    }
  },
  shouldActionChangeFocus: function shouldActionChangeFocus(action) {
    return action.type === 'NAVIGATE';
  }
};
var _default = BaseRouter;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbm9uU2VjdXJlIiwicmVxdWlyZSIsIkJhc2VSb3V0ZXIiLCJnZXRTdGF0ZUZvckFjdGlvbiIsInN0YXRlIiwiYWN0aW9uIiwidHlwZSIsImluZGV4Iiwic291cmNlIiwicm91dGVzIiwiZmluZEluZGV4IiwiciIsImtleSIsIl9vYmplY3RTcHJlYWQiLCJtYXAiLCJpIiwicGFyYW1zIiwicGF5bG9hZCIsIm5leHRTdGF0ZSIsImxlbmd0aCIsInNvbWUiLCJyb3V0ZSIsInJvdXRlTmFtZXMiLCJpbmNsdWRlcyIsIm5hbWUiLCJzdGFsZSIsIm5hbm9pZCIsInNob3VsZEFjdGlvbkNoYW5nZUZvY3VzIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9CYXNlUm91dGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLElBQUFBLFVBQUEsR0FBQUMsT0FBQTtBQVlBLElBQU1DLFVBQVUsR0FBRztFQUNqQkMsaUJBQWlCLFdBQWpCQSxpQkFBaUJBLENBQ2ZDLEtBQVksRUFDWkMsTUFBOEIsRUFDTTtJQUNwQyxRQUFRQSxNQUFNLENBQUNDLElBQUk7TUFDakIsS0FBSyxZQUFZO1FBQUU7VUFDakIsSUFBTUMsS0FBSyxHQUFHRixNQUFNLENBQUNHLE1BQU0sR0FDdkJKLEtBQUssQ0FBQ0ssTUFBTSxDQUFDQyxTQUFTLENBQUUsVUFBQUMsQ0FBQztZQUFBLE9BQUtBLENBQUMsQ0FBQ0MsR0FBRyxLQUFLUCxNQUFNLENBQUNHLE1BQU07VUFBQSxFQUFDLEdBQ3RESixLQUFLLENBQUNHLEtBQUs7VUFFZixJQUFJQSxLQUFLLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDaEIsT0FBTyxJQUFJO1VBQ2I7VUFFQSxPQUFBTSxhQUFBLENBQUFBLGFBQUEsS0FDS1QsS0FBSztZQUNSSyxNQUFNLEVBQUVMLEtBQUssQ0FBQ0ssTUFBTSxDQUFDSyxHQUFHLENBQUMsVUFBQ0gsQ0FBQyxFQUFFSSxDQUFDO2NBQUEsT0FDNUJBLENBQUMsS0FBS1IsS0FBSyxHQUFBTSxhQUFBLENBQUFBLGFBQUEsS0FDRkYsQ0FBQztnQkFBRUssTUFBTSxFQUFBSCxhQUFBLENBQUFBLGFBQUEsS0FBT0YsQ0FBQyxDQUFDSyxNQUFNLEdBQUtYLE1BQU0sQ0FBQ1ksT0FBTyxDQUFDRCxNQUFBO2NBQU8sS0FDeERMLENBQUM7WUFBQTtVQUFBO1FBR1g7TUFFQSxLQUFLLE9BQU87UUFBRTtVQUNaLElBQU1PLFNBQVMsR0FBR2IsTUFBTSxDQUFDWSxPQUFzQztVQUUvRCxJQUNFQyxTQUFTLENBQUNULE1BQU0sQ0FBQ1UsTUFBTSxLQUFLLENBQUMsSUFDN0JELFNBQVMsQ0FBQ1QsTUFBTSxDQUFDVyxJQUFJLENBQ2xCLFVBQUFDLEtBQXVCO1lBQUEsT0FBSyxDQUFDakIsS0FBSyxDQUFDa0IsVUFBVSxDQUFDQyxRQUFRLENBQUNGLEtBQUssQ0FBQ0csSUFBSSxDQUFDO1VBQUEsRUFDcEUsRUFDRDtZQUNBLE9BQU8sSUFBSTtVQUNiO1VBRUEsSUFBSU4sU0FBUyxDQUFDTyxLQUFLLEtBQUssS0FBSyxFQUFFO1lBQzdCLElBQ0VyQixLQUFLLENBQUNrQixVQUFVLENBQUNILE1BQU0sS0FBS0QsU0FBUyxDQUFDSSxVQUFVLENBQUNILE1BQU0sSUFDdkRELFNBQVMsQ0FBQ0ksVUFBVSxDQUFDRixJQUFJLENBQ3RCLFVBQUFJLElBQUk7Y0FBQSxPQUFLLENBQUNwQixLQUFLLENBQUNrQixVQUFVLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDO1lBQUEsRUFDM0MsRUFDRDtjQUNBLE9BQU8sSUFBSTtZQUNiO1lBRUEsT0FBQVgsYUFBQSxDQUFBQSxhQUFBLEtBQ0tLLFNBQVM7Y0FDWlQsTUFBTSxFQUFFUyxTQUFTLENBQUNULE1BQU0sQ0FBQ0ssR0FBRyxDQUFFLFVBQUFPLEtBQUs7Z0JBQUEsT0FDakNBLEtBQUssQ0FBQ1QsR0FBRyxHQUFHUyxLQUFLLEdBQUFSLGFBQUEsQ0FBQUEsYUFBQSxLQUFRUSxLQUFLO2tCQUFFVCxHQUFHLEVBQUcsR0FBRVMsS0FBSyxDQUFDRyxJQUFLLElBQUcsSUFBQXhCLFVBQUEsQ0FBQTBCLE1BQU0sR0FBRztnQkFBQSxFQUFHO2NBQUE7WUFBQTtVQUd4RTtVQUVBLE9BQU9SLFNBQVM7UUFDbEI7TUFFQTtRQUNFLE9BQU8sSUFBSTtJQUFDO0VBRWxCLENBQUM7RUFFRFMsdUJBQXVCLFdBQXZCQSx1QkFBdUJBLENBQUN0QixNQUE4QixFQUFFO0lBQ3RELE9BQU9BLE1BQU0sQ0FBQ0MsSUFBSSxLQUFLLFVBQVU7RUFDbkM7QUFDRixDQUFDO0FBQUMsSUFBQXNCLFFBQUEsR0FFYTFCLFVBQVU7QUFBQTJCLE9BQUEsQ0FBQUMsT0FBQSxHQUFBRixRQUFBIiwiaWdub3JlTGlzdCI6W119