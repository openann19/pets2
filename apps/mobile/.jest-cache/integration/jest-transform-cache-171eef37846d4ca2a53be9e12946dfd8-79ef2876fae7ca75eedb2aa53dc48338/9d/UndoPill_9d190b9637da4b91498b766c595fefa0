36f9aaff417affd466a5ab215b1a59e1
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = UndoPill;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
var Haptics = _interopRequireWildcard(require("expo-haptics"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var _worklet_13065047615788_init_data = {
  code: "function anonymous() {\n  const {\n    visible\n  } = this._closure;\n  return visible.value;\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/UndoPill.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"visible\",\"_closure\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/UndoPill.tsx\"],\"mappings\":\"AA6CI,SAAAA,UAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,OAAMD,OAAQ,CAAAE,KAAA;AAAA\",\"ignoreList\":[]}"
};
var _worklet_5752447538906_init_data = {
  code: "function anonymous(v, prev) {\n  const {\n    progress,\n    withTiming,\n    duration\n  } = this._closure;\n  if (v === 1 && prev !== undefined && prev !== 1) {\n    progress.value = 1;\n    progress.value = withTiming(0, {\n      duration: duration\n    });\n  } else if (v === 0 && prev !== undefined && prev !== 1) {\n    progress.value = 0;\n  }\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/UndoPill.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"v\",\"prev\",\"progress\",\"withTiming\",\"duration\",\"_closure\",\"undefined\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/UndoPill.tsx\"],\"mappings\":\"AA8CI,SAACA,SAAOA,CAAAC,CAAK,EAAAC,IAAA;EAAA;IAAAC,QAAA;IAAAC,UAAA;IAAAC;EAAA,SAAAC,QAAA;EACX,IAAIL,CAAC,KAAK,CAAC,IAAIC,IAAI,KAAKK,SAAS,IAAIL,IAAI,KAAK,CAAC,EAAE;IAG/CC,QAAQ,CAACK,KAAK,GAAG,CAAC;IAClBL,QAAQ,CAACK,KAAK,GAAGJ,UAAU,CAAC,CAAC,EAAE;MAAEC,QAAA,EAAAA;IAAS,CAAC,CAAC;EAE9C,CAAC,MAAM,IAAIJ,CAAC,KAAK,CAAC,IAAIC,IAAI,KAAKK,SAAS,IAAIL,IAAI,KAAK,CAAC,EAAE;IAEtDC,QAAQ,CAACK,KAAK,GAAG,CAAC;EACpB;AACF\",\"ignoreList\":[]}"
};
var _worklet_8671109698361_init_data = {
  code: "function anonymous() {\n  const {\n    withSpring,\n    visible,\n    withTiming\n  } = this._closure;\n  return {\n    transform: [{\n      translateY: withSpring(visible.value ? 0 : 20, {\n        damping: 16,\n        stiffness: 240\n      })\n    }],\n    opacity: withTiming(visible.value ? 1 : 0, {\n      duration: 120\n    })\n  };\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/UndoPill.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"withSpring\",\"visible\",\"withTiming\",\"_closure\",\"transform\",\"translateY\",\"value\",\"damping\",\"stiffness\",\"opacity\",\"duration\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/UndoPill.tsx\"],\"mappings\":\"AA8DqC,SAAAA,UAAA;EAAA;IAAAC,UAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,OAAO;IACxCC,SAAS,EAAE,CACT;MACEC,UAAU,EAAEL,UAAU,CAACC,OAAO,CAACK,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE;QAC7CC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE;MACb,CAAC;IACH,CAAC,CACF;IACDC,OAAO,EAAEP,UAAU,CAACD,OAAO,CAACK,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE;MAAEI,QAAQ,EAAE;IAAI,CAAC;EAC9D,CAAC;AAAA\",\"ignoreList\":[]}"
};
var _worklet_4135048286743_init_data = {
  code: "function anonymous() {\n  const {\n    progress\n  } = this._closure;\n  const percentage = progress.value * 100;\n  return {\n    flexGrow: percentage,\n    flexShrink: 0,\n    flexBasis: 0\n  };\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/UndoPill.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"progress\",\"_closure\",\"percentage\",\"value\",\"flexGrow\",\"flexShrink\",\"flexBasis\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/UndoPill.tsx\"],\"mappings\":\"AA0EoC,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EACtC,MAAMC,UAAU,GAAGF,QAAQ,CAACG,KAAK,GAAG,GAAG;EACvC,OAAO;IACLC,QAAQ,EAAEF,UAAU;IACpBG,UAAU,EAAE,CAAC;IACbC,SAAS,EAAE;EACb,CAAC;AACH\",\"ignoreList\":[]}"
};
var _worklet_7224556006316_init_data = {
  code: "function anonymous() {\n  const {\n    progress\n  } = this._closure;\n  return progress.value;\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/UndoPill.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"progress\",\"_closure\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/UndoPill.tsx\"],\"mappings\":\"AAqFI,SAAAA,UAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,OAAMD,QAAS,CAAAE,KAAA;AAAA\",\"ignoreList\":[]}"
};
var _worklet_10606803877953_init_data = {
  code: "function anonymous(val, prev) {\n  const {\n    visible\n  } = this._closure;\n  if (prev && prev > 0 && val <= 0) {\n    visible.value = 0;\n  }\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/UndoPill.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"val\",\"prev\",\"visible\",\"_closure\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/feedback/UndoPill.tsx\"],\"mappings\":\"AAsFI,SAACA,SAAKA,CAAAC,GAAS,EAAAC,IAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EACb,IAAIF,IAAI,IAAIA,IAAI,GAAG,CAAC,IAAID,GAAG,IAAI,CAAC,EAAE;IAEhCE,OAAO,CAACE,KAAK,GAAG,CAAC;EACnB;AACF\",\"ignoreList\":[]}"
};
function UndoPill(_ref) {
  var _ref$duration = _ref.duration,
    duration = _ref$duration === void 0 ? 2000 : _ref$duration,
    onUndo = _ref.onUndo,
    style = _ref.style,
    testID = _ref.testID;
  var visible = (0, _reactNativeReanimated.useSharedValue)(0);
  var progress = (0, _reactNativeReanimated.useSharedValue)(0);
  var firstMount = (0, _react.useRef)(true);
  (0, _reactNativeReanimated.useAnimatedReaction)(function () {
    var _e = [new global.Error(), -2, -27];
    var _f = function _f() {
      return visible.value;
    };
    _f._closure = {
      visible: visible
    };
    _f.__initData = _worklet_13065047615788_init_data;
    _f.__workletHash = 13065047615788;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }(), function () {
    var _e = [new global.Error(), -4, -27];
    var _f = function _f(v, prev) {
      if (v === 1 && prev !== undefined && prev !== 1) {
        progress.value = 1;
        progress.value = (0, _reactNativeReanimated.withTiming)(0, {
          duration: duration
        });
      } else if (v === 0 && prev !== undefined && prev !== 1) {
        progress.value = 0;
      }
    };
    _f._closure = {
      progress: progress,
      withTiming: _reactNativeReanimated.withTiming,
      duration: duration
    };
    _f.__initData = _worklet_5752447538906_init_data;
    _f.__workletHash = 5752447538906;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }(), []);
  var wrapStyle = (0, _reactNativeReanimated.useAnimatedStyle)(function () {
    var _e = [new global.Error(), -4, -27];
    var _f = function _f() {
      return {
        transform: [{
          translateY: (0, _reactNativeReanimated.withSpring)(visible.value ? 0 : 20, {
            damping: 16,
            stiffness: 240
          })
        }],
        opacity: (0, _reactNativeReanimated.withTiming)(visible.value ? 1 : 0, {
          duration: 120
        })
      };
    };
    _f._closure = {
      withSpring: _reactNativeReanimated.withSpring,
      visible: visible,
      withTiming: _reactNativeReanimated.withTiming
    };
    _f.__initData = _worklet_8671109698361_init_data;
    _f.__workletHash = 8671109698361;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  var barWidth = (0, _reactNativeReanimated.useAnimatedStyle)(function () {
    var _e = [new global.Error(), -2, -27];
    var _f = function _f() {
      var percentage = progress.value * 100;
      return {
        flexGrow: percentage,
        flexShrink: 0,
        flexBasis: 0
      };
    };
    _f._closure = {
      progress: progress
    };
    _f.__initData = _worklet_4135048286743_init_data;
    _f.__workletHash = 4135048286743;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  (0, _reactNativeReanimated.useAnimatedReaction)(function () {
    var _e = [new global.Error(), -2, -27];
    var _f = function _f() {
      return progress.value;
    };
    _f._closure = {
      progress: progress
    };
    _f.__initData = _worklet_7224556006316_init_data;
    _f.__workletHash = 7224556006316;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }(), function () {
    var _e = [new global.Error(), -2, -27];
    var _f = function _f(val, prev) {
      if (prev && prev > 0 && val <= 0) {
        visible.value = 0;
      }
    };
    _f._closure = {
      visible: visible
    };
    _f.__initData = _worklet_10606803877953_init_data;
    _f.__workletHash = 10606803877953;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }(), []);
  var performUndo = function performUndo() {
    Haptics.notificationAsync(Haptics.NotificationFeedbackType.Warning).catch(function () {});
    onUndo();
  };
  var onPressUndo = function onPressUndo() {
    Haptics.selectionAsync().catch(function () {});
    progress.value = (0, _reactNativeReanimated.withTiming)(0, {
      duration: 150
    });
    (0, _reactNativeReanimated.runOnJS)(performUndo)();
  };
  (0, _react.useEffect)(function () {
    var show = function show() {
      visible.value = 1;
    };
    var hide = function hide() {
      visible.value = 0;
    };
    if (typeof window !== "undefined") {
      var win = window;
      win.__undoPillShow = show;
      win.__undoPillHide = hide;
    }
    return function () {
      if (typeof window !== "undefined") {
        var _win = window;
        delete _win.__undoPillShow;
        delete _win.__undoPillHide;
      }
    };
  }, [visible]);
  return (0, _jsxRuntime.jsxs)(_reactNativeReanimated.default.View, {
    style: [styles.wrap, style, wrapStyle],
    pointerEvents: "box-none",
    testID: testID,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.pill,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.txt,
        children: "Liked \u2022 "
      }), (0, _jsxRuntime.jsx)(_reactNative.Pressable, {
        onPress: onPressUndo,
        hitSlop: 8,
        accessibilityRole: "button",
        accessibilityLabel: "Undo like",
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: [styles.txt, styles.undo],
          children: "Undo"
        })
      })]
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.progressTrack,
      children: (0, _jsxRuntime.jsx)(_reactNativeReanimated.default.View, {
        style: [styles.progressBar, barWidth]
      })
    })]
  });
}
var styles = _reactNative.StyleSheet.create({
  wrap: {
    position: "absolute",
    left: 16,
    right: 16,
    bottom: 16,
    alignItems: "center"
  },
  pill: {
    flexDirection: "row",
    alignItems: "center",
    paddingHorizontal: 14,
    paddingVertical: 10,
    borderRadius: 999,
    backgroundColor: "#111",
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 6
    },
    shadowOpacity: 0.25,
    shadowRadius: 12,
    elevation: 6
  },
  txt: {
    color: "#fff",
    fontWeight: "600"
  },
  undo: {
    textDecorationLine: "underline"
  },
  progressTrack: {
    marginTop: 6,
    height: 2,
    width: "60%",
    backgroundColor: "rgba(255,255,255,0.2)",
    borderRadius: 2,
    overflow: "hidden"
  },
  progressBar: {
    height: "100%",
    backgroundColor: "#ec4899"
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,