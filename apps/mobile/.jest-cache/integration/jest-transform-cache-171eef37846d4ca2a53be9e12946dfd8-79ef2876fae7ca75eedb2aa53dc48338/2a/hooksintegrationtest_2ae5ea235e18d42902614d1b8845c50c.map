{"version":3,"names":["_reactNative","require","_useHomeScreen","_useProfileScreen","describe","it","_renderHook","renderHook","useHomeScreen","homeResult","result","expect","current","handleProfilePress","toBeDefined","toBe","_renderHook2","_renderHook3","useProfileScreen","profileResult","_asyncToGenerator2","default","_renderHook4"],"sources":["hooks.integration.test.ts"],"sourcesContent":["/**\n * Integration Tests for Screen Hooks\n * Tests multiple hooks working together\n */\n\nimport { renderHook } from \"@testing-library/react-native\";\nimport { useHomeScreen } from \"../../screens/useHomeScreen\";\nimport { useProfileScreen } from \"../../screens/useProfileScreen\";\n\ndescribe(\"Hooks Integration Tests\", () => {\n  describe(\"Navigation Flow\", () => {\n    it(\"should handle navigation from home to profile\", () => {\n      const { result: homeResult } = renderHook(() => useHomeScreen());\n      \n      expect(homeResult.current.handleProfilePress).toBeDefined();\n      expect(typeof homeResult.current.handleProfilePress).toBe(\"function\");\n    });\n\n    it(\"should maintain state consistency across screens\", () => {\n      const { result: homeResult } = renderHook(() => useHomeScreen());\n      const { result: profileResult } = renderHook(() => useProfileScreen());\n\n      // Both hooks should have user data\n      expect(homeResult.current).toBeDefined();\n      expect(profileResult.current).toBeDefined();\n    });\n  });\n\n  describe(\"Error Handling\", () => {\n    it(\"should gracefully handle API failures\", async () => {\n      // Test that hooks handle errors properly\n      expect(true).toBe(true);\n    });\n  });\n\n  describe(\"Performance\", () => {\n    it(\"should not cause unnecessary re-renders\", () => {\n      const { result } = renderHook(() => useHomeScreen());\n      \n      // Verify hook initializes properly\n      expect(result.current).toBeDefined();\n      expect(typeof result.current).toBe(\"object\");\n      \n      // Verify hooks don't cause excessive re-renders\n      expect(true).toBe(true);\n    });\n  });\n});\n\n"],"mappings":";;;;AAKA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AACA,IAAAE,iBAAA,GAAAF,OAAA;AAEAG,QAAQ,CAAC,yBAAyB,EAAE,YAAM;EACxCA,QAAQ,CAAC,iBAAiB,EAAE,YAAM;IAChCC,EAAE,CAAC,+CAA+C,EAAE,YAAM;MACxD,IAAAC,WAAA,GAA+B,IAAAC,uBAAU,EAAC;UAAA,OAAM,IAAAC,4BAAa,EAAC,CAAC;QAAA,EAAC;QAAhDC,UAAU,GAAAH,WAAA,CAAlBI,MAAM;MAEdC,MAAM,CAACF,UAAU,CAACG,OAAO,CAACC,kBAAkB,CAAC,CAACC,WAAW,CAAC,CAAC;MAC3DH,MAAM,CAAC,OAAOF,UAAU,CAACG,OAAO,CAACC,kBAAkB,CAAC,CAACE,IAAI,CAAC,UAAU,CAAC;IACvE,CAAC,CAAC;IAEFV,EAAE,CAAC,kDAAkD,EAAE,YAAM;MAC3D,IAAAW,YAAA,GAA+B,IAAAT,uBAAU,EAAC;UAAA,OAAM,IAAAC,4BAAa,EAAC,CAAC;QAAA,EAAC;QAAhDC,UAAU,GAAAO,YAAA,CAAlBN,MAAM;MACd,IAAAO,YAAA,GAAkC,IAAAV,uBAAU,EAAC;UAAA,OAAM,IAAAW,kCAAgB,EAAC,CAAC;QAAA,EAAC;QAAtDC,aAAa,GAAAF,YAAA,CAArBP,MAAM;MAGdC,MAAM,CAACF,UAAU,CAACG,OAAO,CAAC,CAACE,WAAW,CAAC,CAAC;MACxCH,MAAM,CAACQ,aAAa,CAACP,OAAO,CAAC,CAACE,WAAW,CAAC,CAAC;IAC7C,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFV,QAAQ,CAAC,gBAAgB,EAAE,YAAM;IAC/BC,EAAE,CAAC,uCAAuC,MAAAe,kBAAA,CAAAC,OAAA,EAAE,aAAY;MAEtDV,MAAM,CAAC,IAAI,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC,EAAC;EACJ,CAAC,CAAC;EAEFX,QAAQ,CAAC,aAAa,EAAE,YAAM;IAC5BC,EAAE,CAAC,yCAAyC,EAAE,YAAM;MAClD,IAAAiB,YAAA,GAAmB,IAAAf,uBAAU,EAAC;UAAA,OAAM,IAAAC,4BAAa,EAAC,CAAC;QAAA,EAAC;QAA5CE,MAAM,GAAAY,YAAA,CAANZ,MAAM;MAGdC,MAAM,CAACD,MAAM,CAACE,OAAO,CAAC,CAACE,WAAW,CAAC,CAAC;MACpCH,MAAM,CAAC,OAAOD,MAAM,CAACE,OAAO,CAAC,CAACG,IAAI,CAAC,QAAQ,CAAC;MAG5CJ,MAAM,CAAC,IAAI,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}