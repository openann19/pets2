f331fbb9e3fb12963b3235dd586badb9
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = LikeArbitrator;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeGestureHandler = require("react-native-gesture-handler");
var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
var Haptics = _interopRequireWildcard(require("expo-haptics"));
var _DoubleTapLikePlus = _interopRequireDefault(require("./DoubleTapLikePlus"));
var _ReactionBarMagnetic = _interopRequireDefault(require("../chat/ReactionBarMagnetic"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t2 in e) "default" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]); return f; })(e, t); }
var _worklet_12977718807929_init_data = {
  code: "function anonymous() {\n  const {\n    lift\n  } = this._closure;\n  return {\n    transform: [{\n      translateY: lift.value\n    }]\n  };\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"lift\",\"_closure\",\"transform\",\"translateY\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx\"],\"mappings\":\"AA8CqC,SAAAA,UAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,OAAO;IACxCC,SAAS,EAAE,CAAC;MAAEC,UAAU,EAAEH,IAAI,CAACI;IAAM,CAAC;EACxC,CAAC;AAAA\",\"ignoreList\":[]}"
};
var _worklet_10838375468706_init_data = {
  code: "function anonymous() {\n  const {\n    lift\n  } = this._closure;\n  lift.value = -4;\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"lift\",\"_closure\",\"value\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx\"],\"mappings\":\"AA8EiB,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EACbD,IAAI,CAACE,KAAK,GAAG,CAAC,CAAC;AACjB\",\"ignoreList\":[]}"
};
var _worklet_12830717888325_init_data = {
  code: "function anonymous() {\n  const {\n    runOnJS,\n    openReactions\n  } = this._closure;\n  runOnJS(openReactions)();\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"runOnJS\",\"openReactions\",\"_closure\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx\"],\"mappings\":\"AAiFiB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EACbF,OAAO,CAACC,aAAa,CAAC,CAAC,CAAC;AAC1B\",\"ignoreList\":[]}"
};
var _worklet_3072899645029_init_data = {
  code: "function anonymous() {\n  const {\n    lift,\n    withSpring\n  } = this._closure;\n  lift.value = withSpring(0, {\n    damping: 18,\n    stiffness: 320\n  });\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"lift\",\"withSpring\",\"_closure\",\"value\",\"damping\",\"stiffness\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx\"],\"mappings\":\"AAoFoB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,IAAA;IAAAC;EAAA,SAAAC,QAAA;EAChBF,IAAI,CAACG,KAAK,GAAGF,UAAU,CAAC,CAAC,EAAE;IAAEG,OAAO,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAI,CAAC,CAAC;AAC7D\",\"ignoreList\":[]}"
};
var _worklet_9151852408825_init_data = {
  code: "function anonymous(_e, ok) {\n  if (!ok) return;\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"_e\",\"ok\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx\"],\"mappings\":\"AA6FW,SAACA,SAAMA,CAAKC,EAAA,EAAAC,EAAA;EAEjB,IAAI,CAACA,EAAE,EAAE;AAEX\",\"ignoreList\":[]}"
};
var _worklet_5125055951239_init_data = {
  code: "function anonymous(_e, ok) {\n  const {\n    runOnJS,\n    handleDoubleTap\n  } = this._closure;\n  if (!ok) return;\n  runOnJS(handleDoubleTap)();\n}",
  location: "/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"_e\",\"ok\",\"runOnJS\",\"handleDoubleTap\",\"_closure\"],\"sources\":[\"/home/ben/Downloads/pets-fresh/apps/mobile/src/components/Gestures/LikeArbitrator.tsx\"],\"mappings\":\"AA0GW,SAACA,SAAMA,CAAKC,EAAA,EAAAC,EAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAEjB,IAAI,CAACH,EAAE,EAAE;EACTC,OAAO,CAACC,eAAe,CAAC,CAAC,CAAC;AAC5B\",\"ignoreList\":[]}"
};
function LikeArbitrator(_ref) {
  var children = _ref.children,
    onLike = _ref.onLike,
    onUndo = _ref.onUndo,
    onReact = _ref.onReact,
    triggerUndo = _ref.triggerUndo,
    _ref$a11yLongPressLab = _ref.a11yLongPressLabel,
    a11yLongPressLabel = _ref$a11yLongPressLab === void 0 ? "Open reactions" : _ref$a11yLongPressLab;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    reactionsOpen = _useState2[0],
    setReactionsOpen = _useState2[1];
  var lift = (0, _reactNativeReanimated.useSharedValue)(0);
  var liftStyle = (0, _reactNativeReanimated.useAnimatedStyle)(function () {
    var _e = [new global.Error(), -2, -27];
    var _f = function _f() {
      return {
        transform: [{
          translateY: lift.value
        }]
      };
    };
    _f._closure = {
      lift: lift
    };
    _f.__initData = _worklet_12977718807929_init_data;
    _f.__workletHash = 12977718807929;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  var closeReactions = (0, _react.useCallback)(function () {
    setReactionsOpen(false);
  }, []);
  var openReactions = (0, _react.useCallback)(function () {
    setReactionsOpen(true);
  }, []);
  var handleDoubleTap = (0, _react.useCallback)(function () {
    Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium).catch(function () {});
    var cleanup = onLike();
    triggerUndo == null ? void 0 : triggerUndo();
  }, [onLike, triggerUndo]);
  var handleSelectReaction = (0, _react.useCallback)(function (emoji) {
    Haptics.selectionAsync().catch(function () {});
    onReact == null ? void 0 : onReact(emoji);
    setReactionsOpen(false);
  }, [onReact]);
  var longPress = (0, _react.useMemo)(function () {
    return _reactNativeGestureHandler.Gesture.LongPress().minDuration(350).maxDistance(8).hitSlop({
      top: 4,
      bottom: 4,
      left: 4,
      right: 4
    }).onBegin(function () {
      var _e = [new global.Error(), -2, -27];
      var _f = function _f() {
        lift.value = -4;
      };
      _f._closure = {
        lift: lift
      };
      _f.__initData = _worklet_10838375468706_init_data;
      _f.__workletHash = 10838375468706;
      _f.__stackDetails = _e;
      _f.__version = "3.3.0";
      return _f;
    }()).onStart(function () {
      var _e = [new global.Error(), -3, -27];
      var _f = function _f() {
        (0, _reactNativeReanimated.runOnJS)(openReactions)();
      };
      _f._closure = {
        runOnJS: _reactNativeReanimated.runOnJS,
        openReactions: openReactions
      };
      _f.__initData = _worklet_12830717888325_init_data;
      _f.__workletHash = 12830717888325;
      _f.__stackDetails = _e;
      _f.__version = "3.3.0";
      return _f;
    }()).onFinalize(function () {
      var _e = [new global.Error(), -3, -27];
      var _f = function _f() {
        lift.value = (0, _reactNativeReanimated.withSpring)(0, {
          damping: 18,
          stiffness: 320
        });
      };
      _f._closure = {
        lift: lift,
        withSpring: _reactNativeReanimated.withSpring
      };
      _f.__initData = _worklet_3072899645029_init_data;
      _f.__workletHash = 3072899645029;
      _f.__stackDetails = _e;
      _f.__version = "3.3.0";
      return _f;
    }());
  }, [openReactions, lift]);
  var singleTap = _reactNativeGestureHandler.Gesture.Tap().maxDuration(220).maxDistance(8).onEnd(function () {
    var _e = [new global.Error(), 1, -27];
    var _f = function _f(_e, ok) {
      if (!ok) return;
    };
    _f._closure = {};
    _f.__initData = _worklet_9151852408825_init_data;
    _f.__workletHash = 9151852408825;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  var doubleTap = _reactNativeGestureHandler.Gesture.Tap().numberOfTaps(2).maxDelay(280).maxDuration(260).maxDistance(8).requireExternalGestureToFail(longPress).onEnd(function () {
    var _e = [new global.Error(), -3, -27];
    var _f = function _f(_e, ok) {
      if (!ok) return;
      (0, _reactNativeReanimated.runOnJS)(handleDoubleTap)();
    };
    _f._closure = {
      runOnJS: _reactNativeReanimated.runOnJS,
      handleDoubleTap: handleDoubleTap
    };
    _f.__initData = _worklet_5125055951239_init_data;
    _f.__workletHash = 5125055951239;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }());
  var composed = _reactNativeGestureHandler.Gesture.Exclusive(_reactNativeGestureHandler.Gesture.Simultaneous(doubleTap, singleTap), longPress);
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.root,
    accessible: true,
    accessibilityLabel: a11yLongPressLabel,
    children: [(0, _jsxRuntime.jsx)(_reactNativeGestureHandler.GestureDetector, {
      gesture: composed,
      children: (0, _jsxRuntime.jsx)(_reactNativeReanimated.default.View, {
        style: liftStyle,
        children: (0, _jsxRuntime.jsx)(_DoubleTapLikePlus.default, {
          onDoubleTap: handleDoubleTap,
          children: children
        })
      })
    }), reactionsOpen ? (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.reactionOverlay,
      pointerEvents: "box-none",
      children: (0, _jsxRuntime.jsx)(_ReactionBarMagnetic.default, {
        onSelect: handleSelectReaction,
        onCancel: closeReactions
      })
    }) : null]
  });
}
var styles = _reactNative.StyleSheet.create({
  root: {
    position: "relative"
  },
  reactionOverlay: {
    position: "absolute",
    left: 0,
    right: 0,
    bottom: 24,
    alignItems: "center"
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVhY3ROYXRpdmUiLCJfcmVhY3ROYXRpdmVHZXN0dXJlSGFuZGxlciIsIl9yZWFjdE5hdGl2ZVJlYW5pbWF0ZWQiLCJIYXB0aWNzIiwiX0RvdWJsZVRhcExpa2VQbHVzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9SZWFjdGlvbkJhck1hZ25ldGljIiwiX2pzeFJ1bnRpbWUiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QyIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfd29ya2xldF8xMjk3NzcxODgwNzkyOV9pbml0X2RhdGEiLCJjb2RlIiwibG9jYXRpb24iLCJzb3VyY2VNYXAiLCJfd29ya2xldF8xMDgzODM3NTQ2ODcwNl9pbml0X2RhdGEiLCJfd29ya2xldF8xMjgzMDcxNzg4ODMyNV9pbml0X2RhdGEiLCJfd29ya2xldF8zMDcyODk5NjQ1MDI5X2luaXRfZGF0YSIsIl93b3JrbGV0XzkxNTE4NTI0MDg4MjVfaW5pdF9kYXRhIiwiX3dvcmtsZXRfNTEyNTA1NTk1MTIzOV9pbml0X2RhdGEiLCJMaWtlQXJiaXRyYXRvciIsIl9yZWYiLCJjaGlsZHJlbiIsIm9uTGlrZSIsIm9uVW5kbyIsIm9uUmVhY3QiLCJ0cmlnZ2VyVW5kbyIsIl9yZWYkYTExeUxvbmdQcmVzc0xhYiIsImExMXlMb25nUHJlc3NMYWJlbCIsIl91c2VTdGF0ZSIsInVzZVN0YXRlIiwiX3VzZVN0YXRlMiIsIl9zbGljZWRUb0FycmF5MiIsInJlYWN0aW9uc09wZW4iLCJzZXRSZWFjdGlvbnNPcGVuIiwibGlmdCIsInVzZVNoYXJlZFZhbHVlIiwibGlmdFN0eWxlIiwidXNlQW5pbWF0ZWRTdHlsZSIsIl9lIiwiZ2xvYmFsIiwiRXJyb3IiLCJfZiIsInRyYW5zZm9ybSIsInRyYW5zbGF0ZVkiLCJ2YWx1ZSIsIl9jbG9zdXJlIiwiX19pbml0RGF0YSIsIl9fd29ya2xldEhhc2giLCJfX3N0YWNrRGV0YWlscyIsIl9fdmVyc2lvbiIsImNsb3NlUmVhY3Rpb25zIiwidXNlQ2FsbGJhY2siLCJvcGVuUmVhY3Rpb25zIiwiaGFuZGxlRG91YmxlVGFwIiwiaW1wYWN0QXN5bmMiLCJJbXBhY3RGZWVkYmFja1N0eWxlIiwiTWVkaXVtIiwiY2F0Y2giLCJjbGVhbnVwIiwiaGFuZGxlU2VsZWN0UmVhY3Rpb24iLCJlbW9qaSIsInNlbGVjdGlvbkFzeW5jIiwibG9uZ1ByZXNzIiwidXNlTWVtbyIsIkdlc3R1cmUiLCJMb25nUHJlc3MiLCJtaW5EdXJhdGlvbiIsIm1heERpc3RhbmNlIiwiaGl0U2xvcCIsInRvcCIsImJvdHRvbSIsImxlZnQiLCJyaWdodCIsIm9uQmVnaW4iLCJvblN0YXJ0IiwicnVuT25KUyIsIm9uRmluYWxpemUiLCJ3aXRoU3ByaW5nIiwiZGFtcGluZyIsInN0aWZmbmVzcyIsInNpbmdsZVRhcCIsIlRhcCIsIm1heER1cmF0aW9uIiwib25FbmQiLCJvayIsImRvdWJsZVRhcCIsIm51bWJlck9mVGFwcyIsIm1heERlbGF5IiwicmVxdWlyZUV4dGVybmFsR2VzdHVyZVRvRmFpbCIsImNvbXBvc2VkIiwiRXhjbHVzaXZlIiwiU2ltdWx0YW5lb3VzIiwianN4cyIsIlZpZXciLCJzdHlsZSIsInN0eWxlcyIsInJvb3QiLCJhY2Nlc3NpYmxlIiwiYWNjZXNzaWJpbGl0eUxhYmVsIiwianN4IiwiR2VzdHVyZURldGVjdG9yIiwiZ2VzdHVyZSIsIm9uRG91YmxlVGFwIiwicmVhY3Rpb25PdmVybGF5IiwicG9pbnRlckV2ZW50cyIsIm9uU2VsZWN0Iiwib25DYW5jZWwiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwicG9zaXRpb24iLCJhbGlnbkl0ZW1zIl0sInNvdXJjZXMiOlsiTGlrZUFyYml0cmF0b3IudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlTWVtbywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFZpZXcgfSBmcm9tIFwicmVhY3QtbmF0aXZlXCI7XG5pbXBvcnQgeyBHZXN0dXJlLCBHZXN0dXJlRGV0ZWN0b3IgfSBmcm9tIFwicmVhY3QtbmF0aXZlLWdlc3R1cmUtaGFuZGxlclwiO1xuaW1wb3J0IEFuaW1hdGVkLCB7XG4gIHJ1bk9uSlMsXG4gIHVzZVNoYXJlZFZhbHVlLFxuICB1c2VBbmltYXRlZFN0eWxlLFxuICB3aXRoU3ByaW5nLFxufSBmcm9tIFwicmVhY3QtbmF0aXZlLXJlYW5pbWF0ZWRcIjtcbmltcG9ydCAqIGFzIEhhcHRpY3MgZnJvbSBcImV4cG8taGFwdGljc1wiO1xuXG5pbXBvcnQgRG91YmxlVGFwTGlrZVBsdXMgZnJvbSBcIi4vRG91YmxlVGFwTGlrZVBsdXNcIjtcbmltcG9ydCBSZWFjdGlvbkJhck1hZ25ldGljIGZyb20gXCIuLi9jaGF0L1JlYWN0aW9uQmFyTWFnbmV0aWNcIjtcblxuLyoqXG4gKiBXcmFwcyBjb250ZW50IHdpdGg6XG4gKiAgLSBEb3VibGUgdGFwIHRvIGxpa2UgKG9wdGltaXN0aWMpXG4gKiAgLSBMb25nIHByZXNzIHRvIG9wZW4gcmVhY3Rpb25zXG4gKiBVc2VzIHJlcXVpcmUtdG8tZmFpbCBzbyBhIHJlY29nbml6ZWQgbG9uZy1wcmVzcyBjYW5jZWxzIGRvdWJsZS10YXAuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTGlrZUFyYml0cmF0b3JQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG4gIC8qKiBvcHRpbWlzdGljIGxpa2UgdG9nZ2xlOyByZXR1cm4gYSBjbGVhbnVwIGZ1bmN0aW9uIGlmIHlvdSBuZWVkIGNhbmNlbCBvbiB1bmRvICovXG4gIG9uTGlrZTogKCkgPT4gdm9pZCB8ICgoKSA9PiB2b2lkKTtcbiAgLyoqIGZpcmVkIGlmIHVzZXIgdW5kb2VzIHdpdGhpbiB0aGUgd2luZG93IG9yIHNlcnZlciByZWplY3RzICovXG4gIG9uVW5kbz86ICgpID0+IHZvaWQ7XG4gIC8qKiBmaXJlZCB3aGVuIGEgcmVhY3Rpb24gaXMgY2hvc2VuIGZyb20gdGhlIGJhciAqL1xuICBvblJlYWN0PzogKGVtb2ppOiBzdHJpbmcpID0+IHZvaWQ7XG4gIC8qKiBzaG93IHVuZG8gcGlsbCBmb3IgTiBtcyAodXNlZCBieSBleHRlcm5hbCBVbmRvUGlsbCBob29rKSAqL1xuICB0cmlnZ2VyVW5kbz86ICgpID0+IHZvaWQ7XG4gIC8qKiBhY2Nlc3NpYmlsaXR5IGxhYmVsIGZvciBsb25nLXByZXNzICovXG4gIGExMXlMb25nUHJlc3NMYWJlbD86IHN0cmluZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTGlrZUFyYml0cmF0b3Ioe1xuICBjaGlsZHJlbixcbiAgb25MaWtlLFxuICBvblVuZG8sXG4gIG9uUmVhY3QsXG4gIHRyaWdnZXJVbmRvLFxuICBhMTF5TG9uZ1ByZXNzTGFiZWwgPSBcIk9wZW4gcmVhY3Rpb25zXCIsXG59OiBMaWtlQXJiaXRyYXRvclByb3BzKSB7XG4gIGNvbnN0IFtyZWFjdGlvbnNPcGVuLCBzZXRSZWFjdGlvbnNPcGVuXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICAvLyBzbWFsbCBsaWZ0IHdoZW4gbG9uZy1wcmVzcyBiZWdpbnMgKHZpc3VhbCBhZmZvcmRhbmNlKVxuICBjb25zdCBsaWZ0ID0gdXNlU2hhcmVkVmFsdWUoMCk7XG4gIGNvbnN0IGxpZnRTdHlsZSA9IHVzZUFuaW1hdGVkU3R5bGUoKCkgPT4gKHtcbiAgICB0cmFuc2Zvcm06IFt7IHRyYW5zbGF0ZVk6IGxpZnQudmFsdWUgfV0sXG4gIH0pKTtcblxuICBjb25zdCBjbG9zZVJlYWN0aW9ucyA9IHVzZUNhbGxiYWNrKCgpID0+IHsgc2V0UmVhY3Rpb25zT3BlbihmYWxzZSk7IH0sIFtdKTtcbiAgY29uc3Qgb3BlblJlYWN0aW9ucyA9IHVzZUNhbGxiYWNrKCgpID0+IHsgc2V0UmVhY3Rpb25zT3Blbih0cnVlKTsgfSwgW10pO1xuXG4gIGNvbnN0IGhhbmRsZURvdWJsZVRhcCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBIYXB0aWNzLmltcGFjdEFzeW5jKEhhcHRpY3MuSW1wYWN0RmVlZGJhY2tTdHlsZS5NZWRpdW0pLmNhdGNoKCgpID0+IHt9KTtcbiAgICBjb25zdCBjbGVhbnVwID0gb25MaWtlKCk7XG4gICAgdHJpZ2dlclVuZG8/LigpO1xuICAgIC8vIGlmIG9uTGlrZSByZXR1cm5zIGEgY2xlYW51cCwgc3RvcmUgaXQgaW4gY2xvc3VyZSBvZiBVbmRvIChoYW5kbGVkIGluIGhvb2sgdXNhZ2UpXG4gICAgLy8gbm90aGluZyBlbHNlIG5lZWRlZCBoZXJlXG4gIH0sIFtvbkxpa2UsIHRyaWdnZXJVbmRvXSk7XG5cbiAgY29uc3QgaGFuZGxlU2VsZWN0UmVhY3Rpb24gPSB1c2VDYWxsYmFjayhcbiAgICAoZW1vamk6IHN0cmluZykgPT4ge1xuICAgICAgSGFwdGljcy5zZWxlY3Rpb25Bc3luYygpLmNhdGNoKCgpID0+IHt9KTtcbiAgICAgIG9uUmVhY3Q/LihlbW9qaSk7XG4gICAgICBzZXRSZWFjdGlvbnNPcGVuKGZhbHNlKTtcbiAgICB9LFxuICAgIFtvblJlYWN0XSxcbiAgKTtcblxuICAvLyAtLS0gR0VTVFVSRVMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIGNvbnN0IGxvbmdQcmVzcyA9IHVzZU1lbW8oXG4gICAgKCkgPT5cbiAgICAgIEdlc3R1cmUuTG9uZ1ByZXNzKClcbiAgICAgICAgLm1pbkR1cmF0aW9uKDM1MClcbiAgICAgICAgLm1heERpc3RhbmNlKDgpXG4gICAgICAgIC5oaXRTbG9wKHsgdG9wOiA0LCBib3R0b206IDQsIGxlZnQ6IDQsIHJpZ2h0OiA0IH0pXG4gICAgICAgIC5vbkJlZ2luKCgpID0+IHtcbiAgICAgICAgICBsaWZ0LnZhbHVlID0gLTQ7XG4gICAgICAgIH0pXG4gICAgICAgIC5vblN0YXJ0KCgpID0+IHtcbiAgICAgICAgICBydW5PbkpTKG9wZW5SZWFjdGlvbnMpKCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5vbkZpbmFsaXplKCgpID0+IHtcbiAgICAgICAgICBsaWZ0LnZhbHVlID0gd2l0aFNwcmluZygwLCB7IGRhbXBpbmc6IDE4LCBzdGlmZm5lc3M6IDMyMCB9KTtcbiAgICAgICAgfSksXG4gICAgW29wZW5SZWFjdGlvbnMsIGxpZnRdLFxuICApO1xuXG4gIGNvbnN0IHNpbmdsZVRhcCA9IEdlc3R1cmUuVGFwKClcbiAgICAubWF4RHVyYXRpb24oMjIwKVxuICAgIC5tYXhEaXN0YW5jZSg4KVxuICAgIC5vbkVuZCgoX2UsIG9rKSA9PiB7XG4gICAgICBcIndvcmtsZXRcIjtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIC8vIHNpbmdsZSB0YXBzIGp1c3QgYm91bmNlIHRoZSBjb250ZW50IGEgc21pZGdlIGZvciBmZWVkYmFjayAoRG91YmxlVGFwTGlrZVBsdXMgYWxyZWFkeSBoYW5kbGVzKVxuICAgIH0pO1xuXG4gIGNvbnN0IGRvdWJsZVRhcCA9IEdlc3R1cmUuVGFwKClcbiAgICAubnVtYmVyT2ZUYXBzKDIpXG4gICAgLm1heERlbGF5KDI4MClcbiAgICAubWF4RHVyYXRpb24oMjYwKVxuICAgIC5tYXhEaXN0YW5jZSg4KVxuICAgIC8vIENSSVRJQ0FMOiBpZiBsb25nLXByZXNzIHJlY29nbml6ZXMsIGRvdWJsZS10YXAgbXVzdCBmYWlsXG4gICAgLnJlcXVpcmVFeHRlcm5hbEdlc3R1cmVUb0ZhaWwobG9uZ1ByZXNzKVxuICAgIC5vbkVuZCgoX2UsIG9rKSA9PiB7XG4gICAgICBcIndvcmtsZXRcIjtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHJ1bk9uSlMoaGFuZGxlRG91YmxlVGFwKSgpO1xuICAgIH0pO1xuXG4gIC8vIEV4Y2x1c2l2ZTogb25jZSBvbmUgd2lucywgdGhlIG90aGVyIGNhbmNlbHMuXG4gIGNvbnN0IGNvbXBvc2VkID0gR2VzdHVyZS5FeGNsdXNpdmUoXG4gICAgR2VzdHVyZS5TaW11bHRhbmVvdXMoZG91YmxlVGFwLCBzaW5nbGVUYXApLFxuICAgIGxvbmdQcmVzcyxcbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMucm9vdH0gYWNjZXNzaWJsZSBhY2Nlc3NpYmlsaXR5TGFiZWw9e2ExMXlMb25nUHJlc3NMYWJlbH0+XG4gICAgICA8R2VzdHVyZURldGVjdG9yIGdlc3R1cmU9e2NvbXBvc2VkfT5cbiAgICAgICAgPEFuaW1hdGVkLlZpZXcgc3R5bGU9e2xpZnRTdHlsZX0+XG4gICAgICAgICAgPERvdWJsZVRhcExpa2VQbHVzIG9uRG91YmxlVGFwPXtoYW5kbGVEb3VibGVUYXB9PlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgIDwvRG91YmxlVGFwTGlrZVBsdXM+XG4gICAgICAgIDwvQW5pbWF0ZWQuVmlldz5cbiAgICAgIDwvR2VzdHVyZURldGVjdG9yPlxuXG4gICAgICB7cmVhY3Rpb25zT3BlbiA/IChcbiAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5yZWFjdGlvbk92ZXJsYXl9IHBvaW50ZXJFdmVudHM9XCJib3gtbm9uZVwiPlxuICAgICAgICAgIDxSZWFjdGlvbkJhck1hZ25ldGljXG4gICAgICAgICAgICBvblNlbGVjdD17aGFuZGxlU2VsZWN0UmVhY3Rpb259XG4gICAgICAgICAgICBvbkNhbmNlbD17Y2xvc2VSZWFjdGlvbnN9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9WaWV3PlxuICAgICAgKSA6IG51bGx9XG4gICAgPC9WaWV3PlxuICApO1xufVxuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIHJvb3Q6IHsgcG9zaXRpb246IFwicmVsYXRpdmVcIiB9LFxuICByZWFjdGlvbk92ZXJsYXk6IHtcbiAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgIGxlZnQ6IDAsXG4gICAgcmlnaHQ6IDAsXG4gICAgYm90dG9tOiAyNCxcbiAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICB9LFxufSk7XG5cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSwwQkFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsc0JBQUEsR0FBQUosdUJBQUEsQ0FBQUMsT0FBQTtBQU1BLElBQUFJLE9BQUEsR0FBQUwsdUJBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFLLGtCQUFBLEdBQUFDLHNCQUFBLENBQUFOLE9BQUE7QUFDQSxJQUFBTyxvQkFBQSxHQUFBRCxzQkFBQSxDQUFBTixPQUFBO0FBQThELElBQUFRLFdBQUEsR0FBQVIsT0FBQTtBQUFBLFNBQUFELHdCQUFBVSxDQUFBLEVBQUFDLENBQUEsNkJBQUFDLE9BQUEsTUFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBWix1QkFBQSxZQUFBQSx3QkFBQVUsQ0FBQSxFQUFBQyxDQUFBLFNBQUFBLENBQUEsSUFBQUQsQ0FBQSxJQUFBQSxDQUFBLENBQUFLLFVBQUEsU0FBQUwsQ0FBQSxNQUFBTSxDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQSxLQUFBQyxTQUFBLFFBQUFDLE9BQUEsRUFBQVYsQ0FBQSxpQkFBQUEsQ0FBQSx1QkFBQUEsQ0FBQSx5QkFBQUEsQ0FBQSxTQUFBUSxDQUFBLE1BQUFGLENBQUEsR0FBQUwsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsUUFBQUcsQ0FBQSxDQUFBSyxHQUFBLENBQUFYLENBQUEsVUFBQU0sQ0FBQSxDQUFBTSxHQUFBLENBQUFaLENBQUEsR0FBQU0sQ0FBQSxDQUFBTyxHQUFBLENBQUFiLENBQUEsRUFBQVEsQ0FBQSxjQUFBTSxHQUFBLElBQUFkLENBQUEsZ0JBQUFjLEdBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixD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