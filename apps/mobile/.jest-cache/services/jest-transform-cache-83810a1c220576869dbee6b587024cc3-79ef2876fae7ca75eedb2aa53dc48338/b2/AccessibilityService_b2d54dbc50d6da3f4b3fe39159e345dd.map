{"version":3,"names":["_reactNative","require","_logger","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","AccessibilityService","_classCallCheck2","config","isScreenReaderEnabled","isBoldTextEnabled","isGrayscaleEnabled","isInvertColorsEnabled","isReduceMotionEnabled","isReduceTransparencyEnabled","preferredContentSizeCategory","listeners","initializeAccessibility","_createClass2","key","value","_initializeAccessibility","_asyncToGenerator2","_yield$Promise$all","Promise","all","AccessibilityInfo","_yield$Promise$all2","_slicedToArray2","screenReaderEnabled","boldTextEnabled","grayscaleEnabled","invertColorsEnabled","reduceMotionEnabled","reduceTransparencyEnabled","setupAccessibilityListeners","error","logger","warn","Error","String","_this","addEventListener","enabled","notifyListeners","getAccessibilityConfig","isHighContrastEnabled","getMinimumTouchTargetSize","width","height","announceForAccessibility","message","setAccessibilityFocus","ref","Platform","OS","accessibilityModule","getTextSizeMultiplier","_multipliers$this$con","multipliers","extraSmall","small","normal","large","extraLarge","extraExtraLarge","extraExtraExtraLarge","accessibilityMedium","accessibilityLarge","accessibilityExtraLarge","accessibilityExtraExtraLarge","accessibilityExtraExtraExtraLarge","meetsContrastRequirement","_foregroundColor","_backgroundColor","getAccessibleColorScheme","primary","secondary","background","surface","text","textSecondary","success","warning","addChangeListener","listener","_this2","index","indexOf","splice","getInstance","instance","undefined","accessibilityService","exports","_default"],"sources":["AccessibilityService.ts"],"sourcesContent":["/**\n * Accessibility Service for PawfectMatch Mobile App\n * Provides WCAG 2.1 AA compliant accessibility features\n */\nimport { AccessibilityInfo, Platform } from \"react-native\";\n\nimport { logger } from \"./logger\";\n\ninterface AccessibilityConfig {\n  isScreenReaderEnabled: boolean;\n  isBoldTextEnabled: boolean;\n  isGrayscaleEnabled: boolean;\n  isInvertColorsEnabled: boolean;\n  isReduceMotionEnabled: boolean;\n  isReduceTransparencyEnabled: boolean;\n  preferredContentSizeCategory: string;\n}\n\nclass AccessibilityService {\n  private static instance: AccessibilityService | undefined;\n  private config: AccessibilityConfig = {\n    isScreenReaderEnabled: false,\n    isBoldTextEnabled: false,\n    isGrayscaleEnabled: false,\n    isInvertColorsEnabled: false,\n    isReduceMotionEnabled: false,\n    isReduceTransparencyEnabled: false,\n    preferredContentSizeCategory: \"normal\",\n  };\n\n  private constructor() {\n    void this.initializeAccessibility();\n  }\n\n  static getInstance(): AccessibilityService {\n    if (AccessibilityService.instance === undefined) {\n      AccessibilityService.instance = new AccessibilityService();\n    }\n    return AccessibilityService.instance;\n  }\n\n  /**\n   * Initialize accessibility monitoring\n   */\n  private async initializeAccessibility(): Promise<void> {\n    try {\n      // Get initial accessibility settings\n      const [\n        screenReaderEnabled,\n        boldTextEnabled,\n        grayscaleEnabled,\n        invertColorsEnabled,\n        reduceMotionEnabled,\n        reduceTransparencyEnabled,\n      ] = await Promise.all([\n        AccessibilityInfo.isScreenReaderEnabled(),\n        AccessibilityInfo.isBoldTextEnabled(),\n        AccessibilityInfo.isGrayscaleEnabled(),\n        AccessibilityInfo.isInvertColorsEnabled(),\n        AccessibilityInfo.isReduceMotionEnabled(),\n        AccessibilityInfo.isReduceTransparencyEnabled(),\n      ]);\n\n      this.config = {\n        isScreenReaderEnabled: screenReaderEnabled,\n        isBoldTextEnabled: boldTextEnabled,\n        isGrayscaleEnabled: grayscaleEnabled,\n        isInvertColorsEnabled: invertColorsEnabled,\n        isReduceMotionEnabled: reduceMotionEnabled,\n        isReduceTransparencyEnabled: reduceTransparencyEnabled,\n        preferredContentSizeCategory: \"normal\", // Would need native implementation\n      };\n\n      // Set up change listeners\n      this.setupAccessibilityListeners();\n    } catch (error: unknown) {\n      logger.warn(\"Failed to initialize accessibility\", {\n        error: error instanceof Error ? error : new Error(String(error)),\n      });\n    }\n  }\n\n  /**\n   * Setup accessibility change listeners\n   */\n  private setupAccessibilityListeners(): void {\n    AccessibilityInfo.addEventListener(\"screenReaderChanged\", (enabled) => {\n      this.config.isScreenReaderEnabled = enabled;\n      this.notifyListeners();\n    });\n\n    AccessibilityInfo.addEventListener(\"boldTextChanged\", (enabled) => {\n      this.config.isBoldTextEnabled = enabled;\n      this.notifyListeners();\n    });\n\n    AccessibilityInfo.addEventListener(\"grayscaleChanged\", (enabled) => {\n      this.config.isGrayscaleEnabled = enabled;\n      this.notifyListeners();\n    });\n\n    AccessibilityInfo.addEventListener(\"invertColorsChanged\", (enabled) => {\n      this.config.isInvertColorsEnabled = enabled;\n      this.notifyListeners();\n    });\n\n    AccessibilityInfo.addEventListener(\"reduceMotionChanged\", (enabled) => {\n      this.config.isReduceMotionEnabled = enabled;\n      this.notifyListeners();\n    });\n\n    AccessibilityInfo.addEventListener(\n      \"reduceTransparencyChanged\",\n      (enabled) => {\n        this.config.isReduceTransparencyEnabled = enabled;\n        this.notifyListeners();\n      },\n    );\n  }\n\n  /**\n   * Get current accessibility configuration\n   */\n  getAccessibilityConfig(): AccessibilityConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * Check if screen reader is enabled\n   */\n  isScreenReaderEnabled(): boolean {\n    return this.config.isScreenReaderEnabled;\n  }\n\n  /**\n   * Check if bold text is enabled\n   */\n  isBoldTextEnabled(): boolean {\n    return this.config.isBoldTextEnabled;\n  }\n\n  /**\n   * Check if reduce motion is enabled\n   */\n  isReduceMotionEnabled(): boolean {\n    return this.config.isReduceMotionEnabled;\n  }\n\n  /**\n   * Check if high contrast is enabled\n   */\n  isHighContrastEnabled(): boolean {\n    return this.config.isGrayscaleEnabled || this.config.isInvertColorsEnabled;\n  }\n\n  /**\n   * Get minimum touch target size (WCAG requirement: 44x44 points)\n   */\n  getMinimumTouchTargetSize(): { width: number; height: number } {\n    return { width: 44, height: 44 };\n  }\n\n  /**\n   * Announce content to screen readers\n   */\n  announceForAccessibility(message: string): void {\n    try {\n      AccessibilityInfo.announceForAccessibility(message);\n    } catch (error: unknown) {\n      logger.warn(\"Failed to announce for accessibility\", {\n        error: error instanceof Error ? error : new Error(String(error)),\n      });\n    }\n  }\n\n  /**\n   * Set accessibility focus\n   */\n  setAccessibilityFocus(ref: unknown): void {\n    try {\n      if (Platform.OS === \"ios\") {\n        // iOS specific focus\n        // React Native AccessibilityInfo doesn't expose setAccessibilityFocus\n        // This would require a native module implementation\n        if (typeof ref === 'object' && ref !== null) {\n          // Attempt to set focus if native module is available\n          const accessibilityModule = AccessibilityInfo as AccessibilityInfo & {\n            setAccessibilityFocus?: (ref: unknown) => void;\n          };\n          if (accessibilityModule.setAccessibilityFocus) {\n            accessibilityModule.setAccessibilityFocus(ref);\n          }\n        }\n      } else {\n        // Android specific focus\n        // Would need additional implementation\n      }\n    } catch (error: unknown) {\n      logger.warn(\"Failed to set accessibility focus\", {\n        error: error instanceof Error ? error : new Error(String(error)),\n      });\n    }\n  }\n\n  /**\n   * Get accessible text size multiplier\n   */\n  getTextSizeMultiplier(): number {\n    // Map content size categories to multipliers\n    const multipliers: Record<string, number> = {\n      extraSmall: 0.8,\n      small: 0.9,\n      normal: 1.0,\n      large: 1.1,\n      extraLarge: 1.2,\n      extraExtraLarge: 1.3,\n      extraExtraExtraLarge: 1.4,\n      accessibilityMedium: 1.5,\n      accessibilityLarge: 1.6,\n      accessibilityExtraLarge: 1.7,\n      accessibilityExtraExtraLarge: 1.8,\n      accessibilityExtraExtraExtraLarge: 2.0,\n    };\n\n    return multipliers[this.config.preferredContentSizeCategory] ?? 1.0;\n  }\n\n  /**\n   * Check if content meets contrast requirements\n   */\n  meetsContrastRequirement(\n    _foregroundColor: string,\n    _backgroundColor: string,\n  ): boolean {\n    // Simplified contrast check - would need proper color math\n    // WCAG AA requires 4.5:1 for normal text, 3:1 for large text\n    return true; // Placeholder - implement proper contrast calculation\n  }\n\n  /**\n   * Get accessibility-friendly color scheme\n   */\n  getAccessibleColorScheme(): {\n    primary: string;\n    secondary: string;\n    background: string;\n    surface: string;\n    text: string;\n    textSecondary: string;\n    error: string;\n    success: string;\n    warning: string;\n  } {\n    // High contrast color scheme for accessibility\n    if (this.isHighContrastEnabled()) {\n      return {\n        primary: \"#FFFFFF\",\n        secondary: \"#CCCCCC\",\n        background: \"#000000\",\n        surface: \"#111111\",\n        text: \"#FFFFFF\",\n        textSecondary: \"#CCCCCC\",\n        error: \"#FF4444\",\n        success: \"#44FF44\",\n        warning: \"#FFFF44\",\n      };\n    }\n\n    // Standard accessible colors\n    return {\n      primary: \"#2563EB\", // Blue-600\n      secondary: \"#64748B\", // Slate-500\n      background: \"#FFFFFF\",\n      surface: \"#F8FAFC\", // Slate-50\n      text: \"#1E293B\", // Slate-800\n      textSecondary: \"#64748B\", // Slate-500\n      error: \"#DC2626\", // Red-600\n      success: \"#16A34A\", // Green-600\n      warning: \"#D97706\", // Amber-600\n    };\n  }\n\n  // Event listeners\n  private listeners: ((config: AccessibilityConfig) => void)[] = [];\n\n  /**\n   * Add accessibility change listener\n   */\n  addChangeListener(\n    listener: (config: AccessibilityConfig) => void,\n  ): () => void {\n    this.listeners.push(listener);\n\n    // Return unsubscribe function\n    return () => {\n      const index = this.listeners.indexOf(listener);\n      if (index > -1) {\n        this.listeners.splice(index, 1);\n      }\n    };\n  }\n\n  /**\n   * Notify listeners of accessibility changes\n   */\n  private notifyListeners(): void {\n    const config = this.getAccessibilityConfig();\n    this.listeners.forEach((listener) => {\n      try {\n        listener(config);\n      } catch (error: unknown) {\n        logger.warn(\"Error notifying accessibility listener\", {\n          error: error instanceof Error ? error : new Error(String(error)),\n        });\n      }\n    });\n  }\n}\n\n// Export singleton instance\nexport const accessibilityService = AccessibilityService.getInstance();\n\n// Export types\nexport type { AccessibilityConfig };\nexport default accessibilityService;\n"],"mappings":"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","ignoreList":[]}