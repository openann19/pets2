{"version":3,"names":["_socket","require","URL","process","env","EXPO_PUBLIC_SOCKET_URL","SOCKET_URL","socket","getSocket","io","transports","forceNew","reconnection","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","socketClient","exports","socketService","connect","disconnect"],"sources":["socket.ts"],"sourcesContent":["import { io, Socket } from \"socket.io-client\";\n\nconst URL = process.env.EXPO_PUBLIC_SOCKET_URL || process.env.SOCKET_URL || \"\";\n\nlet socket: Socket | null = null;\n\nexport function getSocket(): Socket {\n  if (!socket) {\n    socket = io(URL, {\n      transports: [\"websocket\"],\n      forceNew: true,\n      reconnection: true,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      reconnectionAttempts: 5,\n    });\n  }\n  return socket;\n}\n\nexport const socketClient = getSocket();\n\n// Export as socketService for test compatibility\nexport const socketService = {\n  connect: () => getSocket(),\n  disconnect: () => {\n    if (socket) {\n      socket.disconnect();\n      socket = null;\n    }\n  },\n  getSocket,\n  socketClient,\n};\n\n"],"mappings":";;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAIF,OAAO,CAACC,GAAG,CAACE,UAAU,IAAI,EAAE;AAE9E,IAAIC,MAAqB,GAAG,IAAI;AAEzB,SAASC,SAASA,CAAA,EAAW;EAClC,IAAI,CAACD,MAAM,EAAE;IACXA,MAAM,GAAG,IAAAE,UAAE,EAACP,GAAG,EAAE;MACfQ,UAAU,EAAE,CAAC,WAAW,CAAC;MACzBC,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE,IAAI;MAClBC,iBAAiB,EAAE,IAAI;MACvBC,oBAAoB,EAAE,IAAI;MAC1BC,oBAAoB,EAAE;IACxB,CAAC,CAAC;EACJ;EACA,OAAOR,MAAM;AACf;AAEO,IAAMS,YAAY,GAAAC,OAAA,CAAAD,YAAA,GAAGR,SAAS,CAAC,CAAC;AAGhC,IAAMU,aAAa,GAAAD,OAAA,CAAAC,aAAA,GAAG;EAC3BC,OAAO,EAAE,SAATA,OAAOA,CAAA;IAAA,OAAQX,SAAS,CAAC,CAAC;EAAA;EAC1BY,UAAU,EAAE,SAAZA,UAAUA,CAAA,EAAQ;IAChB,IAAIb,MAAM,EAAE;MACVA,MAAM,CAACa,UAAU,CAAC,CAAC;MACnBb,MAAM,GAAG,IAAI;IACf;EACF,CAAC;EACDC,SAAS,EAATA,SAAS;EACTQ,YAAY,EAAZA;AACF,CAAC","ignoreList":[]}