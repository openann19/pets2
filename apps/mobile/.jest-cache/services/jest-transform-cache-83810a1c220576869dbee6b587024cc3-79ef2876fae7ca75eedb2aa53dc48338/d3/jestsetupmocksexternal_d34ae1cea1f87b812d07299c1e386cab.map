{"version":3,"names":["_getJestObj","mock","init","jest","fn","captureException","captureMessage","addBreadcrumb","setUser","setContext","setTag","setTags","setExtra","setExtras","Integrations","Severity","Error","Warning","Info","Debug","hasHardwareAsync","Promise","resolve","isEnrolledAsync","supportedAuthenticationTypesAsync","authenticateAsync","success","LocalAuthenticationResult","Success","Cancel","NotEnrolled","NotAvailable","setItemAsync","getItemAsync","deleteItemAsync","isAvailableAsync","whenAvailable","SECURITY_LEVEL","ANY","SECURE_HARDWARE","ACCESSIBLE","WHEN_UNLOCKED","WHEN_UNLOCKED_THIS_DEVICE_ONLY","AFTER_FIRST_UNLOCK","AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY","ALWAYS","ALWAYS_THIS_DEVICE_ONLY","setGenericPassword","getGenericPassword","resetGenericPassword","pbkdf2","encrypt","decrypt","__esModule","default","setItem","getItem","removeItem","clear","_objectSpread","requireActual","useQuery","data","isLoading","isError","error","refetch","useMutation","mutate","mutateAsync","useQueryClient","invalidateQueries","setQueryData","getQueryData","_interopRequireDefault","require","_defineProperty2","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_require"],"sources":["jest.setup.mocks.external.ts"],"sourcesContent":["/**\n * Third-party library mocks\n * Mocks for external dependencies\n */\n\n// Mock @sentry/react-native\njest.mock('@sentry/react-native', () => ({\n  init: jest.fn(),\n  captureException: jest.fn(),\n  captureMessage: jest.fn(),\n  addBreadcrumb: jest.fn(),\n  setUser: jest.fn(),\n  setContext: jest.fn(),\n  setTag: jest.fn(),\n  setTags: jest.fn(),\n  setExtra: jest.fn(),\n  setExtras: jest.fn(),\n  Integrations: {},\n  Severity: {\n    Error: 'error',\n    Warning: 'warning',\n    Info: 'info',\n    Debug: 'debug',\n  },\n}));\n\n// Mock expo-local-authentication\njest.mock('expo-local-authentication', () => ({\n  hasHardwareAsync: jest.fn(() => Promise.resolve(true)),\n  isEnrolledAsync: jest.fn(() => Promise.resolve(true)),\n  supportedAuthenticationTypesAsync: jest.fn(() => Promise.resolve([1, 2])),\n  authenticateAsync: jest.fn(() => Promise.resolve({ success: true })),\n  LocalAuthenticationResult: {\n    Success: 'success',\n    Cancel: 'cancel',\n    NotEnrolled: 'notEnrolled',\n    NotAvailable: 'notAvailable',\n  },\n}));\n\n// Mock expo-secure-store\njest.mock('expo-secure-store', () => ({\n  setItemAsync: jest.fn(() => Promise.resolve()),\n  getItemAsync: jest.fn(() => Promise.resolve(null)),\n  deleteItemAsync: jest.fn(() => Promise.resolve()),\n  isAvailableAsync: jest.fn(() => Promise.resolve(true)),\n  whenAvailable: jest.fn(),\n}));\n\n// Mock react-native-keychain\njest.mock('react-native-keychain', () => ({\n  SECURITY_LEVEL: {\n    ANY: 'ANY',\n    SECURE_HARDWARE: 'SECURE_HARDWARE',\n  },\n  ACCESSIBLE: {\n    WHEN_UNLOCKED: 'WHEN_UNLOCKED',\n    WHEN_UNLOCKED_THIS_DEVICE_ONLY: 'WHEN_UNLOCKED_THIS_DEVICE_ONLY',\n    AFTER_FIRST_UNLOCK: 'AFTER_FIRST_UNLOCK',\n    AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY: 'AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY',\n    ALWAYS: 'ALWAYS',\n    ALWAYS_THIS_DEVICE_ONLY: 'ALWAYS_THIS_DEVICE_ONLY',\n  },\n  setGenericPassword: jest.fn(() => Promise.resolve(true)),\n  getGenericPassword: jest.fn(() => Promise.resolve(false)),\n  resetGenericPassword: jest.fn(() => Promise.resolve(true)),\n}));\n\n// Mock react-native-aes-crypto\njest.mock('react-native-aes-crypto', () => ({\n  pbkdf2: jest.fn(() => Promise.resolve('hash')),\n  encrypt: jest.fn(() => Promise.resolve('encrypted')),\n  decrypt: jest.fn(() => Promise.resolve('decrypted')),\n}));\n\n// Mock react-native-encrypted-storage\njest.mock('react-native-encrypted-storage', () => ({\n  __esModule: true,\n  default: {\n    setItem: jest.fn(() => Promise.resolve()),\n    getItem: jest.fn(() => Promise.resolve(null)),\n    removeItem: jest.fn(() => Promise.resolve()),\n    clear: jest.fn(() => Promise.resolve()),\n  },\n}));\n\n// Mock @tanstack/react-query\njest.mock('@tanstack/react-query', () => ({\n  ...jest.requireActual('@tanstack/react-query'),\n  useQuery: jest.fn(() => ({\n    data: null,\n    isLoading: false,\n    isError: false,\n    error: null,\n    refetch: jest.fn(),\n  })),\n  useMutation: jest.fn(() => ({\n    mutate: jest.fn(),\n    mutateAsync: jest.fn(),\n    isLoading: false,\n    isError: false,\n    error: null,\n  })),\n  useQueryClient: jest.fn(() => ({\n    invalidateQueries: jest.fn(),\n    setQueryData: jest.fn(),\n    getQueryData: jest.fn(),\n  })),\n}));\n\n"],"mappings":"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","ignoreList":[]}