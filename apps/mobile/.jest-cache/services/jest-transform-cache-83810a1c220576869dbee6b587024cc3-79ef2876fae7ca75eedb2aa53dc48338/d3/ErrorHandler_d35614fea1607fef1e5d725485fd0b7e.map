{"version":3,"names":["_interopRequireDefault","require","_defineProperty2","_classCallCheck2","_createClass2","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","default","getOwnPropertyDescriptors","defineProperties","defineProperty","exports","value","errorHandler","ErrorHandler","environment_1","isPromiseRejectionEvent","event","isErrorEvent","stringifyUnknown","Error","message","JSON","stringify","_unused","String","isRecordWithMessage","ErrorHandlerService","errorQueue","notificationHandlers","errorLoggers","maxQueueSize","isProduction","process","env","setupGlobalErrorHandlers","key","onNotification","handler","onErrorLog","handleError","error","context","undefined","options","processedError","processError","addToQueue","logError","showNotification","notification","handleApiError","_options$method","_options$endpoint","apiContext","component","action","method","endpoint","metadata","statusCode","createApiErrorNotification","createApiErrorRecovery","severity","getApiErrorSeverity","handleAuthError","_options$authMethod","authContext","authMethod","createErrorNotification","id","getAuthErrorMessage","timestamp","Date","handlePaymentError","paymentContext","paymentMethod","amount","currency","getPaymentErrorMessage","handleNetworkError","networkContext","retryable","getErrorStats","now","oneHourAgo","getTime","recent","bySeverity","reduce","acc","_error$context$severi","_acc$severity","byComponent","_error$context$compon","_acc$component","total","slice","clearQueue","_ref","_options$severity","errorMessage","errorStack","stack","generateErrorId","shouldShowNotification","canRecover","recovery","createRecoveryOptions","logger","console","handlerError","_error$context$severi2","_error$context$severi3","title","type","dismissible","autoHide","duration","_options$statusCode","isNaN","label","trim","canRetry","retryDelay","maxRetries","toLowerCase","includes","_error$context$severi4","Math","random","toString","substring","extractErrorMessage","source","fallback","_this","browserWindow","getWindowObject","handleUnhandledRejection","reason","handleGlobalError","filename","lineno","colno","addEventListenerSafely"],"sources":["ErrorHandler.js"],"sourcesContent":["\"use strict\";\n/**\n * Centralized Error Handling Service\n * Production-grade error handling with user notifications, logging, and recovery mechanisms\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorHandler = exports.ErrorHandler = void 0;\nconst environment_1 = require(\"../utils/environment\");\nconst isPromiseRejectionEvent = (event) => {\n    return 'reason' in event;\n};\nconst isErrorEvent = (event) => {\n    return 'error' in event;\n};\nconst stringifyUnknown = (value) => {\n    if (value instanceof Error) {\n        return value.message;\n    }\n    if (typeof value === 'object' && value !== null) {\n        try {\n            return JSON.stringify(value);\n        }\n        catch {\n            return '[unserializable object]';\n        }\n    }\n    return String(value);\n};\nconst isRecordWithMessage = (value) => {\n    return typeof value === 'object' && value !== null && 'message' in value;\n};\nclass ErrorHandlerService {\n    errorQueue = [];\n    notificationHandlers = [];\n    errorLoggers = [];\n    maxQueueSize = 1000;\n    isProduction = process.env['NODE_ENV'] === 'production';\n    constructor() {\n        this.setupGlobalErrorHandlers();\n    }\n    /**\n     * Register notification handler for user-facing errors\n     */\n    onNotification(handler) {\n        this.notificationHandlers.push(handler);\n    }\n    /**\n     * Register error logger for backend logging\n     */\n    onErrorLog(handler) {\n        this.errorLoggers.push(handler);\n    }\n    /**\n     * Process and handle an error\n     */\n    handleError(error, context = {}, options = {}) {\n        const processedError = this.processError(error, context, options);\n        // Add to queue\n        this.addToQueue(processedError);\n        // Log error\n        if (options.logError !== false) {\n            this.logError(processedError);\n        }\n        // Show notification\n        if (options.showNotification !== false && processedError.notification != null) {\n            this.showNotification(processedError.notification);\n        }\n        return processedError;\n    }\n    /**\n     * Handle API errors with specific handling\n     */\n    handleApiError(error, context = {}, options = {}) {\n        const apiContext = {\n            ...context,\n            component: 'API',\n            action: `${options.method ?? 'REQUEST'} ${options.endpoint ?? 'unknown'}`,\n            metadata: {\n                ...context.metadata,\n                endpoint: options.endpoint,\n                method: options.method,\n                statusCode: options.statusCode,\n            },\n        };\n        // Create notification and recovery options for API errors\n        this.createApiErrorNotification(error, options);\n        this.createApiErrorRecovery(options.statusCode);\n        return this.handleError(error, apiContext, {\n            showNotification: options.showNotification !== false,\n            severity: this.getApiErrorSeverity(options.statusCode),\n        });\n    }\n    /**\n     * Handle authentication errors\n     */\n    handleAuthError(error, context = {}, options = {}) {\n        const authContext = {\n            ...context,\n            component: 'Authentication',\n            action: options.authMethod ?? 'authenticate',\n            severity: 'high',\n            metadata: {\n                ...context.metadata,\n                authMethod: options.authMethod,\n            },\n        };\n        // Create authentication error notification\n        this.createErrorNotification({\n            id: 'auth-error',\n            message: this.getAuthErrorMessage(error),\n            context: authContext,\n            timestamp: new Date(),\n        });\n        return this.handleError(error, authContext, {\n            showNotification: options.showNotification !== false,\n            severity: 'high',\n        });\n    }\n    /**\n     * Handle payment errors\n     */\n    handlePaymentError(error, context = {}, options = {}) {\n        const paymentContext = {\n            ...context,\n            component: 'Payment',\n            action: 'process_payment',\n            severity: 'high',\n            metadata: {\n                ...context.metadata,\n                paymentMethod: options.paymentMethod,\n                amount: options.amount,\n                currency: options.currency,\n            },\n        };\n        // Create payment error notification\n        this.createErrorNotification({\n            id: 'payment-error',\n            message: this.getPaymentErrorMessage(error),\n            context: paymentContext,\n            timestamp: new Date(),\n        });\n        return this.handleError(error, paymentContext, {\n            showNotification: options.showNotification !== false,\n            severity: 'high',\n        });\n    }\n    /**\n     * Handle network errors\n     */\n    handleNetworkError(error, context = {}, options = {}) {\n        const networkContext = {\n            ...context,\n            component: 'Network',\n            action: 'network_request',\n            severity: 'medium',\n            metadata: {\n                ...context.metadata,\n                retryable: options.retryable,\n            },\n        };\n        // Create network error notification and recovery options\n        this.createErrorNotification({\n            id: 'network-error',\n            message: 'Please check your internet connection and try again.',\n            context: networkContext,\n            timestamp: new Date(),\n        });\n        return this.handleError(error, networkContext, {\n            showNotification: options.showNotification !== false,\n            severity: 'medium',\n        });\n    }\n    /**\n     * Get error statistics\n     */\n    getErrorStats() {\n        const now = new Date();\n        const oneHourAgo = new Date(now.getTime() - 60 * 60 * 1000);\n        const recent = this.errorQueue.filter(error => error.timestamp >= oneHourAgo);\n        const bySeverity = this.errorQueue.reduce((acc, error) => {\n            const severity = error.context.severity ?? 'medium';\n            acc[severity] = (acc[severity] ?? 0) + 1;\n            return acc;\n        }, {});\n        const byComponent = this.errorQueue.reduce((acc, error) => {\n            const component = error.context.component ?? 'unknown';\n            acc[component] = (acc[component] ?? 0) + 1;\n            return acc;\n        }, {});\n        return {\n            total: this.errorQueue.length,\n            bySeverity,\n            byComponent,\n            recent: recent.slice(-10),\n        };\n    }\n    /**\n     * Clear error queue\n     */\n    clearQueue() {\n        this.errorQueue = [];\n    }\n    /**\n     * Process error into standardized format\n     */\n    processError(error, context, options = {}) {\n        const errorMessage = typeof error === 'string' ? error : error.message;\n        const errorStack = typeof error === 'string' ? undefined : error.stack;\n        const processedError = {\n            id: this.generateErrorId(),\n            message: errorMessage,\n            context: {\n                ...context,\n                timestamp: new Date(),\n                severity: options.severity ?? context.severity ?? 'medium',\n            },\n            stack: errorStack,\n            timestamp: new Date(),\n        };\n        // Add notification if needed\n        if (this.shouldShowNotification(processedError)) {\n            processedError.notification = this.createErrorNotification(processedError);\n        }\n        // Add recovery options if applicable\n        if (this.canRecover(processedError)) {\n            processedError.recovery = this.createRecoveryOptions(processedError);\n        }\n        return processedError;\n    }\n    /**\n     * Add error to queue\n     */\n    addToQueue(error) {\n        this.errorQueue.push(error);\n        // Maintain queue size\n        if (this.errorQueue.length > this.maxQueueSize) {\n            this.errorQueue = this.errorQueue.slice(-this.maxQueueSize);\n        }\n    }\n    /**\n     * Log error to registered loggers\n     */\n    logError(error) {\n        this.errorLoggers.forEach(logger => {\n            try {\n                logger(error);\n            }\n            catch (logError) {\n                // Fallback to console if logger fails\n                console.error('Error logging failed:', logError);\n                console.error('Original error:', error);\n            }\n        });\n        // Fallback to console in development\n        if (!this.isProduction) {\n            console.error('Error:', error);\n        }\n    }\n    /**\n     * Show notification to user\n     */\n    showNotification(notification) {\n        this.notificationHandlers.forEach(handler => {\n            try {\n                handler(notification);\n            }\n            catch (handlerError) {\n                console.error('Notification handler failed:', handlerError);\n            }\n        });\n    }\n    /**\n     * Determine if notification should be shown\n     */\n    shouldShowNotification(error) {\n        const severity = error.context.severity ?? 'medium';\n        return severity === 'high' || severity === 'critical';\n    }\n    /**\n     * Create user-friendly error notification\n     */\n    createErrorNotification(error) {\n        const severity = error.context.severity ?? 'medium';\n        switch (severity) {\n            case 'critical':\n                return {\n                    title: 'Critical Error',\n                    message: 'A critical error occurred. Please contact support if this persists.',\n                    type: 'error',\n                    dismissible: false,\n                    autoHide: false,\n                };\n            case 'high':\n                return {\n                    title: 'Error',\n                    message: error.message,\n                    type: 'error',\n                    dismissible: true,\n                    autoHide: true,\n                    duration: 5000,\n                };\n            case 'medium':\n                return {\n                    title: 'Warning',\n                    message: error.message,\n                    type: 'warning',\n                    dismissible: true,\n                    autoHide: true,\n                    duration: 3000,\n                };\n            default:\n                return {\n                    title: 'Info',\n                    message: error.message,\n                    type: 'info',\n                    dismissible: true,\n                    autoHide: true,\n                    duration: 2000,\n                };\n        }\n    }\n    /**\n     * Create API-specific error notification\n     */\n    createApiErrorNotification(error, options) {\n        const statusCode = options.statusCode ?? 500;\n        if (!isNaN(statusCode) && statusCode >= 500) {\n            return {\n                title: 'Server Error',\n                message: 'Our servers are experiencing issues. Please try again later.',\n                type: 'error',\n                action: {\n                    label: 'Retry',\n                    handler: () => {\n                        // Retry logic\n                    },\n                },\n            };\n        }\n        else if (statusCode === 404) {\n            return {\n                title: 'Not Found',\n                message: 'The requested resource was not found.',\n                type: 'error',\n            };\n        }\n        else if (statusCode === 403) {\n            return {\n                title: 'Access Denied',\n                message: 'You do not have permission to access this resource.',\n                type: 'error',\n            };\n        }\n        else if (statusCode === 401) {\n            return {\n                title: 'Authentication Required',\n                message: 'Please log in to continue.',\n                type: 'error',\n                action: {\n                    label: 'Login',\n                    handler: () => {\n                        // Redirect to login\n                    },\n                },\n            };\n        }\n        else {\n            return {\n                title: 'Request Failed',\n                message: (error.message.trim() !== '') ? error.message : 'An error occurred while processing your request.',\n                type: 'error',\n            };\n        }\n    }\n    /**\n     * Create API error recovery options\n     */\n    createApiErrorRecovery(statusCode) {\n        if (statusCode != null && statusCode >= 500) {\n            return {\n                canRetry: true,\n                retryDelay: 5000,\n                maxRetries: 3,\n            };\n        }\n        else if (statusCode === 429) {\n            return {\n                canRetry: true,\n                retryDelay: 10000,\n                maxRetries: 2,\n            };\n        }\n        else {\n            return {\n                canRetry: false,\n            };\n        }\n    }\n    /**\n     * Get API error severity\n     */\n    getApiErrorSeverity(statusCode) {\n        if (statusCode == null)\n            return 'medium';\n        if (statusCode >= 500)\n            return 'high';\n        if (statusCode === 404)\n            return 'low';\n        if (statusCode === 403 || statusCode === 401)\n            return 'high';\n        if (statusCode >= 400)\n            return 'medium';\n        return 'low';\n    }\n    /**\n     * Get authentication error message\n     */\n    getAuthErrorMessage(error) {\n        const message = error.message.toLowerCase();\n        if (message.includes('invalid') || message.includes('incorrect')) {\n            return 'Invalid credentials. Please check your username and password.';\n        }\n        else if (message.includes('expired')) {\n            return 'Your session has expired. Please log in again.';\n        }\n        else if (message.includes('locked') || message.includes('disabled')) {\n            return 'Your account has been locked. Please contact support.';\n        }\n        else {\n            return 'Authentication failed. Please try again.';\n        }\n    }\n    /**\n     * Get payment error message\n     */\n    getPaymentErrorMessage(error) {\n        const message = error.message.toLowerCase();\n        if (message.includes('card') || message.includes('payment')) {\n            return 'Payment failed. Please check your payment method and try again.';\n        }\n        else if (message.includes('insufficient') || message.includes('funds')) {\n            return 'Insufficient funds. Please use a different payment method.';\n        }\n        else if (message.includes('declined')) {\n            return 'Payment was declined. Please contact your bank or use a different card.';\n        }\n        else {\n            return 'Payment processing failed. Please try again or contact support.';\n        }\n    }\n    /**\n     * Determine if error can be recovered from\n     */\n    canRecover(error) {\n        const { component } = error.context;\n        const severity = error.context.severity ?? 'medium';\n        // Critical errors usually can't be recovered\n        if (severity === 'critical')\n            return false;\n        // Network and API errors can usually be retried\n        if (component === 'Network' || component === 'API')\n            return true;\n        // Authentication errors can be retried\n        if (component === 'Authentication')\n            return true;\n        return false;\n    }\n    /**\n     * Create recovery options\n     */\n    createRecoveryOptions(error) {\n        const { component } = error.context;\n        switch (component) {\n            case 'Network':\n                return {\n                    canRetry: true,\n                    retryDelay: 2000,\n                    maxRetries: 3,\n                };\n            case 'API':\n                return {\n                    canRetry: true,\n                    retryDelay: 1000,\n                    maxRetries: 2,\n                };\n            case 'Authentication':\n                return {\n                    canRetry: true,\n                    retryDelay: 0,\n                    maxRetries: 1,\n                };\n            default:\n                return {\n                    canRetry: false,\n                };\n        }\n    }\n    /**\n     * Generate unique error ID\n     */\n    generateErrorId() {\n        return `error_${String(Date.now())}_${Math.random().toString(36).substring(2, 11)}`;\n    }\n    extractErrorMessage(source, fallback) {\n        if (typeof source === 'string') {\n            return source;\n        }\n        if (source instanceof Error && typeof source.message === 'string') {\n            return source.message;\n        }\n        if (isRecordWithMessage(source)) {\n            const { message } = source;\n            if (typeof message === 'string') {\n                return message;\n            }\n        }\n        return fallback;\n    }\n    /**\n     * Setup global error handlers\n     */\n    setupGlobalErrorHandlers() {\n        const browserWindow = (0, environment_1.getWindowObject)();\n        if (browserWindow == null) {\n            return;\n        }\n        const handleUnhandledRejection = (event) => {\n            if (!isPromiseRejectionEvent(event)) {\n                return;\n            }\n            const message = this.extractErrorMessage(event.reason, 'Unhandled Promise Rejection');\n            this.handleError(new Error(message), {\n                component: 'Global',\n                action: 'unhandled_promise_rejection',\n                severity: 'high',\n                metadata: {\n                    reason: stringifyUnknown(event.reason),\n                },\n            });\n        };\n        const handleGlobalError = (event) => {\n            if (!isErrorEvent(event)) {\n                return;\n            }\n            const message = this.extractErrorMessage(event.error, 'Global Error');\n            this.handleError(new Error(message), {\n                component: 'Global',\n                action: 'global_error',\n                severity: 'high',\n                metadata: {\n                    filename: event.filename,\n                    lineno: event.lineno,\n                    colno: event.colno,\n                    error: stringifyUnknown(event.error),\n                },\n            });\n        };\n        (0, environment_1.addEventListenerSafely)(browserWindow, 'unhandledrejection', handleUnhandledRejection);\n        (0, environment_1.addEventListenerSafely)(browserWindow, 'error', handleGlobalError);\n    }\n}\n// Export singleton instance\nexports.ErrorHandler = new ErrorHandlerService();\nexports.errorHandler = exports.ErrorHandler;\nexports.default = exports.ErrorHandler;\n"],"mappings":"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","ignoreList":[]}