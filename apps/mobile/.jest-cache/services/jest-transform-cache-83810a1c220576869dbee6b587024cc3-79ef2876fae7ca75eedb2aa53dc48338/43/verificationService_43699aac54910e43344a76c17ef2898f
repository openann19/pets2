6bbe91ae6d533a2edff12249a0d6a20f
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.verificationService = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _api = require("./api");
var _logger = require("./logger");
function cov_2k2uws87de() {
  var path = "/home/ben/Downloads/pets-fresh/apps/mobile/src/services/verificationService.ts";
  var hash = "ee982e3a01e428b1c29750cb61b61c1ab22adefe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ben/Downloads/pets-fresh/apps/mobile/src/services/verificationService.ts",
    statementMap: {
      "0": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "1": {
        start: {
          line: 97,
          column: 6
        },
        end: {
          line: 97,
          column: 90
        }
      },
      "2": {
        start: {
          line: 99,
          column: 27
        },
        end: {
          line: 99,
          column: 84
        }
      },
      "3": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 100,
          column: 81
        }
      },
      "4": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 101,
          column: 25
        }
      },
      "5": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "6": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 110,
          column: 105
        }
      },
      "7": {
        start: {
          line: 112,
          column: 27
        },
        end: {
          line: 112,
          column: 84
        }
      },
      "8": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 86
        }
      },
      "9": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 114,
          column: 25
        }
      },
      "10": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "11": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 110
        }
      },
      "12": {
        start: {
          line: 127,
          column: 27
        },
        end: {
          line: 127,
          column: 84
        }
      },
      "13": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 91
        }
      },
      "14": {
        start: {
          line: 129,
          column: 6
        },
        end: {
          line: 129,
          column: 25
        }
      },
      "15": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "16": {
        start: {
          line: 140,
          column: 6
        },
        end: {
          line: 140,
          column: 107
        }
      },
      "17": {
        start: {
          line: 142,
          column: 27
        },
        end: {
          line: 142,
          column: 84
        }
      },
      "18": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 143,
          column: 88
        }
      },
      "19": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 144,
          column: 25
        }
      },
      "20": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "21": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 155,
          column: 109
        }
      },
      "22": {
        start: {
          line: 157,
          column: 27
        },
        end: {
          line: 157,
          column: 84
        }
      },
      "23": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 158,
          column: 90
        }
      },
      "24": {
        start: {
          line: 159,
          column: 6
        },
        end: {
          line: 159,
          column: 25
        }
      },
      "25": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "26": {
        start: {
          line: 168,
          column: 23
        },
        end: {
          line: 168,
          column: 121
        }
      },
      "27": {
        start: {
          line: 169,
          column: 6
        },
        end: {
          line: 169,
          column: 35
        }
      },
      "28": {
        start: {
          line: 171,
          column: 27
        },
        end: {
          line: 171,
          column: 84
        }
      },
      "29": {
        start: {
          line: 172,
          column: 6
        },
        end: {
          line: 172,
          column: 80
        }
      },
      "30": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 173,
          column: 25
        }
      },
      "31": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "32": {
        start: {
          line: 182,
          column: 6
        },
        end: {
          line: 182,
          column: 82
        }
      },
      "33": {
        start: {
          line: 184,
          column: 27
        },
        end: {
          line: 184,
          column: 84
        }
      },
      "34": {
        start: {
          line: 185,
          column: 6
        },
        end: {
          line: 185,
          column: 92
        }
      },
      "35": {
        start: {
          line: 186,
          column: 6
        },
        end: {
          line: 186,
          column: 25
        }
      },
      "36": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 201,
          column: 5
        }
      },
      "37": {
        start: {
          line: 195,
          column: 23
        },
        end: {
          line: 195,
          column: 101
        }
      },
      "38": {
        start: {
          line: 196,
          column: 6
        },
        end: {
          line: 196,
          column: 29
        }
      },
      "39": {
        start: {
          line: 198,
          column: 27
        },
        end: {
          line: 198,
          column: 84
        }
      },
      "40": {
        start: {
          line: 199,
          column: 6
        },
        end: {
          line: 199,
          column: 68
        }
      },
      "41": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 200,
          column: 25
        }
      },
      "42": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "43": {
        start: {
          line: 209,
          column: 23
        },
        end: {
          line: 209,
          column: 119
        }
      },
      "44": {
        start: {
          line: 210,
          column: 6
        },
        end: {
          line: 210,
          column: 30
        }
      },
      "45": {
        start: {
          line: 212,
          column: 27
        },
        end: {
          line: 212,
          column: 84
        }
      },
      "46": {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 213,
          column: 81
        }
      },
      "47": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 214,
          column: 25
        }
      },
      "48": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "49": {
        start: {
          line: 227,
          column: 6
        },
        end: {
          line: 227,
          column: 36
        }
      },
      "50": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "51": {
        start: {
          line: 231,
          column: 23
        },
        end: {
          line: 231,
          column: 43
        }
      },
      "52": {
        start: {
          line: 232,
          column: 23
        },
        end: {
          line: 232,
          column: 37
        }
      },
      "53": {
        start: {
          line: 241,
          column: 23
        },
        end: {
          line: 251,
          column: 8
        }
      },
      "54": {
        start: {
          line: 253,
          column: 6
        },
        end: {
          line: 253,
          column: 26
        }
      },
      "55": {
        start: {
          line: 255,
          column: 27
        },
        end: {
          line: 255,
          column: 84
        }
      },
      "56": {
        start: {
          line: 256,
          column: 6
        },
        end: {
          line: 256,
          column: 104
        }
      },
      "57": {
        start: {
          line: 257,
          column: 6
        },
        end: {
          line: 257,
          column: 25
        }
      },
      "58": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "59": {
        start: {
          line: 266,
          column: 6
        },
        end: {
          line: 266,
          column: 72
        }
      },
      "60": {
        start: {
          line: 268,
          column: 27
        },
        end: {
          line: 268,
          column: 84
        }
      },
      "61": {
        start: {
          line: 269,
          column: 6
        },
        end: {
          line: 269,
          column: 78
        }
      },
      "62": {
        start: {
          line: 270,
          column: 6
        },
        end: {
          line: 270,
          column: 25
        }
      },
      "63": {
        start: {
          line: 275,
          column: 35
        },
        end: {
          line: 275,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 95,
            column: 3
          }
        },
        loc: {
          start: {
            line: 95,
            column: 49
          },
          end: {
            line: 103,
            column: 3
          }
        },
        line: 95
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 108,
            column: 2
          },
          end: {
            line: 108,
            column: 3
          }
        },
        loc: {
          start: {
            line: 108,
            column: 96
          },
          end: {
            line: 116,
            column: 3
          }
        },
        line: 108
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 121,
            column: 2
          },
          end: {
            line: 121,
            column: 3
          }
        },
        loc: {
          start: {
            line: 123,
            column: 33
          },
          end: {
            line: 131,
            column: 3
          }
        },
        line: 123
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 136,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        },
        loc: {
          start: {
            line: 138,
            column: 33
          },
          end: {
            line: 146,
            column: 3
          }
        },
        line: 138
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 151,
            column: 2
          },
          end: {
            line: 151,
            column: 3
          }
        },
        loc: {
          start: {
            line: 153,
            column: 33
          },
          end: {
            line: 161,
            column: 3
          }
        },
        line: 153
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 166,
            column: 2
          },
          end: {
            line: 166,
            column: 3
          }
        },
        loc: {
          start: {
            line: 166,
            column: 57
          },
          end: {
            line: 175,
            column: 3
          }
        },
        line: 166
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 180,
            column: 2
          },
          end: {
            line: 180,
            column: 3
          }
        },
        loc: {
          start: {
            line: 180,
            column: 66
          },
          end: {
            line: 188,
            column: 3
          }
        },
        line: 180
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 193,
            column: 2
          },
          end: {
            line: 193,
            column: 3
          }
        },
        loc: {
          start: {
            line: 193,
            column: 39
          },
          end: {
            line: 202,
            column: 3
          }
        },
        line: 193
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 207,
            column: 2
          },
          end: {
            line: 207,
            column: 3
          }
        },
        loc: {
          start: {
            line: 207,
            column: 56
          },
          end: {
            line: 216,
            column: 3
          }
        },
        line: 207
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 221,
            column: 2
          },
          end: {
            line: 221,
            column: 3
          }
        },
        loc: {
          start: {
            line: 225,
            column: 21
          },
          end: {
            line: 259,
            column: 3
          }
        },
        line: 225
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 264,
            column: 2
          },
          end: {
            line: 264,
            column: 3
          }
        },
        loc: {
          start: {
            line: 264,
            column: 45
          },
          end: {
            line: 272,
            column: 3
          }
        },
        line: 264
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 99,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 52
          },
          end: {
            line: 99,
            column: 57
          }
        }, {
          start: {
            line: 99,
            column: 60
          },
          end: {
            line: 99,
            column: 84
          }
        }],
        line: 99
      },
      "1": {
        loc: {
          start: {
            line: 112,
            column: 27
          },
          end: {
            line: 112,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 52
          },
          end: {
            line: 112,
            column: 57
          }
        }, {
          start: {
            line: 112,
            column: 60
          },
          end: {
            line: 112,
            column: 84
          }
        }],
        line: 112
      },
      "2": {
        loc: {
          start: {
            line: 127,
            column: 27
          },
          end: {
            line: 127,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 52
          },
          end: {
            line: 127,
            column: 57
          }
        }, {
          start: {
            line: 127,
            column: 60
          },
          end: {
            line: 127,
            column: 84
          }
        }],
        line: 127
      },
      "3": {
        loc: {
          start: {
            line: 142,
            column: 27
          },
          end: {
            line: 142,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 52
          },
          end: {
            line: 142,
            column: 57
          }
        }, {
          start: {
            line: 142,
            column: 60
          },
          end: {
            line: 142,
            column: 84
          }
        }],
        line: 142
      },
      "4": {
        loc: {
          start: {
            line: 157,
            column: 27
          },
          end: {
            line: 157,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 52
          },
          end: {
            line: 157,
            column: 57
          }
        }, {
          start: {
            line: 157,
            column: 60
          },
          end: {
            line: 157,
            column: 84
          }
        }],
        line: 157
      },
      "5": {
        loc: {
          start: {
            line: 171,
            column: 27
          },
          end: {
            line: 171,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 52
          },
          end: {
            line: 171,
            column: 57
          }
        }, {
          start: {
            line: 171,
            column: 60
          },
          end: {
            line: 171,
            column: 84
          }
        }],
        line: 171
      },
      "6": {
        loc: {
          start: {
            line: 184,
            column: 27
          },
          end: {
            line: 184,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 184,
            column: 52
          },
          end: {
            line: 184,
            column: 57
          }
        }, {
          start: {
            line: 184,
            column: 60
          },
          end: {
            line: 184,
            column: 84
          }
        }],
        line: 184
      },
      "7": {
        loc: {
          start: {
            line: 198,
            column: 27
          },
          end: {
            line: 198,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 198,
            column: 52
          },
          end: {
            line: 198,
            column: 57
          }
        }, {
          start: {
            line: 198,
            column: 60
          },
          end: {
            line: 198,
            column: 84
          }
        }],
        line: 198
      },
      "8": {
        loc: {
          start: {
            line: 212,
            column: 27
          },
          end: {
            line: 212,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 212,
            column: 52
          },
          end: {
            line: 212,
            column: 57
          }
        }, {
          start: {
            line: 212,
            column: 60
          },
          end: {
            line: 212,
            column: 84
          }
        }],
        line: 212
      },
      "9": {
        loc: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "10": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 226,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 226,
            column: 16
          }
        }, {
          start: {
            line: 226,
            column: 20
          },
          end: {
            line: 226,
            column: 41
          }
        }],
        line: 226
      },
      "11": {
        loc: {
          start: {
            line: 255,
            column: 27
          },
          end: {
            line: 255,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 255,
            column: 52
          },
          end: {
            line: 255,
            column: 57
          }
        }, {
          start: {
            line: 255,
            column: 60
          },
          end: {
            line: 255,
            column: 84
          }
        }],
        line: 255
      },
      "12": {
        loc: {
          start: {
            line: 268,
            column: 27
          },
          end: {
            line: 268,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 268,
            column: 52
          },
          end: {
            line: 268,
            column: 57
          }
        }, {
          start: {
            line: 268,
            column: 60
          },
          end: {
            line: 268,
            column: 84
          }
        }],
        line: 268
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ee982e3a01e428b1c29750cb61b61c1ab22adefe"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2k2uws87de = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2k2uws87de();
var VerificationService = function () {
  function VerificationService() {
    (0, _classCallCheck2.default)(this, VerificationService);
  }
  return (0, _createClass2.default)(VerificationService, [{
    key: "getStatus",
    value: (function () {
      var _getStatus = (0, _asyncToGenerator2.default)(function* () {
        cov_2k2uws87de().f[0]++;
        cov_2k2uws87de().s[0]++;
        try {
          cov_2k2uws87de().s[1]++;
          return yield (0, _api.request)('/verification/status', {
            method: 'GET'
          });
        } catch (error) {
          var errorMessage = (cov_2k2uws87de().s[2]++, error instanceof Error ? (cov_2k2uws87de().b[0][0]++, error) : (cov_2k2uws87de().b[0][1]++, new Error(String(error))));
          cov_2k2uws87de().s[3]++;
          _logger.logger.error('Error getting verification status', {
            error: errorMessage
          });
          cov_2k2uws87de().s[4]++;
          throw errorMessage;
        }
      });
      function getStatus() {
        return _getStatus.apply(this, arguments);
      }
      return getStatus;
    }())
  }, {
    key: "submitIdentityVerification",
    value: (function () {
      var _submitIdentityVerification = (0, _asyncToGenerator2.default)(function* (data) {
        cov_2k2uws87de().f[1]++;
        cov_2k2uws87de().s[5]++;
        try {
          cov_2k2uws87de().s[6]++;
          return yield (0, _api.request)('/verification/identity', {
            method: 'POST',
            body: data
          });
        } catch (error) {
          var errorMessage = (cov_2k2uws87de().s[7]++, error instanceof Error ? (cov_2k2uws87de().b[1][0]++, error) : (cov_2k2uws87de().b[1][1]++, new Error(String(error))));
          cov_2k2uws87de().s[8]++;
          _logger.logger.error('Error submitting identity verification', {
            error: errorMessage
          });
          cov_2k2uws87de().s[9]++;
          throw errorMessage;
        }
      });
      function submitIdentityVerification(_x) {
        return _submitIdentityVerification.apply(this, arguments);
      }
      return submitIdentityVerification;
    }())
  }, {
    key: "submitPetOwnershipVerification",
    value: (function () {
      var _submitPetOwnershipVerification = (0, _asyncToGenerator2.default)(function* (data) {
        cov_2k2uws87de().f[2]++;
        cov_2k2uws87de().s[10]++;
        try {
          cov_2k2uws87de().s[11]++;
          return yield (0, _api.request)('/verification/pet-ownership', {
            method: 'POST',
            body: data
          });
        } catch (error) {
          var errorMessage = (cov_2k2uws87de().s[12]++, error instanceof Error ? (cov_2k2uws87de().b[2][0]++, error) : (cov_2k2uws87de().b[2][1]++, new Error(String(error))));
          cov_2k2uws87de().s[13]++;
          _logger.logger.error('Error submitting pet ownership verification', {
            error: errorMessage
          });
          cov_2k2uws87de().s[14]++;
          throw errorMessage;
        }
      });
      function submitPetOwnershipVerification(_x2) {
        return _submitPetOwnershipVerification.apply(this, arguments);
      }
      return submitPetOwnershipVerification;
    }())
  }, {
    key: "submitVeterinaryVerification",
    value: (function () {
      var _submitVeterinaryVerification = (0, _asyncToGenerator2.default)(function* (data) {
        cov_2k2uws87de().f[3]++;
        cov_2k2uws87de().s[15]++;
        try {
          cov_2k2uws87de().s[16]++;
          return yield (0, _api.request)('/verification/veterinary', {
            method: 'POST',
            body: data
          });
        } catch (error) {
          var errorMessage = (cov_2k2uws87de().s[17]++, error instanceof Error ? (cov_2k2uws87de().b[3][0]++, error) : (cov_2k2uws87de().b[3][1]++, new Error(String(error))));
          cov_2k2uws87de().s[18]++;
          _logger.logger.error('Error submitting veterinary verification', {
            error: errorMessage
          });
          cov_2k2uws87de().s[19]++;
          throw errorMessage;
        }
      });
      function submitVeterinaryVerification(_x3) {
        return _submitVeterinaryVerification.apply(this, arguments);
      }
      return submitVeterinaryVerification;
    }())
  }, {
    key: "submitOrganizationVerification",
    value: (function () {
      var _submitOrganizationVerification = (0, _asyncToGenerator2.default)(function* (data) {
        cov_2k2uws87de().f[4]++;
        cov_2k2uws87de().s[20]++;
        try {
          cov_2k2uws87de().s[21]++;
          return yield (0, _api.request)('/verification/organization', {
            method: 'POST',
            body: data
          });
        } catch (error) {
          var errorMessage = (cov_2k2uws87de().s[22]++, error instanceof Error ? (cov_2k2uws87de().b[4][0]++, error) : (cov_2k2uws87de().b[4][1]++, new Error(String(error))));
          cov_2k2uws87de().s[23]++;
          _logger.logger.error('Error submitting organization verification', {
            error: errorMessage
          });
          cov_2k2uws87de().s[24]++;
          throw errorMessage;
        }
      });
      function submitOrganizationVerification(_x4) {
        return _submitOrganizationVerification.apply(this, arguments);
      }
      return submitOrganizationVerification;
    }())
  }, {
    key: "getRequirements",
    value: (function () {
      var _getRequirements = (0, _asyncToGenerator2.default)(function* (tier) {
        cov_2k2uws87de().f[5]++;
        cov_2k2uws87de().s[25]++;
        try {
          var response = (cov_2k2uws87de().s[26]++, yield (0, _api.request)(`/verification/requirements/${tier}`, {
            method: 'GET'
          }));
          cov_2k2uws87de().s[27]++;
          return response.requirements;
        } catch (error) {
          var errorMessage = (cov_2k2uws87de().s[28]++, error instanceof Error ? (cov_2k2uws87de().b[5][0]++, error) : (cov_2k2uws87de().b[5][1]++, new Error(String(error))));
          cov_2k2uws87de().s[29]++;
          _logger.logger.error('Error getting requirements', {
            error: errorMessage,
            tier: tier
          });
          cov_2k2uws87de().s[30]++;
          throw errorMessage;
        }
      });
      function getRequirements(_x5) {
        return _getRequirements.apply(this, arguments);
      }
      return getRequirements;
    }())
  }, {
    key: "cancelVerification",
    value: (function () {
      var _cancelVerification = (0, _asyncToGenerator2.default)(function* (verificationId) {
        cov_2k2uws87de().f[6]++;
        cov_2k2uws87de().s[31]++;
        try {
          cov_2k2uws87de().s[32]++;
          yield (0, _api.request)(`/verification/${verificationId}/cancel`, {
            method: 'POST'
          });
        } catch (error) {
          var errorMessage = (cov_2k2uws87de().s[33]++, error instanceof Error ? (cov_2k2uws87de().b[6][0]++, error) : (cov_2k2uws87de().b[6][1]++, new Error(String(error))));
          cov_2k2uws87de().s[34]++;
          _logger.logger.error('Error canceling verification', {
            error: errorMessage,
            verificationId: verificationId
          });
          cov_2k2uws87de().s[35]++;
          throw errorMessage;
        }
      });
      function cancelVerification(_x6) {
        return _cancelVerification.apply(this, arguments);
      }
      return cancelVerification;
    }())
  }, {
    key: "getBadges",
    value: (function () {
      var _getBadges = (0, _asyncToGenerator2.default)(function* () {
        cov_2k2uws87de().f[7]++;
        cov_2k2uws87de().s[36]++;
        try {
          var response = (cov_2k2uws87de().s[37]++, yield (0, _api.request)('/verification/badges', {
            method: 'GET'
          }));
          cov_2k2uws87de().s[38]++;
          return response.badges;
        } catch (error) {
          var errorMessage = (cov_2k2uws87de().s[39]++, error instanceof Error ? (cov_2k2uws87de().b[7][0]++, error) : (cov_2k2uws87de().b[7][1]++, new Error(String(error))));
          cov_2k2uws87de().s[40]++;
          _logger.logger.error('Error getting badges', {
            error: errorMessage
          });
          cov_2k2uws87de().s[41]++;
          throw errorMessage;
        }
      });
      function getBadges() {
        return _getBadges.apply(this, arguments);
      }
      return getBadges;
    }())
  }, {
    key: "hasTier",
    value: (function () {
      var _hasTier = (0, _asyncToGenerator2.default)(function* (requiredTier) {
        cov_2k2uws87de().f[8]++;
        cov_2k2uws87de().s[42]++;
        try {
          var response = (cov_2k2uws87de().s[43]++, yield (0, _api.request)(`/verification/has-tier/${requiredTier}`, {
            method: 'GET'
          }));
          cov_2k2uws87de().s[44]++;
          return response.hasTier;
        } catch (error) {
          var errorMessage = (cov_2k2uws87de().s[45]++, error instanceof Error ? (cov_2k2uws87de().b[8][0]++, error) : (cov_2k2uws87de().b[8][1]++, new Error(String(error))));
          cov_2k2uws87de().s[46]++;
          _logger.logger.error('Error checking tier', {
            error: errorMessage,
            requiredTier: requiredTier
          });
          cov_2k2uws87de().s[47]++;
          throw errorMessage;
        }
      });
      function hasTier(_x7) {
        return _hasTier.apply(this, arguments);
      }
      return hasTier;
    }())
  }, {
    key: "uploadDocument",
    value: (function () {
      var _uploadDocument = (0, _asyncToGenerator2.default)(function* (fileUri, documentType, verificationType) {
        cov_2k2uws87de().f[9]++;
        cov_2k2uws87de().s[48]++;
        if ((cov_2k2uws87de().b[10][0]++, !fileUri) || (cov_2k2uws87de().b[10][1]++, fileUri.trim() === '')) {
          cov_2k2uws87de().b[9][0]++;
          cov_2k2uws87de().s[49]++;
          throw new Error('Empty file');
        } else {
          cov_2k2uws87de().b[9][1]++;
        }
        cov_2k2uws87de().s[50]++;
        try {
          var FormData = (cov_2k2uws87de().s[51]++, require('form-data'));
          var formData = (cov_2k2uws87de().s[52]++, new FormData());
          var response = (cov_2k2uws87de().s[53]++, yield (0, _api.request)('/verification/upload', {
            method: 'POST',
            body: formData,
            headers: {
              'Content-Type': 'multipart/form-data'
            },
            params: {
              documentType: documentType,
              verificationType: verificationType
            }
          }));
          cov_2k2uws87de().s[54]++;
          return response.url;
        } catch (error) {
          var errorMessage = (cov_2k2uws87de().s[55]++, error instanceof Error ? (cov_2k2uws87de().b[11][0]++, error) : (cov_2k2uws87de().b[11][1]++, new Error(String(error))));
          cov_2k2uws87de().s[56]++;
          _logger.logger.error('Error uploading document', {
            error: errorMessage,
            documentType: documentType,
            verificationType: verificationType
          });
          cov_2k2uws87de().s[57]++;
          throw errorMessage;
        }
      });
      function uploadDocument(_x8, _x9, _x0) {
        return _uploadDocument.apply(this, arguments);
      }
      return uploadDocument;
    }())
  }, {
    key: "requestStatusUpdate",
    value: (function () {
      var _requestStatusUpdate = (0, _asyncToGenerator2.default)(function* () {
        cov_2k2uws87de().f[10]++;
        cov_2k2uws87de().s[58]++;
        try {
          cov_2k2uws87de().s[59]++;
          yield (0, _api.request)('/verification/request-update', {
            method: 'POST'
          });
        } catch (error) {
          var errorMessage = (cov_2k2uws87de().s[60]++, error instanceof Error ? (cov_2k2uws87de().b[12][0]++, error) : (cov_2k2uws87de().b[12][1]++, new Error(String(error))));
          cov_2k2uws87de().s[61]++;
          _logger.logger.error('Error requesting status update', {
            error: errorMessage
          });
          cov_2k2uws87de().s[62]++;
          throw errorMessage;
        }
      });
      function requestStatusUpdate() {
        return _requestStatusUpdate.apply(this, arguments);
      }
      return requestStatusUpdate;
    }())
  }]);
}();
var verificationService = exports.verificationService = (cov_2k2uws87de().s[63]++, new VerificationService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,