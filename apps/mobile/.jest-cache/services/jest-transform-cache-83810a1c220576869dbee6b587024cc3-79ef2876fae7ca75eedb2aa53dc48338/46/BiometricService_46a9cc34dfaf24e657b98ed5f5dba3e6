9a5a978955409c603b5232fbc331aa65
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.biometricService = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var LocalAuthentication = _interopRequireWildcard(require("expo-local-authentication"));
var SecureStore = _interopRequireWildcard(require("expo-secure-store"));
var _core = require("@pawfectmatch/core");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t2 in e) "default" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]); return f; })(e, t); }
function cov_2842pzl3r7() {
  var path = "/home/ben/Downloads/pets-fresh/apps/mobile/src/services/BiometricService.ts";
  var hash = "c3bf9976b74ca4cfadffd33545061a829667451c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ben/Downloads/pets-fresh/apps/mobile/src/services/BiometricService.ts",
    statementMap: {
      "0": {
        start: {
          line: 22,
          column: 50
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "1": {
        start: {
          line: 23,
          column: 47
        },
        end: {
          line: 23,
          column: 63
        }
      },
      "2": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "3": {
        start: {
          line: 30,
          column: 26
        },
        end: {
          line: 30,
          column: 70
        }
      },
      "4": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 31,
          column: 68
        }
      },
      "5": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 69
        }
      },
      "6": {
        start: {
          line: 35,
          column: 50
        },
        end: {
          line: 39,
          column: 7
        }
      },
      "7": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "8": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 47,
          column: 26
        }
      },
      "9": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 49,
          column: 67
        }
      },
      "10": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 54,
          column: 8
        }
      },
      "11": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "12": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 63,
          column: 61
        }
      },
      "13": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 70,
          column: 7
        }
      },
      "14": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "15": {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "16": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 76,
          column: 10
        }
      },
      "17": {
        start: {
          line: 79,
          column: 21
        },
        end: {
          line: 87,
          column: 8
        }
      },
      "18": {
        start: {
          line: 89,
          column: 28
        },
        end: {
          line: 89,
          column: 78
        }
      },
      "19": {
        start: {
          line: 91,
          column: 6
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "20": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 78
        }
      },
      "21": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 96,
          column: 10
        }
      },
      "22": {
        start: {
          line: 99,
          column: 10
        },
        end: {
          line: 99,
          column: 70
        }
      },
      "23": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "24": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 108,
          column: 10
        }
      },
      "25": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 111,
          column: 64
        }
      },
      "26": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 116,
          column: 8
        }
      },
      "27": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "28": {
        start: {
          line: 126,
          column: 25
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "29": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "30": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 21
        }
      },
      "31": {
        start: {
          line: 135,
          column: 6
        },
        end: {
          line: 138,
          column: 8
        }
      },
      "32": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 144,
          column: 8
        }
      },
      "33": {
        start: {
          line: 146,
          column: 6
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "34": {
        start: {
          line: 149,
          column: 6
        },
        end: {
          line: 149,
          column: 18
        }
      },
      "35": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 75
        }
      },
      "36": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 152,
          column: 19
        }
      },
      "37": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "38": {
        start: {
          line: 161,
          column: 6
        },
        end: {
          line: 161,
          column: 80
        }
      },
      "39": {
        start: {
          line: 162,
          column: 6
        },
        end: {
          line: 162,
          column: 77
        }
      },
      "40": {
        start: {
          line: 163,
          column: 6
        },
        end: {
          line: 163,
          column: 55
        }
      },
      "41": {
        start: {
          line: 165,
          column: 6
        },
        end: {
          line: 165,
          column: 76
        }
      },
      "42": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "43": {
        start: {
          line: 174,
          column: 22
        },
        end: {
          line: 176,
          column: 7
        }
      },
      "44": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 32
        }
      },
      "45": {
        start: {
          line: 179,
          column: 6
        },
        end: {
          line: 179,
          column: 66
        }
      },
      "46": {
        start: {
          line: 180,
          column: 6
        },
        end: {
          line: 180,
          column: 19
        }
      },
      "47": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 196,
          column: 5
        }
      },
      "48": {
        start: {
          line: 195,
          column: 6
        },
        end: {
          line: 195,
          column: 22
        }
      },
      "49": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 203,
          column: 5
        }
      },
      "50": {
        start: {
          line: 202,
          column: 6
        },
        end: {
          line: 202,
          column: 27
        }
      },
      "51": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "52": {
        start: {
          line: 205,
          column: 6
        },
        end: {
          line: 205,
          column: 20
        }
      },
      "53": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 207,
          column: 21
        }
      },
      "54": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "55": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 25
        }
      },
      "56": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 26
        }
      },
      "57": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 27
        }
      },
      "58": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 42
        }
      },
      "59": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 252,
          column: 5
        }
      },
      "60": {
        start: {
          line: 233,
          column: 25
        },
        end: {
          line: 233,
          column: 74
        }
      },
      "61": {
        start: {
          line: 234,
          column: 6
        },
        end: {
          line: 236,
          column: 7
        }
      },
      "62": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 76
        }
      },
      "63": {
        start: {
          line: 239,
          column: 6
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "64": {
        start: {
          line: 245,
          column: 6
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "65": {
        start: {
          line: 250,
          column: 6
        },
        end: {
          line: 250,
          column: 82
        }
      },
      "66": {
        start: {
          line: 251,
          column: 6
        },
        end: {
          line: 251,
          column: 18
        }
      },
      "67": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 282,
          column: 5
        }
      },
      "68": {
        start: {
          line: 261,
          column: 25
        },
        end: {
          line: 261,
          column: 74
        }
      },
      "69": {
        start: {
          line: 262,
          column: 6
        },
        end: {
          line: 264,
          column: 7
        }
      },
      "70": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 61
        }
      },
      "71": {
        start: {
          line: 267,
          column: 28
        },
        end: {
          line: 271,
          column: 8
        }
      },
      "72": {
        start: {
          line: 273,
          column: 6
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "73": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 278,
          column: 27
        }
      },
      "74": {
        start: {
          line: 280,
          column: 6
        },
        end: {
          line: 280,
          column: 66
        }
      },
      "75": {
        start: {
          line: 281,
          column: 6
        },
        end: {
          line: 281,
          column: 18
        }
      },
      "76": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 295,
          column: 5
        }
      },
      "77": {
        start: {
          line: 290,
          column: 6
        },
        end: {
          line: 290,
          column: 45
        }
      },
      "78": {
        start: {
          line: 291,
          column: 6
        },
        end: {
          line: 291,
          column: 63
        }
      },
      "79": {
        start: {
          line: 293,
          column: 6
        },
        end: {
          line: 293,
          column: 65
        }
      },
      "80": {
        start: {
          line: 294,
          column: 6
        },
        end: {
          line: 294,
          column: 18
        }
      },
      "81": {
        start: {
          line: 300,
          column: 32
        },
        end: {
          line: 300,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 28,
            column: 3
          }
        },
        loc: {
          start: {
            line: 28,
            column: 64
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 28
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 61,
            column: 3
          }
        },
        loc: {
          start: {
            line: 61,
            column: 68
          },
          end: {
            line: 118,
            column: 3
          }
        },
        line: 61
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 123,
            column: 2
          },
          end: {
            line: 123,
            column: 3
          }
        },
        loc: {
          start: {
            line: 123,
            column: 44
          },
          end: {
            line: 154,
            column: 3
          }
        },
        line: 123
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 159,
            column: 2
          },
          end: {
            line: 159,
            column: 3
          }
        },
        loc: {
          start: {
            line: 159,
            column: 42
          },
          end: {
            line: 167,
            column: 3
          }
        },
        line: 159
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 172,
            column: 2
          },
          end: {
            line: 172,
            column: 3
          }
        },
        loc: {
          start: {
            line: 172,
            column: 47
          },
          end: {
            line: 182,
            column: 3
          }
        },
        line: 172
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 187,
            column: 2
          },
          end: {
            line: 187,
            column: 3
          }
        },
        loc: {
          start: {
            line: 189,
            column: 51
          },
          end: {
            line: 208,
            column: 3
          }
        },
        line: 189
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 213,
            column: 2
          },
          end: {
            line: 213,
            column: 3
          }
        },
        loc: {
          start: {
            line: 213,
            column: 46
          },
          end: {
            line: 224,
            column: 3
          }
        },
        line: 213
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 230,
            column: 2
          },
          end: {
            line: 230,
            column: 3
          }
        },
        loc: {
          start: {
            line: 230,
            column: 71
          },
          end: {
            line: 253,
            column: 3
          }
        },
        line: 230
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 258,
            column: 2
          },
          end: {
            line: 258,
            column: 3
          }
        },
        loc: {
          start: {
            line: 258,
            column: 66
          },
          end: {
            line: 283,
            column: 3
          }
        },
        line: 258
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 288,
            column: 2
          },
          end: {
            line: 288,
            column: 3
          }
        },
        loc: {
          start: {
            line: 288,
            column: 56
          },
          end: {
            line: 296,
            column: 3
          }
        },
        line: 288
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 65,
            column: 6
          },
          end: {
            line: 70,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 6
          },
          end: {
            line: 70,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "1": {
        loc: {
          start: {
            line: 72,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "2": {
        loc: {
          start: {
            line: 81,
            column: 10
          },
          end: {
            line: 83,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 14
          },
          end: {
            line: 82,
            column: 20
          }
        }, {
          start: {
            line: 83,
            column: 14
          },
          end: {
            line: 83,
            column: 51
          }
        }],
        line: 81
      },
      "3": {
        loc: {
          start: {
            line: 81,
            column: 10
          },
          end: {
            line: 81,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 10
          },
          end: {
            line: 81,
            column: 30
          }
        }, {
          start: {
            line: 81,
            column: 34
          },
          end: {
            line: 81,
            column: 47
          }
        }],
        line: 81
      },
      "4": {
        loc: {
          start: {
            line: 91,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        }, {
          start: {
            line: 97,
            column: 13
          },
          end: {
            line: 109,
            column: 7
          }
        }],
        line: 91
      },
      "5": {
        loc: {
          start: {
            line: 99,
            column: 10
          },
          end: {
            line: 99,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 32
          },
          end: {
            line: 99,
            column: 44
          }
        }, {
          start: {
            line: 99,
            column: 47
          },
          end: {
            line: 99,
            column: 70
          }
        }],
        line: 99
      },
      "6": {
        loc: {
          start: {
            line: 115,
            column: 10
          },
          end: {
            line: 115,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 35
          },
          end: {
            line: 115,
            column: 48
          }
        }, {
          start: {
            line: 115,
            column: 51
          },
          end: {
            line: 115,
            column: 75
          }
        }],
        line: 115
      },
      "7": {
        loc: {
          start: {
            line: 130,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "8": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 143,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 142,
            column: 36
          }
        }, {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 143,
            column: 21
          }
        }],
        line: 141
      },
      "9": {
        loc: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "10": {
        loc: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "11": {
        loc: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "12": {
        loc: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 215,
            column: 6
          },
          end: {
            line: 216,
            column: 25
          }
        }, {
          start: {
            line: 217,
            column: 6
          },
          end: {
            line: 218,
            column: 26
          }
        }, {
          start: {
            line: 219,
            column: 6
          },
          end: {
            line: 220,
            column: 27
          }
        }, {
          start: {
            line: 221,
            column: 6
          },
          end: {
            line: 222,
            column: 42
          }
        }],
        line: 214
      },
      "13": {
        loc: {
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 236,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 236,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "14": {
        loc: {
          start: {
            line: 262,
            column: 6
          },
          end: {
            line: 264,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 6
          },
          end: {
            line: 264,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c3bf9976b74ca4cfadffd33545061a829667451c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2842pzl3r7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2842pzl3r7();
var BiometricService = function () {
  function BiometricService() {
    (0, _classCallCheck2.default)(this, BiometricService);
  }
  return (0, _createClass2.default)(BiometricService, [{
    key: "checkBiometricSupport",
    value: (function () {
      var _checkBiometricSupport = (0, _asyncToGenerator2.default)(function* () {
        cov_2842pzl3r7().f[0]++;
        cov_2842pzl3r7().s[2]++;
        try {
          var hasHardware = (cov_2842pzl3r7().s[3]++, yield LocalAuthentication.hasHardwareAsync());
          var isEnrolled = (cov_2842pzl3r7().s[4]++, yield LocalAuthentication.isEnrolledAsync());
          var supportedTypes = (cov_2842pzl3r7().s[5]++, yield LocalAuthentication.supportedAuthenticationTypesAsync());
          var capabilities = (cov_2842pzl3r7().s[6]++, {
            hasHardware: hasHardware,
            isEnrolled: isEnrolled,
            supportedTypes: supportedTypes
          });
          cov_2842pzl3r7().s[7]++;
          _core.logger.info("Biometric capabilities checked", {
            hasHardware: hasHardware,
            isEnrolled: isEnrolled,
            supportedTypes: supportedTypes.length
          });
          cov_2842pzl3r7().s[8]++;
          return capabilities;
        } catch (error) {
          cov_2842pzl3r7().s[9]++;
          _core.logger.error("Failed to check biometric support", {
            error: error
          });
          cov_2842pzl3r7().s[10]++;
          return {
            hasHardware: false,
            isEnrolled: false,
            supportedTypes: []
          };
        }
      });
      function checkBiometricSupport() {
        return _checkBiometricSupport.apply(this, arguments);
      }
      return checkBiometricSupport;
    }())
  }, {
    key: "authenticate",
    value: (function () {
      var _authenticate = (0, _asyncToGenerator2.default)(function* (reason) {
        cov_2842pzl3r7().f[1]++;
        cov_2842pzl3r7().s[11]++;
        try {
          var capabilities = (cov_2842pzl3r7().s[12]++, yield this.checkBiometricSupport());
          cov_2842pzl3r7().s[13]++;
          if (!capabilities.hasHardware) {
            cov_2842pzl3r7().b[0][0]++;
            cov_2842pzl3r7().s[14]++;
            return {
              success: false,
              error: "Biometric authentication not supported on this device"
            };
          } else {
            cov_2842pzl3r7().b[0][1]++;
          }
          cov_2842pzl3r7().s[15]++;
          if (!capabilities.isEnrolled) {
            cov_2842pzl3r7().b[1][0]++;
            cov_2842pzl3r7().s[16]++;
            return {
              success: false,
              error: "No biometric authentication methods enrolled"
            };
          } else {
            cov_2842pzl3r7().b[1][1]++;
          }
          var result = (cov_2842pzl3r7().s[17]++, yield LocalAuthentication.authenticateAsync({
            promptMessage: (cov_2842pzl3r7().b[3][0]++, reason !== undefined) && (cov_2842pzl3r7().b[3][1]++, reason !== "") ? (cov_2842pzl3r7().b[2][0]++, reason) : (cov_2842pzl3r7().b[2][1]++, "Authenticate to access PawfectMatch"),
            fallbackLabel: "Use PIN",
            cancelLabel: "Cancel",
            disableDeviceFallback: false
          }));
          var biometricType = (cov_2842pzl3r7().s[18]++, this.getBiometricType(capabilities.supportedTypes));
          cov_2842pzl3r7().s[19]++;
          if (result.success) {
            cov_2842pzl3r7().b[4][0]++;
            cov_2842pzl3r7().s[20]++;
            _core.logger.info("Biometric authentication successful", {
              biometricType: biometricType
            });
            cov_2842pzl3r7().s[21]++;
            return {
              success: true,
              biometricType: biometricType
            };
          } else {
            cov_2842pzl3r7().b[4][1]++;
            var error = (cov_2842pzl3r7().s[22]++, result.error !== "" ? (cov_2842pzl3r7().b[5][0]++, result.error) : (cov_2842pzl3r7().b[5][1]++, "Authentication failed"));
            cov_2842pzl3r7().s[23]++;
            _core.logger.warn("Biometric authentication failed", {
              error: error,
              biometricType: biometricType
            });
            cov_2842pzl3r7().s[24]++;
            return {
              success: false,
              error: error,
              biometricType: biometricType
            };
          }
        } catch (error) {
          cov_2842pzl3r7().s[25]++;
          _core.logger.error("Biometric authentication error", {
            error: error
          });
          cov_2842pzl3r7().s[26]++;
          return {
            success: false,
            error: error instanceof Error ? (cov_2842pzl3r7().b[6][0]++, error.message) : (cov_2842pzl3r7().b[6][1]++, "Unknown error occurred")
          };
        }
      });
      function authenticate(_x) {
        return _authenticate.apply(this, arguments);
      }
      return authenticate;
    }())
  }, {
    key: "enableBiometric",
    value: (function () {
      var _enableBiometric = (0, _asyncToGenerator2.default)(function* () {
        cov_2842pzl3r7().f[2]++;
        cov_2842pzl3r7().s[27]++;
        try {
          var authResult = (cov_2842pzl3r7().s[28]++, yield this.authenticate("Enable biometric authentication"));
          cov_2842pzl3r7().s[29]++;
          if (!authResult.success) {
            cov_2842pzl3r7().b[7][0]++;
            cov_2842pzl3r7().s[30]++;
            return false;
          } else {
            cov_2842pzl3r7().b[7][1]++;
          }
          cov_2842pzl3r7().s[31]++;
          yield SecureStore.setItemAsync(BiometricService.BIOMETRIC_ENABLED_KEY, "true");
          cov_2842pzl3r7().s[32]++;
          yield SecureStore.setItemAsync(BiometricService.BIOMETRIC_TYPE_KEY, authResult.biometricType !== undefined ? (cov_2842pzl3r7().b[8][0]++, authResult.biometricType) : (cov_2842pzl3r7().b[8][1]++, "unknown"));
          cov_2842pzl3r7().s[33]++;
          _core.logger.info("Biometric authentication enabled", {
            type: authResult.biometricType
          });
          cov_2842pzl3r7().s[34]++;
          return true;
        } catch (error) {
          cov_2842pzl3r7().s[35]++;
          _core.logger.error("Failed to enable biometric authentication", {
            error: error
          });
          cov_2842pzl3r7().s[36]++;
          return false;
        }
      });
      function enableBiometric() {
        return _enableBiometric.apply(this, arguments);
      }
      return enableBiometric;
    }())
  }, {
    key: "disableBiometric",
    value: (function () {
      var _disableBiometric = (0, _asyncToGenerator2.default)(function* () {
        cov_2842pzl3r7().f[3]++;
        cov_2842pzl3r7().s[37]++;
        try {
          cov_2842pzl3r7().s[38]++;
          yield SecureStore.deleteItemAsync(BiometricService.BIOMETRIC_ENABLED_KEY);
          cov_2842pzl3r7().s[39]++;
          yield SecureStore.deleteItemAsync(BiometricService.BIOMETRIC_TYPE_KEY);
          cov_2842pzl3r7().s[40]++;
          _core.logger.info("Biometric authentication disabled");
        } catch (error) {
          cov_2842pzl3r7().s[41]++;
          _core.logger.error("Failed to disable biometric authentication", {
            error: error
          });
        }
      });
      function disableBiometric() {
        return _disableBiometric.apply(this, arguments);
      }
      return disableBiometric;
    }())
  }, {
    key: "isBiometricEnabled",
    value: (function () {
      var _isBiometricEnabled = (0, _asyncToGenerator2.default)(function* () {
        cov_2842pzl3r7().f[4]++;
        cov_2842pzl3r7().s[42]++;
        try {
          var enabled = (cov_2842pzl3r7().s[43]++, yield SecureStore.getItemAsync(BiometricService.BIOMETRIC_ENABLED_KEY));
          cov_2842pzl3r7().s[44]++;
          return enabled === "true";
        } catch (error) {
          cov_2842pzl3r7().s[45]++;
          _core.logger.error("Failed to check biometric status", {
            error: error
          });
          cov_2842pzl3r7().s[46]++;
          return false;
        }
      });
      function isBiometricEnabled() {
        return _isBiometricEnabled.apply(this, arguments);
      }
      return isBiometricEnabled;
    }())
  }, {
    key: "getBiometricType",
    value: function getBiometricType(supportedTypes) {
      cov_2842pzl3r7().f[5]++;
      cov_2842pzl3r7().s[47]++;
      if (supportedTypes.includes(LocalAuthentication.AuthenticationType.FACIAL_RECOGNITION)) {
        cov_2842pzl3r7().b[9][0]++;
        cov_2842pzl3r7().s[48]++;
        return "facial";
      } else {
        cov_2842pzl3r7().b[9][1]++;
      }
      cov_2842pzl3r7().s[49]++;
      if (supportedTypes.includes(LocalAuthentication.AuthenticationType.FINGERPRINT)) {
        cov_2842pzl3r7().b[10][0]++;
        cov_2842pzl3r7().s[50]++;
        return "fingerprint";
      } else {
        cov_2842pzl3r7().b[10][1]++;
      }
      cov_2842pzl3r7().s[51]++;
      if (supportedTypes.includes(LocalAuthentication.AuthenticationType.IRIS)) {
        cov_2842pzl3r7().b[11][0]++;
        cov_2842pzl3r7().s[52]++;
        return "iris";
      } else {
        cov_2842pzl3r7().b[11][1]++;
      }
      cov_2842pzl3r7().s[53]++;
      return "unknown";
    }
  }, {
    key: "getBiometricTypeName",
    value: function getBiometricTypeName(type) {
      cov_2842pzl3r7().f[6]++;
      cov_2842pzl3r7().s[54]++;
      switch (type) {
        case "facial":
          cov_2842pzl3r7().b[12][0]++;
          cov_2842pzl3r7().s[55]++;
          return "Face ID";
        case "fingerprint":
          cov_2842pzl3r7().b[12][1]++;
          cov_2842pzl3r7().s[56]++;
          return "Touch ID";
        case "iris":
          cov_2842pzl3r7().b[12][2]++;
          cov_2842pzl3r7().s[57]++;
          return "Iris Scan";
        default:
          cov_2842pzl3r7().b[12][3]++;
          cov_2842pzl3r7().s[58]++;
          return "Biometric Authentication";
      }
    }
  }, {
    key: "encryptWithBiometric",
    value: (function () {
      var _encryptWithBiometric = (0, _asyncToGenerator2.default)(function* (data, key) {
        cov_2842pzl3r7().f[7]++;
        cov_2842pzl3r7().s[59]++;
        try {
          var authResult = (cov_2842pzl3r7().s[60]++, yield this.authenticate("Encrypt sensitive data"));
          cov_2842pzl3r7().s[61]++;
          if (!authResult.success) {
            cov_2842pzl3r7().b[13][0]++;
            cov_2842pzl3r7().s[62]++;
            throw new Error("Biometric authentication required for encryption");
          } else {
            cov_2842pzl3r7().b[13][1]++;
          }
          cov_2842pzl3r7().s[63]++;
          yield SecureStore.setItemAsync(key, data, {
            requireAuthentication: true,
            authenticationPrompt: "Authenticate to access encrypted data",
            showPrompt: true
          });
          cov_2842pzl3r7().s[64]++;
          _core.logger.info("Data encrypted securely with biometric authentication", {
            key: key,
            biometricType: authResult.biometricType
          });
        } catch (error) {
          cov_2842pzl3r7().s[65]++;
          _core.logger.error("Failed to encrypt data with biometric protection", {
            error: error
          });
          cov_2842pzl3r7().s[66]++;
          throw error;
        }
      });
      function encryptWithBiometric(_x2, _x3) {
        return _encryptWithBiometric.apply(this, arguments);
      }
      return encryptWithBiometric;
    }())
  }, {
    key: "decryptWithBiometric",
    value: (function () {
      var _decryptWithBiometric = (0, _asyncToGenerator2.default)(function* (key) {
        cov_2842pzl3r7().f[8]++;
        cov_2842pzl3r7().s[67]++;
        try {
          var authResult = (cov_2842pzl3r7().s[68]++, yield this.authenticate("Decrypt sensitive data"));
          cov_2842pzl3r7().s[69]++;
          if (!authResult.success) {
            cov_2842pzl3r7().b[14][0]++;
            cov_2842pzl3r7().s[70]++;
            throw new Error("Biometric authentication required");
          } else {
            cov_2842pzl3r7().b[14][1]++;
          }
          var decryptedData = (cov_2842pzl3r7().s[71]++, yield SecureStore.getItemAsync(key, {
            requireAuthentication: true,
            authenticationPrompt: "Authenticate to decrypt sensitive data",
            showPrompt: true
          }));
          cov_2842pzl3r7().s[72]++;
          _core.logger.info("Data decrypted successfully with biometric authentication", {
            key: key,
            biometricType: authResult.biometricType
          });
          cov_2842pzl3r7().s[73]++;
          return decryptedData;
        } catch (error) {
          cov_2842pzl3r7().s[74]++;
          _core.logger.error("Failed to decrypt biometric data", {
            error: error
          });
          cov_2842pzl3r7().s[75]++;
          throw error;
        }
      });
      function decryptWithBiometric(_x4) {
        return _decryptWithBiometric.apply(this, arguments);
      }
      return decryptWithBiometric;
    }())
  }, {
    key: "removeBiometricData",
    value: (function () {
      var _removeBiometricData = (0, _asyncToGenerator2.default)(function* (key) {
        cov_2842pzl3r7().f[9]++;
        cov_2842pzl3r7().s[76]++;
        try {
          cov_2842pzl3r7().s[77]++;
          yield SecureStore.deleteItemAsync(key);
          cov_2842pzl3r7().s[78]++;
          _core.logger.info("Biometric-protected data removed", {
            key: key
          });
        } catch (error) {
          cov_2842pzl3r7().s[79]++;
          _core.logger.error("Failed to remove biometric data", {
            error: error
          });
          cov_2842pzl3r7().s[80]++;
          throw error;
        }
      });
      function removeBiometricData(_x5) {
        return _removeBiometricData.apply(this, arguments);
      }
      return removeBiometricData;
    }())
  }]);
}();
BiometricService.BIOMETRIC_ENABLED_KEY = (cov_2842pzl3r7().s[0]++, "biometric_enabled");
BiometricService.BIOMETRIC_TYPE_KEY = (cov_2842pzl3r7().s[1]++, "biometric_type");
var biometricService = exports.biometricService = (cov_2842pzl3r7().s[81]++, new BiometricService());
var _default = exports.default = biometricService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,