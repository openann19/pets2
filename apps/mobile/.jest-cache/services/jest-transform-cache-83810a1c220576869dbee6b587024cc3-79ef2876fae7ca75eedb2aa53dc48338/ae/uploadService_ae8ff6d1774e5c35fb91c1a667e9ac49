598d985d1ce5ff818d67f715193005fe
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.uploadImageAsync = uploadImageAsync;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var API_URL = process.env.EXPO_PUBLIC_API_URL || process.env.API_URL || "";
function uploadImageAsync(_x) {
  return _uploadImageAsync.apply(this, arguments);
}
function _uploadImageAsync() {
  _uploadImageAsync = (0, _asyncToGenerator2.default)(function* (localUri) {
    var contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "image/jpeg";
    var presignRes = yield fetch(`${API_URL}/api/upload/presign`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        contentType: contentType
      })
    });
    if (!presignRes.ok) throw new Error("Failed to get presigned URL");
    var presign = yield presignRes.json();
    var blob = yield (yield fetch(localUri)).blob();
    var putRes = yield fetch(presign.url, {
      method: "PUT",
      headers: {
        "Content-Type": contentType
      },
      body: blob
    });
    if (!putRes.ok) throw new Error("upload failed");
    return presign.publicUrl;
  });
  return _uploadImageAsync.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBUElfVVJMIiwicHJvY2VzcyIsImVudiIsIkVYUE9fUFVCTElDX0FQSV9VUkwiLCJ1cGxvYWRJbWFnZUFzeW5jIiwiX3giLCJfdXBsb2FkSW1hZ2VBc3luYyIsImFwcGx5IiwiYXJndW1lbnRzIiwiX2FzeW5jVG9HZW5lcmF0b3IyIiwiZGVmYXVsdCIsImxvY2FsVXJpIiwiY29udGVudFR5cGUiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJwcmVzaWduUmVzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayIsIkVycm9yIiwicHJlc2lnbiIsImpzb24iLCJibG9iIiwicHV0UmVzIiwidXJsIiwicHVibGljVXJsIl0sInNvdXJjZXMiOlsidXBsb2FkU2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBUElfVVJMID0gcHJvY2Vzcy5lbnYuRVhQT19QVUJMSUNfQVBJX1VSTCB8fCBwcm9jZXNzLmVudi5BUElfVVJMIHx8IFwiXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGxvYWRJbWFnZUFzeW5jKGxvY2FsVXJpOiBzdHJpbmcsIGNvbnRlbnRUeXBlID0gXCJpbWFnZS9qcGVnXCIpOiBQcm9taXNlPHN0cmluZz4ge1xuICAvLyBHZXQgcHJlc2lnbmVkIFVSTCBmcm9tIHNlcnZlclxuICBjb25zdCBwcmVzaWduUmVzID0gYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0vYXBpL3VwbG9hZC9wcmVzaWduYCwge1xuICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgY29udGVudFR5cGUgfSksXG4gIH0pO1xuICBcbiAgaWYgKCFwcmVzaWduUmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZ2V0IHByZXNpZ25lZCBVUkxcIik7XG4gIGNvbnN0IHByZXNpZ24gPSBhd2FpdCBwcmVzaWduUmVzLmpzb24oKTtcbiAgXG4gIC8vIFJlYWQgdGhlIGZpbGUgYXMgYmxvYlxuICBjb25zdCBibG9iID0gYXdhaXQgKGF3YWl0IGZldGNoKGxvY2FsVXJpKSkuYmxvYigpO1xuICBcbiAgLy8gVXBsb2FkIHRvIFMzIHVzaW5nIHByZXNpZ25lZCBVUkxcbiAgY29uc3QgcHV0UmVzID0gYXdhaXQgZmV0Y2gocHJlc2lnbi51cmwsIHtcbiAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBjb250ZW50VHlwZSB9LFxuICAgIGJvZHk6IGJsb2IsXG4gIH0pO1xuICBcbiAgaWYgKCFwdXRSZXMub2spIHRocm93IG5ldyBFcnJvcihcInVwbG9hZCBmYWlsZWRcIik7XG4gIHJldHVybiBwcmVzaWduLnB1YmxpY1VybCBhcyBzdHJpbmc7XG59XG5cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxtQkFBbUIsSUFBSUYsT0FBTyxDQUFDQyxHQUFHLENBQUNGLE9BQU8sSUFBSSxFQUFFO0FBQUMsU0FFdkRJLGdCQUFnQkEsQ0FBQUMsRUFBQTtFQUFBLE9BQUFDLGlCQUFBLENBQUFDLEtBQUEsT0FBQUMsU0FBQTtBQUFBO0FBQUEsU0FBQUYsa0JBQUE7RUFBQUEsaUJBQUEsT0FBQUcsa0JBQUEsQ0FBQUMsT0FBQSxFQUEvQixXQUFnQ0MsUUFBZ0IsRUFBK0M7SUFBQSxJQUE3Q0MsV0FBVyxHQUFBSixTQUFBLENBQUFLLE1BQUEsUUFBQUwsU0FBQSxRQUFBTSxTQUFBLEdBQUFOLFNBQUEsTUFBRyxZQUFZO0lBRWpGLElBQU1PLFVBQVUsU0FBU0MsS0FBSyxDQUFDLEdBQUdoQixPQUFPLHFCQUFxQixFQUFFO01BQzlEaUIsTUFBTSxFQUFFLE1BQU07TUFDZEMsT0FBTyxFQUFFO1FBQUUsY0FBYyxFQUFFO01BQW1CLENBQUM7TUFDL0NDLElBQUksRUFBRUMsSUFBSSxDQUFDQyxTQUFTLENBQUM7UUFBRVQsV0FBVyxFQUFYQTtNQUFZLENBQUM7SUFDdEMsQ0FBQyxDQUFDO0lBRUYsSUFBSSxDQUFDRyxVQUFVLENBQUNPLEVBQUUsRUFBRSxNQUFNLElBQUlDLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQztJQUNsRSxJQUFNQyxPQUFPLFNBQVNULFVBQVUsQ0FBQ1UsSUFBSSxDQUFDLENBQUM7SUFHdkMsSUFBTUMsSUFBSSxTQUFTLE9BQU9WLEtBQUssQ0FBQ0wsUUFBUSxDQUFDLEVBQUVlLElBQUksQ0FBQyxDQUFDO0lBR2pELElBQU1DLE1BQU0sU0FBU1gsS0FBSyxDQUFDUSxPQUFPLENBQUNJLEdBQUcsRUFBRTtNQUN0Q1gsTUFBTSxFQUFFLEtBQUs7TUFDYkMsT0FBTyxFQUFFO1FBQUUsY0FBYyxFQUFFTjtNQUFZLENBQUM7TUFDeENPLElBQUksRUFBRU87SUFDUixDQUFDLENBQUM7SUFFRixJQUFJLENBQUNDLE1BQU0sQ0FBQ0wsRUFBRSxFQUFFLE1BQU0sSUFBSUMsS0FBSyxDQUFDLGVBQWUsQ0FBQztJQUNoRCxPQUFPQyxPQUFPLENBQUNLLFNBQVM7RUFDMUIsQ0FBQztFQUFBLE9BQUF2QixpQkFBQSxDQUFBQyxLQUFBLE9BQUFDLFNBQUE7QUFBQSIsImlnbm9yZUxpc3QiOltdfQ==