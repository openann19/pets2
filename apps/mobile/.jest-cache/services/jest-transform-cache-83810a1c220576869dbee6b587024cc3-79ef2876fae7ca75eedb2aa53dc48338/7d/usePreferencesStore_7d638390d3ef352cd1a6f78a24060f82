d63a8e0168544c22da2e265cf54d1eaf
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._usePreferencesStore = void 0;
var zustand_1 = require("zustand");
var middleware_1 = require("zustand/middleware");
var immer_1 = require("zustand/middleware/immer");
var defaultPreferences = {
  discovery: {
    maxDistance: 25,
    ageRange: {
      min: 0,
      max: 20
    },
    species: ['dog', 'cat'],
    intents: ['playdate', 'adoption', 'mating', 'all'],
    breeds: [],
    size: ['tiny', 'small', 'medium', 'large', 'giant'],
    gender: ['male', 'female', 'unknown']
  },
  notifications: {
    email: true,
    push: true,
    matches: true,
    messages: true,
    marketing: false
  },
  appearance: {
    theme: 'system',
    reducedMotion: false,
    fontSize: 'medium',
    highContrast: false
  },
  privacy: {
    showLocation: true,
    showOnlineStatus: true,
    showLastActive: true,
    allowLocationTracking: true
  }
};
exports._usePreferencesStore = (0, zustand_1.create)()((0, middleware_1.persist)((0, immer_1.immer)(function (set) {
  return _objectSpread(_objectSpread({}, defaultPreferences), {}, {
    updateDiscoveryPreferences: function updateDiscoveryPreferences(preferences) {
      set(function (state) {
        state.discovery = _objectSpread(_objectSpread({}, state.discovery), preferences);
        return state;
      });
    },
    updateNotificationSettings: function updateNotificationSettings(settings) {
      set(function (state) {
        state.notifications = _objectSpread(_objectSpread({}, state.notifications), settings);
        return state;
      });
    },
    updateAppearanceSettings: function updateAppearanceSettings(settings) {
      set(function (state) {
        state.appearance = _objectSpread(_objectSpread({}, state.appearance), settings);
        return state;
      });
    },
    updatePrivacySettings: function updatePrivacySettings(settings) {
      set(function (state) {
        state.privacy = _objectSpread(_objectSpread({}, state.privacy), settings);
        return state;
      });
    },
    resetPreferences: function resetPreferences() {
      set(function () {
        return _objectSpread({}, defaultPreferences);
      });
    }
  });
}), {
  name: 'pawfectmatch-preferences'
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,