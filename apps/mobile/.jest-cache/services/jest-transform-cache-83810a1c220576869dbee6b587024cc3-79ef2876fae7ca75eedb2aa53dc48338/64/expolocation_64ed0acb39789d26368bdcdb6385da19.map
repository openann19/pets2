{"version":3,"names":["Accuracy","exports","Lowest","Low","Balanced","High","Highest","BestForNavigation","getCurrentPositionAsync","jest","fn","mockResolvedValue","coords","latitude","longitude","altitude","accuracy","altitudeAccuracy","heading","speed","timestamp","Date","now","requestForegroundPermissionsAsync","status","granted","canAskAgain","getForegroundPermissionsAsync","watchPositionAsync","mockReturnValue","remove","GeofencingEventType","Enter","Exit","GeofencingRegionState","Unknown","Inside","Outside","Location","_default","default"],"sources":["expo-location.ts"],"sourcesContent":["// Mock for expo-location\nconst Accuracy = {\n  Lowest: 1,\n  Low: 2,\n  Balanced: 3,\n  High: 4,\n  Highest: 5,\n  BestForNavigation: 6,\n};\n\nconst getCurrentPositionAsync = jest.fn().mockResolvedValue({\n  coords: {\n    latitude: 40.7128,\n    longitude: -74.0060,\n    altitude: null,\n    accuracy: 5,\n    altitudeAccuracy: null,\n    heading: null,\n    speed: null,\n  },\n  timestamp: Date.now(),\n});\n\nconst requestForegroundPermissionsAsync = jest.fn().mockResolvedValue({\n  status: 'granted',\n  granted: true,\n  canAskAgain: true,\n});\n\nconst getForegroundPermissionsAsync = jest.fn().mockResolvedValue({\n  status: 'granted',\n  granted: true,\n  canAskAgain: true,\n});\n\nconst watchPositionAsync = jest.fn().mockReturnValue({\n  remove: jest.fn(),\n});\n\nconst GeofencingEventType = {\n  Enter: 'enter',\n  Exit: 'exit',\n};\n\nconst GeofencingRegionState = {\n  Unknown: 'unknown',\n  Inside: 'inside',\n  Outside: 'outside',\n};\n\n// Export both as default and as named exports\nconst Location = {\n  Accuracy,\n  getCurrentPositionAsync,\n  requestForegroundPermissionsAsync,\n  getForegroundPermissionsAsync,\n  watchPositionAsync,\n  GeofencingEventType,\n  GeofencingRegionState,\n};\n\nexport default Location;\n\n// Also export as named exports for namespace imports\nexport {\n  Accuracy,\n  getCurrentPositionAsync,\n  requestForegroundPermissionsAsync,\n  getForegroundPermissionsAsync,\n  watchPositionAsync,\n  GeofencingEventType,\n  GeofencingRegionState,\n};\n"],"mappings":";;;;;;AACA,IAAMA,QAAQ,GAAAC,OAAA,CAAAD,QAAA,GAAG;EACfE,MAAM,EAAE,CAAC;EACTC,GAAG,EAAE,CAAC;EACNC,QAAQ,EAAE,CAAC;EACXC,IAAI,EAAE,CAAC;EACPC,OAAO,EAAE,CAAC;EACVC,iBAAiB,EAAE;AACrB,CAAC;AAED,IAAMC,uBAAuB,GAAAP,OAAA,CAAAO,uBAAA,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;EAC1DC,MAAM,EAAE;IACNC,QAAQ,EAAE,OAAO;IACjBC,SAAS,EAAE,CAAC,OAAO;IACnBC,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE,CAAC;IACXC,gBAAgB,EAAE,IAAI;IACtBC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE;EACT,CAAC;EACDC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;AACtB,CAAC,CAAC;AAEF,IAAMC,iCAAiC,GAAAtB,OAAA,CAAAsB,iCAAA,GAAGd,IAAI,CAACC,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;EACpEa,MAAM,EAAE,SAAS;EACjBC,OAAO,EAAE,IAAI;EACbC,WAAW,EAAE;AACf,CAAC,CAAC;AAEF,IAAMC,6BAA6B,GAAA1B,OAAA,CAAA0B,6BAAA,GAAGlB,IAAI,CAACC,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;EAChEa,MAAM,EAAE,SAAS;EACjBC,OAAO,EAAE,IAAI;EACbC,WAAW,EAAE;AACf,CAAC,CAAC;AAEF,IAAME,kBAAkB,GAAA3B,OAAA,CAAA2B,kBAAA,GAAGnB,IAAI,CAACC,EAAE,CAAC,CAAC,CAACmB,eAAe,CAAC;EACnDC,MAAM,EAAErB,IAAI,CAACC,EAAE,CAAC;AAClB,CAAC,CAAC;AAEF,IAAMqB,mBAAmB,GAAA9B,OAAA,CAAA8B,mBAAA,GAAG;EAC1BC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE;AACR,CAAC;AAED,IAAMC,qBAAqB,GAAAjC,OAAA,CAAAiC,qBAAA,GAAG;EAC5BC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBC,OAAO,EAAE;AACX,CAAC;AAGD,IAAMC,QAAQ,GAAG;EACftC,QAAQ,EAARA,QAAQ;EACRQ,uBAAuB,EAAvBA,uBAAuB;EACvBe,iCAAiC,EAAjCA,iCAAiC;EACjCI,6BAA6B,EAA7BA,6BAA6B;EAC7BC,kBAAkB,EAAlBA,kBAAkB;EAClBG,mBAAmB,EAAnBA,mBAAmB;EACnBG,qBAAqB,EAArBA;AACF,CAAC;AAAC,IAAAK,QAAA,GAAAtC,OAAA,CAAAuC,OAAA,GAEaF,QAAQ","ignoreList":[]}