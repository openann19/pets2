{"version":3,"names":["_reactNativeSslPinning","require","_logger","_excluded","_ref","cov_2703rsxm5n","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","ownKeys","r","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","BASE_URL","process","env","__DEV__","SSL_CERTIFICATES","algorithm","value","localhost","SecureAPIService","_classCallCheck2","authToken","_createClass2","key","setAuthToken","token","clearAuthToken","getSSLConfig","domain","certs","sslPinning","Error","_request","_asyncToGenerator2","endpoint","_ref3","_ref4","_ref5","_lastError","_ref6","options","url","URL","hostname","_ref2","_ref2$timeout","timeout","_ref2$retries","retries","_ref2$retryDelay","retryDelay","fetchOptions","_objectWithoutProperties2","headers","sslConfig","requestConfig","method","body","String","timeoutInterval","lastError","_loop","attempt","logger","debug","response","sslFetch","status","ok","statusText","data","json","v","error","warn","maxRetries","Promise","resolve","setTimeout","_ret","SecureAPIError","message","request","_x","_get","config","get","_x2","_x3","_post","_ref7","JSON","stringify","post","_x4","_x5","_x6","_put","_ref8","put","_x7","_x8","_x9","_delete2","delete","_x0","_x1","_validateCertificate","testConfig","validateCertificate","_x10","getSecurityMetrics","sslEnabled","certificatePinning","supportedDomains","getInstance","instance","exports","_Error","originalError","_this","_inherits2","_wrapNativeSuper2","secureAPI","_default"],"sources":["SecureAPIService.ts"],"sourcesContent":["/**\n * Secure API Service with SSL Pinning for PawfectMatch Mobile App\n * Provides certificate pinning and secure HTTP communication\n */\nimport { fetch as sslFetch } from \"react-native-ssl-pinning\";\nimport { logger } from \"../services/logger\";\nimport type { SSLFetch, SSLResponse, SSLPinningConfig } from \"../types/ssl-pinning\";\n\nconst BASE_URL =\n  process.env[\"EXPO_PUBLIC_API_URL\"] ??\n  (__DEV__ ? \"http://localhost:3001/api\" : \"https://api.pawfectmatch.com/api\");\n\n// Certificate fingerprints for SSL pinning\n// In production, these should be obtained from your server certificates\nconst SSL_CERTIFICATES: Record<\n  string,\n  Array<{ algorithm: string; value: string }> | undefined\n> = {\n  // Example certificate fingerprints (replace with your actual certificates)\n  \"api.pawfectmatch.com\": [\n    {\n      algorithm: \"sha256\",\n      value: \"PLACEHOLDER_CERTIFICATE_FINGERPRINT_SHA256\",\n    },\n    {\n      algorithm: \"sha1\",\n      value: \"PLACEHOLDER_CERTIFICATE_FINGERPRINT_SHA1\",\n    },\n  ],\n  // Development certificates\n  localhost: undefined,\n};\n\ninterface SSLConfig {\n  timeout?: number;\n  retries?: number;\n  retryDelay?: number;\n}\n\ninterface SSLRequestConfig {\n  method: string;\n  headers: Record<string, string>;\n  body?: string;\n  timeoutInterval: number;\n  sslPinning: {\n    certs: string | Array<{ algorithm: string; value: string }>;\n  };\n}\n\nclass SecureAPIService {\n  private static instance: SecureAPIService | null = null;\n  private authToken: string | null = null;\n\n  private constructor() {}\n\n  static getInstance(): SecureAPIService {\n    if (SecureAPIService.instance === null) {\n      SecureAPIService.instance = new SecureAPIService();\n    }\n    return SecureAPIService.instance;\n  }\n\n  /**\n   * Set authentication token\n   */\n  setAuthToken(token: string | null): void {\n    this.authToken = token;\n  }\n\n  /**\n   * Clear authentication token\n   */\n  clearAuthToken(): void {\n    this.authToken = null;\n  }\n\n  /**\n   * Get SSL configuration for a domain\n   */\n  private getSSLConfig(domain: string): {\n    sslPinning: { certs: string | Array<{ algorithm: string; value: string }> };\n  } {\n    const certs = SSL_CERTIFICATES[domain];\n    if (certs === undefined || certs.length === 0) {\n      // In development, allow untrusted certificates\n      if (__DEV__) {\n        return {\n          sslPinning: {\n            certs: \"public\",\n          },\n        };\n      }\n      throw new Error(`No SSL certificates configured for domain: ${domain}`);\n    }\n\n    return {\n      sslPinning: {\n        certs: certs,\n      },\n    };\n  }\n\n  /**\n   * Make a secure HTTP request with SSL pinning\n   */\n  async request<T = unknown>(\n    endpoint: string,\n    options: RequestInit & SSLConfig = {},\n  ): Promise<T> {\n    const url = `${BASE_URL}${endpoint}`;\n    const domain = new URL(url).hostname;\n\n    const {\n      timeout = 30000,\n      retries = 3,\n      retryDelay = 1000,\n      ...fetchOptions\n    } = options;\n\n    // Build headers\n    const headers: Record<string, string> = {\n      \"Content-Type\": \"application/json\",\n      ...(fetchOptions.headers as Record<string, string> | undefined),\n    };\n\n    // Add auth token if available\n    if (this.authToken !== null) {\n      headers[\"Authorization\"] = `Bearer ${this.authToken}`;\n    }\n\n    // SSL pinning configuration\n    const sslConfig = this.getSSLConfig(domain);\n\n    const requestConfig: SSLRequestConfig = {\n      method: fetchOptions.method ?? \"GET\",\n      headers,\n      body: fetchOptions.body ? String(fetchOptions.body) : undefined,\n      timeoutInterval: timeout,\n      ...sslConfig,\n    };\n\n    let lastError: Error | null = null;\n\n    // Retry logic\n    for (let attempt = 0; attempt < retries; attempt++) {\n      try {\n        logger.debug(\n          `Secure API request attempt ${String(attempt + 1)}/${String(retries)}`,\n          {\n            url,\n            method: requestConfig.method,\n          },\n        );\n\n        const response = (await sslFetch(url, {\n          ...requestConfig,\n          method: requestConfig.method as \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n        } as any)) as SSLResponse;\n        const status = response.status;\n        const ok = status >= 200 && status < 300;\n        if (!ok) {\n          const statusText = response.statusText || \"\";\n          throw new Error(`HTTP ${String(status)}: ${statusText}`);\n        }\n\n        const data = (await response.json()) as T;\n        logger.debug(\"Secure API request successful\", {\n          url,\n          status: response.status,\n        });\n\n        return data;\n      } catch (error) {\n        lastError = error instanceof Error ? error : new Error(String(error));\n\n        logger.warn(\n          `Secure API request attempt ${String(attempt + 1)} failed`,\n          {\n            url,\n            error: lastError,\n            attempt: attempt + 1,\n            maxRetries: retries,\n          },\n        );\n\n        // If not the last attempt, wait before retrying\n        if (attempt < retries - 1) {\n          await new Promise<void>((resolve) => {\n            setTimeout(() => { resolve(); }, retryDelay * (attempt + 1));\n          });\n        }\n      }\n    }\n\n    // All retries failed\n    logger.error(\"Secure API request failed after all retries\", {\n      url,\n      error: lastError ?? undefined,\n      retries,\n    });\n\n    throw new SecureAPIError(\n      `Request failed after ${String(retries)} attempts: ${lastError?.message ?? \"Unknown error\"}`,\n      lastError ?? undefined,\n    );\n  }\n\n  /**\n   * GET request\n   */\n  async get<T = unknown>(endpoint: string, config?: SSLConfig): Promise<T> {\n    return this.request<T>(endpoint, { ...config, method: \"GET\" });\n  }\n\n  /**\n   * POST request\n   */\n  async post<T = unknown>(\n    endpoint: string,\n    data?: unknown,\n    config?: SSLConfig,\n  ): Promise<T> {\n    return this.request<T>(endpoint, {\n      ...(config ?? {}),\n      method: \"POST\",\n      body:\n        data !== null && data !== undefined ? JSON.stringify(data) : undefined,\n    });\n  }\n\n  /**\n   * PUT request\n   */\n  async put<T = unknown>(\n    endpoint: string,\n    data?: unknown,\n    config?: SSLConfig,\n  ): Promise<T> {\n    return this.request<T>(endpoint, {\n      ...(config ?? {}),\n      method: \"PUT\",\n      body:\n        data !== null && data !== undefined ? JSON.stringify(data) : undefined,\n    });\n  }\n\n  /**\n   * DELETE request\n   */\n  async delete<T = unknown>(endpoint: string, config?: SSLConfig): Promise<T> {\n    return this.request<T>(endpoint, { ...config, method: \"DELETE\" });\n  }\n\n  /**\n   * Check SSL certificate validity\n   */\n  async validateCertificate(domain: string): Promise<boolean> {\n    try {\n      const sslConfig = this.getSSLConfig(domain);\n      // Perform a test request to validate SSL pinning\n      const testConfig: SSLPinningConfig = {\n        method: \"HEAD\",\n        headers: {},\n        timeoutInterval: 5000,\n        ...sslConfig,\n      };\n      await sslFetch(`https://${domain}`, testConfig as any);\n      return true;\n    } catch (error) {\n      logger.error(\"SSL certificate validation failed\", {\n        domain,\n        error: error instanceof Error ? error : new Error(String(error)),\n      });\n      return false;\n    }\n  }\n\n  /**\n   * Get security metrics\n   */\n  getSecurityMetrics(): {\n    sslEnabled: boolean;\n    certificatePinning: boolean;\n    supportedDomains: string[];\n  } {\n    return {\n      sslEnabled: true,\n      certificatePinning: true,\n      supportedDomains: Object.keys(SSL_CERTIFICATES),\n    };\n  }\n}\n\n/**\n * Custom error class for secure API errors\n */\nexport class SecureAPIError extends Error {\n  public originalError?: Error;\n\n  constructor(message: string, originalError?: Error) {\n    super(message);\n    this.name = \"SecureAPIError\";\n    this.originalError = originalError;\n  }\n}\n\n// Export singleton instance\nexport const secureAPI = SecureAPIService.getInstance();\n\n// Export types\nexport type { SSLConfig };\nexport default secureAPI;\n"],"mappings":"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","ignoreList":[]}