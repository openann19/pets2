{"version":3,"names":["Location","_interopRequireWildcard","require","_reactNative","_core","_socket","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","API_URL","process","env","EXPO_PUBLIC_API_URL","getCurrentLocation","_getCurrentLocation","_asyncToGenerator2","_yield$Location$reque","requestForegroundPermissionsAsync","status","Error","pos","getCurrentPositionAsync","accuracy","Accuracy","High","lat","coords","latitude","lng","longitude","startPetActivity","_x","_startPetActivity","data","_data$shareToMap","_data$radiusMeters","loc","body","petId","activity","message","shareToMap","location","radius","radiusMeters","device","Platform","OS","res","fetch","method","headers","JSON","stringify","ok","text","result","json","record","socketClient","emit","_id","logger","info","endPetActivity","_x2","_endPetActivity","activityId","getActivityHistory","_x3","_getActivityHistory","encodeURIComponent"],"sources":["petActivityService.ts"],"sourcesContent":["import * as Location from \"expo-location\";\nimport { Platform } from \"react-native\";\nimport { logger } from \"@pawfectmatch/core\";\nimport { socketClient } from \"./socket\";\n\nconst API_URL = process.env.EXPO_PUBLIC_API_URL || process.env.API_URL || \"\";\n\nexport type ActivityKind =\n  | \"walk\"\n  | \"play\"\n  | \"feeding\"\n  | \"rest\"\n  | \"training\"\n  | \"lost_pet\";\n\nexport interface StartActivityPayload {\n  petId: string;\n  activity: ActivityKind;\n  message?: string;\n  shareToMap?: boolean;\n  radiusMeters?: number;\n}\n\nexport interface ActivityRecord {\n  _id: string;\n  petId: string;\n  activity: ActivityKind;\n  message?: string;\n  lat: number;\n  lng: number;\n  radius?: number;\n  createdAt: string;\n  updatedAt: string;\n  active: boolean;\n}\n\nasync function getCurrentLocation() {\n  const { status } = await Location.requestForegroundPermissionsAsync();\n  if (status !== \"granted\") {\n    throw new Error(\"Location permission not granted\");\n  }\n  const pos = await Location.getCurrentPositionAsync({ accuracy: Location.Accuracy.High });\n  return { lat: pos.coords.latitude, lng: pos.coords.longitude };\n}\n\nexport async function startPetActivity(data: StartActivityPayload): Promise<ActivityRecord> {\n  const loc = await getCurrentLocation();\n  const body = {\n    petId: data.petId,\n    activity: data.activity,\n    message: data.message || \"\",\n    shareToMap: data.shareToMap ?? true,\n    location: loc,\n    radius: data.radiusMeters ?? 500,\n    device: Platform.OS,\n  };\n\n  // REST (authoritative) + socket (realtime)\n  const res = await fetch(`${API_URL}/api/pets/activity/start`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(body),\n  });\n  if (!res.ok) {\n    const t = await res.text();\n    throw new Error(`startPetActivity failed: ${res.status} ${t}`);\n  }\n  const result = await res.json();\n  const record: ActivityRecord = result.data;\n\n  // Realtime broadcast\n  if (socketClient) {\n    socketClient.emit(\"activity:start\", { ...body, _id: record._id });\n  }\n\n  logger.info(\"Activity started\", { record });\n  return record;\n}\n\nexport async function endPetActivity(activityId: string): Promise<ActivityRecord> {\n  const res = await fetch(`${API_URL}/api/pets/activity/end`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ activityId }),\n  });\n  if (!res.ok) {\n    const t = await res.text();\n    throw new Error(`endPetActivity failed: ${res.status} ${t}`);\n  }\n  const result = await res.json();\n  const record: ActivityRecord = result.data;\n\n  if (socketClient) {\n    socketClient.emit(\"activity:end\", { _id: record._id });\n  }\n  logger.info(\"Activity ended\", { record });\n\n  return record;\n}\n\nexport async function getActivityHistory(petId: string): Promise<ActivityRecord[]> {\n  const res = await fetch(`${API_URL}/api/pets/activity/history?petId=${encodeURIComponent(petId)}`);\n  if (!res.ok) {\n    const t = await res.text();\n    throw new Error(`getActivityHistory failed: ${res.status} ${t}`);\n  }\n  const result = await res.json();\n  return result.data as ActivityRecord[];\n}\n\n"],"mappings":"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","ignoreList":[]}