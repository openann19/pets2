{"version":3,"names":["global","TextEncoder","cov_26bgrpjdgj","b","require","s","TextDecoder","Alert","alert","jest","fn","Platform","OS","Version","select","obj","f","ios","default","isTV","isTesting","Dimensions","get","width","height","scale","fontScale","addEventListener","removeEventListener","Linking","openURL","Promise","resolve","canOpenURL","getInitialURL","remove","Keyboard","addListener","removeListener","removeAllListeners","dismiss","scheduleLayoutAnimation","AnimatedMock","Animated","module","Object","defineProperty","configurable","testStartMemory","beforeEach","clearAllMocks","gc","process","memoryUsage","heapUsed","afterEach","isMockFunction","setTimeout","setInterval","timerCount","getTimerCount","runOnlyPendingTimers","e","clearAllTimers","useRealTimers","testEndMemory","memoryGrowth","console","warn","toFixed"],"sources":["jest.setup.core.ts"],"sourcesContent":["/**\n * Core Jest setup - Essential polyfills and global setup\n * Minimal setup loaded for all tests\n */\n\n// Polyfill for TextEncoder/TextDecoder (Node.js 18+ has it built-in, but Jest may not)\nglobal.TextEncoder = global.TextEncoder || require('util').TextEncoder;\nglobal.TextDecoder = global.TextDecoder || require('util').TextDecoder;\n\n// Global React Native mocks (to prevent tests from mocking react-native directly)\n(global as any).Alert = {\n  alert: jest.fn(),\n};\n\n(global as any).Platform = {\n  OS: 'ios',\n  Version: '14.0',\n  select: jest.fn((obj) => obj.ios || obj.default),\n  isTV: false,\n  isTesting: true,\n};\n\n(global as any).Dimensions = {\n  get: jest.fn(() => ({ width: 375, height: 812, scale: 2, fontScale: 1 })),\n  addEventListener: jest.fn(),\n  removeEventListener: jest.fn(),\n};\n\n(global as any).Linking = {\n  openURL: jest.fn(() => Promise.resolve()),\n  canOpenURL: jest.fn(() => Promise.resolve(true)),\n  getInitialURL: jest.fn(() => Promise.resolve(null)),\n  addEventListener: jest.fn(() => ({ remove: jest.fn() })),\n};\n\n(global as any).Keyboard = {\n  addListener: jest.fn(() => ({ remove: jest.fn() })),\n  removeListener: jest.fn(),\n  removeAllListeners: jest.fn(),\n  dismiss: jest.fn(),\n  scheduleLayoutAnimation: jest.fn(),\n};\n\n// Load the Animated mock and make it globally available\nconst AnimatedMock = require('./__mocks__/Animated.js');\n\n// Make Animated available globally for react-native\n(global as any).Animated = AnimatedMock;\n\n// Export it so react-native can access it\nif (typeof module !== 'undefined') {\n  Object.defineProperty(module, 'exports', {\n    get: () => AnimatedMock,\n    configurable: true,\n  });\n}\n\n// Global test setup with memory tracking\nlet testStartMemory: number | null = null;\n\nbeforeEach(() => {\n  jest.clearAllMocks();\n  \n  // Track memory usage at test start (if available)\n  if ((global as any).gc) {\n    (global as any).gc();\n    testStartMemory = process.memoryUsage().heapUsed;\n  }\n});\n\n// Global test cleanup with proper timer handling and memory leak detection\nafterEach(() => {\n  try {\n    // Only check timers if fake timers are active\n    // This check avoids errors when tests use real timers\n    if (jest.isMockFunction(setTimeout) || jest.isMockFunction(setInterval)) {\n      const timerCount = jest.getTimerCount();\n      if (timerCount > 0) {\n        jest.runOnlyPendingTimers();\n      }\n    }\n  } catch (e) {\n    // Ignore errors from timer operations\n  }\n  \n  // Clear all timers\n  jest.clearAllTimers();\n  \n  // Clear all mocks\n  jest.clearAllMocks();\n  \n  // Always restore real timers to prevent leakage\n  try {\n    jest.useRealTimers();\n  } catch (e) {\n    // Timer may not be mocked, ignore\n  }\n  \n  // Memory leak detection (if gc is available)\n  if ((global as any).gc && testStartMemory !== null) {\n    (global as any).gc();\n    const testEndMemory = process.memoryUsage().heapUsed;\n    const memoryGrowth = testEndMemory - testStartMemory;\n    \n    // Warn if memory grew more than 5MB during a single test\n    if (memoryGrowth > 5 * 1024 * 1024) {\n      console.warn(`Potential memory leak detected: ${(memoryGrowth / 1024 / 1024).toFixed(2)}MB growth`);\n    }\n    \n    testStartMemory = null;\n  }\n});\n\n// Note: Console mocking removed to allow proper debugging\n// If needed, tests can mock console individually\n\n"],"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","ignoreList":[]}