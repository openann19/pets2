{"version":3,"names":["logger","exports","debug","jest","fn","info","warn","error","security","performance","log","trace","setContext","clearContext","setUser","clearUser","addBreadcrumb","flush","mockResolvedValue","undefined","getLogStats","mockReturnValue","total","byLevel","exportLogs","clearLogs","apiLogger","authLogger","uiLogger","navigationLogger","storageLogger","analyticsLogger","notificationLogger","mediaLogger","HAPTICS","LIGHT","MEDIUM","HEAVY","HAPTIC_SETTINGS","ENABLED","INTENSITY","SETTINGS","animationConfig","spring","damping","stiffness","timing","duration","useAnimationConfig","ok","_ref","_asyncToGenerator2","default","data","_ref2","success","_x","apply","arguments","apiClient","get","post","put","delete","UnifiedAPIClient","mockImplementation","setNetworkOnline","setAuthToken","clearAuthToken","destroy","getCircuitBreakerMetrics","failures","getQueueStats","size"],"sources":["core.ts"],"sourcesContent":["/**\n * Mock for @pawfectmatch/core package\n */\n\nexport const logger = {\n  debug: jest.fn(),\n  info: jest.fn(),\n  warn: jest.fn(),\n  error: jest.fn(),\n  security: jest.fn(),\n  performance: jest.fn(),\n  log: jest.fn(),\n  trace: jest.fn(),\n  setContext: jest.fn(),\n  clearContext: jest.fn(),\n  setUser: jest.fn(),\n  clearUser: jest.fn(),\n  addBreadcrumb: jest.fn(),\n  flush: jest.fn().mockResolvedValue(undefined),\n  getLogStats: jest.fn().mockReturnValue({\n    total: 0,\n    byLevel: {},\n  }),\n  exportLogs: jest.fn().mockResolvedValue([]),\n  clearLogs: jest.fn(),\n};\n\n// Mock other exports from core\nexport const apiLogger = logger;\nexport const authLogger = logger;\nexport const uiLogger = logger;\nexport const navigationLogger = logger;\nexport const storageLogger = logger;\nexport const analyticsLogger = logger;\nexport const notificationLogger = logger;\nexport const mediaLogger = logger;\n\n// Export basic types that might be needed\nexport interface User {\n  id: string;\n  email: string;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport interface Pet {\n  id: string;\n  name: string;\n  type: string;\n  breed?: string;\n}\n\n// Export constants\nexport const HAPTICS = {\n  LIGHT: 'light',\n  MEDIUM: 'medium',\n  HEAVY: 'heavy',\n};\n\nexport const HAPTIC_SETTINGS = {\n  ENABLED: true,\n  INTENSITY: 'medium',\n};\n\nexport const SETTINGS = {\n  HAPTICS: HAPTIC_SETTINGS,\n};\n\n// Export animation config\nexport const animationConfig = {\n  spring: { damping: 20, stiffness: 300 },\n  timing: { duration: 300 },\n};\n\nexport const useAnimationConfig = () => animationConfig;\n\n// ==== API client & types used by services ====\nexport type ApiClientResponse<T = unknown> = {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n};\n\nconst ok = async <T = unknown>(data?: T): Promise<ApiClientResponse<T>> => ({\n  success: true,\n  data: (data as T) ?? ({} as T),\n});\n\nexport const apiClient = {\n  get: jest.fn(ok),\n  post: jest.fn(ok),\n  put: jest.fn(ok),\n  delete: jest.fn(ok),\n};\n\nexport const UnifiedAPIClient = jest.fn().mockImplementation(() => ({\n  setNetworkOnline: jest.fn(),\n  setAuthToken: jest.fn(),\n  clearAuthToken: jest.fn(),\n  destroy: jest.fn(),\n  getCircuitBreakerMetrics: jest.fn(() => ({ failures: 0 })),\n  getQueueStats: jest.fn(() => ({ size: 0 })),\n}));\n"],"mappings":"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","ignoreList":[]}