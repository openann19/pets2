{"version":3,"names":["_core","require","_adminAPI","CACHE_TTL_MS","cache","Map","createCacheKey","query","arguments","length","undefined","normalized","page","toString","limit","search","toLowerCase","status","role","verified","JSON","stringify","mapUser","user","_user$isVerified","_user$petsCount","_user$matchesCount","_user$messagesCount","id","firstName","lastName","email","includes","Boolean","createdAt","Date","toISOString","lastLoginAt","petsCount","Array","isArray","Number","matchesCount","messagesCount","mapResponse","response","_paginationData$page","_paginationData$limit","_paginationData$total","_paginationData$pages","data","users","map","pagination","paginationData","total","pages","isCacheValid","entry","now","timestamp","invalidateAdminUsersCache","exports","clear","fetchAdminUsers","_ref","_asyncToGenerator2","default","cacheKey","cached","get","params","adminAPI","getUsers","mapped","set","error","delete","err","Error","logger","apply","getDefaultReason","action","performAdminUserAction","_ref2","userId","options","_options$reason","payloadReason","reason","suspendUser","durationDays","activateUser","banUser","_x","_x2","_x3","adminUsersService","invalidate","_default"],"sources":["adminUsersService.ts"],"sourcesContent":["import { logger } from \"@pawfectmatch/core\";\nimport { _adminAPI as adminAPI } from \"./adminAPI\";\n\nexport type AdminUserStatus = \"active\" | \"suspended\" | \"banned\" | \"pending\";\n\nexport interface AdminUserSummary {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  role: string;\n  status: AdminUserStatus;\n  verified: boolean;\n  createdAt: string;\n  lastLoginAt?: string;\n  petsCount: number;\n  matchesCount: number;\n  messagesCount: number;\n}\n\nexport interface AdminUsersQuery {\n  page?: number;\n  limit?: number;\n  search?: string;\n  status?: AdminUserStatus | \"all\";\n  role?: string;\n  verified?: boolean;\n}\n\nexport interface AdminUsersResult {\n  users: AdminUserSummary[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    pages: number;\n  };\n}\n\nexport type AdminUserAction = \"suspend\" | \"activate\" | \"ban\" | \"unban\";\n\nconst CACHE_TTL_MS = 30_000;\nconst cache = new Map<string, { timestamp: number; data: AdminUsersResult }>();\n\nconst createCacheKey = (query: AdminUsersQuery = {}): string => {\n  const normalized: Record<string, string> = {};\n  if (query.page !== undefined) normalized[\"page\"] = query.page.toString();\n  if (query.limit !== undefined) normalized[\"limit\"] = query.limit.toString();\n  if (query.search !== undefined && query.search !== \"\")\n    normalized[\"search\"] = query.search.toLowerCase();\n  if (query.status !== undefined && query.status !== \"all\")\n    normalized[\"status\"] = query.status;\n  if (query.role !== undefined && query.role !== \"\")\n    normalized[\"role\"] = query.role;\n  if (query.verified !== undefined)\n    normalized[\"verified\"] = query.verified ? \"true\" : \"false\";\n  return JSON.stringify(normalized);\n};\n\nconst mapUser = (user: Record<string, unknown>): AdminUserSummary => {\n  return {\n    id: typeof user[\"_id\"] === \"string\" ? user[\"_id\"] : \"\",\n    firstName:\n      typeof user[\"firstName\"] === \"string\" ? user[\"firstName\"] : \"Unknown\",\n    lastName: typeof user[\"lastName\"] === \"string\" ? user[\"lastName\"] : \"User\",\n    email:\n      typeof user[\"email\"] === \"string\" ? user[\"email\"] : \"unknown@example.com\",\n    role: typeof user[\"role\"] === \"string\" ? user[\"role\"] : \"user\",\n    status: ([\"active\", \"suspended\", \"banned\", \"pending\"] as const).includes(\n      user[\"status\"] as AdminUserStatus,\n    )\n      ? (user[\"status\"] as AdminUserStatus)\n      : \"pending\",\n    verified: Boolean(user[\"isVerified\"] ?? user[\"verified\"]),\n    createdAt:\n      typeof user[\"createdAt\"] === \"string\"\n        ? user[\"createdAt\"]\n        : new Date().toISOString(),\n    lastLoginAt:\n      typeof user[\"lastLoginAt\"] === \"string\" ? user[\"lastLoginAt\"] : undefined,\n    petsCount: Array.isArray(user[\"pets\"])\n      ? user[\"pets\"].length\n      : Number(user[\"petsCount\"] ?? 0),\n    matchesCount: Number(user[\"matchesCount\"] ?? 0),\n    messagesCount: Number(user[\"messagesCount\"] ?? 0),\n  };\n};\n\nconst mapResponse = (response: Record<string, unknown>): AdminUsersResult => {\n  const data = response[\"data\"] as Record<string, unknown> | undefined;\n  const users = Array.isArray(data?.[\"users\"])\n    ? (data[\"users\"] as Record<string, unknown>[]).map(mapUser)\n    : [];\n  const pagination = data?.[\"pagination\"] as\n    | Record<string, unknown>\n    | undefined;\n  const paginationData = pagination ?? {};\n  return {\n    users,\n    pagination: {\n      page: Number(paginationData[\"page\"] ?? 1),\n      limit: Number(paginationData[\"limit\"] ?? users.length),\n      total: Number(paginationData[\"total\"] ?? users.length),\n      pages: Number(paginationData[\"pages\"] ?? 1),\n    },\n  };\n};\n\nconst isCacheValid = (entry?: { timestamp: number }): boolean => {\n  if (entry === undefined) return false;\n  return Date.now() - entry.timestamp < CACHE_TTL_MS;\n};\n\nexport const invalidateAdminUsersCache = (): void => {\n  cache.clear();\n};\n\nexport const fetchAdminUsers = async (\n  query: AdminUsersQuery = {},\n): Promise<AdminUsersResult> => {\n  const cacheKey = createCacheKey(query);\n  const cached = cache.get(cacheKey);\n  if (isCacheValid(cached) && cached !== undefined) {\n    return cached.data;\n  }\n\n  try {\n    const params: {\n      page?: number;\n      limit?: number;\n      search?: string;\n      status?: string;\n      role?: string;\n      verified?: string;\n    } = {};\n\n    if (query.page !== undefined) params.page = query.page;\n    if (query.limit !== undefined) params.limit = query.limit;\n    if (query.search !== undefined && query.search !== \"\")\n      params.search = query.search;\n    if (query.status !== undefined && query.status !== \"all\")\n      params.status = query.status;\n    if (query.role !== undefined && query.role !== \"\") params.role = query.role;\n    if (query.verified !== undefined)\n      params.verified = query.verified ? \"true\" : \"false\";\n\n    const response = await adminAPI.getUsers(params);\n\n    const mapped = mapResponse(response as unknown as Record<string, unknown>);\n    cache.set(cacheKey, { timestamp: Date.now(), data: mapped });\n    return mapped;\n  } catch (error: unknown) {\n    cache.delete(cacheKey);\n    const err =\n      error instanceof Error ? error : new Error(\"Failed to fetch admin users\");\n    logger.error(\"Failed to fetch admin users\", { error: err });\n    throw err;\n  }\n};\n\nconst getDefaultReason = (action: AdminUserAction): string => {\n  switch (action) {\n    case \"suspend\":\n      return \"User suspended via mobile admin controls\";\n    case \"activate\":\n      return \"User reactivated via mobile admin controls\";\n    case \"ban\":\n      return \"User banned via mobile admin controls\";\n    case \"unban\":\n      return \"User reinstated via mobile admin controls\";\n  }\n};\n\nexport const performAdminUserAction = async (\n  userId: string,\n  action: AdminUserAction,\n  options?: { reason?: string; durationDays?: number },\n): Promise<void> => {\n  const payloadReason = options?.reason ?? getDefaultReason(action);\n\n  try {\n    if (action === \"suspend\") {\n      await adminAPI.suspendUser(userId, payloadReason, options?.durationDays);\n    } else if (action === \"activate\" || action === \"unban\") {\n      await adminAPI.activateUser(userId, payloadReason);\n    } else {\n      await adminAPI.banUser(userId, payloadReason);\n    }\n    invalidateAdminUsersCache();\n  } catch (error: unknown) {\n    const err =\n      error instanceof Error ? error : new Error(`Failed to ${action} user`);\n    logger.error(\"Admin user action failed\", { action, userId, error: err });\n    throw err;\n  }\n};\n\nexport const adminUsersService = {\n  fetchAdminUsers,\n  performAdminUserAction,\n  invalidate: invalidateAdminUsersCache,\n};\n\nexport default adminUsersService;\n"],"mappings":"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","ignoreList":[]}