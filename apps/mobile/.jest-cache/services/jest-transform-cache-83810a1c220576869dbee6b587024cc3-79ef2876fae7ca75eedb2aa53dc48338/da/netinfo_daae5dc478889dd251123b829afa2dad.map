{"version":3,"names":["NetInfoStateType","exports","NetInfo","configure","jest","fn","fetch","mockResolvedValue","type","wifi","isConnected","isInternetReachable","details","isConnectionExpensive","ssid","strength","refresh","undefined","addEventListener","mockReturnValue","useNetInfo","_default","default"],"sources":["netinfo.ts"],"sourcesContent":["// Mock for @react-native-community/netinfo\nexport enum NetInfoStateType {\n  unknown = 'unknown',\n  none = 'none',\n  cellular = 'cellular',\n  wifi = 'wifi',\n  bluetooth = 'bluetooth',\n  ethernet = 'ethernet',\n  wimax = 'wimax',\n  vpn = 'vpn',\n  other = 'other',\n}\n\nexport const NetInfo = {\n  configure: jest.fn(),\n  fetch: jest.fn().mockResolvedValue({\n    type: NetInfoStateType.wifi,\n    isConnected: true,\n    isInternetReachable: true,\n    details: {\n      isConnectionExpensive: false,\n      ssid: 'TestWiFi',\n      strength: 100,\n    },\n  }),\n  refresh: jest.fn().mockResolvedValue(undefined),\n  addEventListener: jest.fn().mockReturnValue(jest.fn()), // returns unsubscribe function\n  useNetInfo: jest.fn(),\n};\n\nexport default NetInfo;\n"],"mappings":";;;;;;IACYA,gBAAgB,GAAAC,OAAA,CAAAD,gBAAA,aAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAA,OAAhBA,gBAAgB;AAAA;AAYrB,IAAME,OAAO,GAAAD,OAAA,CAAAC,OAAA,GAAG;EACrBC,SAAS,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC;EACpBC,KAAK,EAAEF,IAAI,CAACC,EAAE,CAAC,CAAC,CAACE,iBAAiB,CAAC;IACjCC,IAAI,EAAER,gBAAgB,CAACS,IAAI;IAC3BC,WAAW,EAAE,IAAI;IACjBC,mBAAmB,EAAE,IAAI;IACzBC,OAAO,EAAE;MACPC,qBAAqB,EAAE,KAAK;MAC5BC,IAAI,EAAE,UAAU;MAChBC,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC;EACFC,OAAO,EAAEZ,IAAI,CAACC,EAAE,CAAC,CAAC,CAACE,iBAAiB,CAACU,SAAS,CAAC;EAC/CC,gBAAgB,EAAEd,IAAI,CAACC,EAAE,CAAC,CAAC,CAACc,eAAe,CAACf,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC;EACtDe,UAAU,EAAEhB,IAAI,CAACC,EAAE,CAAC;AACtB,CAAC;AAAC,IAAAgB,QAAA,GAAApB,OAAA,CAAAqB,OAAA,GAEapB,OAAO","ignoreList":[]}