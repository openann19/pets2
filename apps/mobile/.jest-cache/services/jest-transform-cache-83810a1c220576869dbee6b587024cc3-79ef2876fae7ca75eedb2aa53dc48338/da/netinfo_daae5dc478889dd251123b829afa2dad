b68e301c906c1d74419b8a3def9e15cc
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.NetInfoStateType = exports.NetInfo = void 0;
var NetInfoStateType = exports.NetInfoStateType = function (NetInfoStateType) {
  NetInfoStateType["unknown"] = "unknown";
  NetInfoStateType["none"] = "none";
  NetInfoStateType["cellular"] = "cellular";
  NetInfoStateType["wifi"] = "wifi";
  NetInfoStateType["bluetooth"] = "bluetooth";
  NetInfoStateType["ethernet"] = "ethernet";
  NetInfoStateType["wimax"] = "wimax";
  NetInfoStateType["vpn"] = "vpn";
  NetInfoStateType["other"] = "other";
  return NetInfoStateType;
}({});
var NetInfo = exports.NetInfo = {
  configure: jest.fn(),
  fetch: jest.fn().mockResolvedValue({
    type: NetInfoStateType.wifi,
    isConnected: true,
    isInternetReachable: true,
    details: {
      isConnectionExpensive: false,
      ssid: 'TestWiFi',
      strength: 100
    }
  }),
  refresh: jest.fn().mockResolvedValue(undefined),
  addEventListener: jest.fn().mockReturnValue(jest.fn()),
  useNetInfo: jest.fn()
};
var _default = exports.default = NetInfo;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOZXRJbmZvU3RhdGVUeXBlIiwiZXhwb3J0cyIsIk5ldEluZm8iLCJjb25maWd1cmUiLCJqZXN0IiwiZm4iLCJmZXRjaCIsIm1vY2tSZXNvbHZlZFZhbHVlIiwidHlwZSIsIndpZmkiLCJpc0Nvbm5lY3RlZCIsImlzSW50ZXJuZXRSZWFjaGFibGUiLCJkZXRhaWxzIiwiaXNDb25uZWN0aW9uRXhwZW5zaXZlIiwic3NpZCIsInN0cmVuZ3RoIiwicmVmcmVzaCIsInVuZGVmaW5lZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJtb2NrUmV0dXJuVmFsdWUiLCJ1c2VOZXRJbmZvIiwiX2RlZmF1bHQiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsibmV0aW5mby50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNb2NrIGZvciBAcmVhY3QtbmF0aXZlLWNvbW11bml0eS9uZXRpbmZvXG5leHBvcnQgZW51bSBOZXRJbmZvU3RhdGVUeXBlIHtcbiAgdW5rbm93biA9ICd1bmtub3duJyxcbiAgbm9uZSA9ICdub25lJyxcbiAgY2VsbHVsYXIgPSAnY2VsbHVsYXInLFxuICB3aWZpID0gJ3dpZmknLFxuICBibHVldG9vdGggPSAnYmx1ZXRvb3RoJyxcbiAgZXRoZXJuZXQgPSAnZXRoZXJuZXQnLFxuICB3aW1heCA9ICd3aW1heCcsXG4gIHZwbiA9ICd2cG4nLFxuICBvdGhlciA9ICdvdGhlcicsXG59XG5cbmV4cG9ydCBjb25zdCBOZXRJbmZvID0ge1xuICBjb25maWd1cmU6IGplc3QuZm4oKSxcbiAgZmV0Y2g6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZSh7XG4gICAgdHlwZTogTmV0SW5mb1N0YXRlVHlwZS53aWZpLFxuICAgIGlzQ29ubmVjdGVkOiB0cnVlLFxuICAgIGlzSW50ZXJuZXRSZWFjaGFibGU6IHRydWUsXG4gICAgZGV0YWlsczoge1xuICAgICAgaXNDb25uZWN0aW9uRXhwZW5zaXZlOiBmYWxzZSxcbiAgICAgIHNzaWQ6ICdUZXN0V2lGaScsXG4gICAgICBzdHJlbmd0aDogMTAwLFxuICAgIH0sXG4gIH0pLFxuICByZWZyZXNoOiBqZXN0LmZuKCkubW9ja1Jlc29sdmVkVmFsdWUodW5kZWZpbmVkKSxcbiAgYWRkRXZlbnRMaXN0ZW5lcjogamVzdC5mbigpLm1vY2tSZXR1cm5WYWx1ZShqZXN0LmZuKCkpLCAvLyByZXR1cm5zIHVuc3Vic2NyaWJlIGZ1bmN0aW9uXG4gIHVzZU5ldEluZm86IGplc3QuZm4oKSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE5ldEluZm87XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztJQUNZQSxnQkFBZ0IsR0FBQUMsT0FBQSxDQUFBRCxnQkFBQSxhQUFoQkEsZ0JBQWdCO0VBQWhCQSxnQkFBZ0I7RUFBaEJBLGdCQUFnQjtFQUFoQkEsZ0JBQWdCO0VBQWhCQSxnQkFBZ0I7RUFBaEJBLGdCQUFnQjtFQUFoQkEsZ0JBQWdCO0VBQWhCQSxnQkFBZ0I7RUFBaEJBLGdCQUFnQjtFQUFoQkEsZ0JBQWdCO0VBQUEsT0FBaEJBLGdCQUFnQjtBQUFBO0FBWXJCLElBQU1FLE9BQU8sR0FBQUQsT0FBQSxDQUFBQyxPQUFBLEdBQUc7RUFDckJDLFNBQVMsRUFBRUMsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztFQUNwQkMsS0FBSyxFQUFFRixJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDLENBQUNFLGlCQUFpQixDQUFDO0lBQ2pDQyxJQUFJLEVBQUVSLGdCQUFnQixDQUFDUyxJQUFJO0lBQzNCQyxXQUFXLEVBQUUsSUFBSTtJQUNqQkMsbUJBQW1CLEVBQUUsSUFBSTtJQUN6QkMsT0FBTyxFQUFFO01BQ1BDLHFCQUFxQixFQUFFLEtBQUs7TUFDNUJDLElBQUksRUFBRSxVQUFVO01BQ2hCQyxRQUFRLEVBQUU7SUFDWjtFQUNGLENBQUMsQ0FBQztFQUNGQyxPQUFPLEVBQUVaLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUMsQ0FBQ0UsaUJBQWlCLENBQUNVLFNBQVMsQ0FBQztFQUMvQ0MsZ0JBQWdCLEVBQUVkLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUMsQ0FBQ2MsZUFBZSxDQUFDZixJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDLENBQUM7RUFDdERlLFVBQVUsRUFBRWhCLElBQUksQ0FBQ0MsRUFBRSxDQUFDO0FBQ3RCLENBQUM7QUFBQyxJQUFBZ0IsUUFBQSxHQUFBcEIsT0FBQSxDQUFBcUIsT0FBQSxHQUVhcEIsT0FBTyIsImlnbm9yZUxpc3QiOltdfQ==