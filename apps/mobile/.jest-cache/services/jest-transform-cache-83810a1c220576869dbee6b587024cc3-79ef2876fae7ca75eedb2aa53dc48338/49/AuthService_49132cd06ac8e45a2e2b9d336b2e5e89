30fd9edc0bb72b56a877135eaf59f7db
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.authService = exports.AuthError = void 0;
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapNativeSuper"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var SecureStore = _interopRequireWildcard(require("expo-secure-store"));
var LocalAuthentication = _interopRequireWildcard(require("expo-local-authentication"));
var Keychain = _interopRequireWildcard(require("react-native-keychain"));
var _core = require("@pawfectmatch/core");
var _api = require("./api");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t2 in e) "default" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]); return f; })(e, t); }
function cov_1wlr82ylgc() {
  var path = "/home/ben/Downloads/pets-fresh/apps/mobile/src/services/AuthService.ts";
  var hash = "5edeae81fd73c665dd2dad1c4ba8ce28450b7255";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ben/Downloads/pets-fresh/apps/mobile/src/services/AuthService.ts",
    statementMap: {
      "0": {
        start: {
          line: 60,
          column: 45
        },
        end: {
          line: 60,
          column: 64
        }
      },
      "1": {
        start: {
          line: 61,
          column: 46
        },
        end: {
          line: 61,
          column: 66
        }
      },
      "2": {
        start: {
          line: 62,
          column: 37
        },
        end: {
          line: 62,
          column: 48
        }
      },
      "3": {
        start: {
          line: 63,
          column: 50
        },
        end: {
          line: 63,
          column: 69
        }
      },
      "4": {
        start: {
          line: 64,
          column: 54
        },
        end: {
          line: 64,
          column: 77
        }
      },
      "5": {
        start: {
          line: 65,
          column: 46
        },
        end: {
          line: 65,
          column: 66
        }
      },
      "6": {
        start: {
          line: 66,
          column: 46
        },
        end: {
          line: 66,
          column: 66
        }
      },
      "7": {
        start: {
          line: 67,
          column: 41
        },
        end: {
          line: 67,
          column: 66
        }
      },
      "8": {
        start: {
          line: 70,
          column: 44
        },
        end: {
          line: 70,
          column: 63
        }
      },
      "9": {
        start: {
          line: 71,
          column: 45
        },
        end: {
          line: 71,
          column: 59
        }
      },
      "10": {
        start: {
          line: 72,
          column: 72
        },
        end: {
          line: 72,
          column: 76
        }
      },
      "11": {
        start: {
          line: 73,
          column: 33
        },
        end: {
          line: 73,
          column: 37
        }
      },
      "12": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 34
        }
      },
      "13": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "14": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 87,
          column: 47
        }
      },
      "15": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 93,
          column: 14
        }
      },
      "16": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 39
        }
      },
      "17": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "18": {
        start: {
          line: 101,
          column: 30
        },
        end: {
          line: 101,
          column: 58
        }
      },
      "19": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 105,
          column: 7
        }
      },
      "20": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 37
        }
      },
      "21": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 15
        }
      },
      "22": {
        start: {
          line: 107,
          column: 27
        },
        end: {
          line: 107,
          column: 59
        }
      },
      "23": {
        start: {
          line: 108,
          column: 27
        },
        end: {
          line: 108,
          column: 59
        }
      },
      "24": {
        start: {
          line: 109,
          column: 18
        },
        end: {
          line: 109,
          column: 28
        }
      },
      "25": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 116,
          column: 7
        }
      },
      "26": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 54
        }
      },
      "27": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 28
        }
      },
      "28": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 15
        }
      },
      "29": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "30": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 57
        }
      },
      "31": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 28
        }
      },
      "32": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "33": {
        start: {
          line: 126,
          column: 6
        },
        end: {
          line: 126,
          column: 42
        }
      },
      "34": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 63
        }
      },
      "35": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "36": {
        start: {
          line: 137,
          column: 6
        },
        end: {
          line: 137,
          column: 47
        }
      },
      "37": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 138,
          column: 39
        }
      },
      "38": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "39": {
        start: {
          line: 147,
          column: 24
        },
        end: {
          line: 149,
          column: 7
        }
      },
      "40": {
        start: {
          line: 150,
          column: 6
        },
        end: {
          line: 150,
          column: 52
        }
      },
      "41": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 152,
          column: 66
        }
      },
      "42": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 153,
          column: 18
        }
      },
      "43": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "44": {
        start: {
          line: 162,
          column: 27
        },
        end: {
          line: 164,
          column: 7
        }
      },
      "45": {
        start: {
          line: 165,
          column: 6
        },
        end: {
          line: 165,
          column: 58
        }
      },
      "46": {
        start: {
          line: 167,
          column: 6
        },
        end: {
          line: 167,
          column: 66
        }
      },
      "47": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 168,
          column: 18
        }
      },
      "48": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "49": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 180,
          column: 8
        }
      },
      "50": {
        start: {
          line: 182,
          column: 6
        },
        end: {
          line: 182,
          column: 69
        }
      },
      "51": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 190,
          column: 40
        }
      },
      "52": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "53": {
        start: {
          line: 198,
          column: 27
        },
        end: {
          line: 198,
          column: 55
        }
      },
      "54": {
        start: {
          line: 199,
          column: 6
        },
        end: {
          line: 201,
          column: 7
        }
      },
      "55": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 21
        }
      },
      "56": {
        start: {
          line: 204,
          column: 23
        },
        end: {
          line: 207,
          column: 8
        }
      },
      "57": {
        start: {
          line: 210,
          column: 6
        },
        end: {
          line: 210,
          column: 41
        }
      },
      "58": {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 216,
          column: 8
        }
      },
      "59": {
        start: {
          line: 218,
          column: 6
        },
        end: {
          line: 218,
          column: 49
        }
      },
      "60": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 219,
          column: 18
        }
      },
      "61": {
        start: {
          line: 221,
          column: 6
        },
        end: {
          line: 221,
          column: 55
        }
      },
      "62": {
        start: {
          line: 223,
          column: 6
        },
        end: {
          line: 223,
          column: 26
        }
      },
      "63": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 224,
          column: 19
        }
      },
      "64": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "65": {
        start: {
          line: 236,
          column: 26
        },
        end: {
          line: 236,
          column: 70
        }
      },
      "66": {
        start: {
          line: 237,
          column: 25
        },
        end: {
          line: 237,
          column: 68
        }
      },
      "67": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 69
        }
      },
      "68": {
        start: {
          line: 241,
          column: 6
        },
        end: {
          line: 244,
          column: 8
        }
      },
      "69": {
        start: {
          line: 246,
          column: 6
        },
        end: {
          line: 246,
          column: 72
        }
      },
      "70": {
        start: {
          line: 247,
          column: 6
        },
        end: {
          line: 247,
          column: 45
        }
      },
      "71": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 297,
          column: 5
        }
      },
      "72": {
        start: {
          line: 256,
          column: 28
        },
        end: {
          line: 256,
          column: 61
        }
      },
      "73": {
        start: {
          line: 257,
          column: 6
        },
        end: {
          line: 261,
          column: 7
        }
      },
      "74": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 260,
          column: 10
        }
      },
      "75": {
        start: {
          line: 264,
          column: 28
        },
        end: {
          line: 269,
          column: 8
        }
      },
      "76": {
        start: {
          line: 271,
          column: 6
        },
        end: {
          line: 273,
          column: 7
        }
      },
      "77": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 63
        }
      },
      "78": {
        start: {
          line: 276,
          column: 6
        },
        end: {
          line: 276,
          column: 79
        }
      },
      "79": {
        start: {
          line: 279,
          column: 26
        },
        end: {
          line: 279,
          column: 53
        }
      },
      "80": {
        start: {
          line: 280,
          column: 6
        },
        end: {
          line: 290,
          column: 7
        }
      },
      "81": {
        start: {
          line: 281,
          column: 59
        },
        end: {
          line: 284,
          column: 9
        }
      },
      "82": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 289,
          column: 10
        }
      },
      "83": {
        start: {
          line: 292,
          column: 6
        },
        end: {
          line: 292,
          column: 54
        }
      },
      "84": {
        start: {
          line: 293,
          column: 6
        },
        end: {
          line: 293,
          column: 18
        }
      },
      "85": {
        start: {
          line: 295,
          column: 6
        },
        end: {
          line: 295,
          column: 75
        }
      },
      "86": {
        start: {
          line: 296,
          column: 6
        },
        end: {
          line: 296,
          column: 78
        }
      },
      "87": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 311,
          column: 5
        }
      },
      "88": {
        start: {
          line: 305,
          column: 6
        },
        end: {
          line: 305,
          column: 74
        }
      },
      "89": {
        start: {
          line: 306,
          column: 6
        },
        end: {
          line: 306,
          column: 78
        }
      },
      "90": {
        start: {
          line: 307,
          column: 6
        },
        end: {
          line: 307,
          column: 55
        }
      },
      "91": {
        start: {
          line: 309,
          column: 6
        },
        end: {
          line: 309,
          column: 76
        }
      },
      "92": {
        start: {
          line: 310,
          column: 6
        },
        end: {
          line: 310,
          column: 79
        }
      },
      "93": {
        start: {
          line: 318,
          column: 4
        },
        end: {
          line: 326,
          column: 5
        }
      },
      "94": {
        start: {
          line: 319,
          column: 22
        },
        end: {
          line: 321,
          column: 7
        }
      },
      "95": {
        start: {
          line: 322,
          column: 6
        },
        end: {
          line: 322,
          column: 32
        }
      },
      "96": {
        start: {
          line: 324,
          column: 6
        },
        end: {
          line: 324,
          column: 66
        }
      },
      "97": {
        start: {
          line: 325,
          column: 6
        },
        end: {
          line: 325,
          column: 19
        }
      },
      "98": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 391,
          column: 5
        }
      },
      "99": {
        start: {
          line: 334,
          column: 24
        },
        end: {
          line: 334,
          column: 55
        }
      },
      "100": {
        start: {
          line: 335,
          column: 6
        },
        end: {
          line: 337,
          column: 7
        }
      },
      "101": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 71
        }
      },
      "102": {
        start: {
          line: 339,
          column: 28
        },
        end: {
          line: 339,
          column: 61
        }
      },
      "103": {
        start: {
          line: 340,
          column: 6
        },
        end: {
          line: 342,
          column: 7
        }
      },
      "104": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 73
        }
      },
      "105": {
        start: {
          line: 345,
          column: 28
        },
        end: {
          line: 350,
          column: 8
        }
      },
      "106": {
        start: {
          line: 352,
          column: 6
        },
        end: {
          line: 354,
          column: 7
        }
      },
      "107": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 63
        }
      },
      "108": {
        start: {
          line: 357,
          column: 32
        },
        end: {
          line: 359,
          column: 7
        }
      },
      "109": {
        start: {
          line: 360,
          column: 6
        },
        end: {
          line: 362,
          column: 7
        }
      },
      "110": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 62
        }
      },
      "111": {
        start: {
          line: 364,
          column: 26
        },
        end: {
          line: 364,
          column: 79
        }
      },
      "112": {
        start: {
          line: 367,
          column: 23
        },
        end: {
          line: 376,
          column: 7
        }
      },
      "113": {
        start: {
          line: 379,
          column: 6
        },
        end: {
          line: 379,
          column: 41
        }
      },
      "114": {
        start: {
          line: 381,
          column: 6
        },
        end: {
          line: 383,
          column: 9
        }
      },
      "115": {
        start: {
          line: 384,
          column: 6
        },
        end: {
          line: 384,
          column: 22
        }
      },
      "116": {
        start: {
          line: 386,
          column: 6
        },
        end: {
          line: 386,
          column: 56
        }
      },
      "117": {
        start: {
          line: 387,
          column: 6
        },
        end: {
          line: 390,
          column: 8
        }
      },
      "118": {
        start: {
          line: 398,
          column: 4
        },
        end: {
          line: 415,
          column: 5
        }
      },
      "119": {
        start: {
          line: 399,
          column: 23
        },
        end: {
          line: 402,
          column: 8
        }
      },
      "120": {
        start: {
          line: 405,
          column: 6
        },
        end: {
          line: 405,
          column: 41
        }
      },
      "121": {
        start: {
          line: 407,
          column: 6
        },
        end: {
          line: 407,
          column: 79
        }
      },
      "122": {
        start: {
          line: 408,
          column: 6
        },
        end: {
          line: 408,
          column: 22
        }
      },
      "123": {
        start: {
          line: 410,
          column: 6
        },
        end: {
          line: 410,
          column: 72
        }
      },
      "124": {
        start: {
          line: 411,
          column: 6
        },
        end: {
          line: 414,
          column: 8
        }
      },
      "125": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 446,
          column: 5
        }
      },
      "126": {
        start: {
          line: 424,
          column: 6
        },
        end: {
          line: 426,
          column: 7
        }
      },
      "127": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 54
        }
      },
      "128": {
        start: {
          line: 428,
          column: 27
        },
        end: {
          line: 432,
          column: 7
        }
      },
      "129": {
        start: {
          line: 433,
          column: 23
        },
        end: {
          line: 436,
          column: 8
        }
      },
      "130": {
        start: {
          line: 439,
          column: 6
        },
        end: {
          line: 439,
          column: 41
        }
      },
      "131": {
        start: {
          line: 441,
          column: 6
        },
        end: {
          line: 441,
          column: 80
        }
      },
      "132": {
        start: {
          line: 442,
          column: 6
        },
        end: {
          line: 442,
          column: 22
        }
      },
      "133": {
        start: {
          line: 444,
          column: 6
        },
        end: {
          line: 444,
          column: 72
        }
      },
      "134": {
        start: {
          line: 445,
          column: 6
        },
        end: {
          line: 445,
          column: 75
        }
      },
      "135": {
        start: {
          line: 453,
          column: 4
        },
        end: {
          line: 477,
          column: 5
        }
      },
      "136": {
        start: {
          line: 454,
          column: 27
        },
        end: {
          line: 454,
          column: 55
        }
      },
      "137": {
        start: {
          line: 455,
          column: 6
        },
        end: {
          line: 468,
          column: 7
        }
      },
      "138": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 467,
          column: 9
        }
      },
      "139": {
        start: {
          line: 458,
          column: 10
        },
        end: {
          line: 461,
          column: 13
        }
      },
      "140": {
        start: {
          line: 464,
          column: 10
        },
        end: {
          line: 466,
          column: 13
        }
      },
      "141": {
        start: {
          line: 471,
          column: 6
        },
        end: {
          line: 471,
          column: 33
        }
      },
      "142": {
        start: {
          line: 472,
          column: 6
        },
        end: {
          line: 472,
          column: 50
        }
      },
      "143": {
        start: {
          line: 474,
          column: 6
        },
        end: {
          line: 474,
          column: 47
        }
      },
      "144": {
        start: {
          line: 476,
          column: 6
        },
        end: {
          line: 476,
          column: 33
        }
      },
      "145": {
        start: {
          line: 484,
          column: 4
        },
        end: {
          line: 503,
          column: 5
        }
      },
      "146": {
        start: {
          line: 485,
          column: 27
        },
        end: {
          line: 485,
          column: 55
        }
      },
      "147": {
        start: {
          line: 486,
          column: 6
        },
        end: {
          line: 488,
          column: 7
        }
      },
      "148": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 487,
          column: 20
        }
      },
      "149": {
        start: {
          line: 490,
          column: 23
        },
        end: {
          line: 493,
          column: 8
        }
      },
      "150": {
        start: {
          line: 496,
          column: 6
        },
        end: {
          line: 496,
          column: 41
        }
      },
      "151": {
        start: {
          line: 497,
          column: 6
        },
        end: {
          line: 497,
          column: 22
        }
      },
      "152": {
        start: {
          line: 499,
          column: 6
        },
        end: {
          line: 499,
          column: 54
        }
      },
      "153": {
        start: {
          line: 501,
          column: 6
        },
        end: {
          line: 501,
          column: 33
        }
      },
      "154": {
        start: {
          line: 502,
          column: 6
        },
        end: {
          line: 502,
          column: 18
        }
      },
      "155": {
        start: {
          line: 512,
          column: 4
        },
        end: {
          line: 529,
          column: 5
        }
      },
      "156": {
        start: {
          line: 513,
          column: 23
        },
        end: {
          line: 519,
          column: 7
        }
      },
      "157": {
        start: {
          line: 521,
          column: 6
        },
        end: {
          line: 521,
          column: 57
        }
      },
      "158": {
        start: {
          line: 522,
          column: 6
        },
        end: {
          line: 522,
          column: 22
        }
      },
      "159": {
        start: {
          line: 524,
          column: 6
        },
        end: {
          line: 524,
          column: 63
        }
      },
      "160": {
        start: {
          line: 525,
          column: 6
        },
        end: {
          line: 528,
          column: 8
        }
      },
      "161": {
        start: {
          line: 538,
          column: 4
        },
        end: {
          line: 560,
          column: 5
        }
      },
      "162": {
        start: {
          line: 539,
          column: 6
        },
        end: {
          line: 541,
          column: 7
        }
      },
      "163": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 540,
          column: 54
        }
      },
      "164": {
        start: {
          line: 543,
          column: 24
        },
        end: {
          line: 546,
          column: 7
        }
      },
      "165": {
        start: {
          line: 547,
          column: 23
        },
        end: {
          line: 553,
          column: 7
        }
      },
      "166": {
        start: {
          line: 555,
          column: 6
        },
        end: {
          line: 555,
          column: 47
        }
      },
      "167": {
        start: {
          line: 556,
          column: 6
        },
        end: {
          line: 556,
          column: 22
        }
      },
      "168": {
        start: {
          line: 558,
          column: 6
        },
        end: {
          line: 558,
          column: 55
        }
      },
      "169": {
        start: {
          line: 559,
          column: 6
        },
        end: {
          line: 559,
          column: 80
        }
      },
      "170": {
        start: {
          line: 567,
          column: 4
        },
        end: {
          line: 573,
          column: 5
        }
      },
      "171": {
        start: {
          line: 568,
          column: 23
        },
        end: {
          line: 568,
          column: 74
        }
      },
      "172": {
        start: {
          line: 569,
          column: 6
        },
        end: {
          line: 569,
          column: 62
        }
      },
      "173": {
        start: {
          line: 571,
          column: 6
        },
        end: {
          line: 571,
          column: 60
        }
      },
      "174": {
        start: {
          line: 572,
          column: 6
        },
        end: {
          line: 572,
          column: 18
        }
      },
      "175": {
        start: {
          line: 580,
          column: 4
        },
        end: {
          line: 585,
          column: 5
        }
      },
      "176": {
        start: {
          line: 581,
          column: 6
        },
        end: {
          line: 581,
          column: 73
        }
      },
      "177": {
        start: {
          line: 583,
          column: 6
        },
        end: {
          line: 583,
          column: 60
        }
      },
      "178": {
        start: {
          line: 584,
          column: 6
        },
        end: {
          line: 584,
          column: 18
        }
      },
      "179": {
        start: {
          line: 592,
          column: 4
        },
        end: {
          line: 599,
          column: 5
        }
      },
      "180": {
        start: {
          line: 593,
          column: 20
        },
        end: {
          line: 593,
          column: 47
        }
      },
      "181": {
        start: {
          line: 594,
          column: 19
        },
        end: {
          line: 594,
          column: 46
        }
      },
      "182": {
        start: {
          line: 595,
          column: 6
        },
        end: {
          line: 595,
          column: 31
        }
      },
      "183": {
        start: {
          line: 597,
          column: 6
        },
        end: {
          line: 597,
          column: 61
        }
      },
      "184": {
        start: {
          line: 598,
          column: 6
        },
        end: {
          line: 598,
          column: 19
        }
      },
      "185": {
        start: {
          line: 606,
          column: 4
        },
        end: {
          line: 621,
          column: 5
        }
      },
      "186": {
        start: {
          line: 607,
          column: 26
        },
        end: {
          line: 607,
          column: 53
        }
      },
      "187": {
        start: {
          line: 608,
          column: 6
        },
        end: {
          line: 610,
          column: 7
        }
      },
      "188": {
        start: {
          line: 609,
          column: 8
        },
        end: {
          line: 609,
          column: 59
        }
      },
      "189": {
        start: {
          line: 612,
          column: 26
        },
        end: {
          line: 612,
          column: 57
        }
      },
      "190": {
        start: {
          line: 613,
          column: 6
        },
        end: {
          line: 616,
          column: 8
        }
      },
      "191": {
        start: {
          line: 617,
          column: 6
        },
        end: {
          line: 617,
          column: 67
        }
      },
      "192": {
        start: {
          line: 619,
          column: 6
        },
        end: {
          line: 619,
          column: 60
        }
      },
      "193": {
        start: {
          line: 620,
          column: 6
        },
        end: {
          line: 620,
          column: 63
        }
      },
      "194": {
        start: {
          line: 627,
          column: 4
        },
        end: {
          line: 665,
          column: 5
        }
      },
      "195": {
        start: {
          line: 629,
          column: 6
        },
        end: {
          line: 661,
          column: 7
        }
      },
      "196": {
        start: {
          line: 630,
          column: 8
        },
        end: {
          line: 655,
          column: 9
        }
      },
      "197": {
        start: {
          line: 631,
          column: 25
        },
        end: {
          line: 635,
          column: 12
        }
      },
      "198": {
        start: {
          line: 636,
          column: 10
        },
        end: {
          line: 638,
          column: 11
        }
      },
      "199": {
        start: {
          line: 637,
          column: 12
        },
        end: {
          line: 637,
          column: 59
        }
      },
      "200": {
        start: {
          line: 640,
          column: 10
        },
        end: {
          line: 642,
          column: 13
        }
      },
      "201": {
        start: {
          line: 644,
          column: 10
        },
        end: {
          line: 644,
          column: 17
        }
      },
      "202": {
        start: {
          line: 647,
          column: 10
        },
        end: {
          line: 647,
          column: 107
        }
      },
      "203": {
        start: {
          line: 648,
          column: 10
        },
        end: {
          line: 650,
          column: 13
        }
      },
      "204": {
        start: {
          line: 652,
          column: 10
        },
        end: {
          line: 654,
          column: 13
        }
      },
      "205": {
        start: {
          line: 658,
          column: 8
        },
        end: {
          line: 660,
          column: 11
        }
      },
      "206": {
        start: {
          line: 663,
          column: 6
        },
        end: {
          line: 663,
          column: 65
        }
      },
      "207": {
        start: {
          line: 664,
          column: 6
        },
        end: {
          line: 664,
          column: 81
        }
      },
      "208": {
        start: {
          line: 669,
          column: 4
        },
        end: {
          line: 699,
          column: 5
        }
      },
      "209": {
        start: {
          line: 671,
          column: 21
        },
        end: {
          line: 671,
          column: 33
        }
      },
      "210": {
        start: {
          line: 672,
          column: 30
        },
        end: {
          line: 672,
          column: 68
        }
      },
      "211": {
        start: {
          line: 674,
          column: 6
        },
        end: {
          line: 695,
          column: 7
        }
      },
      "212": {
        start: {
          line: 675,
          column: 8
        },
        end: {
          line: 688,
          column: 9
        }
      },
      "213": {
        start: {
          line: 676,
          column: 30
        },
        end: {
          line: 678,
          column: 12
        }
      },
      "214": {
        start: {
          line: 679,
          column: 10
        },
        end: {
          line: 682,
          column: 11
        }
      },
      "215": {
        start: {
          line: 681,
          column: 12
        },
        end: {
          line: 681,
          column: 40
        }
      },
      "216": {
        start: {
          line: 683,
          column: 10
        },
        end: {
          line: 683,
          column: 22
        }
      },
      "217": {
        start: {
          line: 686,
          column: 10
        },
        end: {
          line: 686,
          column: 117
        }
      },
      "218": {
        start: {
          line: 687,
          column: 10
        },
        end: {
          line: 687,
          column: 53
        }
      },
      "219": {
        start: {
          line: 689,
          column: 13
        },
        end: {
          line: 695,
          column: 7
        }
      },
      "220": {
        start: {
          line: 691,
          column: 8
        },
        end: {
          line: 691,
          column: 51
        }
      },
      "221": {
        start: {
          line: 694,
          column: 8
        },
        end: {
          line: 694,
          column: 51
        }
      },
      "222": {
        start: {
          line: 697,
          column: 6
        },
        end: {
          line: 697,
          column: 68
        }
      },
      "223": {
        start: {
          line: 698,
          column: 6
        },
        end: {
          line: 698,
          column: 18
        }
      },
      "224": {
        start: {
          line: 703,
          column: 4
        },
        end: {
          line: 735,
          column: 5
        }
      },
      "225": {
        start: {
          line: 705,
          column: 21
        },
        end: {
          line: 705,
          column: 33
        }
      },
      "226": {
        start: {
          line: 706,
          column: 30
        },
        end: {
          line: 706,
          column: 68
        }
      },
      "227": {
        start: {
          line: 708,
          column: 6
        },
        end: {
          line: 731,
          column: 7
        }
      },
      "228": {
        start: {
          line: 709,
          column: 8
        },
        end: {
          line: 716,
          column: 9
        }
      },
      "229": {
        start: {
          line: 711,
          column: 10
        },
        end: {
          line: 713,
          column: 13
        }
      },
      "230": {
        start: {
          line: 715,
          column: 10
        },
        end: {
          line: 715,
          column: 101
        }
      },
      "231": {
        start: {
          line: 718,
          column: 8
        },
        end: {
          line: 718,
          column: 50
        }
      },
      "232": {
        start: {
          line: 719,
          column: 13
        },
        end: {
          line: 731,
          column: 7
        }
      },
      "233": {
        start: {
          line: 721,
          column: 8
        },
        end: {
          line: 721,
          column: 47
        }
      },
      "234": {
        start: {
          line: 723,
          column: 8
        },
        end: {
          line: 723,
          column: 50
        }
      },
      "235": {
        start: {
          line: 726,
          column: 8
        },
        end: {
          line: 730,
          column: 9
        }
      },
      "236": {
        start: {
          line: 727,
          column: 10
        },
        end: {
          line: 727,
          column: 49
        }
      },
      "237": {
        start: {
          line: 733,
          column: 6
        },
        end: {
          line: 733,
          column: 66
        }
      },
      "238": {
        start: {
          line: 741,
          column: 4
        },
        end: {
          line: 770,
          column: 5
        }
      },
      "239": {
        start: {
          line: 742,
          column: 6
        },
        end: {
          line: 763,
          column: 9
        }
      },
      "240": {
        start: {
          line: 766,
          column: 6
        },
        end: {
          line: 766,
          column: 36
        }
      },
      "241": {
        start: {
          line: 768,
          column: 6
        },
        end: {
          line: 768,
          column: 59
        }
      },
      "242": {
        start: {
          line: 769,
          column: 6
        },
        end: {
          line: 769,
          column: 71
        }
      },
      "243": {
        start: {
          line: 774,
          column: 4
        },
        end: {
          line: 788,
          column: 5
        }
      },
      "244": {
        start: {
          line: 775,
          column: 6
        },
        end: {
          line: 781,
          column: 9
        }
      },
      "245": {
        start: {
          line: 784,
          column: 6
        },
        end: {
          line: 784,
          column: 35
        }
      },
      "246": {
        start: {
          line: 786,
          column: 6
        },
        end: {
          line: 786,
          column: 59
        }
      },
      "247": {
        start: {
          line: 792,
          column: 4
        },
        end: {
          line: 797,
          column: 5
        }
      },
      "248": {
        start: {
          line: 793,
          column: 6
        },
        end: {
          line: 793,
          column: 74
        }
      },
      "249": {
        start: {
          line: 795,
          column: 6
        },
        end: {
          line: 795,
          column: 61
        }
      },
      "250": {
        start: {
          line: 796,
          column: 6
        },
        end: {
          line: 796,
          column: 18
        }
      },
      "251": {
        start: {
          line: 807,
          column: 4
        },
        end: {
          line: 807,
          column: 19
        }
      },
      "252": {
        start: {
          line: 808,
          column: 4
        },
        end: {
          line: 808,
          column: 28
        }
      },
      "253": {
        start: {
          line: 813,
          column: 27
        },
        end: {
          line: 813,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 75,
            column: 2
          },
          end: {
            line: 75,
            column: 3
          }
        },
        loc: {
          start: {
            line: 75,
            column: 16
          },
          end: {
            line: 77,
            column: 3
          }
        },
        line: 75
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 84,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        },
        loc: {
          start: {
            line: 84,
            column: 41
          },
          end: {
            line: 94,
            column: 3
          }
        },
        line: 84
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 91,
            column: 44
          },
          end: {
            line: 91,
            column: 45
          }
        },
        loc: {
          start: {
            line: 91,
            column: 50
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 91
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 99,
            column: 2
          },
          end: {
            line: 99,
            column: 3
          }
        },
        loc: {
          start: {
            line: 99,
            column: 54
          },
          end: {
            line: 130,
            column: 3
          }
        },
        line: 99
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 135,
            column: 2
          },
          end: {
            line: 135,
            column: 3
          }
        },
        loc: {
          start: {
            line: 135,
            column: 40
          },
          end: {
            line: 140,
            column: 3
          }
        },
        line: 135
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 145,
            column: 2
          },
          end: {
            line: 145,
            column: 3
          }
        },
        loc: {
          start: {
            line: 145,
            column: 62
          },
          end: {
            line: 155,
            column: 3
          }
        },
        line: 145
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 160,
            column: 2
          },
          end: {
            line: 160,
            column: 3
          }
        },
        loc: {
          start: {
            line: 160,
            column: 62
          },
          end: {
            line: 170,
            column: 3
          }
        },
        line: 160
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 175,
            column: 2
          },
          end: {
            line: 175,
            column: 3
          }
        },
        loc: {
          start: {
            line: 175,
            column: 56
          },
          end: {
            line: 184,
            column: 3
          }
        },
        line: 175
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 189,
            column: 2
          },
          end: {
            line: 189,
            column: 3
          }
        },
        loc: {
          start: {
            line: 189,
            column: 44
          },
          end: {
            line: 191,
            column: 3
          }
        },
        line: 189
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 196,
            column: 2
          },
          end: {
            line: 196,
            column: 3
          }
        },
        loc: {
          start: {
            line: 196,
            column: 41
          },
          end: {
            line: 226,
            column: 3
          }
        },
        line: 196
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 231,
            column: 2
          },
          end: {
            line: 231,
            column: 3
          }
        },
        loc: {
          start: {
            line: 234,
            column: 5
          },
          end: {
            line: 249,
            column: 3
          }
        },
        line: 234
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 254,
            column: 2
          },
          end: {
            line: 254,
            column: 3
          }
        },
        loc: {
          start: {
            line: 254,
            column: 58
          },
          end: {
            line: 298,
            column: 3
          }
        },
        line: 254
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 303,
            column: 2
          },
          end: {
            line: 303,
            column: 3
          }
        },
        loc: {
          start: {
            line: 303,
            column: 56
          },
          end: {
            line: 312,
            column: 3
          }
        },
        line: 303
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 317,
            column: 2
          },
          end: {
            line: 317,
            column: 3
          }
        },
        loc: {
          start: {
            line: 317,
            column: 47
          },
          end: {
            line: 327,
            column: 3
          }
        },
        line: 317
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 332,
            column: 2
          },
          end: {
            line: 332,
            column: 3
          }
        },
        loc: {
          start: {
            line: 332,
            column: 53
          },
          end: {
            line: 392,
            column: 3
          }
        },
        line: 332
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 397,
            column: 2
          },
          end: {
            line: 397,
            column: 3
          }
        },
        loc: {
          start: {
            line: 397,
            column: 68
          },
          end: {
            line: 416,
            column: 3
          }
        },
        line: 397
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 421,
            column: 2
          },
          end: {
            line: 421,
            column: 3
          }
        },
        loc: {
          start: {
            line: 421,
            column: 60
          },
          end: {
            line: 447,
            column: 3
          }
        },
        line: 421
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 452,
            column: 2
          },
          end: {
            line: 452,
            column: 3
          }
        },
        loc: {
          start: {
            line: 452,
            column: 32
          },
          end: {
            line: 478,
            column: 3
          }
        },
        line: 452
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 483,
            column: 2
          },
          end: {
            line: 483,
            column: 3
          }
        },
        loc: {
          start: {
            line: 483,
            column: 53
          },
          end: {
            line: 504,
            column: 3
          }
        },
        line: 483
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 509,
            column: 2
          },
          end: {
            line: 509,
            column: 3
          }
        },
        loc: {
          start: {
            line: 511,
            column: 52
          },
          end: {
            line: 530,
            column: 3
          }
        },
        line: 511
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 535,
            column: 2
          },
          end: {
            line: 535,
            column: 3
          }
        },
        loc: {
          start: {
            line: 537,
            column: 52
          },
          end: {
            line: 561,
            column: 3
          }
        },
        line: 537
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 566,
            column: 2
          },
          end: {
            line: 566,
            column: 3
          }
        },
        loc: {
          start: {
            line: 566,
            column: 47
          },
          end: {
            line: 574,
            column: 3
          }
        },
        line: 566
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 579,
            column: 2
          },
          end: {
            line: 579,
            column: 3
          }
        },
        loc: {
          start: {
            line: 579,
            column: 49
          },
          end: {
            line: 586,
            column: 3
          }
        },
        line: 579
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 591,
            column: 2
          },
          end: {
            line: 591,
            column: 3
          }
        },
        loc: {
          start: {
            line: 591,
            column: 44
          },
          end: {
            line: 600,
            column: 3
          }
        },
        line: 591
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 605,
            column: 2
          },
          end: {
            line: 605,
            column: 3
          }
        },
        loc: {
          start: {
            line: 605,
            column: 59
          },
          end: {
            line: 622,
            column: 3
          }
        },
        line: 605
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 626,
            column: 2
          },
          end: {
            line: 626,
            column: 3
          }
        },
        loc: {
          start: {
            line: 626,
            column: 78
          },
          end: {
            line: 666,
            column: 3
          }
        },
        line: 626
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 668,
            column: 2
          },
          end: {
            line: 668,
            column: 3
          }
        },
        loc: {
          start: {
            line: 668,
            column: 72
          },
          end: {
            line: 700,
            column: 3
          }
        },
        line: 668
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 702,
            column: 2
          },
          end: {
            line: 702,
            column: 3
          }
        },
        loc: {
          start: {
            line: 702,
            column: 66
          },
          end: {
            line: 736,
            column: 3
          }
        },
        line: 702
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 740,
            column: 2
          },
          end: {
            line: 740,
            column: 3
          }
        },
        loc: {
          start: {
            line: 740,
            column: 69
          },
          end: {
            line: 771,
            column: 3
          }
        },
        line: 740
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 773,
            column: 2
          },
          end: {
            line: 773,
            column: 3
          }
        },
        loc: {
          start: {
            line: 773,
            column: 47
          },
          end: {
            line: 789,
            column: 3
          }
        },
        line: 773
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 791,
            column: 2
          },
          end: {
            line: 791,
            column: 3
          }
        },
        loc: {
          start: {
            line: 791,
            column: 58
          },
          end: {
            line: 798,
            column: 3
          }
        },
        line: 791
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 803,
            column: 2
          },
          end: {
            line: 803,
            column: 3
          }
        },
        loc: {
          start: {
            line: 806,
            column: 4
          },
          end: {
            line: 809,
            column: 3
          }
        },
        line: 806
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "1": {
        loc: {
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 105,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 105,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "2": {
        loc: {
          start: {
            line: 112,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "3": {
        loc: {
          start: {
            line: 112,
            column: 10
          },
          end: {
            line: 112,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 10
          },
          end: {
            line: 112,
            column: 22
          }
        }, {
          start: {
            line: 112,
            column: 26
          },
          end: {
            line: 112,
            column: 74
          }
        }],
        line: 112
      },
      "4": {
        loc: {
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 123,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 123,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "5": {
        loc: {
          start: {
            line: 119,
            column: 10
          },
          end: {
            line: 119,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 10
          },
          end: {
            line: 119,
            column: 22
          }
        }, {
          start: {
            line: 119,
            column: 26
          },
          end: {
            line: 119,
            column: 75
          }
        }],
        line: 119
      },
      "6": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "7": {
        loc: {
          start: {
            line: 150,
            column: 13
          },
          end: {
            line: 150,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 150,
            column: 25
          },
          end: {
            line: 150,
            column: 44
          }
        }, {
          start: {
            line: 150,
            column: 47
          },
          end: {
            line: 150,
            column: 51
          }
        }],
        line: 150
      },
      "8": {
        loc: {
          start: {
            line: 165,
            column: 13
          },
          end: {
            line: 165,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 28
          },
          end: {
            line: 165,
            column: 50
          }
        }, {
          start: {
            line: 165,
            column: 53
          },
          end: {
            line: 165,
            column: 57
          }
        }],
        line: 165
      },
      "9": {
        loc: {
          start: {
            line: 199,
            column: 6
          },
          end: {
            line: 201,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 6
          },
          end: {
            line: 201,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "10": {
        loc: {
          start: {
            line: 242,
            column: 19
          },
          end: {
            line: 242,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 19
          },
          end: {
            line: 242,
            column: 30
          }
        }, {
          start: {
            line: 242,
            column: 34
          },
          end: {
            line: 242,
            column: 44
          }
        }],
        line: 242
      },
      "11": {
        loc: {
          start: {
            line: 257,
            column: 6
          },
          end: {
            line: 261,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 6
          },
          end: {
            line: 261,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "12": {
        loc: {
          start: {
            line: 271,
            column: 6
          },
          end: {
            line: 273,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 6
          },
          end: {
            line: 273,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "13": {
        loc: {
          start: {
            line: 280,
            column: 6
          },
          end: {
            line: 290,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 6
          },
          end: {
            line: 290,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "14": {
        loc: {
          start: {
            line: 335,
            column: 6
          },
          end: {
            line: 337,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 6
          },
          end: {
            line: 337,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "15": {
        loc: {
          start: {
            line: 340,
            column: 6
          },
          end: {
            line: 342,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 6
          },
          end: {
            line: 342,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "16": {
        loc: {
          start: {
            line: 352,
            column: 6
          },
          end: {
            line: 354,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 6
          },
          end: {
            line: 354,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "17": {
        loc: {
          start: {
            line: 360,
            column: 6
          },
          end: {
            line: 362,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 6
          },
          end: {
            line: 362,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "18": {
        loc: {
          start: {
            line: 424,
            column: 6
          },
          end: {
            line: 426,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 6
          },
          end: {
            line: 426,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 424
      },
      "19": {
        loc: {
          start: {
            line: 455,
            column: 6
          },
          end: {
            line: 468,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 6
          },
          end: {
            line: 468,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      },
      "20": {
        loc: {
          start: {
            line: 486,
            column: 6
          },
          end: {
            line: 488,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 6
          },
          end: {
            line: 488,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "21": {
        loc: {
          start: {
            line: 539,
            column: 6
          },
          end: {
            line: 541,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 539,
            column: 6
          },
          end: {
            line: 541,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 539
      },
      "22": {
        loc: {
          start: {
            line: 569,
            column: 13
          },
          end: {
            line: 569,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 569,
            column: 25
          },
          end: {
            line: 569,
            column: 53
          }
        }, {
          start: {
            line: 569,
            column: 57
          },
          end: {
            line: 569,
            column: 61
          }
        }],
        line: 569
      },
      "23": {
        loc: {
          start: {
            line: 595,
            column: 16
          },
          end: {
            line: 595,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 595,
            column: 16
          },
          end: {
            line: 595,
            column: 21
          }
        }, {
          start: {
            line: 595,
            column: 25
          },
          end: {
            line: 595,
            column: 29
          }
        }],
        line: 595
      },
      "24": {
        loc: {
          start: {
            line: 608,
            column: 6
          },
          end: {
            line: 610,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 608,
            column: 6
          },
          end: {
            line: 610,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 608
      },
      "25": {
        loc: {
          start: {
            line: 629,
            column: 6
          },
          end: {
            line: 661,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 629,
            column: 6
          },
          end: {
            line: 661,
            column: 7
          }
        }, {
          start: {
            line: 656,
            column: 13
          },
          end: {
            line: 661,
            column: 7
          }
        }],
        line: 629
      },
      "26": {
        loc: {
          start: {
            line: 629,
            column: 10
          },
          end: {
            line: 629,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 629,
            column: 10
          },
          end: {
            line: 629,
            column: 31
          }
        }, {
          start: {
            line: 629,
            column: 35
          },
          end: {
            line: 629,
            column: 55
          }
        }],
        line: 629
      },
      "27": {
        loc: {
          start: {
            line: 636,
            column: 10
          },
          end: {
            line: 638,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 636,
            column: 10
          },
          end: {
            line: 638,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 636
      },
      "28": {
        loc: {
          start: {
            line: 674,
            column: 6
          },
          end: {
            line: 695,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 674,
            column: 6
          },
          end: {
            line: 695,
            column: 7
          }
        }, {
          start: {
            line: 689,
            column: 13
          },
          end: {
            line: 695,
            column: 7
          }
        }],
        line: 674
      },
      "29": {
        loc: {
          start: {
            line: 679,
            column: 10
          },
          end: {
            line: 682,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 679,
            column: 10
          },
          end: {
            line: 682,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 679
      },
      "30": {
        loc: {
          start: {
            line: 689,
            column: 13
          },
          end: {
            line: 695,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 689,
            column: 13
          },
          end: {
            line: 695,
            column: 7
          }
        }, {
          start: {
            line: 692,
            column: 13
          },
          end: {
            line: 695,
            column: 7
          }
        }],
        line: 689
      },
      "31": {
        loc: {
          start: {
            line: 708,
            column: 6
          },
          end: {
            line: 731,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 708,
            column: 6
          },
          end: {
            line: 731,
            column: 7
          }
        }, {
          start: {
            line: 719,
            column: 13
          },
          end: {
            line: 731,
            column: 7
          }
        }],
        line: 708
      },
      "32": {
        loc: {
          start: {
            line: 719,
            column: 13
          },
          end: {
            line: 731,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 719,
            column: 13
          },
          end: {
            line: 731,
            column: 7
          }
        }, {
          start: {
            line: 724,
            column: 13
          },
          end: {
            line: 731,
            column: 7
          }
        }],
        line: 719
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5edeae81fd73c665dd2dad1c4ba8ce28450b7255"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1wlr82ylgc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wlr82ylgc();
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var AuthService = function () {
  function AuthService() {
    (0, _classCallCheck2.default)(this, AuthService);
    this.sessionCheckInterval = (cov_1wlr82ylgc().s[10]++, null);
    this.useKeychain = (cov_1wlr82ylgc().s[11]++, true);
    cov_1wlr82ylgc().f[0]++;
    cov_1wlr82ylgc().s[12]++;
    this.startSessionMonitoring();
  }
  return (0, _createClass2.default)(AuthService, [{
    key: "startSessionMonitoring",
    value: function startSessionMonitoring() {
      var _this = this;
      cov_1wlr82ylgc().f[1]++;
      cov_1wlr82ylgc().s[13]++;
      if (this.sessionCheckInterval) {
        cov_1wlr82ylgc().b[0][0]++;
        cov_1wlr82ylgc().s[14]++;
        clearInterval(this.sessionCheckInterval);
      } else {
        cov_1wlr82ylgc().b[0][1]++;
      }
      cov_1wlr82ylgc().s[15]++;
      this.sessionCheckInterval = setInterval(function () {
        cov_1wlr82ylgc().f[2]++;
        cov_1wlr82ylgc().s[16]++;
        void _this.checkSessionValidity();
      }, 60000);
    }
  }, {
    key: "checkSessionValidity",
    value: (function () {
      var _checkSessionValidity = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[3]++;
        cov_1wlr82ylgc().s[17]++;
        try {
          var isAuthenticated = (cov_1wlr82ylgc().s[18]++, yield this.isAuthenticated());
          cov_1wlr82ylgc().s[19]++;
          if (!isAuthenticated) {
            cov_1wlr82ylgc().b[1][0]++;
            cov_1wlr82ylgc().s[20]++;
            this.stopSessionMonitoring();
            cov_1wlr82ylgc().s[21]++;
            return;
          } else {
            cov_1wlr82ylgc().b[1][1]++;
          }
          var sessionStart = (cov_1wlr82ylgc().s[22]++, yield this.getSessionStartTime());
          var lastActivity = (cov_1wlr82ylgc().s[23]++, yield this.getLastActivityTime());
          var now = (cov_1wlr82ylgc().s[24]++, Date.now());
          cov_1wlr82ylgc().s[25]++;
          if ((cov_1wlr82ylgc().b[3][0]++, sessionStart) && (cov_1wlr82ylgc().b[3][1]++, now - sessionStart > AuthService.SESSION_TIMEOUT)) {
            cov_1wlr82ylgc().b[2][0]++;
            cov_1wlr82ylgc().s[26]++;
            _core.logger.info("Session expired due to timeout");
            cov_1wlr82ylgc().s[27]++;
            yield this.logout();
            cov_1wlr82ylgc().s[28]++;
            return;
          } else {
            cov_1wlr82ylgc().b[2][1]++;
          }
          cov_1wlr82ylgc().s[29]++;
          if ((cov_1wlr82ylgc().b[5][0]++, lastActivity) && (cov_1wlr82ylgc().b[5][1]++, now - lastActivity > AuthService.ACTIVITY_TIMEOUT)) {
            cov_1wlr82ylgc().b[4][0]++;
            cov_1wlr82ylgc().s[30]++;
            _core.logger.info("Session expired due to inactivity");
            cov_1wlr82ylgc().s[31]++;
            yield this.logout();
            cov_1wlr82ylgc().s[32]++;
            return;
          } else {
            cov_1wlr82ylgc().b[4][1]++;
          }
          cov_1wlr82ylgc().s[33]++;
          yield this.updateLastActivityTime();
        } catch (error) {
          cov_1wlr82ylgc().s[34]++;
          _core.logger.error("Session validity check failed", {
            error: error
          });
        }
      });
      function checkSessionValidity() {
        return _checkSessionValidity.apply(this, arguments);
      }
      return checkSessionValidity;
    }())
  }, {
    key: "stopSessionMonitoring",
    value: function stopSessionMonitoring() {
      cov_1wlr82ylgc().f[4]++;
      cov_1wlr82ylgc().s[35]++;
      if (this.sessionCheckInterval) {
        cov_1wlr82ylgc().b[6][0]++;
        cov_1wlr82ylgc().s[36]++;
        clearInterval(this.sessionCheckInterval);
        cov_1wlr82ylgc().s[37]++;
        this.sessionCheckInterval = null;
      } else {
        cov_1wlr82ylgc().b[6][1]++;
      }
    }
  }, {
    key: "getSessionStartTime",
    value: (function () {
      var _getSessionStartTime = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[5]++;
        cov_1wlr82ylgc().s[38]++;
        try {
          var startTime = (cov_1wlr82ylgc().s[39]++, yield this.secureGetItemAsync(AuthService.SESSION_START_KEY));
          cov_1wlr82ylgc().s[40]++;
          return startTime ? (cov_1wlr82ylgc().b[7][0]++, parseInt(startTime)) : (cov_1wlr82ylgc().b[7][1]++, null);
        } catch (error) {
          cov_1wlr82ylgc().s[41]++;
          _core.logger.error("Failed to get session start time", {
            error: error
          });
          cov_1wlr82ylgc().s[42]++;
          return null;
        }
      });
      function getSessionStartTime() {
        return _getSessionStartTime.apply(this, arguments);
      }
      return getSessionStartTime;
    }())
  }, {
    key: "getLastActivityTime",
    value: (function () {
      var _getLastActivityTime = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[6]++;
        cov_1wlr82ylgc().s[43]++;
        try {
          var lastActivity = (cov_1wlr82ylgc().s[44]++, yield this.secureGetItemAsync(AuthService.LAST_ACTIVITY_KEY));
          cov_1wlr82ylgc().s[45]++;
          return lastActivity ? (cov_1wlr82ylgc().b[8][0]++, parseInt(lastActivity)) : (cov_1wlr82ylgc().b[8][1]++, null);
        } catch (error) {
          cov_1wlr82ylgc().s[46]++;
          _core.logger.error("Failed to get last activity time", {
            error: error
          });
          cov_1wlr82ylgc().s[47]++;
          return null;
        }
      });
      function getLastActivityTime() {
        return _getLastActivityTime.apply(this, arguments);
      }
      return getLastActivityTime;
    }())
  }, {
    key: "updateLastActivityTime",
    value: (function () {
      var _updateLastActivityTime = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[7]++;
        cov_1wlr82ylgc().s[48]++;
        try {
          cov_1wlr82ylgc().s[49]++;
          yield this.secureSetItemAsync(AuthService.LAST_ACTIVITY_KEY, Date.now().toString());
        } catch (error) {
          cov_1wlr82ylgc().s[50]++;
          _core.logger.error("Failed to update last activity time", {
            error: error
          });
        }
      });
      function updateLastActivityTime() {
        return _updateLastActivityTime.apply(this, arguments);
      }
      return updateLastActivityTime;
    }())
  }, {
    key: "recordUserActivity",
    value: (function () {
      var _recordUserActivity = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[8]++;
        cov_1wlr82ylgc().s[51]++;
        yield this.updateLastActivityTime();
      });
      function recordUserActivity() {
        return _recordUserActivity.apply(this, arguments);
      }
      return recordUserActivity;
    }())
  }, {
    key: "rotateTokens",
    value: (function () {
      var _rotateTokens = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[9]++;
        cov_1wlr82ylgc().s[52]++;
        try {
          var refreshToken = (cov_1wlr82ylgc().s[53]++, yield this.getRefreshToken());
          cov_1wlr82ylgc().s[54]++;
          if (!refreshToken) {
            cov_1wlr82ylgc().b[9][0]++;
            cov_1wlr82ylgc().s[55]++;
            return false;
          } else {
            cov_1wlr82ylgc().b[9][1]++;
          }
          var response = (cov_1wlr82ylgc().s[56]++, yield _api.api.request("/auth/refresh-token", {
            method: "POST",
            body: JSON.stringify({
              refreshToken: refreshToken
            })
          }));
          cov_1wlr82ylgc().s[57]++;
          yield this.storeAuthData(response);
          cov_1wlr82ylgc().s[58]++;
          yield this.secureSetItemAsync(AuthService.SESSION_START_KEY, Date.now().toString());
          cov_1wlr82ylgc().s[59]++;
          _core.logger.info("Tokens rotated successfully");
          cov_1wlr82ylgc().s[60]++;
          return true;
        } catch (error) {
          cov_1wlr82ylgc().s[61]++;
          _core.logger.error("Token rotation failed", {
            error: error
          });
          cov_1wlr82ylgc().s[62]++;
          yield this.logout();
          cov_1wlr82ylgc().s[63]++;
          return false;
        }
      });
      function rotateTokens() {
        return _rotateTokens.apply(this, arguments);
      }
      return rotateTokens;
    }())
  }, {
    key: "isBiometricAvailable",
    value: (function () {
      var _isBiometricAvailable = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[10]++;
        cov_1wlr82ylgc().s[64]++;
        try {
          var hasHardware = (cov_1wlr82ylgc().s[65]++, yield LocalAuthentication.hasHardwareAsync());
          var isEnrolled = (cov_1wlr82ylgc().s[66]++, yield LocalAuthentication.isEnrolledAsync());
          var supportedTypes = (cov_1wlr82ylgc().s[67]++, yield LocalAuthentication.supportedAuthenticationTypesAsync());
          cov_1wlr82ylgc().s[68]++;
          return {
            available: (cov_1wlr82ylgc().b[10][0]++, hasHardware) && (cov_1wlr82ylgc().b[10][1]++, isEnrolled),
            types: supportedTypes
          };
        } catch (error) {
          cov_1wlr82ylgc().s[69]++;
          _core.logger.error("Failed to check biometric availability", {
            error: error
          });
          cov_1wlr82ylgc().s[70]++;
          return {
            available: false,
            types: []
          };
        }
      });
      function isBiometricAvailable() {
        return _isBiometricAvailable.apply(this, arguments);
      }
      return isBiometricAvailable;
    }())
  }, {
    key: "enableBiometricAuthentication",
    value: (function () {
      var _enableBiometricAuthentication = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[11]++;
        cov_1wlr82ylgc().s[71]++;
        try {
          var _ref = (cov_1wlr82ylgc().s[72]++, yield this.isBiometricAvailable()),
            available = _ref.available;
          cov_1wlr82ylgc().s[73]++;
          if (!available) {
            cov_1wlr82ylgc().b[11][0]++;
            cov_1wlr82ylgc().s[74]++;
            throw new AuthError("Biometric authentication is not available on this device");
          } else {
            cov_1wlr82ylgc().b[11][1]++;
          }
          var biometricAuth = (cov_1wlr82ylgc().s[75]++, yield LocalAuthentication.authenticateAsync({
            promptMessage: "Authenticate to enable biometric login",
            fallbackLabel: "Use PIN",
            cancelLabel: "Cancel",
            disableDeviceFallback: false
          }));
          cov_1wlr82ylgc().s[76]++;
          if (!biometricAuth.success) {
            cov_1wlr82ylgc().b[12][0]++;
            cov_1wlr82ylgc().s[77]++;
            throw new AuthError("Biometric authentication failed");
          } else {
            cov_1wlr82ylgc().b[12][1]++;
          }
          cov_1wlr82ylgc().s[78]++;
          yield this.secureSetItemAsync(AuthService.BIOMETRIC_ENABLED_KEY, "true");
          var currentUser = (cov_1wlr82ylgc().s[79]++, yield this.getCurrentUser());
          cov_1wlr82ylgc().s[80]++;
          if (currentUser) {
            cov_1wlr82ylgc().b[13][0]++;
            var biometricCredentials = (cov_1wlr82ylgc().s[81]++, {
              email: currentUser.email,
              biometricToken: Date.now().toString() + Math.random().toString(36)
            });
            cov_1wlr82ylgc().s[82]++;
            yield this.secureSetItemAsync(AuthService.BIOMETRIC_CREDENTIALS_KEY, JSON.stringify(biometricCredentials));
          } else {
            cov_1wlr82ylgc().b[13][1]++;
          }
          cov_1wlr82ylgc().s[83]++;
          _core.logger.info("Biometric authentication enabled");
          cov_1wlr82ylgc().s[84]++;
          return true;
        } catch (error) {
          cov_1wlr82ylgc().s[85]++;
          _core.logger.error("Failed to enable biometric authentication", {
            error: error
          });
          cov_1wlr82ylgc().s[86]++;
          throw new AuthError("Failed to enable biometric authentication", error);
        }
      });
      function enableBiometricAuthentication() {
        return _enableBiometricAuthentication.apply(this, arguments);
      }
      return enableBiometricAuthentication;
    }())
  }, {
    key: "disableBiometricAuthentication",
    value: (function () {
      var _disableBiometricAuthentication = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[12]++;
        cov_1wlr82ylgc().s[87]++;
        try {
          cov_1wlr82ylgc().s[88]++;
          yield this.secureDeleteItemAsync(AuthService.BIOMETRIC_ENABLED_KEY);
          cov_1wlr82ylgc().s[89]++;
          yield this.secureDeleteItemAsync(AuthService.BIOMETRIC_CREDENTIALS_KEY);
          cov_1wlr82ylgc().s[90]++;
          _core.logger.info("Biometric authentication disabled");
        } catch (error) {
          cov_1wlr82ylgc().s[91]++;
          _core.logger.error("Failed to disable biometric authentication", {
            error: error
          });
          cov_1wlr82ylgc().s[92]++;
          throw new AuthError("Failed to disable biometric authentication", error);
        }
      });
      function disableBiometricAuthentication() {
        return _disableBiometricAuthentication.apply(this, arguments);
      }
      return disableBiometricAuthentication;
    }())
  }, {
    key: "isBiometricEnabled",
    value: (function () {
      var _isBiometricEnabled = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[13]++;
        cov_1wlr82ylgc().s[93]++;
        try {
          var enabled = (cov_1wlr82ylgc().s[94]++, yield this.secureGetItemAsync(AuthService.BIOMETRIC_ENABLED_KEY));
          cov_1wlr82ylgc().s[95]++;
          return enabled === "true";
        } catch (error) {
          cov_1wlr82ylgc().s[96]++;
          _core.logger.error("Failed to check biometric status", {
            error: error
          });
          cov_1wlr82ylgc().s[97]++;
          return false;
        }
      });
      function isBiometricEnabled() {
        return _isBiometricEnabled.apply(this, arguments);
      }
      return isBiometricEnabled;
    }())
  }, {
    key: "loginWithBiometrics",
    value: (function () {
      var _loginWithBiometrics = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[14]++;
        cov_1wlr82ylgc().s[98]++;
        try {
          var isEnabled = (cov_1wlr82ylgc().s[99]++, yield this.isBiometricEnabled());
          cov_1wlr82ylgc().s[100]++;
          if (!isEnabled) {
            cov_1wlr82ylgc().b[14][0]++;
            cov_1wlr82ylgc().s[101]++;
            throw new AuthError("Biometric authentication is not enabled");
          } else {
            cov_1wlr82ylgc().b[14][1]++;
          }
          var _ref2 = (cov_1wlr82ylgc().s[102]++, yield this.isBiometricAvailable()),
            available = _ref2.available;
          cov_1wlr82ylgc().s[103]++;
          if (!available) {
            cov_1wlr82ylgc().b[15][0]++;
            cov_1wlr82ylgc().s[104]++;
            throw new AuthError("Biometric authentication is not available");
          } else {
            cov_1wlr82ylgc().b[15][1]++;
          }
          var biometricAuth = (cov_1wlr82ylgc().s[105]++, yield LocalAuthentication.authenticateAsync({
            promptMessage: "Authenticate to login",
            fallbackLabel: "Use PIN",
            cancelLabel: "Cancel",
            disableDeviceFallback: false
          }));
          cov_1wlr82ylgc().s[106]++;
          if (!biometricAuth.success) {
            cov_1wlr82ylgc().b[16][0]++;
            cov_1wlr82ylgc().s[107]++;
            throw new AuthError("Biometric authentication failed");
          } else {
            cov_1wlr82ylgc().b[16][1]++;
          }
          var storedCredentials = (cov_1wlr82ylgc().s[108]++, yield this.secureGetItemAsync(AuthService.BIOMETRIC_CREDENTIALS_KEY));
          cov_1wlr82ylgc().s[109]++;
          if (!storedCredentials) {
            cov_1wlr82ylgc().b[17][0]++;
            cov_1wlr82ylgc().s[110]++;
            throw new AuthError("No biometric credentials found");
          } else {
            cov_1wlr82ylgc().b[17][1]++;
          }
          var credentials = (cov_1wlr82ylgc().s[111]++, JSON.parse(storedCredentials));
          var response = (cov_1wlr82ylgc().s[112]++, yield _api.api.request("/auth/biometric-login", {
            method: "POST",
            body: JSON.stringify({
              email: credentials.email,
              biometricToken: credentials.biometricToken
            })
          }));
          cov_1wlr82ylgc().s[113]++;
          yield this.storeAuthData(response);
          cov_1wlr82ylgc().s[114]++;
          _core.logger.info("User logged in with biometrics", {
            userId: response.user.id
          });
          cov_1wlr82ylgc().s[115]++;
          return response;
        } catch (error) {
          cov_1wlr82ylgc().s[116]++;
          _core.logger.error("Biometric login failed", {
            error: error
          });
          cov_1wlr82ylgc().s[117]++;
          throw new AuthError("Biometric login failed. Please use email and password.", error);
        }
      });
      function loginWithBiometrics() {
        return _loginWithBiometrics.apply(this, arguments);
      }
      return loginWithBiometrics;
    }())
  }, {
    key: "login",
    value: (function () {
      var _login = (0, _asyncToGenerator2.default)(function* (credentials) {
        cov_1wlr82ylgc().f[15]++;
        cov_1wlr82ylgc().s[118]++;
        try {
          var response = (cov_1wlr82ylgc().s[119]++, yield _api.api.request("/auth/login", {
            method: "POST",
            body: JSON.stringify(credentials)
          }));
          cov_1wlr82ylgc().s[120]++;
          yield this.storeAuthData(response);
          cov_1wlr82ylgc().s[121]++;
          _core.logger.info("User logged in successfully", {
            userId: response.user.id
          });
          cov_1wlr82ylgc().s[122]++;
          return response;
        } catch (error) {
          cov_1wlr82ylgc().s[123]++;
          _core.logger.error("Login failed", {
            error: error,
            email: credentials.email
          });
          cov_1wlr82ylgc().s[124]++;
          throw new AuthError("Login failed. Please check your credentials and try again.", error);
        }
      });
      function login(_x) {
        return _login.apply(this, arguments);
      }
      return login;
    }())
  }, {
    key: "register",
    value: (function () {
      var _register = (0, _asyncToGenerator2.default)(function* (data) {
        cov_1wlr82ylgc().f[16]++;
        cov_1wlr82ylgc().s[125]++;
        try {
          cov_1wlr82ylgc().s[126]++;
          if (data.password !== data.confirmPassword) {
            cov_1wlr82ylgc().b[18][0]++;
            cov_1wlr82ylgc().s[127]++;
            throw new AuthError("Passwords do not match");
          } else {
            cov_1wlr82ylgc().b[18][1]++;
          }
          var registerData = (cov_1wlr82ylgc().s[128]++, {
            email: data.email,
            password: data.password,
            name: data.name
          });
          var response = (cov_1wlr82ylgc().s[129]++, yield _api.api.request("/auth/register", {
            method: "POST",
            body: JSON.stringify(registerData)
          }));
          cov_1wlr82ylgc().s[130]++;
          yield this.storeAuthData(response);
          cov_1wlr82ylgc().s[131]++;
          _core.logger.info("User registered successfully", {
            userId: response.user.id
          });
          cov_1wlr82ylgc().s[132]++;
          return response;
        } catch (error) {
          cov_1wlr82ylgc().s[133]++;
          _core.logger.error("Registration failed", {
            error: error,
            email: data.email
          });
          cov_1wlr82ylgc().s[134]++;
          throw new AuthError("Registration failed. Please try again.", error);
        }
      });
      function register(_x2) {
        return _register.apply(this, arguments);
      }
      return register;
    }())
  }, {
    key: "logout",
    value: (function () {
      var _logout = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[17]++;
        cov_1wlr82ylgc().s[135]++;
        try {
          var refreshToken = (cov_1wlr82ylgc().s[136]++, yield this.getRefreshToken());
          cov_1wlr82ylgc().s[137]++;
          if (refreshToken) {
            cov_1wlr82ylgc().b[19][0]++;
            cov_1wlr82ylgc().s[138]++;
            try {
              cov_1wlr82ylgc().s[139]++;
              yield _api.api.request("/auth/logout", {
                method: "POST",
                body: JSON.stringify({
                  refreshToken: refreshToken
                })
              });
            } catch (error) {
              cov_1wlr82ylgc().s[140]++;
              _core.logger.warn("Server logout failed, continuing with local logout", {
                error: error
              });
            }
          } else {
            cov_1wlr82ylgc().b[19][1]++;
          }
          cov_1wlr82ylgc().s[141]++;
          yield this.clearAuthData();
          cov_1wlr82ylgc().s[142]++;
          _core.logger.info("User logged out successfully");
        } catch (error) {
          cov_1wlr82ylgc().s[143]++;
          _core.logger.error("Logout failed", {
            error: error
          });
          cov_1wlr82ylgc().s[144]++;
          yield this.clearAuthData();
        }
      });
      function logout() {
        return _logout.apply(this, arguments);
      }
      return logout;
    }())
  }, {
    key: "refreshToken",
    value: (function () {
      var _refreshToken = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[18]++;
        cov_1wlr82ylgc().s[145]++;
        try {
          var _refreshToken2 = (cov_1wlr82ylgc().s[146]++, yield this.getRefreshToken());
          cov_1wlr82ylgc().s[147]++;
          if (!_refreshToken2) {
            cov_1wlr82ylgc().b[20][0]++;
            cov_1wlr82ylgc().s[148]++;
            return null;
          } else {
            cov_1wlr82ylgc().b[20][1]++;
          }
          var response = (cov_1wlr82ylgc().s[149]++, yield _api.api.request("/auth/refresh", {
            method: "POST",
            body: JSON.stringify({
              refreshToken: _refreshToken2
            })
          }));
          cov_1wlr82ylgc().s[150]++;
          yield this.storeAuthData(response);
          cov_1wlr82ylgc().s[151]++;
          return response;
        } catch (error) {
          cov_1wlr82ylgc().s[152]++;
          _core.logger.error("Token refresh failed", {
            error: error
          });
          cov_1wlr82ylgc().s[153]++;
          yield this.clearAuthData();
          cov_1wlr82ylgc().s[154]++;
          return null;
        }
      });
      function refreshToken() {
        return _refreshToken.apply(this, arguments);
      }
      return refreshToken;
    }())
  }, {
    key: "forgotPassword",
    value: (function () {
      var _forgotPassword = (0, _asyncToGenerator2.default)(function* (email) {
        cov_1wlr82ylgc().f[19]++;
        cov_1wlr82ylgc().s[155]++;
        try {
          var response = (cov_1wlr82ylgc().s[156]++, yield _api.api.request("/auth/forgot-password", {
            method: "POST",
            body: JSON.stringify({
              email: email
            })
          }));
          cov_1wlr82ylgc().s[157]++;
          _core.logger.info("Password reset requested", {
            email: email
          });
          cov_1wlr82ylgc().s[158]++;
          return response;
        } catch (error) {
          cov_1wlr82ylgc().s[159]++;
          _core.logger.error("Forgot password failed", {
            error: error,
            email: email
          });
          cov_1wlr82ylgc().s[160]++;
          throw new AuthError("Failed to send password reset email. Please try again.", error);
        }
      });
      function forgotPassword(_x3) {
        return _forgotPassword.apply(this, arguments);
      }
      return forgotPassword;
    }())
  }, {
    key: "resetPassword",
    value: (function () {
      var _resetPassword = (0, _asyncToGenerator2.default)(function* (data) {
        cov_1wlr82ylgc().f[20]++;
        cov_1wlr82ylgc().s[161]++;
        try {
          cov_1wlr82ylgc().s[162]++;
          if (data.password !== data.confirmPassword) {
            cov_1wlr82ylgc().b[21][0]++;
            cov_1wlr82ylgc().s[163]++;
            throw new AuthError("Passwords do not match");
          } else {
            cov_1wlr82ylgc().b[21][1]++;
          }
          var resetData = (cov_1wlr82ylgc().s[164]++, {
            token: data.token,
            password: data.password
          });
          var response = (cov_1wlr82ylgc().s[165]++, yield _api.api.request("/auth/reset-password", {
            method: "POST",
            body: JSON.stringify(resetData)
          }));
          cov_1wlr82ylgc().s[166]++;
          _core.logger.info("Password reset successful");
          cov_1wlr82ylgc().s[167]++;
          return response;
        } catch (error) {
          cov_1wlr82ylgc().s[168]++;
          _core.logger.error("Password reset failed", {
            error: error
          });
          cov_1wlr82ylgc().s[169]++;
          throw new AuthError("Failed to reset password. Please try again.", error);
        }
      });
      function resetPassword(_x4) {
        return _resetPassword.apply(this, arguments);
      }
      return resetPassword;
    }())
  }, {
    key: "getCurrentUser",
    value: (function () {
      var _getCurrentUser = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[21]++;
        cov_1wlr82ylgc().s[170]++;
        try {
          var userData = (cov_1wlr82ylgc().s[171]++, yield this.secureGetItemAsync(AuthService.USER_KEY));
          cov_1wlr82ylgc().s[172]++;
          return userData ? (cov_1wlr82ylgc().b[22][0]++, JSON.parse(userData)) : (cov_1wlr82ylgc().b[22][1]++, null);
        } catch (error) {
          cov_1wlr82ylgc().s[173]++;
          _core.logger.error("Failed to get current user", {
            error: error
          });
          cov_1wlr82ylgc().s[174]++;
          return null;
        }
      });
      function getCurrentUser() {
        return _getCurrentUser.apply(this, arguments);
      }
      return getCurrentUser;
    }())
  }, {
    key: "getAccessToken",
    value: (function () {
      var _getAccessToken = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[22]++;
        cov_1wlr82ylgc().s[175]++;
        try {
          cov_1wlr82ylgc().s[176]++;
          return yield this.secureGetItemAsync(AuthService.ACCESS_TOKEN_KEY);
        } catch (error) {
          cov_1wlr82ylgc().s[177]++;
          _core.logger.error("Failed to get access token", {
            error: error
          });
          cov_1wlr82ylgc().s[178]++;
          return null;
        }
      });
      function getAccessToken() {
        return _getAccessToken.apply(this, arguments);
      }
      return getAccessToken;
    }())
  }, {
    key: "isAuthenticated",
    value: (function () {
      var _isAuthenticated = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[23]++;
        cov_1wlr82ylgc().s[179]++;
        try {
          var token = (cov_1wlr82ylgc().s[180]++, yield this.getAccessToken());
          var user = (cov_1wlr82ylgc().s[181]++, yield this.getCurrentUser());
          cov_1wlr82ylgc().s[182]++;
          return !!((cov_1wlr82ylgc().b[23][0]++, token) && (cov_1wlr82ylgc().b[23][1]++, user));
        } catch (error) {
          cov_1wlr82ylgc().s[183]++;
          _core.logger.error("Authentication check failed", {
            error: error
          });
          cov_1wlr82ylgc().s[184]++;
          return false;
        }
      });
      function isAuthenticated() {
        return _isAuthenticated.apply(this, arguments);
      }
      return isAuthenticated;
    }())
  }, {
    key: "updateUser",
    value: (function () {
      var _updateUser = (0, _asyncToGenerator2.default)(function* (userData) {
        cov_1wlr82ylgc().f[24]++;
        cov_1wlr82ylgc().s[185]++;
        try {
          var currentUser = (cov_1wlr82ylgc().s[186]++, yield this.getCurrentUser());
          cov_1wlr82ylgc().s[187]++;
          if (!currentUser) {
            cov_1wlr82ylgc().b[24][0]++;
            cov_1wlr82ylgc().s[188]++;
            throw new AuthError("No authenticated user found");
          } else {
            cov_1wlr82ylgc().b[24][1]++;
          }
          var updatedUser = (cov_1wlr82ylgc().s[189]++, _objectSpread(_objectSpread({}, currentUser), userData));
          cov_1wlr82ylgc().s[190]++;
          yield this.secureSetItemAsync(AuthService.USER_KEY, JSON.stringify(updatedUser));
          cov_1wlr82ylgc().s[191]++;
          _core.logger.info("User data updated", {
            userId: updatedUser.id
          });
        } catch (error) {
          cov_1wlr82ylgc().s[192]++;
          _core.logger.error("Failed to update user data", {
            error: error
          });
          cov_1wlr82ylgc().s[193]++;
          throw new AuthError("Failed to update user data", error);
        }
      });
      function updateUser(_x5) {
        return _updateUser.apply(this, arguments);
      }
      return updateUser;
    }())
  }, {
    key: "secureSetItemAsync",
    value: function () {
      var _secureSetItemAsync = (0, _asyncToGenerator2.default)(function* (key, value) {
        cov_1wlr82ylgc().f[25]++;
        cov_1wlr82ylgc().s[194]++;
        try {
          cov_1wlr82ylgc().s[195]++;
          if ((cov_1wlr82ylgc().b[26][0]++, key.includes('token')) || (cov_1wlr82ylgc().b[26][1]++, key.includes('user'))) {
            cov_1wlr82ylgc().b[25][0]++;
            cov_1wlr82ylgc().s[196]++;
            try {
              var result = (cov_1wlr82ylgc().s[197]++, yield Keychain.setGenericPassword('pawfectmatch', value, {
                service: 'pawfectmatch-auth',
                accessControl: Keychain.ACCESS_CONTROL.BIOMETRY_ANY_OR_DEVICE_PASSCODE,
                accessible: Keychain.ACCESSIBLE.WHEN_UNLOCKED_THIS_DEVICE_ONLY
              }));
              cov_1wlr82ylgc().s[198]++;
              if (result === false) {
                cov_1wlr82ylgc().b[27][0]++;
                cov_1wlr82ylgc().s[199]++;
                throw new Error('Failed to store in Keychain');
              } else {
                cov_1wlr82ylgc().b[27][1]++;
              }
              cov_1wlr82ylgc().s[200]++;
              yield SecureStore.setItemAsync(`${key}_ref`, 'keychain', {
                keychainAccessible: SecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY
              });
              cov_1wlr82ylgc().s[201]++;
              return;
            } catch (keychainError) {
              cov_1wlr82ylgc().s[202]++;
              _core.logger.warn(`Keychain failed, falling back to SecureStore for ${key}`, {
                error: keychainError
              });
              cov_1wlr82ylgc().s[203]++;
              yield SecureStore.setItemAsync(key, value, {
                keychainAccessible: SecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY
              });
              cov_1wlr82ylgc().s[204]++;
              yield SecureStore.setItemAsync(`${key}_ref`, 'securestore', {
                keychainAccessible: SecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY
              });
            }
          } else {
            cov_1wlr82ylgc().b[25][1]++;
            cov_1wlr82ylgc().s[205]++;
            yield SecureStore.setItemAsync(key, value, {
              keychainAccessible: SecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY
            });
          }
        } catch (error) {
          cov_1wlr82ylgc().s[206]++;
          _core.logger.error(`Failed to securely store ${key}`, {
            error: error
          });
          cov_1wlr82ylgc().s[207]++;
          throw new AuthError(`Failed to securely store authentication data`, error);
        }
      });
      function secureSetItemAsync(_x6, _x7) {
        return _secureSetItemAsync.apply(this, arguments);
      }
      return secureSetItemAsync;
    }()
  }, {
    key: "secureGetItemAsync",
    value: function () {
      var _secureGetItemAsync = (0, _asyncToGenerator2.default)(function* (key) {
        cov_1wlr82ylgc().f[26]++;
        cov_1wlr82ylgc().s[208]++;
        try {
          var refKey = (cov_1wlr82ylgc().s[209]++, `${key}_ref`);
          var storageLocation = (cov_1wlr82ylgc().s[210]++, yield SecureStore.getItemAsync(refKey));
          cov_1wlr82ylgc().s[211]++;
          if (storageLocation === 'keychain') {
            cov_1wlr82ylgc().b[28][0]++;
            cov_1wlr82ylgc().s[212]++;
            try {
              var credentials = (cov_1wlr82ylgc().s[213]++, yield Keychain.getGenericPassword({
                service: 'pawfectmatch-auth'
              }));
              cov_1wlr82ylgc().s[214]++;
              if (credentials) {
                cov_1wlr82ylgc().b[29][0]++;
                cov_1wlr82ylgc().s[215]++;
                return credentials.password;
              } else {
                cov_1wlr82ylgc().b[29][1]++;
              }
              cov_1wlr82ylgc().s[216]++;
              return null;
            } catch (keychainError) {
              cov_1wlr82ylgc().s[217]++;
              _core.logger.warn(`Keychain retrieval failed, trying SecureStore fallback for ${key}`, {
                error: keychainError
              });
              cov_1wlr82ylgc().s[218]++;
              return yield SecureStore.getItemAsync(key);
            }
          } else {
            cov_1wlr82ylgc().b[28][1]++;
            cov_1wlr82ylgc().s[219]++;
            if (storageLocation === 'securestore') {
              cov_1wlr82ylgc().b[30][0]++;
              cov_1wlr82ylgc().s[220]++;
              return yield SecureStore.getItemAsync(key);
            } else {
              cov_1wlr82ylgc().b[30][1]++;
              cov_1wlr82ylgc().s[221]++;
              return yield SecureStore.getItemAsync(key);
            }
          }
        } catch (error) {
          cov_1wlr82ylgc().s[222]++;
          _core.logger.error(`Failed to securely retrieve ${key}`, {
            error: error
          });
          cov_1wlr82ylgc().s[223]++;
          return null;
        }
      });
      function secureGetItemAsync(_x8) {
        return _secureGetItemAsync.apply(this, arguments);
      }
      return secureGetItemAsync;
    }()
  }, {
    key: "secureDeleteItemAsync",
    value: function () {
      var _secureDeleteItemAsync = (0, _asyncToGenerator2.default)(function* (key) {
        cov_1wlr82ylgc().f[27]++;
        cov_1wlr82ylgc().s[224]++;
        try {
          var refKey = (cov_1wlr82ylgc().s[225]++, `${key}_ref`);
          var storageLocation = (cov_1wlr82ylgc().s[226]++, yield SecureStore.getItemAsync(refKey));
          cov_1wlr82ylgc().s[227]++;
          if (storageLocation === 'keychain') {
            cov_1wlr82ylgc().b[31][0]++;
            cov_1wlr82ylgc().s[228]++;
            try {
              cov_1wlr82ylgc().s[229]++;
              yield Keychain.resetGenericPassword({
                service: 'pawfectmatch-auth'
              });
            } catch (keychainError) {
              cov_1wlr82ylgc().s[230]++;
              _core.logger.warn(`Keychain deletion failed, continuing with cleanup`, {
                error: keychainError
              });
            }
            cov_1wlr82ylgc().s[231]++;
            yield SecureStore.deleteItemAsync(refKey);
          } else {
            cov_1wlr82ylgc().b[31][1]++;
            cov_1wlr82ylgc().s[232]++;
            if (storageLocation === 'securestore') {
              cov_1wlr82ylgc().b[32][0]++;
              cov_1wlr82ylgc().s[233]++;
              yield SecureStore.deleteItemAsync(key);
              cov_1wlr82ylgc().s[234]++;
              yield SecureStore.deleteItemAsync(refKey);
            } else {
              cov_1wlr82ylgc().b[32][1]++;
              cov_1wlr82ylgc().s[235]++;
              try {
                cov_1wlr82ylgc().s[236]++;
                yield SecureStore.deleteItemAsync(key);
              } catch (error) {}
            }
          }
        } catch (error) {
          cov_1wlr82ylgc().s[237]++;
          _core.logger.error(`Failed to securely delete ${key}`, {
            error: error
          });
        }
      });
      function secureDeleteItemAsync(_x9) {
        return _secureDeleteItemAsync.apply(this, arguments);
      }
      return secureDeleteItemAsync;
    }()
  }, {
    key: "storeAuthData",
    value: function () {
      var _storeAuthData = (0, _asyncToGenerator2.default)(function* (response) {
        cov_1wlr82ylgc().f[28]++;
        cov_1wlr82ylgc().s[238]++;
        try {
          cov_1wlr82ylgc().s[239]++;
          yield Promise.all([this.secureSetItemAsync(AuthService.ACCESS_TOKEN_KEY, response.accessToken), this.secureSetItemAsync(AuthService.REFRESH_TOKEN_KEY, response.refreshToken), this.secureSetItemAsync(AuthService.USER_KEY, JSON.stringify(response.user)), this.secureSetItemAsync(AuthService.SESSION_START_KEY, Date.now().toString()), this.secureSetItemAsync(AuthService.LAST_ACTIVITY_KEY, Date.now().toString())]);
          cov_1wlr82ylgc().s[240]++;
          this.startSessionMonitoring();
        } catch (error) {
          cov_1wlr82ylgc().s[241]++;
          _core.logger.error("Failed to store auth data", {
            error: error
          });
          cov_1wlr82ylgc().s[242]++;
          throw new AuthError("Failed to save authentication data", error);
        }
      });
      function storeAuthData(_x0) {
        return _storeAuthData.apply(this, arguments);
      }
      return storeAuthData;
    }()
  }, {
    key: "clearAuthData",
    value: function () {
      var _clearAuthData = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[29]++;
        cov_1wlr82ylgc().s[243]++;
        try {
          cov_1wlr82ylgc().s[244]++;
          yield Promise.all([this.secureDeleteItemAsync(AuthService.ACCESS_TOKEN_KEY), this.secureDeleteItemAsync(AuthService.REFRESH_TOKEN_KEY), this.secureDeleteItemAsync(AuthService.USER_KEY), this.secureDeleteItemAsync(AuthService.SESSION_START_KEY), this.secureDeleteItemAsync(AuthService.LAST_ACTIVITY_KEY)]);
          cov_1wlr82ylgc().s[245]++;
          this.stopSessionMonitoring();
        } catch (error) {
          cov_1wlr82ylgc().s[246]++;
          _core.logger.error("Failed to clear auth data", {
            error: error
          });
        }
      });
      function clearAuthData() {
        return _clearAuthData.apply(this, arguments);
      }
      return clearAuthData;
    }()
  }, {
    key: "getRefreshToken",
    value: function () {
      var _getRefreshToken = (0, _asyncToGenerator2.default)(function* () {
        cov_1wlr82ylgc().f[30]++;
        cov_1wlr82ylgc().s[247]++;
        try {
          cov_1wlr82ylgc().s[248]++;
          return yield this.secureGetItemAsync(AuthService.REFRESH_TOKEN_KEY);
        } catch (error) {
          cov_1wlr82ylgc().s[249]++;
          _core.logger.error("Failed to get refresh token", {
            error: error
          });
          cov_1wlr82ylgc().s[250]++;
          return null;
        }
      });
      function getRefreshToken() {
        return _getRefreshToken.apply(this, arguments);
      }
      return getRefreshToken;
    }()
  }]);
}();
AuthService.ACCESS_TOKEN_KEY = (cov_1wlr82ylgc().s[0]++, "auth_access_token");
AuthService.REFRESH_TOKEN_KEY = (cov_1wlr82ylgc().s[1]++, "auth_refresh_token");
AuthService.USER_KEY = (cov_1wlr82ylgc().s[2]++, "auth_user");
AuthService.BIOMETRIC_ENABLED_KEY = (cov_1wlr82ylgc().s[3]++, "biometric_enabled");
AuthService.BIOMETRIC_CREDENTIALS_KEY = (cov_1wlr82ylgc().s[4]++, "biometric_credentials");
AuthService.SESSION_START_KEY = (cov_1wlr82ylgc().s[5]++, "session_start_time");
AuthService.LAST_ACTIVITY_KEY = (cov_1wlr82ylgc().s[6]++, "last_activity_time");
AuthService.SERVICE_NAME = (cov_1wlr82ylgc().s[7]++, "com.pawfectmatch.mobile");
AuthService.SESSION_TIMEOUT = (cov_1wlr82ylgc().s[8]++, 24 * 60 * 60 * 1000);
AuthService.ACTIVITY_TIMEOUT = (cov_1wlr82ylgc().s[9]++, 30 * 60 * 1000);
var AuthError = exports.AuthError = function (_Error) {
  function AuthError(message, originalError) {
    var _this2;
    (0, _classCallCheck2.default)(this, AuthError);
    cov_1wlr82ylgc().f[31]++;
    cov_1wlr82ylgc().s[251]++;
    _this2 = _callSuper(this, AuthError, [message]);
    _this2.originalError = originalError;
    cov_1wlr82ylgc().s[252]++;
    _this2.name = "AuthError";
    return _this2;
  }
  (0, _inherits2.default)(AuthError, _Error);
  return (0, _createClass2.default)(AuthError);
}((0, _wrapNativeSuper2.default)(Error));
var authService = exports.authService = (cov_1wlr82ylgc().s[253]++, new AuthService());
var _default = exports.default = authService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,