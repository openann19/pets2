{"version":3,"names":["_interopRequireDefault","require","_classCallCheck2","_createClass2","Object","defineProperty","exports","value","RateLimiter","config","default","points","duration","tokens","lastRefill","Date","now","key","tryConsume","tokensToConsume","arguments","length","undefined","refill","elapsed","tokensToAdd","Math","floor","min","getRemainingTokens","getTimeUntilRefill","remaining","max","reset"],"sources":["RateLimiter.js"],"sourcesContent":["\"use strict\";\n/**\n * Rate Limiter\n * Token bucket rate limiting implementation\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RateLimiter = void 0;\nclass RateLimiter {\n    points;\n    duration;\n    tokens;\n    lastRefill;\n    constructor(config) {\n        this.points = config.points;\n        this.duration = config.duration;\n        this.tokens = config.points;\n        this.lastRefill = Date.now();\n    }\n    /**\n     * Try to consume tokens\n     * @param tokensToConsume Number of tokens to consume (default: 1)\n     * @returns true if tokens were consumed, false if rate limit exceeded\n     */\n    tryConsume(tokensToConsume = 1) {\n        this.refill();\n        if (this.tokens >= tokensToConsume) {\n            this.tokens -= tokensToConsume;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Refill tokens based on elapsed time\n     */\n    refill() {\n        const now = Date.now();\n        const elapsed = (now - this.lastRefill) / 1000; // Convert to seconds\n        if (elapsed >= this.duration) {\n            // Full refill\n            this.tokens = this.points;\n            this.lastRefill = now;\n        }\n        else {\n            // Partial refill based on elapsed time\n            const tokensToAdd = Math.floor((elapsed / this.duration) * this.points);\n            this.tokens = Math.min(this.points, this.tokens + tokensToAdd);\n            this.lastRefill = now;\n        }\n    }\n    /**\n     * Get remaining tokens\n     */\n    getRemainingTokens() {\n        this.refill();\n        return this.tokens;\n    }\n    /**\n     * Get time until next refill\n     */\n    getTimeUntilRefill() {\n        const now = Date.now();\n        const elapsed = (now - this.lastRefill) / 1000;\n        const remaining = this.duration - elapsed;\n        return Math.max(0, remaining);\n    }\n    /**\n     * Reset rate limiter\n     */\n    reset() {\n        this.tokens = this.points;\n        this.lastRefill = Date.now();\n    }\n}\nexports.RateLimiter = RateLimiter;\n"],"mappings":"AAAA,YAAY;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAA,IAAAC,gBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAA,IAAAE,aAAA,GAAAH,sBAAA,CAAAC,OAAA;AAKbG,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAAC,IACvBA,WAAW;EAKb,SAAAA,YAAYC,MAAM,EAAE;IAAA,IAAAP,gBAAA,CAAAQ,OAAA,QAAAF,WAAA;IAChB,IAAI,CAACG,MAAM,GAAGF,MAAM,CAACE,MAAM;IAC3B,IAAI,CAACC,QAAQ,GAAGH,MAAM,CAACG,QAAQ;IAC/B,IAAI,CAACC,MAAM,GAAGJ,MAAM,CAACE,MAAM;IAC3B,IAAI,CAACG,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EAChC;EAAC,WAAAb,aAAA,CAAAO,OAAA,EAAAF,WAAA;IAAAS,GAAA;IAAAV,KAAA,EAMD,SAAAW,UAAUA,CAAA,EAAsB;MAAA,IAArBC,eAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;MAC1B,IAAI,CAACG,MAAM,CAAC,CAAC;MACb,IAAI,IAAI,CAACV,MAAM,IAAIM,eAAe,EAAE;QAChC,IAAI,CAACN,MAAM,IAAIM,eAAe;QAC9B,OAAO,IAAI;MACf;MACA,OAAO,KAAK;IAChB;EAAC;IAAAF,GAAA;IAAAV,KAAA,EAID,SAAAgB,MAAMA,CAAA,EAAG;MACL,IAAMP,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB,IAAMQ,OAAO,GAAG,CAACR,GAAG,GAAG,IAAI,CAACF,UAAU,IAAI,IAAI;MAC9C,IAAIU,OAAO,IAAI,IAAI,CAACZ,QAAQ,EAAE;QAE1B,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,MAAM;QACzB,IAAI,CAACG,UAAU,GAAGE,GAAG;MACzB,CAAC,MACI;QAED,IAAMS,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAEH,OAAO,GAAG,IAAI,CAACZ,QAAQ,GAAI,IAAI,CAACD,MAAM,CAAC;QACvE,IAAI,CAACE,MAAM,GAAGa,IAAI,CAACE,GAAG,CAAC,IAAI,CAACjB,MAAM,EAAE,IAAI,CAACE,MAAM,GAAGY,WAAW,CAAC;QAC9D,IAAI,CAACX,UAAU,GAAGE,GAAG;MACzB;IACJ;EAAC;IAAAC,GAAA;IAAAV,KAAA,EAID,SAAAsB,kBAAkBA,CAAA,EAAG;MACjB,IAAI,CAACN,MAAM,CAAC,CAAC;MACb,OAAO,IAAI,CAACV,MAAM;IACtB;EAAC;IAAAI,GAAA;IAAAV,KAAA,EAID,SAAAuB,kBAAkBA,CAAA,EAAG;MACjB,IAAMd,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB,IAAMQ,OAAO,GAAG,CAACR,GAAG,GAAG,IAAI,CAACF,UAAU,IAAI,IAAI;MAC9C,IAAMiB,SAAS,GAAG,IAAI,CAACnB,QAAQ,GAAGY,OAAO;MACzC,OAAOE,IAAI,CAACM,GAAG,CAAC,CAAC,EAAED,SAAS,CAAC;IACjC;EAAC;IAAAd,GAAA;IAAAV,KAAA,EAID,SAAA0B,KAAKA,CAAA,EAAG;MACJ,IAAI,CAACpB,MAAM,GAAG,IAAI,CAACF,MAAM;MACzB,IAAI,CAACG,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAChC;EAAC;AAAA;AAELV,OAAO,CAACE,WAAW,GAAGA,WAAW","ignoreList":[]}