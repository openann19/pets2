{"version":3,"names":["ImageManipulator","_interopRequireWildcard","require","FileSystem","_core","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","cov_14h5vul7hp","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","b","_coverageSchema","coverage","actualCoverage","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","ImageCompressionService","_classCallCheck2","_createClass2","key","value","_compressImage","_asyncToGenerator2","imageUri","options","opts","DEFAULT_OPTIONS","logger","info","uri","substring","originalInfo","getInfoAsync","originalSize","exists","size","manipulatedImage","manipulateAsync","resize","width","maxWidth","height","maxHeight","compress","quality","format","SaveFormat","PNG","JPEG","compressedInfo","compressedSize","compressionRatio","result","formatFileSize","toFixed","dimensions","String","error","Error","compressImage","_x","_compressImages","imageUris","results","compressImages","_x2","getOptimalCompressionSettings","isJpeg","toLowerCase","includes","isPng","_compressAvatarImage","compressAvatarImage","_x3","_compressPetImage","compressPetImage","_x4","_compressChatImage","compressChatImage","_x5","_validateImage","isValid","maxSize","supportedExtensions","hasValidExtension","some","ext","endsWith","validateImage","_x6","_cleanupTempImages","deleteAsync","idempotent","warn","cleanupTempImages","_x7","bytes","_ref","k","sizes","Math","floor","log","sizeUnit","min","pow","_getImageDimensions","getImageDimensions","_x8","maintainAspectRatio","imageCompression","exports","_default"],"sources":["ImageCompressionService.ts"],"sourcesContent":["/**\n * Image Compression Service for PawfectMatch Mobile App\n * Provides client-side image resizing and compression before upload\n */\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport * as FileSystem from \"expo-file-system\";\nimport { logger } from \"@pawfectmatch/core\";\n\nexport interface ImageCompressionOptions {\n  maxWidth?: number;\n  maxHeight?: number;\n  quality?: number; // 0-1\n  format?: \"jpeg\" | \"png\";\n  maintainAspectRatio?: boolean;\n}\n\nexport interface CompressedImageResult {\n  uri: string;\n  width: number;\n  height: number;\n  size: number;\n  originalSize: number;\n  compressionRatio: number;\n}\n\nclass ImageCompressionService {\n  private static readonly DEFAULT_OPTIONS: Required<ImageCompressionOptions> = {\n    maxWidth: 1920,\n    maxHeight: 1920,\n    quality: 0.8,\n    format: \"jpeg\",\n    maintainAspectRatio: true,\n  };\n\n  /**\n   * Compress and resize an image\n   */\n  async compressImage(\n    imageUri: string,\n    options: ImageCompressionOptions = {},\n  ): Promise<CompressedImageResult> {\n    try {\n      const opts = { ...ImageCompressionService.DEFAULT_OPTIONS, ...options };\n\n      logger.info(\"Starting image compression\", {\n        uri: imageUri.substring(0, 50) + \"...\",\n        options: opts,\n      });\n\n      // Get original file info\n      const originalInfo = await FileSystem.getInfoAsync(imageUri);\n      const originalSize = originalInfo.exists ? originalInfo.size : 0;\n\n      // Perform image manipulation\n      const manipulatedImage = await ImageManipulator.manipulateAsync(\n        imageUri,\n        [\n          {\n            resize: {\n              width: opts.maxWidth,\n              height: opts.maxHeight,\n            },\n          },\n        ],\n        {\n          compress: opts.quality,\n          format:\n            opts.format === \"png\"\n              ? ImageManipulator.SaveFormat.PNG\n              : ImageManipulator.SaveFormat.JPEG,\n        },\n      );\n\n      // Get compressed file info\n      const compressedInfo = await FileSystem.getInfoAsync(\n        manipulatedImage.uri,\n      );\n      const compressedSize = compressedInfo.exists ? compressedInfo.size : 0;\n\n      const compressionRatio =\n        originalSize > 0 ? (originalSize - compressedSize) / originalSize : 0;\n\n      const result: CompressedImageResult = {\n        uri: manipulatedImage.uri,\n        width: manipulatedImage.width,\n        height: manipulatedImage.height,\n        size: compressedSize,\n        originalSize,\n        compressionRatio,\n      };\n\n      logger.info(\"Image compression completed\", {\n        originalSize: this.formatFileSize(originalSize),\n        compressedSize: this.formatFileSize(compressedSize),\n        compressionRatio: `${(compressionRatio * 100).toFixed(1)}%`,\n        dimensions: `${String(manipulatedImage.width)}x${String(manipulatedImage.height)}`,\n      });\n\n      return result;\n    } catch (error) {\n      logger.error(\"Image compression failed\", { error, imageUri });\n      throw new Error(\"Failed to compress image\");\n    }\n  }\n\n  /**\n   * Compress multiple images in batch\n   */\n  async compressImages(\n    imageUris: string[],\n    options: ImageCompressionOptions = {},\n  ): Promise<CompressedImageResult[]> {\n    const results: CompressedImageResult[] = [];\n\n    for (const uri of imageUris) {\n      try {\n        const result = await this.compressImage(uri, options);\n        results.push(result);\n      } catch (error) {\n        logger.error(\"Failed to compress image in batch\", { error, uri });\n        // Continue with other images even if one fails\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Get optimal compression settings based on image type\n   */\n  getOptimalCompressionSettings(imageUri: string): ImageCompressionOptions {\n    // Check file extension or MIME type for optimization\n    const isJpeg =\n      imageUri.toLowerCase().includes(\".jpg\") ||\n      imageUri.toLowerCase().includes(\".jpeg\");\n    const isPng = imageUri.toLowerCase().includes(\".png\");\n\n    if (isJpeg) {\n      // JPEGs can handle higher compression\n      return {\n        maxWidth: 1920,\n        maxHeight: 1920,\n        quality: 0.75,\n        format: \"jpeg\",\n      };\n    } else if (isPng) {\n      // PNGs are lossless, but we can still resize\n      return {\n        maxWidth: 1920,\n        maxHeight: 1920,\n        quality: 0.9,\n        format: \"png\",\n      };\n    }\n\n    // Default settings\n    return ImageCompressionService.DEFAULT_OPTIONS;\n  }\n\n  /**\n   * Compress image for avatar (smaller dimensions)\n   */\n  async compressAvatarImage(imageUri: string): Promise<CompressedImageResult> {\n    return this.compressImage(imageUri, {\n      maxWidth: 512,\n      maxHeight: 512,\n      quality: 0.8,\n      format: \"jpeg\",\n    });\n  }\n\n  /**\n   * Compress image for pet photos (standard dimensions)\n   */\n  async compressPetImage(imageUri: string): Promise<CompressedImageResult> {\n    return this.compressImage(\n      imageUri,\n      this.getOptimalCompressionSettings(imageUri),\n    );\n  }\n\n  /**\n   * Compress image for chat messages (smaller for faster upload)\n   */\n  async compressChatImage(imageUri: string): Promise<CompressedImageResult> {\n    return this.compressImage(imageUri, {\n      maxWidth: 1024,\n      maxHeight: 1024,\n      quality: 0.7,\n      format: \"jpeg\",\n    });\n  }\n\n  /**\n   * Validate image before compression\n   */\n  async validateImage(\n    imageUri: string,\n  ): Promise<{ isValid: boolean; error?: string }> {\n    try {\n      const info = await FileSystem.getInfoAsync(imageUri);\n\n      if (!info.exists) {\n        return { isValid: false, error: \"Image file does not exist\" };\n      }\n\n      // Check file size (max 20MB)\n      const maxSize = 20 * 1024 * 1024; // 20MB\n      if (info.size > maxSize) {\n        return { isValid: false, error: \"Image file is too large (max 20MB)\" };\n      }\n\n      // Check if it's actually an image\n      const supportedExtensions = [\".jpg\", \".jpeg\", \".png\", \".gif\", \".webp\"];\n      const hasValidExtension = supportedExtensions.some((ext) =>\n        imageUri.toLowerCase().endsWith(ext),\n      );\n\n      if (!hasValidExtension) {\n        return { isValid: false, error: \"Unsupported image format\" };\n      }\n\n      return { isValid: true };\n    } catch (error) {\n      logger.error(\"Image validation failed\", { error, imageUri });\n      return { isValid: false, error: \"Failed to validate image\" };\n    }\n  }\n\n  /**\n   * Clean up temporary compressed images\n   */\n  async cleanupTempImages(imageUris: string[]): Promise<void> {\n    for (const uri of imageUris) {\n      try {\n        // Only delete files that are in the cache/temp directory\n        if (\n          uri.includes(\"ImageManipulator\") ||\n          uri.includes(\"temp\") ||\n          uri.includes(\"cache\")\n        ) {\n          await FileSystem.deleteAsync(uri, { idempotent: true });\n        }\n      } catch (error) {\n        logger.warn(\"Failed to cleanup temp image\", { error, uri });\n      }\n    }\n  }\n\n  /**\n   * Format file size in human readable format\n   */\n  private formatFileSize(bytes: number): string {\n    if (bytes === 0) return \"0 B\";\n\n    const k = 1024;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    const sizeUnit = sizes[Math.min(i, sizes.length - 1)] ?? \"B\";\n\n    return `${(bytes / Math.pow(k, i)).toFixed(1)} ${sizeUnit}`;\n  }\n\n  /**\n   * Get image dimensions without loading full image\n   */\n  async getImageDimensions(\n    imageUri: string,\n  ): Promise<{ width: number; height: number } | null> {\n    try {\n      const result = await ImageManipulator.manipulateAsync(\n        imageUri,\n        [], // No manipulations\n        { format: ImageManipulator.SaveFormat.JPEG },\n      );\n\n      return {\n        width: result.width,\n        height: result.height,\n      };\n    } catch (error) {\n      logger.error(\"Failed to get image dimensions\", { error, imageUri });\n      return null;\n    }\n  }\n}\n\n// Create singleton instance\nexport const imageCompression = new ImageCompressionService();\n\n// Export types and utilities\nexport default imageCompression;\n"],"mappings":";;;;;;;;;;;AAIA,IAAAA,gBAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAF,uBAAA,CAAAC,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AAA4C,SAAAD,wBAAAI,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAN,uBAAA,YAAAA,wBAAAI,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,GAAA,IAAAd,CAAA,gBAAAc,GAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,GAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,GAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,GAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,GAAA,IAAAd,CAAA,CAAAc,GAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAAA,SAAAmB,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAA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","ignoreList":[]}