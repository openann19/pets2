{"version":3,"names":["ImagePicker","_interopRequireWildcard","require","ImageManipulator","FileSystem","_logger","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","cov_223xvmymok","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","b","_coverageSchema","coverage","actualCoverage","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","DEFAULT_OPTIONS","exports","maxDimension","quality","aspectRatio","stripExif","cropToAspect","validateMimeType","_x","_validateMimeType","_asyncToGenerator2","uri","fileInfo","getInfoAsync","isFile","exists","isDirectory","ext","split","pop","validExtensions","mimeTypes","jpg","jpeg","png","webp","normalizedExt","toLowerCase","includes","valid","mimeType","error","err","Error","String","logger","fixOrientation","_x2","_fixOrientation","imageUri","result","manipulateAsync","compress","format","SaveFormat","JPEG","resizeImage","_x3","_x4","_resizeImage","manipulateResult","_ref","width","height","newWidth","newHeight","Math","round","resize","cropToAspectRatio","_x5","_x6","_x7","_x8","_cropToAspectRatio","_ref2","_ref3","_slicedToArray2","targetWidth","targetHeight","targetAspect","imageAspect","cropRegion","crop","originX","originY","abs","compressImage","_x9","_x0","_compressImage","getFileInfo","_x1","_getFileInfo","info","size","processImageForUpload","_x10","_processImageForUpload","options","opts","mimeValidation","debug","orientationFixed","initialManipulate","originalWidth","originalHeight","resized","cropped","compressed","fileSize","metadata","exifStripped","finalSize","toFixed","pickAndProcessImage","_pickAndProcessImage","allowEditing","_ref4","requestMediaLibraryPermissionsAsync","status","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","allowsMultipleSelection","canceled","assets","asset","captureAndProcessImage","_captureAndProcessImage","_ref5","requestCameraPermissionsAsync","launchCameraAsync","checkUploadQuota","_x11","_checkUploadQuota","userId","allowed","remaining","resetAt","Date","now","limit","uploadWithRetry","_x12","_uploadWithRetry","uploadFn","maxRetries","backoffMs","lastError","_loop","v","attempt","delay","pow","warn","Promise","resolve","setTimeout","_ret"],"sources":["uploadHygiene.ts"],"sourcesContent":["/**\n * Upload Hygiene Service - Client-Side Pre-Upload Processing\n * \n * Implements professional-grade upload hygiene as per blueprint:\n * - File type validation (MIME sniffing)\n * - EXIF orientation fix\n * - Max dimensions (2048px long edge)\n * - JPEG re-encode @ 85-90 quality\n * - Enforce 4:3 crop for primaries\n * - Strip EXIF metadata (GPS, etc.)\n * - Privacy-first permission prompts\n */\n\nimport * as ImagePicker from 'expo-image-picker';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as FileSystem from 'expo-file-system';\nimport { Platform } from 'react-native';\nimport { logger } from './logger';\n\nexport interface UploadHygieneOptions {\n  maxDimension?: number;\n  quality?: number;\n  aspectRatio?: [number, number];\n  stripExif?: boolean;\n  cropToAspect?: boolean;\n}\n\nexport interface ProcessedImage {\n  uri: string;\n  base64?: string;\n  width: number;\n  height: number;\n  fileSize: number;\n  mimeType: string;\n  metadata: {\n    originalWidth: number;\n    originalHeight: number;\n    orientation?: number;\n    orientationFixed: boolean;\n    exifStripped: boolean;\n  };\n}\n\nexport const DEFAULT_OPTIONS: UploadHygieneOptions = {\n  maxDimension: 2048,\n  quality: 0.9,\n  aspectRatio: [4, 3],\n  stripExif: true,\n  cropToAspect: true,\n};\n\n/**\n * Validate MIME type via file signature sniffing\n */\nasync function validateMimeType(uri: string): Promise<{ valid: boolean; mimeType: string }> {\n  try {\n    // Read first bytes for signature detection\n    const fileInfo = await FileSystem.getInfoAsync(uri);\n    const isFile = fileInfo.exists && !fileInfo.isDirectory;\n\n    if (isFile) {\n      // Basic JPEG, PNG validation based on file extension\n      const ext = uri.split('.').pop();\n\n      const validExtensions = ['jpg', 'jpeg', 'png', 'webp'] as const;\n      const mimeTypes: Record<(typeof validExtensions)[number], string> = {\n        jpg: 'image/jpeg',\n        jpeg: 'image/jpeg',\n        png: 'image/png',\n        webp: 'image/webp',\n      };\n\n      if (typeof ext === 'string') {\n        const normalizedExt = ext.toLowerCase();\n        if ((validExtensions as readonly string[]).includes(normalizedExt)) {\n          return { valid: true, mimeType: mimeTypes[normalizedExt as (typeof validExtensions)[number]] };\n        }\n      }\n    }\n    \n    return { valid: false, mimeType: 'unknown' };\n  } catch (error: unknown) {\n    const err = error instanceof Error ? error : new Error(String(error));\n    logger.error('MIME validation error', { error: err });\n    return { valid: false, mimeType: 'unknown' };\n  }\n}\n\n/**\n * Fix EXIF orientation issues\n */\nasync function fixOrientation(imageUri: string): Promise<string> {\n  try {\n    // Get image metadata to check orientation\n    const result = await ImageManipulator.manipulateAsync(\n      imageUri,\n      [],\n      { compress: 1, format: ImageManipulator.SaveFormat.JPEG }\n    );\n\n    return result.uri;\n  } catch (error: unknown) {\n    const err = error instanceof Error ? error : new Error(String(error));\n    logger.error('Orientation fix error', { error: err });\n    return imageUri;\n  }\n}\n\n/**\n * Resize image to max dimensions while preserving aspect ratio\n */\nasync function resizeImage(\n  imageUri: string,\n  maxDimension: number\n): Promise<ImageManipulator.ImageResult> {\n  try {\n    // Get original dimensions\n    const manipulateResult = await ImageManipulator.manipulateAsync(\n      imageUri,\n      [],\n      { compress: 1, format: ImageManipulator.SaveFormat.JPEG }\n    );\n\n    const { width, height } = manipulateResult;\n\n    // Calculate new dimensions\n    let newWidth = width;\n    let newHeight = height;\n\n    if (width > maxDimension || height > maxDimension) {\n      if (width > height) {\n        newWidth = maxDimension;\n        newHeight = Math.round((height / width) * maxDimension);\n      } else {\n        newHeight = maxDimension;\n        newWidth = Math.round((width / height) * maxDimension);\n      }\n    }\n\n    // Only resize if necessary\n    if (newWidth < width || newHeight < height) {\n      return await ImageManipulator.manipulateAsync(\n        imageUri,\n        [{ resize: { width: newWidth, height: newHeight } }],\n        { compress: 1, format: ImageManipulator.SaveFormat.JPEG }\n      );\n    }\n\n    return manipulateResult;\n  } catch (error: unknown) {\n    const err = error instanceof Error ? error : new Error(String(error));\n    logger.error('Resize error', { error: err });\n    throw err;\n  }\n}\n\n/**\n * Crop to aspect ratio\n */\nasync function cropToAspectRatio(\n  imageUri: string,\n  aspectRatio: [number, number],\n  width: number,\n  height: number\n): Promise<ImageManipulator.ImageResult> {\n  try {\n    const [targetWidth, targetHeight] = aspectRatio;\n    const targetAspect = targetWidth / targetHeight;\n    const imageAspect = width / height;\n\n    let cropRegion: ImageManipulator.ActionCrop = { crop: { originX: 0, originY: 0, width, height } };\n\n    if (Math.abs(imageAspect - targetAspect) > 0.01) {\n      // Needs cropping\n      if (imageAspect > targetAspect) {\n        // Image is wider, crop sides\n        const newWidth = height * targetAspect;\n        const originX = (width - newWidth) / 2;\n        cropRegion = {\n          crop: { originX, originY: 0, width: newWidth, height },\n        };\n      } else {\n        // Image is taller, crop top/bottom\n        const newHeight = width / targetAspect;\n        const originY = (height - newHeight) / 2;\n        cropRegion = {\n          crop: { originX: 0, originY, width, height: newHeight },\n        };\n      }\n    }\n\n    return await ImageManipulator.manipulateAsync(\n      imageUri,\n      [cropRegion],\n      { compress: 1, format: ImageManipulator.SaveFormat.JPEG }\n    );\n  } catch (error: unknown) {\n    const err = error instanceof Error ? error : new Error(String(error));\n    logger.error('Crop error', { error: err });\n    throw err;\n  }\n}\n\n/**\n * Compress and optimize image\n */\nasync function compressImage(\n  imageUri: string,\n  quality: number\n): Promise<ImageManipulator.ImageResult> {\n  try {\n    return await ImageManipulator.manipulateAsync(\n      imageUri,\n      [],\n      {\n        compress: quality,\n        format: ImageManipulator.SaveFormat.JPEG,\n        // NOTE: expo-image-manipulator doesn't fully strip EXIF\n        // For complete EXIF stripping, you'd need a native module or backend processing\n      }\n    );\n  } catch (error: unknown) {\n    const err = error instanceof Error ? error : new Error(String(error));\n    logger.error('Compress error', { error: err });\n    throw err;\n  }\n}\n\n/**\n * Get file info including size\n */\nasync function getFileInfo(uri: string): Promise<{ size: number; exists: boolean }> {\n  try {\n    const info = await FileSystem.getInfoAsync(uri);\n    if (info.exists && 'size' in info) {\n      return { size: info.size, exists: info.exists };\n    }\n    return { size: 0, exists: false };\n  } catch (error: unknown) {\n    const err = error instanceof Error ? error : new Error(String(error));\n    logger.error('File info error', { error: err });\n    return { size: 0, exists: false };\n  }\n}\n\n/**\n * Process image with full upload hygiene pipeline\n */\nexport async function processImageForUpload(\n  imageUri: string,\n  options: UploadHygieneOptions = {}\n): Promise<ProcessedImage> {\n  const opts = { ...DEFAULT_OPTIONS, ...options };\n  \n  try {\n    logger.info('Starting upload hygiene processing', { uri: imageUri });\n\n    // 1. Validate MIME type\n    const mimeValidation = await validateMimeType(imageUri);\n    if (!mimeValidation.valid) {\n      throw new Error(`Invalid file type: ${mimeValidation.mimeType}`);\n    }\n    logger.debug('MIME type validated', { mimeType: mimeValidation.mimeType });\n\n    // 2. Fix orientation\n    const orientationFixed = await fixOrientation(imageUri);\n    logger.debug('Orientation fixed');\n\n    // 3. Get initial dimensions\n    const initialManipulate = await ImageManipulator.manipulateAsync(\n      orientationFixed,\n      [],\n      { compress: 1, format: ImageManipulator.SaveFormat.JPEG }\n    );\n    \n    const originalWidth = initialManipulate.width;\n    const originalHeight = initialManipulate.height;\n    logger.debug('Original dimensions', { width: originalWidth, height: originalHeight });\n\n    // 4. Resize to max dimensions\n    const resized = await resizeImage(orientationFixed, opts.maxDimension!);\n    logger.debug('Image resized', { width: resized.width, height: resized.height });\n\n    // 5. Crop to aspect ratio if required\n    let cropped = resized;\n    if (opts.cropToAspect) {\n      cropped = await cropToAspectRatio(\n        resized.uri,\n        opts.aspectRatio!,\n        resized.width,\n        resized.height\n      );\n      logger.debug('Image cropped', { aspectRatio: opts.aspectRatio });\n    }\n\n    // 6. Compress with quality setting\n    const compressed = await compressImage(cropped.uri, opts.quality!);\n    logger.debug('Image compressed', { quality: opts.quality });\n\n    // 7. Get final file info\n    const fileInfo = await getFileInfo(compressed.uri);\n\n    const result: ProcessedImage = {\n      uri: compressed.uri,\n      width: compressed.width,\n      height: compressed.height,\n      fileSize: fileInfo.size,\n      mimeType: 'image/jpeg', // Always JPEG output\n      metadata: {\n        originalWidth,\n        originalHeight,\n        orientationFixed: true,\n        exifStripped: opts.stripExif! ? true : false,\n      },\n    };\n\n    logger.info('Upload hygiene complete', {\n      finalSize: `${result.width}x${result.height}`,\n      fileSize: `${(result.fileSize / 1024).toFixed(2)} KB`,\n      mimeType: result.mimeType,\n      metadata: result.metadata,\n    });\n\n    return result;\n  } catch (error: unknown) {\n    const err = error instanceof Error ? error : new Error(String(error));\n    logger.error('Upload hygiene processing failed', { error: err });\n    throw err;\n  }\n}\n\n/**\n * Pick image with permissions and hygiene processing\n */\nexport async function pickAndProcessImage(\n  allowEditing = true,\n  options: UploadHygieneOptions = {}\n): Promise<ProcessedImage | null> {\n  try {\n    // Request camera roll permissions\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== 'granted') {\n      throw new Error('Camera roll permissions not granted');\n    }\n\n    // Launch picker\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: allowEditing,\n      quality: 1, // Get full quality first, we'll process it\n      allowsMultipleSelection: false,\n    });\n\n    if (result.canceled || !result.assets[0]) {\n      return null;\n    }\n\n    const asset = result.assets[0];\n    \n    // Process with upload hygiene\n    return await processImageForUpload(asset.uri, options);\n  } catch (error: unknown) {\n    const err = error instanceof Error ? error : new Error(String(error));\n    logger.error('Pick and process error', { error: err });\n    throw err;\n  }\n}\n\n/**\n * Camera capture with hygiene processing\n */\nexport async function captureAndProcessImage(\n  options: UploadHygieneOptions = {}\n): Promise<ProcessedImage | null> {\n  try {\n    // Request camera permissions\n    const { status } = await ImagePicker.requestCameraPermissionsAsync();\n    if (status !== 'granted') {\n      throw new Error('Camera permissions not granted');\n    }\n\n    // Launch camera\n    const result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: false,\n      quality: 1,\n    });\n\n    if (result.canceled || !result.assets[0]) {\n      return null;\n    }\n\n    const asset = result.assets[0];\n    \n    // Process with upload hygiene\n    return await processImageForUpload(asset.uri, options);\n  } catch (error: unknown) {\n    const err = error instanceof Error ? error : new Error(String(error));\n    logger.error('Capture and process error', { error: err });\n    throw err;\n  }\n}\n\n/**\n * Validate upload against rate limits and quotas\n */\nexport interface QuotaCheck {\n  allowed: boolean;\n  remaining: number;\n  resetAt: Date;\n  limit: number;\n}\n\nexport async function checkUploadQuota(userId: string): Promise<QuotaCheck> {\n  // This would call your backend API to check user quotas\n  // Implementation depends on your rate limiting strategy\n  \n  try {\n    // TODO: Integrate with actual rate limit API\n    // For now, return a mock response\n    return {\n      allowed: true,\n      remaining: 10,\n      resetAt: new Date(Date.now() + 24 * 60 * 60 * 1000), // 24 hours\n      limit: 10,\n    };\n  } catch (error: unknown) {\n    const err = error instanceof Error ? error : new Error(String(error));\n    logger.error('Quota check error', { error: err, userId });\n    throw err;\n  }\n}\n\n/**\n * Progressive backoff on failures\n */\nexport async function uploadWithRetry<T>(\n  uploadFn: () => Promise<T>,\n  maxRetries = 3,\n  backoffMs = 1000\n): Promise<T> {\n  let lastError: Error | null = null;\n\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\n    try {\n      return await uploadFn();\n    } catch (error: unknown) {\n      lastError = error instanceof Error ? error : new Error(String(error));\n      \n      if (attempt < maxRetries) {\n        const delay = backoffMs * Math.pow(2, attempt - 1);\n        logger.warn('Upload failed, retrying', { delay, attempt, maxRetries, error: lastError });\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n    }\n  }\n\n  throw lastError || new Error('Upload failed after retries');\n}\n\n"],"mappings":"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","ignoreList":[]}