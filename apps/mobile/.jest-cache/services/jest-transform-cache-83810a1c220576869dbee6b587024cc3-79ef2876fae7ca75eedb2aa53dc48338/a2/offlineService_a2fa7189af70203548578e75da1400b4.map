{"version":3,"names":["_core","require","_asyncStorage","_interopRequireDefault","_netinfo","_api","cov_zy4bheyw7","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","OfflineService","_classCallCheck2","isOnline","isSyncing","syncListeners","offlineData","pets","user","matches","messages","lastSync","Date","toISOString","pendingActions","initializeOfflineService","_createClass2","key","value","_initializeOfflineService","_asyncToGenerator2","loadOfflineData","setupNetworkMonitoring","startPeriodicSync","logger","info","error","String","_this","netInfoUnsubscribe","NetInfo","addEventListener","state","wasOffline","isConnected","triggerSync","notifyListeners","_this2","syncInterval","setInterval","_loadOfflineData","storedData","AsyncStorage","getItem","parsed","JSON","parse","_saveOfflineData","setItem","stringify","saveOfflineData","_triggerSync","syncPendingActions","syncFromServer","_syncPendingActions","_this3","actionsToSync","_toConsumableArray2","_loop","action","executePendingAction","a","id","actionId","retryCount","_action","Error","addPendingAction","data","now","Math","random","timestamp","getOfflineData","_getPets","api","getPets","warn","getUser","_getMatches","getMatches","_getMessages","matchId","getMessages","otherMessages","m","concat","_x","swipePet","petId","direction","_sendMessage","message","sendMessage","_x2","_x3","_updateProfile","profileData","updateUserProfile","updateProfile","_x4","performMatchAction","getSyncStatus","lastSyncTime","pendingActionsCount","syncProgress","addSyncStatusListener","listener","_this4","l","status","_clearOfflineData","removeItem","clearOfflineData","_getStorageSize","getAllKeys","totalSize","getStorageSize","cleanup","clearInterval","offlineService","exports"],"sources":["offlineService.ts"],"sourcesContent":["/**\n * Offline Support Service for PawfectMatch Mobile\n * Comprehensive offline functionality with data synchronization\n */\n\nimport { logger } from \"@pawfectmatch/core\";\nimport type { Match, Message, Pet, User } from \"@pawfectmatch/core/types\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport NetInfo, { type NetInfoState } from \"@react-native-community/netinfo\";\nimport { api } from \"./api\";\n\ninterface OfflineData {\n  pets: Pet[];\n  user: User | null;\n  matches: Match[];\n  messages: Message[];\n  lastSync: string;\n  pendingActions: PendingAction[];\n}\n\ninterface PendingAction {\n  id: string;\n  type: \"swipe\" | \"message\" | \"profile_update\" | \"match_action\";\n  data: unknown;\n  timestamp: string;\n  retryCount: number;\n}\n\ninterface SyncStatus {\n  isOnline: boolean;\n  isSyncing: boolean;\n  lastSyncTime: string | null;\n  pendingActionsCount: number;\n  syncProgress: number;\n}\n\nclass OfflineService {\n  private isOnline = true;\n  private isSyncing = false;\n  private syncListeners: ((status: SyncStatus) => void)[] = [];\n  private netInfoUnsubscribe?: () => void;\n  private syncInterval?: NodeJS.Timeout;\n  private offlineData: OfflineData = {\n    pets: [],\n    user: null,\n    matches: [],\n    messages: [],\n    lastSync: new Date().toISOString(),\n    pendingActions: [],\n  };\n\n  constructor() {\n    void this.initializeOfflineService();\n  }\n\n  /**\n   * Initialize offline service\n   */\n  private async initializeOfflineService(): Promise<void> {\n    try {\n      // Load offline data from storage\n      await this.loadOfflineData();\n\n      // Set up network monitoring\n      this.setupNetworkMonitoring();\n\n      // Start periodic sync\n      this.startPeriodicSync();\n\n      logger.info(\"Offline service initialized successfully\");\n    } catch (error) {\n      logger.error(\"Failed to initialize offline service\", {\n        error: String(error),\n      });\n    }\n  }\n\n  /**\n   * Set up network monitoring\n   */\n  private setupNetworkMonitoring(): void {\n    this.netInfoUnsubscribe = NetInfo.addEventListener((state: NetInfoState) => {\n      const wasOffline = !this.isOnline;\n      this.isOnline = state.isConnected === true;\n\n      if (wasOffline && this.isOnline) {\n        // Came back online, trigger sync\n        void this.triggerSync();\n      }\n\n      this.notifyListeners();\n    });\n  }\n\n  /**\n   * Start periodic sync when online\n   */\n  private startPeriodicSync(): void {\n    this.syncInterval = setInterval(() => {\n      if (this.isOnline && !this.isSyncing) {\n        void this.triggerSync();\n      }\n    }, 30000); // Sync every 30 seconds\n  }\n\n  /**\n   * Load offline data from storage\n   */\n  private async loadOfflineData(): Promise<void> {\n    try {\n      const storedData = await AsyncStorage.getItem(\"offline_data\");\n      if (storedData !== null && storedData !== \"\") {\n        const parsed: unknown = JSON.parse(storedData);\n        if (typeof parsed === \"object\" && parsed !== null) {\n          this.offlineData = parsed as OfflineData;\n        }\n      }\n    } catch (error) {\n      logger.error(\"Failed to load offline data\", { error: String(error) });\n    }\n  }\n\n  /**\n   * Save offline data to storage\n   */\n  private async saveOfflineData(): Promise<void> {\n    try {\n      await AsyncStorage.setItem(\n        \"offline_data\",\n        JSON.stringify(this.offlineData),\n      );\n    } catch (error) {\n      logger.error(\"Failed to save offline data\", { error: String(error) });\n    }\n  }\n\n  /**\n   * Trigger data synchronization\n   */\n  public async triggerSync(): Promise<void> {\n    if (this.isSyncing || !this.isOnline) {\n      return;\n    }\n\n    this.isSyncing = true;\n    this.notifyListeners();\n\n    try {\n      // Sync pending actions first\n      await this.syncPendingActions();\n\n      // Sync data from server\n      this.syncFromServer();\n\n      // Update last sync time\n      this.offlineData.lastSync = new Date().toISOString();\n      await this.saveOfflineData();\n\n      logger.info(\"Sync completed successfully\");\n    } catch (error) {\n      logger.error(\"Sync failed\", { error: String(error) });\n    } finally {\n      this.isSyncing = false;\n      this.notifyListeners();\n    }\n  }\n\n  /**\n   * Sync pending actions to server\n   */\n  private async syncPendingActions(): Promise<void> {\n    const actionsToSync = [...this.offlineData.pendingActions];\n\n    for (const action of actionsToSync) {\n      try {\n        await this.executePendingAction(action);\n\n        // Remove successful action\n        this.offlineData.pendingActions =\n          this.offlineData.pendingActions.filter((a) => a.id !== action.id);\n      } catch (error) {\n        logger.error(\"Failed to sync action\", {\n          actionId: action.id,\n          error: String(error),\n        });\n\n        // Increment retry count\n        action.retryCount++;\n\n        // Remove if max retries exceeded\n        if (action.retryCount >= 3) {\n          this.offlineData.pendingActions =\n            this.offlineData.pendingActions.filter((a) => a.id !== action.id);\n        }\n      }\n    }\n\n    await this.saveOfflineData();\n  }\n\n  /**\n   * Execute a pending action\n   */\n  private executePendingAction(_action: PendingAction): void {\n    // const actionData = action.data as Record<string, unknown>;\n    switch (_action.type) {\n      case \"swipe\":\n        // await api.swipePet(String(actionData['petId']), String(actionData['direction']) as 'like' | 'pass' | 'superlike');\n        break;\n      case \"message\":\n        // await api.sendMessage(String(actionData['matchId']), String(actionData['message']));\n        break;\n      case \"profile_update\":\n        // await api.updateUserProfile(actionData as Record<string, unknown>);\n        break;\n      case \"match_action\":\n        // await api.performMatchAction(String(actionData['matchId']), String(actionData['action']));\n        break;\n      default:\n        throw new Error(`Unknown action type: ${String(_action.type)}`);\n    }\n  }\n\n  /**\n   * Sync data from server\n   */\n  private syncFromServer(): void {\n    try {\n      // Sync user data\n      // const userData = await api.getCurrentUser();\n      // if (userData !== null && userData !== undefined) {\n      //   this.offlineData.user = userData as User;\n      // }\n      // Sync pets data\n      // const petsData = await api.getPets();\n      // if (petsData !== null) {\n      //   this.offlineData.pets = petsData as Pet[];\n      // }\n      // Sync matches\n      // const matchesData = await api.getMatches();\n      // if (matchesData !== null) {\n      //   this.offlineData.matches = matchesData as Match[];\n      //   // Sync messages for each match\n      //   const allMessages: Message[] = [];\n      //   for (const match of matchesData) {\n      //     const messages = await api.getMessages(match._id);\n      //     allMessages.push(...(messages as Message[]));\n      //   }\n      //   this.offlineData.messages = allMessages;\n      // }\n    } catch (error) {\n      logger.error(\"Failed to sync from server\", { error: String(error) });\n      throw error;\n    }\n  }\n\n  /**\n   * Add pending action for offline execution\n   */\n  public addPendingAction(type: PendingAction[\"type\"], data: unknown): void {\n    const action: PendingAction = {\n      id: `${type}_${String(Date.now())}_${String(Math.random())}`,\n      type,\n      data,\n      timestamp: new Date().toISOString(),\n      retryCount: 0,\n    };\n\n    this.offlineData.pendingActions.push(action);\n    void this.saveOfflineData();\n    this.notifyListeners();\n  }\n\n  /**\n   * Get offline data\n   */\n  public getOfflineData(): OfflineData {\n    return { ...this.offlineData };\n  }\n\n  /**\n   * Get pets (offline-first)\n   */\n  public async getPets(): Promise<Pet[]> {\n    if (this.isOnline) {\n      try {\n        const pets = await api.getPets();\n        this.offlineData.pets = pets;\n        await this.saveOfflineData();\n        return pets;\n      } catch (error) {\n        logger.warn(\"Failed to fetch pets online, using offline data\", {\n          error: String(error),\n        });\n      }\n    }\n\n    return this.offlineData.pets;\n  }\n\n  /**\n   * Get user (offline-first)\n   */\n  public getUser(): User | null {\n    if (this.isOnline) {\n      try {\n        // const user = await api.getCurrentUser();\n        // if (user !== null && user !== undefined) {\n        //   this.offlineData.user = user as User;\n        //   await this.saveOfflineData();\n        // }\n        // return user as User | null;\n      } catch (error) {\n        logger.warn(\"Failed to fetch user online, using offline data\", {\n          error: String(error),\n        });\n      }\n    }\n\n    return this.offlineData.user;\n  }\n\n  /**\n   * Get matches (offline-first)\n   */\n  public async getMatches(): Promise<Match[]> {\n    if (this.isOnline) {\n      try {\n        const matches = await api.getMatches();\n        this.offlineData.matches = matches;\n        await this.saveOfflineData();\n        return matches;\n      } catch (error) {\n        logger.warn(\"Failed to fetch matches online, using offline data\", {\n          error: String(error),\n        });\n      }\n    }\n\n    return this.offlineData.matches;\n  }\n\n  /**\n   * Get messages (offline-first)\n   */\n  public async getMessages(matchId: string): Promise<Message[]> {\n    if (this.isOnline) {\n      try {\n        const messages = await api.getMessages(matchId);\n        // This logic is a bit flawed, it replaces all messages with messages from one chat\n        // For a real app, we'd merge messages by matchId\n        interface MessageWithMatchId extends Message {\n          matchId?: string;\n        }\n        const otherMessages = this.offlineData.messages.filter(\n          (m) => (m as MessageWithMatchId).matchId !== matchId,\n        );\n        this.offlineData.messages = [...otherMessages, ...messages];\n        await this.saveOfflineData();\n        return messages;\n      } catch (error) {\n        logger.warn(\"Failed to fetch messages online, using offline data\", {\n          error: String(error),\n        });\n      }\n    }\n\n    interface MessageWithMatchId extends Message {\n      matchId?: string;\n    }\n    return this.offlineData.messages.filter(\n      (m) => (m as MessageWithMatchId).matchId === matchId,\n    );\n  }\n\n  /**\n   * Swipe pet (offline-aware)\n   */\n  public swipePet(\n    petId: string,\n    direction: \"like\" | \"pass\" | \"superlike\",\n  ): void {\n    if (this.isOnline) {\n      try {\n        // await api.swipePet(petId, direction);\n        // return;\n      } catch (error) {\n        logger.warn(\"Failed to swipe online, queuing for offline\", {\n          error: String(error),\n        });\n      }\n    }\n\n    // Queue for offline execution\n    this.addPendingAction(\"swipe\", { petId, direction });\n  }\n\n  /**\n   * Send message (offline-aware)\n   */\n  public async sendMessage(matchId: string, message: string): Promise<void> {\n    if (this.isOnline) {\n      try {\n        await api.sendMessage(matchId, message);\n        return;\n      } catch (error) {\n        logger.warn(\"Failed to send message online, queuing for offline\", {\n          error: String(error),\n        });\n      }\n    }\n\n    // Queue for offline execution\n    this.addPendingAction(\"message\", { matchId, message });\n  }\n\n  /**\n   * Update profile (offline-aware)\n   */\n  public async updateProfile(profileData: Partial<User>): Promise<void> {\n    if (this.isOnline) {\n      try {\n        await api.updateUserProfile(profileData);\n        return;\n      } catch (error) {\n        logger.warn(\"Failed to update profile online, queuing for offline\", {\n          error: String(error),\n        });\n      }\n    }\n\n    // Queue for offline execution\n    this.addPendingAction(\"profile_update\", profileData);\n  }\n\n  /**\n   * Perform match action (offline-aware)\n   */\n  public performMatchAction(matchId: string, action: string): void {\n    if (this.isOnline) {\n      try {\n        // await api.performMatchAction(matchId, action);\n        // return;\n      } catch (error) {\n        logger.warn(\n          \"Failed to perform match action online, queuing for offline\",\n          { error: String(error) },\n        );\n      }\n    }\n\n    // Queue for offline execution\n    this.addPendingAction(\"match_action\", { matchId, action });\n  }\n\n  /**\n   * Get sync status\n   */\n  public getSyncStatus(): SyncStatus {\n    return {\n      isOnline: this.isOnline,\n      isSyncing: this.isSyncing,\n      lastSyncTime: this.offlineData.lastSync,\n      pendingActionsCount: this.offlineData.pendingActions.length,\n      syncProgress: this.isSyncing ? 0.5 : 1.0,\n    };\n  }\n\n  /**\n   * Add sync status listener\n   */\n  public addSyncStatusListener(\n    listener: (status: SyncStatus) => void,\n  ): () => void {\n    this.syncListeners.push(listener);\n\n    // Return unsubscribe function\n    return () => {\n      this.syncListeners = this.syncListeners.filter((l) => l !== listener);\n    };\n  }\n\n  /**\n   * Notify sync status listeners\n   */\n  private notifyListeners(): void {\n    const status = this.getSyncStatus();\n    this.syncListeners.forEach((listener) => {\n      listener(status);\n    });\n  }\n\n  /**\n   * Clear offline data\n   */\n  public async clearOfflineData(): Promise<void> {\n    try {\n      await AsyncStorage.removeItem(\"offline_data\");\n      this.offlineData = {\n        pets: [],\n        user: null,\n        matches: [],\n        messages: [],\n        lastSync: new Date().toISOString(),\n        pendingActions: [],\n      };\n      logger.info(\"Offline data cleared\");\n    } catch (error) {\n      logger.error(\"Failed to clear offline data\", { error: String(error) });\n    }\n  }\n\n  /**\n   * Get offline storage size\n   */\n  public async getStorageSize(): Promise<number> {\n    try {\n      const keys = await AsyncStorage.getAllKeys();\n      let totalSize = 0;\n\n      for (const key of keys) {\n        const value = await AsyncStorage.getItem(key);\n        if (value !== null && value !== \"\") {\n          totalSize += value.length;\n        }\n      }\n\n      return totalSize;\n    } catch (error) {\n      logger.error(\"Failed to get storage size\", { error: String(error) });\n      return 0;\n    }\n  }\n\n  // ===== SECURITY CONTROLS =====\n\n  /**\n   * Cleanup method for testing - removes event listeners and timers\n   */\n  public cleanup(): void {\n    if (this.netInfoUnsubscribe) {\n      this.netInfoUnsubscribe();\n      this.netInfoUnsubscribe = undefined;\n    }\n    if (this.syncInterval) {\n      clearInterval(this.syncInterval);\n      this.syncInterval = undefined;\n    }\n    this.syncListeners = [];\n  }\n}\n\nexport const offlineService = new OfflineService();\n"],"mappings":"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","ignoreList":[]}