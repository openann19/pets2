{"version":3,"names":["_core","require","_api","FileSystem","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ChatService","_classCallCheck2","_createClass2","key","value","_sendReaction","_asyncToGenerator2","matchId","messageId","reaction","response","request","method","body","logger","info","error","sendReaction","_x","_x2","_x3","apply","arguments","_sendAttachment","params","formData","FormData","append","file","attachmentType","name","headers","sendAttachment","_x4","_sendVoiceNote","matchIdOrParams","duration","voiceDuration","Blob","audioFile","File","type","Error","audioBlob","String","sendVoiceNote","_x5","_x6","_x7","chatService","exports","sendVoiceNoteNative","_x8","_x9","_sendVoiceNoteNative","p","presign","contentType","url","uploadAsync","fileUri","httpMethod","uploadType","FileSystemUploadType","BINARY_CONTENT","waveform","assign"],"sources":["chatService.ts"],"sourcesContent":["/**\n * Chat Service for PawfectMatch Mobile\n * Handles chat features: reactions, attachments, voice notes\n */\n\nimport { logger } from \"@pawfectmatch/core\";\nimport type { Message } from \"@pawfectmatch/core\";\nimport { request } from \"./api\";\nimport * as FileSystem from \"expo-file-system\";\n\nexport interface ChatReaction {\n  emoji: string;\n  userId: string;\n  timestamp: string;\n}\n\nexport interface MessageWithReactions extends Message {\n  reactions?: Record<string, number>;\n}\n\nexport interface ChatAttachment {\n  type: \"image\" | \"video\" | \"file\";\n  url: string;\n  name?: string;\n  size?: number;\n}\n\nexport interface VoiceNote {\n  url: string;\n  duration: number;\n  waveform?: number[];\n}\n\ninterface SendReactionParams {\n  matchId: string;\n  messageId: string;\n  reaction: string;\n}\n\ninterface SendAttachmentParams {\n  matchId: string;\n  attachmentType: \"image\" | \"video\" | \"file\";\n  file: File | Blob;\n  name?: string;\n}\n\ninterface SendVoiceNoteParams {\n  matchId: string;\n  audioBlob: Blob;\n  duration: number;\n}\n\n/**\n * Chat Service for reactions, attachments, and voice notes\n */\nclass ChatService {\n  /**\n   * Send a reaction to a message\n   */\n  async sendReaction(\n    matchId: string,\n    messageId: string,\n    reaction: string\n  ): Promise<{\n    success: boolean;\n    messageId: string;\n    reactions: ChatReaction[];\n  }> {\n    try {\n      const response = await request<{\n        success: boolean;\n        messageId: string;\n        reactions: ChatReaction[];\n      }>(\"/chat/reactions\", {\n        method: \"POST\",\n        body: {\n          matchId,\n          messageId,\n          reaction,\n        },\n      });\n\n      logger.info(\"Reaction sent successfully\", { matchId, messageId, reaction });\n\n      return response;\n    } catch (error) {\n      logger.error(\"Failed to send reaction\", { error, matchId, messageId, reaction });\n      throw error;\n    }\n  }\n\n  /**\n   * Send an attachment to a match\n   */\n  async sendAttachment(params: SendAttachmentParams): Promise<{\n    success: boolean;\n    url: string;\n    type: string;\n  }> {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", params.file);\n      formData.append(\"matchId\", params.matchId);\n      formData.append(\"type\", params.attachmentType);\n      if (params.name) {\n        formData.append(\"name\", params.name);\n      }\n\n      const response = await request<{\n        success: boolean;\n        url: string;\n        type: string;\n      }>(\"/chat/attachments\", {\n        method: \"POST\",\n        body: formData,\n        headers: {\n          // Don't set Content-Type - FormData sets it automatically\n        },\n      });\n\n      logger.info(\"Attachment sent successfully\", { params });\n\n      return response;\n    } catch (error) {\n      logger.error(\"Failed to send attachment\", { error, params });\n      throw error;\n    }\n  }\n\n  /**\n   * Send a voice note\n   * Supports both FormData (native) and Blob (web)\n   */\n  async sendVoiceNote(\n    matchId: string,\n    file: FormData | Blob,\n    duration?: number\n  ): Promise<void>;\n  \n  /**\n   * Send a voice note (legacy signature)\n   */\n  async sendVoiceNote(params: SendVoiceNoteParams): Promise<{\n    success: boolean;\n    url: string;\n    duration: number;\n  }>;\n  \n  async sendVoiceNote(\n    matchIdOrParams: string | SendVoiceNoteParams,\n    file?: FormData | Blob,\n    duration?: number\n  ): Promise<void | {\n    success: boolean;\n    url: string;\n    duration: number;\n  }> {\n    try {\n      // Handle both signatures\n      let formData: FormData;\n      let matchId: string;\n      let voiceDuration: number;\n      \n      if (typeof matchIdOrParams === \"string\") {\n        // New signature: sendVoiceNote(matchId, file, duration?)\n        matchId = matchIdOrParams;\n        if (file instanceof FormData) {\n          // Native: FormData already has the file wrapped\n          formData = file;\n          formData.append(\"matchId\", matchId);\n        } else if (file instanceof Blob) {\n          // Web: wrap Blob in FormData\n          formData = new FormData();\n          const audioFile = new File([file], \"voice-note.webm\", {\n            type: \"audio/webm\",\n          });\n          formData.append(\"audioBlob\", audioFile);\n          formData.append(\"matchId\", matchId);\n        } else {\n          throw new Error(\"Invalid file type\");\n        }\n        voiceDuration = duration || 0;\n      } else {\n        // Legacy signature: sendVoiceNote({ matchId, audioBlob, duration })\n        const params = matchIdOrParams;\n        matchId = params.matchId;\n        formData = new FormData();\n        const audioFile = new File([params.audioBlob], \"voice-note.m4a\", {\n          type: \"audio/m4a\",\n        });\n        formData.append(\"audioBlob\", audioFile);\n        formData.append(\"matchId\", matchId);\n        formData.append(\"duration\", String(params.duration));\n        voiceDuration = params.duration;\n      }\n\n      const response = await request<{\n        success: boolean;\n        url: string;\n        duration: number;\n      }>(\"/api/chat/voice\", {\n        method: \"POST\",\n        body: formData,\n        headers: {\n          // Don't set Content-Type - FormData sets it automatically\n        },\n      });\n\n      logger.info(\"Voice note sent successfully\", { matchId, duration: voiceDuration });\n      \n      // Return result for legacy signature\n      if (typeof matchIdOrParams !== \"string\") {\n        return response;\n      }\n    } catch (error) {\n      logger.error(\"Failed to send voice note\", { error, matchIdOrParams });\n      throw error;\n    }\n  }\n}\n\nexport const chatService = new ChatService();\n\n// Native voice note upload helper\nexport async function sendVoiceNoteNative(matchId: string, p: { fileUri: string; duration: number }) {\n  // presign\n  const presign = await request<{ url: string; key: string }>(\"/uploads/voice/presign\", {\n    method: \"POST\",\n    body: { contentType: \"audio/webm\" },\n  });\n  const { url, key } = presign;\n\n  // PUT to S3\n  await FileSystem.uploadAsync(url, p.fileUri, {\n    httpMethod: \"PUT\",\n    headers: { \"Content-Type\": \"audio/webm\" },\n    uploadType: FileSystem.FileSystemUploadType.BINARY_CONTENT,\n  });\n\n  // register message\n  await request(`/chat/${matchId}/voice-note`, {\n    method: \"POST\",\n    body: { key, duration: p.duration, waveform: [] },\n  });\n}\n\n// Extended ChatService interface with native methods\ninterface ChatServiceWithNative extends ChatService {\n  sendVoiceNoteNative: typeof sendVoiceNoteNative;\n}\n\n// Inject to chatService with proper type\nObject.assign(chatService, { sendVoiceNoteNative });\n"],"mappings":"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","ignoreList":[]}