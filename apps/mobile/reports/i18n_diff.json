{
  "lastRun": "2025-10-27T02:40:56.481Z",
  "coverage": 0,
  "totalKeys": 4208,
  "extractedKeys": [
    "/premium/status",
    "text",
    "/",
    "?",
    "&",
    "=",
    ":",
    "expo-image-manipulator",
    "react-native",
    "../services/logger",
    "2d",
    "canvas",
    "./filters_extras",
    "./histogram",
    "./horizon",
    "./auto_crop",
    "should process tasks in order",
    "should respect max concurrency",
    "should cancel tasks",
    "should handle abort signals",
    "should track queue size",
    "should clear queue",
    "toneMapHighlights recovers blown areas",
    "clarityLocalContrast enhances edges",
    "vignetteCorrect adjusts edges",
    "applyNoisePreset handles mobile presets",
    "computeHistogram returns 256 bins",
    "highlightClipFraction detects overexposure",
    "estimateHorizonAngle returns valid angle",
    "rotateCanvas preserves dimensions",
    "tenengradScore quantifies sharpness",
    "entropyScore measures information content",
    "compositionScore combines metrics",
    "cut extracts region",
    "proposeTrioCrops generates three candidates",
    "bestOf3 selects highest scorer",
    "full PRO pipeline executes without errors",
    "should get and set values",
    "a",
    "b",
    "should evict least recently used when full",
    "c",
    "should promote recently used items",
    "should update existing keys",
    "should track size",
    "should clear cache",
    "should change capacity",
    "should parse subscription success URL correctly",
    "should parse subscription cancel URL correctly",
    "should parse pet profile URL correctly",
    "should parse match URL correctly",
    "should parse chat URL correctly",
    "should parse notification URL correctly",
    "should return null for unsupported URL schemes",
    "should handle malformed URLs gracefully",
    "clamps within range",
    "should return byte size of JPEG at specified dimensions",
    "should use default parameters",
    "should return 0 on error",
    "should continue even if cleanup fails",
    "should handle missing size info",
    "should pick URI with largest JPEG size",
    "should return only URI when array has one element",
    "should throw error for empty array",
    "should handle errors gracefully",
    "should return sharper image (larger size)",
    "should handle same size gracefully",
    "should store and retrieve current state",
    "should track timestamp",
    "should maintain max history limit",
    "should return previous state",
    "should not undo when at beginning",
    "should track undo count",
    "should return next state",
    "should not redo when at end",
    "should track redo count",
    "should remove all history",
    "should return current URI",
    "should return null when history is empty",
    "should handle multiple operations",
    "should lose redo history on new push",
    "should handle empty operations array",
    "should generate correct grid lines",
    "should work with different aspect ratios",
    "should generate correct golden ratio lines",
    "should generate diagonal lines",
    "should generate center crosshair",
    "should generate eye-level lines for portraits",
    "should expand crop to protect edges",
    "should respect image boundaries",
    "should maintain target aspect ratio",
    "should generate zones for Instagram",
    "should generate zones for TikTok",
    "should generate zones for YouTube",
    "should give high score for rule of thirds position",
    "should give high score for center positioning",
    "should give bonus for aspect ratio match",
    "should return 0-100 range",
    "should process all items successfully",
    "should return results sorted by ID",
    "should sort by URI when no ID provided",
    "should process items concurrently",
    "should not exceed max concurrency",
    "should not exceed number of items for concurrency",
    "should call progress callback for each item",
    "should include error in progress callback when item fails",
    "should handle individual item failures gracefully",
    "should handle missing suggestions",
    "should handle all items failing",
    "should pass custom eye weight to engine",
    "should pass custom padding to engine",
    "should use default options when not provided",
    "should handle empty array",
    "should handle single item",
    "should handle very large batches",
    "should return fallback crop when no faces detected",
    "should return face detection result when faces are found",
    "should handle edge cases when image dimensions are zero",
    "should accept custom eye weight and padding options",
    "should generate suggestions for multiple ratios",
    "should return empty array when detection fails",
    "should use default ratios when none provided",
    "should apply custom padding to suggestions",
    "should generate thumbnails for suggestions",
    "should use custom thumbnail size",
    "should use custom quality setting",
    "should apply crop to image",
    "should round crop coordinates",
    "should handle very small images",
    "should handle very large images",
    "should handle portrait orientation",
    "should handle landscape orientation",
    "should execute tasks in order",
    "should process multiple tasks concurrently",
    "should abort pending tasks",
    "should not execute new tasks after abort",
    "should track abort status",
    "should timeout slow tasks",
    "should not timeout fast tasks",
    "should track queue length",
    "should report idle state",
    "should propagate task errors",
    "should continue processing after error",
    "should return true when screen reader is enabled",
    "should return false when screen reader is disabled",
    "should return true when reduce motion is enabled",
    "should return false when reduce motion is disabled",
    "should return 0 when reduce motion is enabled",
    "should return normal duration when reduce motion is disabled",
    "should return light when reduce motion is enabled",
    "should return original intensity when reduce motion is disabled",
    "should respect light intensity preference",
    "should return all control labels",
    "should have descriptive hints",
    "should return high contrast color palette",
    "should have distinct colors for all states",
    "should return minimum 44x44 points",
    "should return original size if larger than 44",
    "should handle exact 44 size",
    "should format percentage correctly",
    "should handle 0%",
    "should handle 100%",
    "should handle non-zero min",
    "should round to nearest integer",
    "@react-navigation/native",
    "./types",
    "./adapters",
    "page",
    "window",
    "/verification/request-update",
    "screen_view",
    "performance_metric",
    "app_crash",
    "profile_boost",
    "/analytics/events",
    ".",
    "./logger",
    "activity:start",
    "activity:end",
    "/notifications/register-token",
    "/notifications/unregister-token",
    "ETag",
    "./api",
    "/map/activity/end",
    "\\n",
    "_",
    "metadata",
    "trackPublished",
    "trackUnpublished",
    "participantConnected",
    "participantDisconnected",
    "disconnected",
    "reconnecting",
    "reconnected",
    "connectionStateChanged",
    "localTrackPublished",
    "localTrackUnpublished",
    "./uploadHygiene",
    "expo-file-system",
    "limit",
    "packId",
    "userId",
    "type",
    "Authorization",
    "radius",
    "/account/delete",
    "/account/cancel-deletion",
    "/account/status",
    "/account/export-data",
    "/premium/subscription",
    "/premium/subscription/cancel",
    "/adoption/listings",
    "/adoption/applications",
    "/subscription/checkout",
    "/ai/generate-bio",
    "/ai/analyze-photos",
    "/ai/enhanced-compatibility",
    "/ai/compatibility",
    "/admin/analytics/track",
    "/ai/analyze-photo",
    "/admin/system/health",
    "/admin/billing/metrics",
    "/admin/security/metrics",
    "/admin/security/block-ip",
    "/admin/services/status",
    "/admin/services/toggle",
    "/admin/users/bulk-action",
    "initiate-call",
    "callStateChanged",
    "callError",
    "answer-call",
    "reject-call",
    "end-call",
    "webrtc-ice-candidate",
    "webrtc-offer",
    "webrtc-answer",
    "/premium/track-usage",
    "species",
    "minAge",
    "maxAge",
    "size",
    "intent",
    "distance",
    "breed",
    "/auth/logout",
    "should retrieve verification status successfully",
    "should handle API errors",
    "should handle network errors",
    "should submit identity verification successfully",
    "should handle submission errors",
    "should handle validation errors",
    "should submit pet ownership verification successfully",
    "should handle different proof types",
    "should submit veterinary verification successfully",
    "should handle minimal veterinary data",
    "should handle veterinary submission errors",
    "should submit organization verification successfully",
    "should handle different organization types",
    "should handle minimal organization data",
    "should handle organization submission errors",
    "should retrieve tier requirements successfully",
    "should handle requirements retrieval errors",
    "should cancel verification successfully",
    "should handle cancellation errors",
    "should retrieve user badges successfully",
    "should handle empty badges list",
    "should handle badge retrieval errors",
    "should check tier availability successfully",
    "should return false for unavailable tier",
    "should handle tier checking errors",
    "should upload document successfully",
    "should upload document without verification type",
    "file://document.jpg",
    "should handle upload errors",
    "should handle FormData creation errors",
    "should request status update successfully",
    "should handle status update request errors",
    "should handle malformed API responses",
    "should handle network timeouts",
    "should handle unauthorized access",
    "should handle server errors",
    "should handle concurrent requests",
    "should handle large data payloads",
    "should handle invalid tier names",
    "should handle invalid verification IDs",
    "should handle empty file uploads",
    "should handle unsupported document types",
    "file://document.exe",
    "should handle tier progression",
    "should handle verification rejection",
    "should handle pending review status",
    "should handle complete verification workflow",
    "should handle document upload workflow",
    "should get requirements for a tier",
    "should check if user has specific tier",
    "should return false if user does not have tier",
    "should return the same instance",
    "should initialize with session ID and flush interval",
    "should track basic event successfully",
    "should track event without user ID",
    "app_launch",
    "should auto-flush when queue reaches batch size",
    "event1",
    "event2",
    "should handle tracking errors gracefully",
    "error_event",
    "should track screen view with metadata",
    "should track user interaction with element and action",
    "should track performance metrics",
    "should track crash with full context",
    "should handle crash without user ID",
    "should track swipe action successfully",
    "should handle swipe tracking errors",
    "should track super like action",
    "should track boost action",
    "user123",
    "should retrieve usage stats successfully",
    "should handle usage stats errors",
    "should retrieve analytics insights",
    "should handle insights errors",
    "should export user data successfully",
    "should handle export errors",
    "should flush events when queue is full",
    "event3",
    "should store events locally when offline",
    "offline_event",
    "should handle flush errors by re-queuing events",
    "test_event",
    "should periodically flush events",
    "should merge new events with existing stored events",
    "new_event",
    "should handle corrupted local storage data",
    "test",
    "should generate unique session ID",
    "should detect correct platform",
    "should get device info correctly",
    "should handle different screen sizes",
    "should handle API failures gracefully",
    "should handle AsyncStorage failures",
    "storage_error",
    "should handle empty event queue flush",
    "should handle malformed event data",
    "should handle concurrent event tracking",
    "should handle very large metadata",
    "large_event",
    "should handle special characters in metadata",
    "special_chars",
    "should log debug info in development",
    "debug_event",
    "should not log debug info in production",
    "prod_event",
    "should handle missing app version gracefully",
    "version_test",
    "should validate JPEG files",
    "should validate PNG files",
    "should validate WebP files",
    "should reject invalid file extensions",
    "should handle file system errors",
    "should handle files without extensions",
    "should fix image orientation",
    "should return original URI on orientation fix failure",
    "should resize images larger than max dimension",
    "should not resize images smaller than max dimension",
    "should handle landscape images correctly",
    "should handle portrait images correctly",
    "should handle resize errors",
    "should crop wide images to target aspect ratio",
    "should crop tall images to target aspect ratio",
    "should not crop images that already match aspect ratio",
    "should handle crop errors",
    "should compress images with specified quality",
    "should handle different quality levels",
    "should handle compression errors",
    "should get file size and existence",
    "should handle non-existent files",
    "should process image through complete pipeline",
    "should skip cropping when disabled",
    "should handle invalid MIME types",
    "should handle processing errors",
    "should pick and process image successfully",
    "should handle permission denial",
    "should handle user cancellation",
    "should handle picker errors",
    "should capture and process image successfully",
    "should handle camera permission denial",
    "should handle camera cancellation",
    "should check upload quota successfully",
    "should handle quota check errors",
    "should succeed on first attempt",
    "should retry on failure and succeed",
    "should fail after max retries",
    "should use progressive backoff delays",
    "should handle square images",
    "should handle extreme aspect ratios",
    "should handle zero dimensions gracefully",
    "should handle negative quality values",
    "should handle concurrent processing operations",
    "should handle malformed image picker results",
    "should handle image picker results with missing URI",
    "should handle platform differences",
    "should handle memory pressure during processing",
    "should process image successfully",
    "should reject invalid file types",
    "should return quota information",
    "should like a pet successfully",
    "pet123",
    "should handle multiple pets",
    "pet1",
    "pet2",
    "pet3",
    "should pass a pet successfully",
    "pet456",
    "should differentiate pass from like",
    "should super like a pet successfully",
    "pet789",
    "should differentiate super like from regular like",
    "should rewind last swipe successfully",
    "should return null when no pet to restore",
    "should return null on rewind error",
    "should handle API errors for like",
    "should handle API errors for pass",
    "should handle API errors for super like",
    "should handle timeout errors",
    "should handle empty pet ID",
    "should handle very long pet IDs",
    "should handle concurrent likes",
    "should handle rapid rewind requests",
    "should handle pet with missing fields",
    "should work with API request service",
    "should maintain state across multiple operations",
    "should maintain type safety for like result",
    "should maintain type safety for rewind result",
    "should handle Pet type correctly",
    "should read and parse valid JSON",
    "should return fallback for missing key",
    "should return fallback for null value",
    "should handle complex nested objects",
    "should handle arrays correctly",
    "should handle primitive types",
    "should write simple object to storage",
    "should write complex nested object",
    "should write arrays to storage",
    "should handle null and undefined values",
    "should return fallback on JSON parse error",
    "should return fallback on storage read error",
    "should handle write errors gracefully",
    "should handle circular references in writeJSON",
    "should handle empty strings",
    "should handle very large objects",
    "should handle empty objects",
    "should handle special characters in keys",
    "should handle unicode characters",
    "should handle dates",
    "should read and write data correctly",
    "should handle multiple keys correctly",
    "should maintain type safety for readJSON",
    "should maintain type safety for writeJSON",
    "should create socket instance on first call",
    "should return existing socket on subsequent calls",
    "should initialize socket with correct configuration",
    "should export socketClient singleton",
    "should have connected state",
    "should have socket ID",
    "should listen to events",
    "should emit events",
    "test-event",
    "should remove event listeners",
    "should connect to server",
    "should disconnect from server",
    "should handle connection errors",
    "should handle reconnection errors",
    "should handle disconnection",
    "should handle undefined URL gracefully",
    "should handle disconnected state",
    "should handle multiple event listeners",
    "should handle socket without ID",
    "should maintain connection state across calls",
    "should handle socket events properly",
    "message",
    "should handle reconnection",
    "should handle reconnection attempts",
    "should maintain socket type",
    "should fetch user settings successfully",
    "should handle empty settings response",
    "should handle partial settings data",
    "should handle API errors gracefully",
    "should handle very large settings objects",
    "should save user settings successfully",
    "should save minimal settings",
    "should save empty settings object",
    "should handle API errors during save",
    "should handle validation errors from API",
    "should handle concurrent save operations",
    "should preserve complex nested structures",
    "should handle notification settings correctly",
    "should handle preference settings correctly",
    "should handle generic settings object",
    "should handle undefined optional fields",
    "should handle extreme values",
    "should handle zero values",
    "should handle negative values",
    "should handle special characters and unicode",
    "should handle get-modify-save workflow",
    "should handle settings migration scenarios",
    "should handle bulk settings updates",
    "should handle temporary network failures",
    "should handle partial failures in concurrent operations",
    "should handle malformed server responses",
    "should handle extremely large responses",
    "should maintain type safety for notifications",
    "should maintain type safety for preferences",
    "should allow flexible settings object",
    "should handle frequent settings operations",
    "should handle settings with circular references",
    "should upload photo successfully",
    "should handle different content types",
    "should handle PNG images",
    "should handle JPEG images",
    "should handle presign API errors",
    "should handle S3 upload failures",
    "should handle empty file URI",
    "should handle very long file URIs",
    "should handle special characters in content type",
    "should handle different file URIs",
    "should integrate with API service",
    "should integrate with FileSystem",
    "should maintain type safety for return value",
    "should handle all required parameters",
    "should get current location with permissions",
    "should handle permission denied",
    "should handle location services unavailable",
    "should handle undetermined permission status",
    "should start a pet activity successfully",
    "should start activity with default values",
    "should handle all activity types",
    "should handle API errors during activity start",
    "should handle extreme location coordinates",
    "should end a pet activity successfully",
    "should handle API errors during activity end",
    "should handle activity already ended",
    "should handle network errors during end",
    "should get activity history for a pet",
    "should handle empty activity history",
    "should handle pets with many activities",
    "should handle API errors when fetching history",
    "should handle special characters in pet IDs",
    "should emit socket events for activity start",
    "should emit socket events for activity end",
    "should not emit socket events on API failure",
    "should include platform information in activity start",
    "should handle Android platform",
    "should handle multiple concurrent activity starts",
    "should handle mixed concurrent operations",
    "should handle very long messages",
    "should handle zero coordinates",
    "should handle very large radius values",
    "should handle activities with special characters",
    "should handle malformed location data",
    "should handle extreme activity history sizes",
    "should handle rapid successive operations",
    "should handle memory pressure with large payloads",
    "should maintain type safety for ActivityRecord",
    "should handle optional fields correctly",
    "should enforce ActivityKind type constraints",
    "should initialize with default offline data",
    "should load offline data from storage",
    "should handle corrupted offline data gracefully",
    "should setup network monitoring",
    "should detect going online and trigger sync",
    "should detect going offline",
    "should handle network state changes",
    "should provide current sync status",
    "should update sync status during sync",
    "should notify listeners when status changes",
    "should add pending actions",
    "should generate unique action IDs",
    "should sync pending actions successfully",
    "should handle failed pending actions with retry logic",
    "should remove actions after max retries",
    "should get pets with online preference",
    "should fallback to offline pets when online fetch fails",
    "should return offline pets when offline",
    "should get user data",
    "should get matches with caching",
    "should get messages for specific match",
    "should cache messages when fetching online",
    "should perform swipe actions offline-aware",
    "should send messages offline-aware",
    "should queue messages when offline",
    "should queue messages when online send fails",
    "should update profile offline-aware",
    "should queue profile updates when offline",
    "should perform match actions",
    "should trigger sync when online",
    "should not sync when offline",
    "should not start concurrent syncs",
    "should handle sync errors gracefully",
    "should update sync progress during sync",
    "should save offline data to storage",
    "should handle storage save errors gracefully",
    "should clear offline data",
    "should handle clear data errors gracefully",
    "should calculate total storage size",
    "should handle storage size calculation errors",
    "should handle null/empty values in storage size calculation",
    "should start periodic sync on initialization",
    "should only sync periodically when online",
    "should handle malformed network state",
    "should handle very large offline datasets",
    "should handle concurrent data access",
    "should handle rapid pending action additions",
    "should handle listener cleanup",
    "should handle multiple listeners",
    "should handle circular references in offline data",
    "should handle extreme retry counts",
    "should handle empty or invalid action data",
    "should retrieve pets from offline storage",
    "should retrieve user from offline storage",
    "should fetch pets online when available",
    "should fetch user online when available",
    "should retrieve pending actions count",
    "should add swipe action offline",
    "should report online status when connected",
    "should provide comprehensive sync status",
    "should get storage size",
    "should initialize with default configuration",
    "should initialize Sentry when error tracking is enabled",
    "should not initialize Sentry when error tracking is disabled",
    "should initialize network monitoring",
    "should handle initialization errors gracefully",
    "should not initialize twice",
    "should not track performance when disabled",
    "should send performance data to analytics",
    "should handle missing metadata gracefully",
    "should track user interactions",
    "should handle empty metadata",
    "should track errors with full context",
    "should not send to Sentry when error tracking is disabled",
    "should handle errors without user ID",
    "should track security events with different severities",
    "should send critical security events to Sentry",
    "should not track security events when disabled",
    "should handle security events without user ID",
    "should track analytics events",
    "should not track analytics when disabled",
    "should handle empty properties",
    "should track user journey progression",
    "should handle single-step journey",
    "should track feature usage",
    "should handle feature usage without metadata",
    "should create and complete performance traces",
    "should handle trace completion without metadata",
    "should handle multiple concurrent traces",
    "should set user context",
    "should set user context with minimal properties",
    "user456",
    "should clear user context",
    "should add breadcrumbs for debugging",
    "should handle breadcrumbs without metadata",
    "should monitor network status changes",
    "should handle network monitoring initialization errors",
    "should sanitize sensitive data from Sentry events",
    "should handle events without request data",
    "should cleanup resources",
    "should handle cleanup when no resources to clean",
    "should update configuration",
    "should respect configuration flags",
    "should use development environment in dev mode",
    "should configure appropriate sample rate for development",
    "should handle different environments",
    "should handle malformed performance data",
    "should handle errors in error tracking",
    "should handle analytics service failures",
    "should handle network status edge cases",
    "should handle extreme timing values in traces",
    "should handle concurrent operations",
    "should initialize successfully on physical device",
    "should return null on simulator/emulator",
    "should request permissions if not granted",
    "should return null if permissions denied",
    "should handle token retrieval errors",
    "should setup Android notification channels",
    "should setup notification listeners",
    "should register token with backend",
    "should handle backend registration errors gracefully",
    "should create specialized notification channels",
    "should send immediate local notification",
    "should send scheduled local notification",
    "should handle notification scheduling errors",
    "should get current badge count",
    "should handle badge count retrieval errors",
    "should set badge count",
    "should handle badge count setting errors",
    "should clear badge",
    "should cancel specific notification",
    "should cancel all notifications",
    "should send match notification",
    "should send message notification",
    "should truncate long messages in notification",
    "should send like notification",
    "should send regular like notification",
    "should schedule reminder notification",
    "should handle notification received events",
    "should handle notification response events",
    "should handle malformed notification data gracefully",
    "should return correct sound for notification types",
    "should generate and store device ID",
    "should retrieve existing device ID",
    "should unregister token from backend",
    "should unregister with provided device ID",
    "should handle backend unregistration errors",
    "should cleanup resources properly",
    "should handle cleanup errors gracefully",
    "should handle AsyncStorage errors gracefully",
    "should handle notification handler setup errors",
    "should handle channel creation errors on Android",
    "should handle listener setup errors",
    "should handle invalid notification data types",
    "should handle scheduling with missing data",
    "should handle iOS-specific behavior",
    "should handle Android-specific behavior",
    "should return current push token",
    "should return null when no token available",
    "should load stored token on initialization",
    "should start an activity with current location",
    "should handle location permission denied",
    "should start activity with minimal parameters",
    "should end an activity successfully",
    "should handle activity not found",
    "should get nearby pins with coordinates",
    "should get nearby pins without max distance",
    "should handle empty results",
    "should handle API errors when fetching pins",
    "should handle extreme coordinates",
    "should handle very large max distance",
    "should like a pin successfully",
    "should handle API errors when liking pin",
    "should handle pin not found",
    "should handle already liked pin",
    "should comment on a pin successfully",
    "should handle empty comments",
    "should handle long comments",
    "should handle API errors when commenting",
    "should handle comment moderation rejection",
    "should handle special characters in comments",
    "should handle network connectivity issues",
    "should handle invalid activity parameters",
    "should handle location accuracy variations",
    "should handle activities with many likes",
    "should handle pins with very long messages",
    "should handle rate limiting",
    "should handle authentication errors",
    "should handle permission granted",
    "should handle permission undetermined",
    "should maintain type safety for MapPin objects",
    "should start activity successfully",
    "should handle activity start errors",
    "should get nearby pins successfully",
    "should like pin successfully",
    "should handle like errors",
    "should handle activity without message",
    "should handle different activity types",
    "should fetch home stats successfully",
    "should handle empty stats",
    "should handle numeric stats",
    "should fetch activity feed successfully",
    "should handle empty activity feed",
    "should handle feed with pagination",
    "should handle network errors for stats",
    "should handle network errors for feed",
    "should handle HTTP errors for stats",
    "should handle HTTP errors for feed",
    "should handle JSON parse errors",
    "should handle missing environment URL",
    "should handle very large stats responses",
    "should handle feed with many activities",
    "should handle special characters in stats",
    "xss",
    "should handle empty string environment URL",
    "should integrate with fetch API",
    "should handle multiple sequential calls",
    "should integrate stats and feed together",
    "should maintain type safety for stats response",
    "should maintain type safety for feed response",
    "should handle unknown properties gracefully",
    "should request account deletion successfully",
    "should handle invalid password error",
    "should handle already deleting account",
    "should cancel account deletion successfully",
    "should handle errors during cancellation",
    "should get account status successfully",
    "should return not-found when no deletion request exists",
    "should handle errors when getting status",
    "should handle processing status",
    "should handle completed deletion status",
    "should export user data with defaults",
    "should export specific data types only",
    "should handle large exports",
    "should download exported data successfully",
    "export-123",
    "should handle download errors",
    "should handle missing export ID",
    "invalid-export-id",
    "should handle network timeouts during deletion",
    "should handle malformed responses",
    "should handle concurrent deletion requests",
    "should handle export with no data",
    "should handle errors with default options",
    "should skip notification when disabled",
    "should skip logging when disabled",
    "should use custom fallback message",
    "should handle API errors with enhanced context",
    "should handle API errors without optional fields",
    "should handle network errors with specific message",
    "should handle validation errors with specific message",
    "should handle authentication errors with specific message",
    "should handle permission errors with specific message",
    "should respect custom options in specialized handlers",
    "should translate network errors",
    "should translate authentication errors",
    "should translate permission errors",
    "should translate server errors",
    "should translate not found errors",
    "should return original message for user-friendly errors",
    "should return generic message for unknown errors",
    "should handle very long error messages",
    "should handle error objects without messages",
    "should create error with message only",
    "should create error with message and code",
    "should handle empty code",
    "should wrap successful async functions",
    "should wrap failed async functions and handle errors",
    "should wrap functions that throw non-Error objects",
    "should respect error handling options in wrapAsync",
    "should show user notifications with default OK button",
    "should handle empty title and message",
    "should log errors with full context",
    "should handle errors without stack traces",
    "should handle complex metadata objects",
    "should handle missing optional context fields",
    "should handle null and undefined metadata",
    "should handle very large context objects",
    "should handle complete API error flow",
    "should handle async error wrapping in complex scenarios",
    "should handle errors with circular references",
    "should handle extremely long error messages",
    "should handle errors with special characters",
    "should handle rapid consecutive errors",
    "should handle errors during error handling",
    "should handle null and undefined errors",
    "should handle errors with prototype manipulation",
    "should maintain state across calls",
    "should complete full upload pipeline successfully",
    "should handle different upload types",
    "should work without progress callback",
    "should handle presign failure",
    "should handle S3 upload failure",
    "should handle registration failure",
    "should handle file URI to blob conversion",
    "should handle missing optional fields in response",
    "should handle large file uploads",
    "should complete full pipeline from picker",
    "should use camera when specified",
    "should handle quota exceeded",
    "should handle image picker cancellation",
    "should handle quota check failure",
    "should poll until approved status",
    "should handle rejected status",
    "should poll multiple times for pending status",
    "should timeout after max attempts",
    "should handle API errors during polling",
    "should use default polling parameters",
    "should upload multiple images successfully",
    "should handle partial failures in batch upload",
    "should handle empty batch",
    "should check for duplicate uploads",
    "should handle no duplicates found",
    "should convert file URI to blob",
    "should handle file read errors",
    "should handle empty base64 data",
    "should retry upload with backoff",
    "should use default retry parameters",
    "should handle retry failures",
    "should handle very long URIs",
    "should handle special characters in URIs",
    "should handle network timeouts during upload",
    "should handle malformed presign responses",
    "should handle concurrent uploads",
    "should handle extremely large files",
    "should handle malformed processed images",
    "should handle upload registration with missing response fields",
    "should handle progress callback errors gracefully",
    "should handle file system read errors during blob conversion",
    "should handle invalid base64 data",
    "should handle polling with invalid upload IDs",
    "should handle batch upload with all failures",
    "should handle duplicate check with malformed responses",
    "should handle retry with invalid parameters",
    "should fetch community feed without parameters",
    "should fetch community feed with pagination and filters",
    "should handle empty feed response",
    "should create a new post successfully",
    "should create an activity post with details",
    "should validate required content",
    "should handle API errors during post creation",
    "should like/unlike a post",
    "post123",
    "should handle API errors during like operation",
    "should fetch comments for a post",
    "should fetch comments with pagination",
    "should handle API errors when fetching comments",
    "should add a comment to a post",
    "should validate comment content",
    "should handle API errors when adding comments",
    "should join an activity",
    "should leave an activity",
    "should handle API errors for activity operations",
    "should delete a post",
    "should update a post",
    "should handle API errors for post operations",
    "should report content",
    "should report comments",
    "should block a user",
    "should handle API errors for moderation operations",
    "should handle unknown errors",
    "should handle null/undefined errors",
    "should preserve original error when it is an Error instance",
    "should handle very long content",
    "should handle posts with many images",
    "should handle empty arrays and objects",
    "should handle special characters in content",
    "post1",
    "post2",
    "should handle very large pagination values",
    "should handle complete post lifecycle",
    "should handle activity participation flow",
    "should handle moderation workflow",
    "should send reaction successfully",
    "should throw error on failed reaction",
    "should handle multiple reactions",
    "should send image attachment",
    "should send video attachment",
    "should send file attachment",
    "should handle attachment errors",
    "should send voice note with FormData (native)",
    "should send voice note with Blob (web)",
    "should send voice note with legacy signature",
    "should throw error for invalid file type",
    "should handle voice note upload errors",
    "should upload voice note to S3 and register message",
    "should handle S3 upload errors",
    "should handle presign errors",
    "should handle network errors during reaction",
    "should handle invalid match ID",
    "should handle concurrent reactions",
    "should handle missing attachment name",
    "should create axios instance with correct configuration",
    "should use default timeout when not specified",
    "should initialize UnifiedAPIClient with correct config",
    "should load token on initialization",
    "should set and store authentication token",
    "should handle token storage errors gracefully",
    "should clear authentication token",
    "should handle token clearing errors gracefully",
    "should make GET requests",
    "/test",
    "should make POST requests with data",
    "should make PUT requests with data",
    "should make PATCH requests with data",
    "should make DELETE requests",
    "should pass config to HTTP methods",
    "should add authorization header when token is available",
    "should not add authorization header when no token",
    "should handle interceptor errors",
    "should pass through successful responses",
    "should handle 401 unauthorized errors",
    "should handle 403 forbidden errors",
    "should handle 500 server errors",
    "should handle request setup errors",
    "should update unified client when network comes online",
    "should update unified client when network goes offline",
    "should handle initial network state",
    "should provide access to unified client",
    "should provide circuit breaker metrics",
    "should provide queue statistics",
    "should provide access to axios instance",
    "should cleanup resources on destroy",
    "should handle destroy when network unsubscribe is not set",
    "should handle HTTP method errors",
    "should handle token loading errors gracefully",
    "should handle network monitoring setup errors",
    "should export singleton instance",
    "should use correct default configuration for singleton",
    "should use environment variable for API URL",
    "should fallback to localhost when env var is empty",
    "should handle multiple concurrent requests",
    "/endpoint1",
    "/endpoint2",
    "/endpoint3",
    "should maintain authentication across concurrent requests",
    "/protected1",
    "/protected2",
    "should handle very long URLs",
    "should handle large request payloads",
    "/large-endpoint",
    "should handle special characters in URLs",
    "should handle empty response data",
    "/empty-endpoint",
    "should handle undefined response data",
    "/undefined-endpoint",
    "should handle zero timeout configuration",
    "should make GET request successfully",
    "/test/endpoint",
    "should make POST request with body",
    "should make PUT request",
    "should make DELETE request",
    "should append query parameters",
    "should handle FormData without Content-Type header",
    "/upload",
    "should throw error when request fails",
    "should throw error when response has no data",
    "should validate endpoint",
    "../invalid-endpoint",
    "should enforce rate limiting",
    "should sanitize request body",
    "should add security headers",
    "should get matches",
    "should get liked you matches",
    "should create match",
    "should send message",
    "should delete message",
    "should unmatch",
    "should get pets with filters",
    "should track event successfully",
    "should track event without properties",
    "should track screen views",
    "should track user actions",
    "should have auth event constants",
    "should have premium event constants",
    "should have swipe event constants",
    "should have match event constants",
    "should have chat event constants",
    "should have profile event constants",
    "should have map event constants",
    "should have settings event constants",
    "should handle screen view errors gracefully",
    "should handle user action errors gracefully",
    "should handle null properties",
    "should handle empty string events",
    "should handle very long property names",
    "should handle nested objects in properties",
    "should handle array properties",
    "should handle undefined screen name gracefully",
    "should allow chaining multiple track calls",
    "should maintain type safety for event names",
    "should maintain type safety for properties",
    "should generate a bio with minimal parameters",
    "should generate a bio with all parameters",
    "should handle different tones",
    "should handle different lengths",
    "should validate required parameters",
    "should handle empty or whitespace-only keywords",
    "should handle special characters in pet names and keywords",
    "should handle very long inputs",
    "should analyze a photo successfully",
    "should handle different photo URLs",
    "should handle analysis with no labels",
    "should handle API errors during photo analysis",
    "should validate photo URL format",
    "should handle extreme analysis scores",
    "should handle analysis with many labels",
    "should compute compatibility between two pets",
    "should handle perfect compatibility",
    "should handle zero compatibility",
    "should handle complex pet data structures",
    "should handle API errors during compatibility computation",
    "should handle empty pet objects",
    "should handle pets with conflicting traits",
    "should handle service unavailability",
    "should handle responses with missing fields",
    "should handle multiple concurrent bio generations",
    "should handle extreme parameter values",
    "should handle unicode and special characters",
    "should handle zero and negative values",
    "should handle circular references in pet data",
    "should handle very large photo URLs",
    "should handle rapid successive calls",
    "should maintain type safety for bio generation results",
    "should maintain type safety for photo analysis results",
    "should maintain type safety for compatibility results",
    "should handle flexible parameter objects",
    "should generate a bio successfully",
    "should handle different parameter combinations",
    "should handle photo analysis errors",
    "should handle empty labels",
    "should call the correct endpoint with proper data",
    "should throw error when API call fails",
    "should throw error when response is not successful",
    "should call the correct endpoint with photo URIs",
    "should call the correct endpoint with pet IDs",
    "should call the legacy compatibility endpoint",
    "should handle network timeout errors",
    "should handle 503 service unavailable errors",
    "should handle malformed response data",
    "should handle empty keywords array",
    "should handle missing optional parameters",
    "should create consistent cache keys",
    "should handle complex query normalization",
    "should exclude undefined and empty values from cache key",
    "should validate cache expiration",
    "should invalidate cache",
    "should map user data correctly",
    "should handle missing or invalid user data gracefully",
    "should handle alternative field names",
    "should map response data correctly",
    "should handle missing response data",
    "should fetch users from API and cache result",
    "should return cached data when available and valid",
    "{",
    "should refetch when cache is expired",
    "should handle various query parameters",
    "should handle API errors and clear cache",
    "test-key",
    "should handle non-Error exceptions",
    "should suspend user successfully",
    "should activate user successfully",
    "should ban user successfully",
    "should handle unban action (same as activate)",
    "should use default reasons when not provided",
    "should handle API errors and log appropriately",
    "should invalidate cache on successful actions",
    "should not invalidate cache on failed actions",
    "should export service methods correctly",
    "should handle cache race conditions",
    "should handle very large result sets",
    "should handle empty user arrays",
    "should handle very long search queries",
    "should handle special characters in queries",
    "should handle extreme pagination values",
    "should handle cache corruption",
    "corrupted1",
    "corrupted2",
    "corrupted3",
    "corrupted4",
    "should handle memory pressure with large caches",
    "should handle rapid cache invalidations",
    "should handle concurrent cache operations",
    "should make successful API requests",
    "should handle custom headers and options",
    "should handle HTTP errors",
    "should get users with pagination",
    "should get users with filters",
    "should get user details",
    "should suspend user",
    "should ban user",
    "should activate user",
    "should perform bulk user actions",
    "should get chats with pagination and filters",
    "should get chat details with messages",
    "should block chat",
    "chat1",
    "should unblock chat",
    "should get chat messages with moderation filters",
    "should moderate message",
    "should get uploads with filters",
    "should get upload details",
    "should approve upload",
    "should reject upload",
    "should delete upload",
    "should moderate upload with approve action",
    "should moderate upload with remove action",
    "should get pending verifications",
    "should get verification details",
    "should approve verification",
    "should reject verification",
    "should get analytics data",
    "should get system health status",
    "should get audit logs",
    "should get security alerts",
    "should resolve security alert",
    "should block IP address",
    "should get safety moderation queue",
    "should get safety moderation details",
    "should moderate safety upload",
    "should batch moderate safety uploads",
    "should get safety moderation statistics",
    "should get subscriptions with pagination",
    "should get billing metrics",
    "should cancel user subscription",
    "should reactivate user subscription",
    "should get services status",
    "should get services analytics",
    "should get combined statistics",
    "should toggle service status",
    "should handle HTTP errors with proper messages",
    "should handle empty pagination parameters",
    "should handle very large datasets",
    "should handle special characters in parameters",
    "should handle null and undefined parameter values",
    "should handle concurrent API calls",
    "should initialize with socket",
    "should setup InCallManager correctly",
    "should start voice call successfully",
    "should start video call successfully",
    "should handle getUserMedia failure",
    "should emit call state changes",
    "should answer incoming call successfully",
    "should handle answer call without call data",
    "should toggle mute",
    "should toggle video",
    "should switch camera",
    "should toggle speaker",
    "should end call and clean up resources",
    "should reject incoming call",
    "should return correct call state",
    "should return correct call active status",
    "should update call state during call",
    "should handle WebRTC offer",
    "should handle WebRTC answer",
    "should handle ICE candidates",
    "should be a singleton instance",
    "should have expected methods",
    "should handle call start errors",
    "should end call successfully",
    "should get call state",
    "should check if call is active",
    "should handle network errors during call start",
    "should handle API errors during call controls",
    "should have core methods",
    "should indicate call is not active by default",
    "should toggle mute when stream exists",
    "should toggle video when stream exists",
    "should switch camera when stream exists",
    "should have WebRTC signaling methods available",
    "should make secure GET request",
    "should include SSL pinning configuration",
    "should set authentication token",
    "should use correct timeout",
    "should make secure POST request",
    "should set Content-Type header",
    "should make secure PUT request",
    "should make secure DELETE request",
    "should validate SSL certificate",
    "should return security metrics",
    "should retry failed requests",
    "should throw error after all retries fail",
    "should use exponential backoff for retries",
    "/not-found",
    "should handle SSL pinning failures",
    "should handle empty response body",
    "/empty",
    "should handle large response bodies",
    "/large",
    "/slow",
    "should maintain authentication across requests",
    "/test1",
    "/test2",
    "should integrate with SSL pinning",
    "should maintain type safety for requests",
    "should handle SecureAPIError properly",
    "should check if user has active subscription successfully",
    "should return false for inactive subscription",
    "should get detailed subscription status with all fields",
    "should return available subscription plans",
    "should have all required plan properties",
    "should create Stripe checkout session for valid plan",
    "should create checkout session with custom URLs",
    "should cancel subscription successfully",
    "should return free tier limits for inactive subscription",
    "should return basic tier limits correctly",
    "should return premium tier limits with all features",
    "should return ultimate tier limits with unlimited rewind",
    "should check if user can use premium feature",
    "should return false for unavailable feature",
    "should track premium feature usage",
    "should handle API errors gracefully when checking subscription",
    "should handle API errors when getting status",
    "should throw error for invalid plan ID",
    "should handle cancel subscription errors",
    "should handle errors when getting premium limits",
    "should handle errors when checking feature access",
    "should not throw when usage tracking fails",
    "should handle empty features array",
    "should handle missing optional fields",
    "should handle all premium feature checks",
    "should integrate with API service properly",
    "should cache subscription status between calls",
    "should maintain type safety for subscription status",
    "should maintain type safety for limits",
    "should initialize successfully",
    "should start background sync on initialization",
    "should queue API call with default parameters",
    "should queue API call with custom parameters",
    "should process queue immediately when online",
    "should not process queue when offline",
    "should queue user action",
    "should return correct sync status",
    "should sync when online",
    "should throw error when offline",
    "should clear failed items from queue",
    "should handle coming online",
    "should handle going offline",
    "should start queue processing when coming online",
    "should not process queue when already syncing",
    "should not process empty queue",
    "should process queue items by priority",
    "should handle successful item processing",
    "should handle failed items with retry",
    "should remove items that exceed max retry count",
    "should handle GET requests",
    "should handle POST requests with data",
    "should handle PUT and DELETE requests",
    "should throw error for unsupported HTTP methods",
    "should add and remove sync listeners",
    "should notify listeners of status changes",
    "should handle listener errors gracefully",
    "should trigger sync when online and queue not empty",
    "should not trigger sync when offline",
    "should not trigger sync when already syncing",
    "should load queue from storage",
    "should handle corrupted queue data",
    "should persist queue to storage",
    "should handle persistence errors gracefully",
    "should log queue operations",
    "should log sync completion",
    "should log failed operations",
    "should handle empty queue processing",
    "should handle network state changes during processing",
    "should handle large queues efficiently",
    "should handle malformed stored queue data",
    "should handle concurrent queue operations",
    "should get recommendations without filters",
    "should get recommendations with filters",
    "should handle empty recommendations",
    "should record like action successfully",
    "should record pass action successfully",
    "should record superlike action successfully",
    "should handle swipe recording errors",
    "should get user matches successfully",
    "should handle empty matches list",
    "should handle matches API errors",
    "should calculate compatibility between two pets",
    "should handle compatibility calculation errors",
    "should update user matching filters",
    "should handle filter update errors",
    "should get available filter options",
    "should handle filter options fetch errors",
    "should handle complete matching workflow",
    "should handle filter and recommendation workflow",
    "should initialize with correct base URL from environment",
    "should use default base URL when environment variable is not set",
    "should fetch leaderboard data successfully",
    "should apply filters correctly",
    "should return cached data when available and not expired",
    "should refetch when cache expires",
    "should fetch user rank successfully",
    "should fetch user rank without category",
    "should use cached user rank data",
    "should fetch categories successfully",
    "should cache categories data",
    "should fetch user badges successfully",
    "should cache user badges",
    "should fetch pet statistics successfully",
    "should cache pet stats",
    "should update score successfully",
    "should clear relevant cache after score update",
    "should handle update score errors",
    "should fetch leaderboard history successfully",
    "should use default period when not specified",
    "should cache history data",
    "should fetch nearby leaders successfully",
    "should use default radius when not specified",
    "should cache nearby leaders data",
    "should fetch achievement progress successfully",
    "should cache achievement progress",
    "should share achievement successfully",
    "badge123",
    "should handle share errors",
    "should throw error when no auth token available",
    "should include auth token in all API requests",
    "should clear cache completely",
    "should clear cache by pattern",
    "should return null for expired cache",
    "should log errors for failed requests",
    "should handle malformed JSON responses",
    "should handle non-200 HTTP responses",
    "should handle empty leaderboard responses",
    "should handle large page numbers and limits",
    "should handle special characters in category names",
    "should compress image with default options",
    "should compress image with custom options",
    "should calculate compression ratio correctly",
    "should handle file info errors",
    "should compress multiple images successfully",
    "should continue processing when one image fails",
    "should return JPEG optimization settings",
    "should return PNG optimization settings",
    "should return default settings for unknown formats",
    "should handle uppercase extensions",
    "should compress avatar images with correct settings",
    "should compress pet images with optimal settings",
    "should compress chat images with smaller dimensions",
    "should validate existing image file",
    "should reject non-existent files",
    "should reject files that are too large",
    "should reject unsupported file formats",
    "should accept all supported formats",
    "should handle validation errors gracefully",
    "should cleanup temp images in cache/temp directories",
    "should not delete files outside temp/cache directories",
    "should get image dimensions successfully",
    "should return null when dimensions cannot be retrieved",
    "should format file sizes correctly",
    "should handle compression with zero original size",
    "should handle compression with non-existent compressed file",
    "should handle batch compression with mixed results",
    "should validate image with edge case file sizes",
    "should log compression start and completion",
    "should log compression errors",
    "should check if device has hardware support",
    "should detect fingerprint support",
    "should handle missing hardware gracefully",
    "should authenticate with Face ID successfully",
    "should authenticate with Touch ID successfully",
    "should authenticate with iris scan successfully",
    "should enable biometric authentication successfully",
    "should disable biometric authentication successfully",
    "should return true when biometric is enabled",
    "should return false when biometric is not enabled",
    "should return correct name for facial recognition",
    "should return correct name for fingerprint",
    "should return correct name for iris",
    "should return default name for unknown type",
    "should handle missing hardware error",
    "should handle not enrolled error",
    "should handle authentication failure",
    "should handle biometric check errors",
    "should handle enable biometric when authentication fails",
    "should handle errors when disabling biometric",
    "should handle errors when checking status",
    "should return false when enable fails",
    "should handle empty authentication reason",
    "should handle unknown biometric type",
    "should handle multiple biometric types",
    "should integrate with SecureStore for persistence",
    "should integrate with LocalAuthentication for security",
    "should maintain type safety for biometric result",
    "should maintain type safety for capabilities",
    "should store item using Keychain",
    "should fallback to SecureStore if Keychain fails",
    "should retrieve item from Keychain",
    "should delete item from Keychain",
    "should successfully login with valid credentials",
    "should throw AuthError on login failure",
    "should store auth data after successful login",
    "should successfully register with valid data",
    "should throw error when passwords do not match",
    "should successfully logout and clear all data",
    "should clear local data even if server logout fails",
    "should refresh access token successfully",
    "should return null if no refresh token exists",
    "should rotate tokens and clear auth data on failure",
    "should check if biometric is available",
    "should enable biometric authentication",
    "should throw error if biometric hardware is not available",
    "should login with biometrics",
    "should disable biometric authentication",
    "should check if biometric is enabled",
    "should record user activity",
    "should logout after session timeout",
    "should logout after inactivity timeout",
    "should get current user",
    "should update user data",
    "should throw error when updating user without authentication",
    "should request password reset",
    "should reset password with token",
    "should throw error when passwords do not match during reset",
    "should check if user is authenticated",
    "should return false when not authenticated",
    "should handle network errors gracefully",
    "should handle invalid JSON in stored user data",
    "should handle Keychain errors gracefully",
    "should initialize accessibility on first getInstance call",
    "should initialize with default config when accessibility checks fail",
    "should setup all accessibility event listeners",
    "should return current accessibility config",
    "should update config when accessibility changes",
    "should update config for all accessibility features",
    "should return screen reader status",
    "should return bold text status",
    "should return reduce motion status",
    "should return high contrast status",
    "should return minimum touch target size",
    "should announce content for accessibility",
    "should handle announcement errors gracefully",
    "should set accessibility focus on iOS",
    "should handle focus errors gracefully",
    "should return correct multiplier for different content sizes",
    "should return standard accessible color scheme",
    "should return high contrast color scheme when enabled",
    "should return true for contrast check (placeholder implementation)",
    "#000000",
    "should add and remove change listeners",
    "should notify listeners when accessibility changes",
    "should handle iOS-specific focus implementation",
    "should handle Android focus (placeholder)",
    "Coming Soon",
    "Error",
    "Navigation",
    "Success",
    "Button Pressed",
    "Swipe Left",
    "Swipe Right",
    "Swipe Up",
    "Loading Complete",
    "User Reports",
    "Content Moderation",
    "User Management",
    "Analytics",
    "Settings",
    "Guidelines",
    "Training",
    "Restore Purchases",
    "chat:message",
    "/live/active",
    "/live/start",
    "/live/stop",
    "Feature Unavailable",
    "Live Error",
    "Unblock User",
    " ",
    "Terms of Service",
    "Privacy Policy",
    "GDPR Rights",
    "Cookie Policy",
    "Website",
    "Permissions Required",
    "Permission needed",
    "Analysis Failed",
    "Help",
    "About",
    "../../services/api",
    "subscription_success",
    "renders premium screen correctly",
    "displays subscription tiers",
    "shows monthly and yearly pricing options",
    "allows switching between monthly and yearly billing",
    "handles tier selection",
    "initiates subscription process when subscribe button is pressed",
    "handles successful subscription",
    "handles subscription errors gracefully",
    "displays features for each tier",
    "highlights premium features",
    "displays current subscription status",
    "shows upgrade options for current subscribers",
    "has accessible labels for subscription tiers",
    "provides accessible navigation",
    "shows loading indicator during subscription process",
    "displays error message on subscription failure",
    "allows retry after error",
    "adopt",
    "list",
    "../../types/forms",
    "Missing Information",
    "should render a simple component",
    "Test",
    "should render correctly with call data",
    "Incoming Call",
    "Voice Call",
    "Test Caller",
    "PawfectMatch",
    "should display video call type correctly",
    "Video Call",
    "should start vibration on mount",
    "should cancel vibration on unmount",
    "should call onAnswer when answer button is pressed",
    "should call onReject when reject button is pressed",
    "should render default avatar when no avatar provided",
    "should handle animations correctly",
    "should format call type correctly",
    "should render additional action buttons",
    "Message",
    "Profile",
    "should apply correct styles for different call states",
    "should render correctly with call state",
    "02:00",
    "should render voice call layout correctly",
    "should render video call layout correctly",
    "should call onEndCall when end call button is pressed",
    "should call onToggleMute when mute button is pressed",
    "should call onToggleVideo when video button is pressed",
    "should call onSwitchCamera when camera switch button is pressed",
    "should call onToggleSpeaker when speaker button is pressed",
    "should show muted state correctly",
    "should show video disabled state correctly",
    "should format call duration correctly",
    "should auto-hide controls for video calls",
    "should handle screen tap to show/hide controls",
    "should handle draggable local video for video calls",
    "should not show video-specific controls for voice calls",
    "No Image",
    "Invalid Selection",
    "Edit",
    "/api/adoption/listings",
    "Add Photo",
    "Call",
    "name",
    "phone",
    "relationship",
    "en-US",
    "should scroll to top when tab is pressed",
    "Home",
    "should refresh content on double-tap",
    "Matches",
    "should scroll to top on double-tap",
    "should handle navigation between tabs with scroll-to-top",
    "should maintain scroll position when switching tabs",
    "should handle rapid tab switching",
    "should handle double-tap during navigation",
    "should maintain accessibility labels during scroll-to-top",
    "should handle multiple scroll-to-top actions efficiently",
    "should not cause memory leaks with multiple tab presses",
    "should work correctly with tabPress events",
    "should handle tabLongPress events separately",
    "renders correctly with pets",
    "My Pets",
    "Buddy",
    "Luna",
    "displays loading state initially",
    "Loading pets...",
    "shows empty state when no pets",
    "No Pets Yet",
    "navigates to CreatePet when add button is pressed",
    "navigates to CreatePet when empty state button is pressed",
    "Create Your First Pet Profile",
    "navigates to PetDetail when pet card is pressed",
    "navigates to EditPet when edit button is pressed",
    "shows delete confirmation dialog when delete button is pressed",
    "deletes pet when confirmation is accepted",
    "handles API error gracefully",
    "refreshes data when pull-to-refresh is triggered",
    "displays correct pet information",
    "Golden Retriever",
    "Siamese",
    "3 years • male • large",
    "2 years • female • small",
    "displays correct species emojis",
    "🐕",
    "🐱",
    "displays intent badges correctly",
    "Playdates",
    "For Adoption",
    "shows photo count badge when pet has multiple photos",
    "3",
    "displays placeholder when pet has no photos",
    "handles back button press",
    "displays correct pet count in header",
    "2 pets profiles",
    "displays singular form for single pet",
    "1 pet profile",
    "handles delete error gracefully",
    "cancels delete when user cancels confirmation",
    "should render without crashing",
    "should render with mock data",
    "should initialize with all required hooks",
    "should configure useTabReselectRefresh correctly",
    "should pass correct props to FlatList",
    "should handle scroll events",
    "should trigger refresh when tab is reselected near top",
    "should pass correct theme colors to RefreshControl",
    "should handle tab switching",
    "should track scroll position for reselect logic",
    "should persist scroll position",
    "should render call buttons for each match",
    "should start voice call when voice button is pressed",
    "should start video call when video button is pressed",
    "should prevent call button from triggering match navigation",
    "should show error when call fails to start",
    "should prevent starting call when another call is active",
    "should handle different matches correctly",
    "should style call buttons correctly",
    "should show correct icons for call buttons",
    "should handle match card press correctly (not call buttons)",
    "should cancel call when user presses cancel",
    "should handle call manager errors gracefully",
    "should maintain match list functionality with call buttons",
    "with John Doe",
    "tapping a Marker calls setSelectedPin and opens PinDetailsModal; close hides it",
    "../MapScreen",
    "close-pin",
    "AR FAB is disabled when userLocation is missing (no navigation occurs)",
    "👁️",
    "renders header title and subtitle",
    "Pet Activity Map",
    "Real-time locations",
    "shows MapView, Circle (radius), and at least one Marker",
    "FAB: pressing location triggers getCurrentLocation()",
    "📍",
    "settings button toggles filter panel",
    "⚙️",
    "AR FAB navigates to ARScentTrails with user location",
    "filters modal: apply triggers activity toggle + setFilters",
    "Filters",
    "stats panel renders stats payload",
    "has visible headings and decorative gradient container",
    "renders without crashing with theme provider",
    "applies theme colors correctly",
    "should render call buttons in header",
    "should handle call button press with haptic feedback",
    "should show correct call button icons",
    "should apply correct styling to call buttons",
    "should handle call manager hook errors gracefully",
    "should show different confirmation messages for voice and video calls",
    "renders correctly with initial state",
    "AI Photo Analyzer",
    "📷 Select Pet Photos",
    "Take Photo",
    "From Gallery",
    "shows photo selection instructions",
    "requests camera permissions when taking photo",
    "requests media library permissions when selecting from gallery",
    "shows permission alert when camera permission is denied",
    "shows permission alert when media library permission is denied",
    "adds selected photos to the list",
    "Analyze Photos",
    "limits photos to maximum of 5",
    "removes photo when remove button is pressed",
    "shows error when no photos are selected for analysis",
    "calls API with correct parameters when analyzing photos",
    "displays analysis results when API call succeeds",
    "🎯 Analysis Results",
    "95% confidence",
    "3 years",
    "90/100",
    "shows loading state during analysis",
    "Analyzing...",
    "shows error message when API call fails",
    "Analysis failed",
    "shows matchability score with correct color coding",
    "85/100",
    "Excellent for matching!",
    "displays secondary breeds when available",
    "Possible Mixed Breeds:",
    "Labrador",
    "Poodle",
    "30%",
    "20%",
    "shows AI insights when available",
    "🤖 AI Insights",
    "• High quality photo with good lighting",
    "• Clear subject focus",
    "• Professional composition",
    "resets analysis when new analysis button is pressed",
    "New Analysis",
    "navigates back when back button is pressed",
    "handles image picker errors gracefully",
    "Failed to select images. Please try again.",
    "handles camera errors gracefully",
    "Failed to take photo. Please try again.",
    "AI Compatibility",
    "🐕 Select Two Pets",
    "Pet 1",
    "Pet 2",
    "VS",
    "Available Pets",
    "shows loading state initially",
    "displays available pets after loading",
    "Max",
    "allows selecting first pet",
    "allows selecting second pet after first is selected",
    "Analyze Compatibility",
    "prevents selecting same pet twice",
    "prevents selecting pets from same owner",
    "German Shepherd",
    "allows deselecting pets",
    "Select Pet 1",
    "shows error when trying to analyze without selecting both pets",
    "calls API with correct parameters when analyzing compatibility",
    "displays compatibility results when API call succeeds",
    "🎯 Compatibility Results",
    "Very Good Match",
    "These pets show excellent compatibility potential.",
    "shows compatibility score with correct color coding for high score",
    "95/100",
    "Excellent Match!",
    "shows compatibility score with correct color coding for medium score",
    "65/100",
    "Fair Compatibility",
    "displays detailed breakdown with progress bars",
    "📊 Detailed Breakdown",
    "Personality",
    "Lifestyle",
    "Activity Level",
    "Social Behavior",
    "Environment",
    "90%",
    "70%",
    "80%",
    "85%",
    "75%",
    "displays recommendations when available",
    "💡 Recommendations",
    "🎯 Meeting Suggestions",
    "• Neutral territory",
    "• Supervised introduction",
    "🎾 Activity Recommendations",
    "• Play fetch together",
    "• Go for walks",
    "⚠️ Supervision Requirements",
    "• Initial supervision recommended",
    "Success Probability:",
    "auto-selects pets when passed via route params",
    "handles loading pets error gracefully",
    "Failed to load pets. Please try again.",
    "handles network timeout gracefully",
    "Network timeout",
    "renders all input fields correctly",
    "Enter pet name",
    "Enter pet breed",
    "Enter pet age",
    "Enter personality traits (comma-separated)",
    "Generate AI Bio",
    "displays the header with correct title",
    "AI Bio Generator",
    "shows back button",
    "shows error when pet name is empty",
    "shows error when pet breed is empty",
    "shows error when pet age is empty",
    "shows error when personality traits are empty",
    "calls API with correct parameters when form is valid",
    "displays generated bio when API call succeeds",
    "Generated Bio",
    "Match Score: 85%",
    "shows loading state during API call",
    "Generating...",
    "trims whitespace from input values",
    "handles empty personality traits gracefully",
    "handles 503 service unavailable error",
    "renders all tabs with correct labels",
    "Swipe",
    "Map",
    "renders with blur view wrapper",
    "shows active indicator with animated underline",
    "displays badges for tabs with counts",
    "1",
    "2",
    "navigates to different tab on press",
    "handles multiple tab switches",
    "triggers haptic feedback on tab press",
    "triggers medium haptic feedback on same tab reselect",
    "has proper accessibility labels",
    "Home tab",
    "Swipe tab",
    "Matches tab",
    "Map tab",
    "Profile tab",
    "sets correct accessibility state for active tab",
    "updates accessibility state on tab switch",
    "shows badge with correct count",
    "hides badge when count is 0",
    "0",
    "displays 99+ for counts over 99",
    "emits long press event",
    "applies blur view with correct intensity",
    "has proper styling with shadows and elevation",
    "animates icon scale on focus",
    "renders spotlight pulse on press",
    "renders breathing underline indicator",
    "handles safe area insets",
    "measures tab positions for accurate animations",
    "adapts to different screen sizes",
    "does not create unnecessary re-renders",
    "handles rapid tab switching smoothly",
    "gracefully handles missing route descriptors",
    "handles navigation errors without crashing",
    "adapts to dark theme",
    "adapts to light theme",
    "updates colors on theme change",
    "animates indicator position on tab change",
    "animates badge appearance",
    "applies breathing animation to active indicator",
    "should scroll to top and refresh on double-tap",
    "div",
    "should refresh pets on double-tap",
    "should center on user location on double-tap",
    "should navigate through all tabs and handle double-taps",
    "should handle rapid tab switching without errors",
    "should maintain accessibility during tab switching",
    "should handle many tab switches efficiently",
    "should render all tabs correctly",
    "should display correct icons for each route",
    "should display focused icon for active tab",
    "should navigate to tab on press",
    "should not navigate when already on the tab",
    "should detect double-tap and emit tabDoublePress event",
    "should not emit tabDoublePress if second tap is after 300ms",
    "should show badge for routes with counts",
    "should display badges for Home and Map tabs",
    "should display correct labels for each tab",
    "should handle long press event",
    "should handle route without title",
    "TestRoute",
    "should handle theme changes (dark mode)",
    "should animate indicator on tab change",
    "should handle undefined scale gracefully",
    "should apply correct accessibility props",
    "should handle platform differences (iOS vs Android)",
    "should get correct icon for unknown route",
    "should handle complete navigation lifecycle",
    "should detect and handle double-tap correctly",
    "should reset double-tap timer after successful double-tap",
    "should animate indicator when switching tabs",
    "should bounce icon when pressed",
    "should display badges with correct counts",
    "should hide badges when count is 0",
    "should handle missing layout gracefully",
    "should handle undefined descriptors",
    "should handle navigation state changes rapidly",
    "should handle haptic feedback failures gracefully",
    "should provide proper accessibility information",
    "should update accessibility state when tab changes",
    "should apply correct styles for light mode",
    "should apply correct styles for dark mode",
    "Validation Error",
    "Photos Required",
    "Success!",
    "live:message",
    "live:reaction",
    "FAQ",
    "Contact Support",
    "Report Bug",
    "Safety Center",
    "Email Support",
    "join_match",
    "leave_match",
    "Connection Error",
    "send_message",
    "typing",
    "should initialize with false by default",
    "should initialize with provided initial value",
    "should toggle from false to true",
    "should toggle from true to false",
    "should toggle multiple times correctly",
    "should return stable toggle function reference",
    "should have setOn and setOff methods",
    "should initialize with provided tab",
    "should switch to different tab",
    "should work with different tab types",
    "should return stable function references",
    "should initialize with default scroll position",
    "should load stored scroll position",
    "should save scroll position when updated",
    "should restore scroll position",
    "should clear stored scroll position",
    "should work with custom default position",
    "should initialize with provided initial value when no stored value",
    "should load stored value from AsyncStorage",
    "should update stored value when setValue is called",
    "should initialize with false",
    "should open modal",
    "should close modal",
    "should toggle modal state",
    "should initialize with correct values and no errors",
    "should update field values",
    "should validate form and show errors",
    "should clear errors when valid data is entered",
    "should reset form to initial values",
    "should handle dynamic validation",
    "should work without validation function",
    "should initialize with correct default state",
    "should execute async action successfully",
    "should handle async action failure",
    "should reset state",
    "should execute with arguments",
    "should not execute if already loading",
    "should create PanResponder with correct configuration",
    "should handle swipe left gesture",
    "should handle swipe right gesture",
    "should handle swipe up gesture",
    "should handle swipe down gesture",
    "should not trigger swipe for movements below threshold",
    "should respect custom swipe threshold",
    "should prioritize horizontal over vertical swipes",
    "should handle pan responder termination",
    "should return stable panHandlers reference",
    "Payment Error",
    "Payment Failed",
    "Logout",
    "Export Started",
    "Export Complete",
    "Registration Failed",
    "/api/profile/privacy",
    "Super Like Sent!",
    "Report",
    "Location Error",
    "join_map",
    "leave_map",
    "Login Failed",
    "Required",
    "Call Feature",
    "More Options",
    "Moderate Reports",
    "Export Data",
    "Scan Complete",
    ",",
    "Saved Locally",
    "should initialize with theme data",
    "should provide animation values from domain hook",
    "should indicate when ready",
    "should handle get started action",
    "should handle skip onboarding action",
    "should provide all animation values",
    "should expose theme information",
    "should initialize with intents data",
    "should provide intent selection function",
    "find_match",
    "should not navigate when selection is invalid",
    "should navigate when selection is valid",
    "should handle navigation back",
    "should handle confirmation errors gracefully",
    "should provide all intents data",
    "should expose navigation state",
    "should initialize with loading state",
    "should load settings data on mount",
    "should load cached data when available",
    "should handle loading errors",
    "should update privacy settings successfully",
    "should toggle individual privacy settings",
    "should update push notification settings",
    "should update email notification settings",
    "should toggle individual notification settings",
    "should update app preferences",
    "should update individual preference settings",
    "should handle account deletion request",
    "should export user data",
    "should logout from current device",
    "should logout from all devices",
    "should get login devices",
    "should revoke device access",
    "should validate privacy settings",
    "should validate preference settings",
    "should validate notification settings",
    "should cache settings data",
    "should clear cache when requested",
    "should handle network errors during updates",
    "should handle server validation errors",
    "should reset error state on successful operations",
    "should handle settings updates from server",
    "should handle preference changes from system",
    "should track settings interactions",
    "should track settings changes",
    "should handle empty settings data",
    "should handle settings with missing optional fields",
    "should handle very large preference data",
    "should handle malformed cached data",
    "should handle concurrent settings updates",
    "should handle rapid preference toggles",
    "should initialize with empty form values",
    "should update form field values",
    "should validate required fields",
    "should validate email format",
    "should validate password strength",
    "should validate password confirmation match",
    "should validate age (must be 18+)",
    "T",
    "should navigate to login screen",
    "should handle form submission with valid data",
    "should reset form to initial state",
    "should load profile data on mount",
    "should update profile successfully",
    "should handle profile update errors",
    "should validate profile updates",
    "should add photo successfully",
    "should remove photo successfully",
    "should set primary photo",
    "should reorder photos",
    "should handle photo permission denied",
    "should add pet successfully",
    "should update pet successfully",
    "should remove pet successfully",
    "should get active pets only",
    "should update privacy settings",
    "should toggle profile visibility",
    "should calculate completion percentage",
    "should get completion requirements",
    "should validate profile completeness",
    "should provide profile statistics",
    "should track profile interactions",
    "should cache profile data",
    "should handle real-time profile updates",
    "should handle real-time pet updates",
    "should handle empty profile data",
    "should handle profile with no pets",
    "should handle very large photo arrays",
    "should initialize with default values",
    "should provide all subscription tiers",
    "should mark premium tier as popular",
    "should change billing period",
    "should change selected tier",
    "should handle subscription for paid tier",
    "should use correct price ID for yearly billing",
    "should not create checkout for free tier",
    "should set loading state during subscription",
    "should handle subscription error",
    "should handle invalid tier ID",
    "should handle missing checkout URL",
    "should navigate back when requested",
    "should provide available plans from service",
    "should include feature lists for each tier",
    "should provide pricing for monthly and yearly periods",
    "should have correct stripe price IDs",
    "should initialize with data from domain hook",
    "should expose userIntent from route params",
    "should provide all navigation handlers",
    "should handle next step when can proceed",
    "should not proceed to next step when cannot proceed",
    "should not exceed max step (step 2)",
    "should handle previous step",
    "should not go below step 0",
    "should handle complete and navigate to preferences",
    "should not complete when cannot proceed",
    "should handle error during completion",
    "should handle go back navigation",
    "should expose domain hook methods",
    "should track progress percentage from domain hook",
    "should expose profile data from domain hook",
    "should expose state from domain hook",
    "should handle multi-step navigation flow",
    "should pass userIntent to PreferencesSetup on complete",
    "should initialize filters with default values",
    "should load pets successfully",
    "should handle loading state correctly",
    "should handle error when loading fails",
    "should use filters when loading pets",
    "should handle swipe right (like)",
    "should handle swipe left (pass)",
    "should handle swipe up (superlike)",
    "should handle button swipe actions",
    "should show match modal on successful match",
    "should update current index",
    "should toggle match modal",
    "should toggle filters panel",
    "should update filters",
    "should reload pets when filters change",
    "should maintain previous filters on error",
    "should handle API errors without user ID",
    "should handle missing pet ID",
    "should update current pet based on index",
    "should handle null current pet when index is out of bounds",
    "should reset current pet when pets array is empty",
    "should close match modal correctly",
    "should maintain matched pet data when modal is shown",
    "should handle empty pets array",
    "should handle null user gracefully",
    "should handle concurrent swipes",
    "should handle swipe actions when pets are loading",
    "should initialize with matches tab as active",
    "should check if tab is active",
    "should update isActive checks when tab changes",
    "should support all tab types",
    "should provide tab configuration",
    "should initialize with action handlers",
    "should show confirmation dialog for unmatch",
    "should unmatch when confirmed",
    "should handle unmatch error",
    "should show confirmation dialog for block",
    "should block user when confirmed",
    "should handle block error",
    "should show report options dialog",
    "match123",
    "should report as spam when selected",
    "should report as inappropriate when selected",
    "should report as other when selected",
    "should handle report error",
    "should work without callbacks",
    "should use destructive style for unmatch button",
    "should use destructive style for block button",
    "should have cancel option for all actions",
    "should update email field",
    "should update password field",
    "should validate password presence",
    "should navigate to register screen",
    "should navigate to forgot password screen",
    "should handle form submission",
    "should load home data on mount",
    "should refresh expired cache",
    "should refresh data on demand",
    "should handle refresh loading state",
    "should handle refresh errors gracefully",
    "should mark activity as read",
    "should get unread activity count",
    "should filter activities by type",
    "should load and provide quick actions",
    "should execute quick actions",
    "should check action availability",
    "should provide recommendations data",
    "should sort recommendations by compatibility",
    "should sort recommendations by distance",
    "should provide user statistics",
    "should handle real-time activity updates",
    "should update stats in real-time",
    "should cache home data",
    "should handle initial data loading errors",
    "should handle activity feed loading errors",
    "should track screen performance",
    "should track user engagement metrics",
    "recommendations_view",
    "should handle missing user data",
    "should initialize with empty email",
    "should require email",
    "should send password reset successfully",
    "should provide navigation handlers",
    "should initialize with empty state",
    "should provide deactivation reasons",
    "should set selected reason",
    "should update confirmation text",
    "deactivate",
    "should require reason selection",
    "should require confirmation text",
    "should deactivate account successfully",
    "should provide navigation handler",
    "should load draft from AsyncStorage on mount",
    "should handle no draft gracefully",
    "should update input text correctly",
    "New message",
    "should persist input text to AsyncStorage",
    "Test message",
    "should remove draft when input is cleared",
    "should send message successfully",
    "should not send empty message",
    "   ",
    "should trim message content before sending",
    "   Trimmed message   ",
    "should handle typing state changes",
    "should clear timeout on unmount",
    "should populate quick replies correctly",
    "should handle quick reply selection",
    "Sounds good! 👍",
    "should handle message long press to show reactions",
    "should handle reaction selection",
    "👍",
    "should handle reaction cancel",
    "should not react if no message is selected",
    "should handle voice call alert",
    "should handle video call alert",
    "should save scroll position to AsyncStorage",
    "should provide chat data and actions",
    "should handle loading state from chat data",
    "should handle empty input text updates",
    "should initialize with empty blocked users list",
    "should load blocked users successfully",
    "should refresh blocked users list",
    "should unblock user successfully",
    "should handle unblock errors",
    "should initialize with default filters",
    "should toggle filter value",
    "should show confirmation alert",
    "should return filters for a specific category",
    "should save filters and show success alert",
    "should load dashboard data on mount",
    "should provide metrics data",
    "should handle refresh",
    "should navigate to users screen",
    "should navigate to chats screen",
    "should navigate to verifications screen",
    "should navigate to uploads screen",
    "should navigate to analytics screen",
    "should navigate to security screen",
    "should navigate to billing screen",
    "should provide quick actions",
    "should handle quick action execution",
    "should update last updated timestamp",
    "should provide recent activity data",
    "should initialize and load available pets",
    "should provide state from domain hook",
    "should provide action methods",
    "should show alert when analyzing without both pets selected",
    "should call analyzeCompatibility when both pets selected",
    "should load specific pets from route params",
    "should handle error when analyzing compatibility fails",
    "should expose selected pets from domain hook",
    "should expose compatibility result from domain hook",
    "should expose error state from domain hook",
    "should expose analyzing state from domain hook",
    "should reload pets when route params change",
    "should initialize with default form state",
    "should provide available tones",
    "should update pet name",
    "should update pet breed",
    "should update pet age",
    "should update pet personality",
    "should update selected tone",
    "should request image picker permissions",
    "should show alert when permissions denied",
    "should handle canceled image picker",
    "should require pet name for bio generation",
    "should generate bio with form data",
    "should parse age as integer",
    "should handle invalid age",
    "should save bio to pet profile",
    "should handle save when no pets exist",
    "should handle save errors gracefully",
    "should navigate back",
    "should clear form",
    "should provide generated bio from domain hook",
    "should provide isGenerating state",
    "should provide bio history",
    "should split personality keywords correctly",
    "should filter empty keywords",
    "should complete registration flow",
    "your@email.com",
    "John",
    "Doe",
    "1990-01-01",
    "********",
    "Create Account",
    "should complete forgot password flow",
    "Send Reset Link",
    "should validate form inputs",
    "should navigate between screens correctly",
    "should subscribe to tabPress and tabDoublePress events",
    "should cleanup subscriptions on unmount",
    "should scroll to top when scrolled far from top",
    "should scroll FlatList when using scrollToOffset",
    "should scroll SectionList when using scrollToIndex",
    "should refresh when scrolled near top",
    "should not refresh when nearTopAction is ",
    "should scroll to top and refresh on double tap",
    "should prevent rapid triggering within cooldown period",
    "should ignore tabPress when screen is not focused",
    "should ignore tabDoublePress when screen is not focused",
    "should trigger haptics when enabled",
    "should not trigger haptics when disabled",
    "should handle missing scroll methods gracefully",
    "should handle null listRef gracefully",
    "should handle undefined getOffset",
    "should handle async onRefresh",
    "should use custom topThreshold",
    "should re-subscribe when dependencies change",
    "should subscribe to tabDoublePress event",
    "should call callback when tabDoublePress event is triggered",
    "should cleanup listener on unmount",
    "should execute callback on multiple triggers",
    "should handle async callbacks",
    "should handle callbacks that throw errors",
    "should re-subscribe when callback changes",
    "should use latest callback reference",
    "should handle navigation object changes",
    "should work with an undefined callback",
    "should handle multiple unmounts gracefully",
    "should cleanup properly even if unsubscribe throws",
    "should support conditional callback execution",
    "should handle rapid multiple registrations",
    "should initialize with offset of 0",
    "should return onScroll and getOffset functions",
    "should track scroll offset",
    "should update tracked offset on subsequent scrolls",
    "should return stable onScroll reference",
    "should return stable getOffset reference",
    "should handle negative offset",
    "should handle zero offset",
    "should handle very large offset values",
    "should handle rapid scroll events",
    "should work with FlatList scroll events",
    "should work independently across multiple hooks",
    "should handle complete user flow: scroll → tab press → scroll to top",
    "should handle complete user flow: scroll → tab press near top → refresh",
    "should handle complete user flow: double tap → scroll + refresh",
    "should work with scroll tracker + tab reselect + double press together",
    "should handle rapid tab switching + scrolling",
    "should handle background state correctly",
    "should handle many rapid scroll events",
    "should handle memory leaks with multiple hook instances",
    "should handle cleanup and re-initialization",
    "should emit events that can be consumed by other components",
    "should initialize with default state",
    "should provide story data",
    "should navigate to next story in same group",
    "should navigate to next group when stories end",
    "should navigate to previous story",
    "should navigate to previous group when at start of stories",
    "should navigate to specific group",
    "should navigate to specific story",
    "should pause and unpause playback",
    "should toggle mute state",
    "should mark story as viewed",
    "should refresh stories",
    "should handle socket events for view updates",
    "should reset progress when navigating",
    "should provide timer refs",
    "should not navigate beyond last story",
    "should load initial data on mount",
    "should load leaderboard with default filter",
    "should change selected category",
    "should change selected period",
    "should toggle filters visibility",
    "should refresh data",
    "should set refreshing state during refresh",
    "should load more entries when available",
    "should append entries when loading more",
    "should not load more when hasMore is false",
    "should not load more when already loading",
    "should replace entries when loading page 1",
    "should load user rank for specific category",
    "should load user rank for all categories",
    "should handle error during initial load",
    "should provide all periods options",
    "should initialize with callbacks",
    "should sync settings successfully",
    "should handle sync errors",
    "should return true on success",
    "should return false on failure",
    "should set isSyncing during sync",
    "should clear previous errors on new sync",
    "should handle empty settings object",
    "should handle multiple rapid sync attempts",
    "should initialize with default options",
    "should load settings from AsyncStorage",
    "should return initial data when no stored settings",
    "should save settings to AsyncStorage",
    "should clear settings from AsyncStorage",
    "should handle clear errors gracefully",
    "should work with complex nested objects",
    "Emergency Contacts",
    "should initialize with emergency mode disabled",
    "should provide safety options",
    "should show confirmation dialog when toggling emergency mode",
    "should enable emergency mode when confirmed",
    "should disable emergency mode when toggling off",
    "should set emergency mode directly",
    "should report user successfully",
    "should set reporting state during report submission",
    "should handle safety option selection",
    "should contact support",
    "should view safety guidelines",
    "should navigate to privacy settings",
    "should setup emergency contacts",
    "should view safety tips",
    "should provide all safety option details",
    "should have correct color codes for safety options",
    "should trigger haptic feedback on emergency mode toggle",
    "should trigger haptic feedback on safety option selection",
    "should provide privacy settings option action",
    "should provide emergency contacts option action",
    "should load blocked users manually",
    "should load blocked users on mount with timer",
    "should refresh blocked users",
    "should unblock a user",
    "should handle blocking user failure",
    "should track blocked timestamp",
    "No photos",
    "should initialize with auth user data",
    "should load user pets on mount",
    "should handle non-Error API rejections",
    "should refresh profile data when called manually",
    "should handle null/undefined pets data",
    "should not load data when disabled",
    "should handle refresh when disabled",
    "should reset error state on successful refresh",
    "should demonstrate complete profile management workflow",
    "should handle error states across hooks",
    "should demonstrate hook composition benefits",
    "@stripe/stripe-react-native",
    "should load cached subscription data on mount",
    "should create subscription successfully",
    "should handle subscription creation errors",
    "should update subscription plan",
    "should load payment methods",
    "should add payment method",
    "should remove payment method",
    "should initialize payment sheet successfully",
    "should present payment sheet",
    "should handle payment sheet errors",
    "should check if subscription is active",
    "should check if subscription is cancelled",
    "should calculate days until renewal",
    "should check if subscription will renew",
    "should load billing history",
    "should show processing state during operations",
    "should prevent concurrent operations",
    "should handle Stripe errors",
    "should handle malformed subscription data",
    "should cache subscription data",
    "should handle empty payment methods",
    "should handle subscription without payment method",
    "should handle expired subscriptions",
    "should handle very long billing cycles",
    "should load cached premium status on mount",
    "should handle corrupted cache data gracefully",
    "should check premium status successfully",
    "should handle inactive subscription",
    "should handle loading state during status check",
    "should handle status check errors",
    "should clear previous errors on successful check",
    "should cache premium status data",
    "should use cached data when not expired",
    "should auto-refresh status periodically",
    "should disable auto-refresh when option is false",
    "should handle auto-refresh errors gracefully",
    "should fetch detailed subscription information",
    "should handle subscription details errors",
    "should provide subscription utilities",
    "should handle cancelled subscriptions",
    "should handle network errors during status check",
    "should handle server errors with custom messages",
    "should handle empty subscription details",
    "should handle subscription with no features",
    "should handle very old cached data",
    "should handle rapid consecutive status checks",
    "should accept custom cache key",
    "should accept custom cache expiration",
    "should allow access to premium features for premium users",
    "should deny access to premium features for free users",
    "should allow access to free features for all users",
    "should check usage limits correctly",
    "swipes",
    "should provide unlimited access for premium features",
    "super_likes",
    "should handle unknown features gracefully",
    "unknown_feature",
    "should prevent usage when at limit",
    "should allow unlimited usage for premium features",
    "should provide feature-specific configurations",
    "should provide different configs for free vs premium users",
    "should refresh usage stats on demand",
    "should react to premium status changes",
    "should handle premium status loading states",
    "should cache feature configurations",
    "should load cached data on mount",
    "should handle empty usage stats",
    "should handle negative usage values",
    "should handle very high usage limits",
    "should handle concurrent feature usage attempts",
    "should handle malformed feature configurations",
    "should load pending deletion status",
    "should refresh status when called",
    "should return stable refresh function reference",
    "should load cached export data on mount",
    "should successfully export user data with default options",
    "should export data with custom options",
    "should handle export in progress state",
    "should clear previous errors on new export",
    "should successfully download exported data",
    "should handle download without export ID",
    "should handle download in progress state",
    "should handle file system errors during download",
    "should cache export data",
    "should handle cache clearing errors gracefully",
    "should handle network errors during export",
    "should generate proper download filename",
    "should handle file cleanup on errors",
    "should prevent concurrent exports",
    "should handle concurrent downloads",
    "should handle empty export data",
    "should handle very large export data",
    "should handle export with missing optional fields",
    "should handle download with non-existent export",
    "should handle request deletion failure",
    "should handle cancel deletion failure",
    "should request deletion with minimal parameters",
    "../../../services/api",
    "should load available pets",
    "should set loading state when loading pets",
    "should handle pet loading error",
    "should analyze compatibility successfully",
    "should require both pet IDs",
    "should require different pets",
    "should set loading state during analysis",
    "should handle API error with fallback result",
    "should allow selecting pets",
    "should reset analysis",
    "should clear error",
    "should provide detailed compatibility breakdown",
    "should provide recommendations",
    "should provide AI analysis text",
    "should generate bio successfully",
    "should set loading state during generation",
    "should require pet name",
    "should handle API errors with fallback bio",
    "should add bio to history",
    "should maintain history of last 5 bios",
    "should clear history",
    "should initialize with retry and delete functions",
    "should retry an existing message",
    "should not retry non-existent message",
    "should handle retry errors",
    "should work without callback",
    "should delete a message",
    "should handle delete errors",
    "should retry then delete message",
    "should initialize with zero offset",
    "should restore saved scroll position",
    "should not restore when disabled",
    "should provide flatListRef",
    "should handle scroll events with debouncing",
    "should debounce multiple scroll events",
    "should not persist scroll when disabled",
    "should handle invalid saved offset",
    "should handle negative offsets",
    "should handle storage errors gracefully",
    "should work with different matchIds",
    "should simulate complete scroll flow",
    "should initialize with empty input text",
    "should load draft from storage on mount",
    "should not load draft when disabled",
    "should update input text",
    "Hello",
    "should respect maxLength limit",
    "This is too long",
    "should clear input text",
    "should persist input to storage",
    "should not persist when disabled",
    "should track typing state",
    "should auto-clear typing after 2 seconds",
    "should cancel timeout on repeated typing",
    "should stop typing indicator",
    "should handle empty draft from storage",
    "should handle storage getItem errors",
    "should handle rapid input changes",
    "A",
    "AB",
    "ABC",
    "Match 1 text",
    "Match 2 text",
    "should initialize with custom stagger delay",
    "should initialize with custom animation config",
    "should handle zero items",
    "should start staggered animation",
    "should animate with spring instead of timing",
    "should animate from current index",
    "should stop animation",
    "should reset animation",
    "should add new items dynamically",
    "should remove items dynamically",
    "should handle item reordering",
    "should track animation progress",
    "should provide completion status",
    "should provide item-specific progress",
    "should execute onStart callback",
    "should execute onComplete callback",
    "should execute onItemComplete callback",
    "should handle callback errors gracefully",
    "should support custom stagger patterns",
    "should support reverse stagger order",
    "should support random stagger delays",
    "should support different animation directions",
    "should memoize animated styles",
    "should minimize re-renders",
    "should handle large numbers of items efficiently",
    "should provide list animation helpers",
    "should animate items on scroll",
    "should handle item visibility changes",
    "should handle animation errors gracefully",
    "should handle invalid item counts",
    "should handle extreme stagger delays",
    "should handle concurrent animation calls",
    "should support custom easing functions",
    "should support loop animations",
    "should support bounce animations",
    "should support custom animation curves",
    "should handle empty item arrays",
    "should handle single item animations",
    "should handle very large stagger delays",
    "should handle zero stagger delay",
    "should handle component unmount during animation",
    "should handle invalid configuration values",
    "should handle maximum safe item counts",
    "should initialize with default enabled state",
    "should initialize with enabled=true",
    "should initialize with enabled=false",
    "should provide shimmer style property",
    "should generate correct shimmer style structure",
    "should maintain style when enabled changes",
    "should handle enabling shimmer animation",
    "should handle disabling shimmer animation",
    "should initialize ripple effect",
    "should provide ripple handlers",
    "should handle ripple creation",
    "should provide ripple style",
    "should maintain stable API on rerender",
    "should handle multiple ripple creation",
    "should handle unmount gracefully",
    "should provide pulse style property",
    "should generate correct pulse style structure",
    "should handle enabling pulse animation",
    "should handle disabling pulse animation",
    "should initialize with custom scale range",
    "should initialize with custom opacity range",
    "should initialize with haptic feedback enabled",
    "should handle press in event",
    "should handle press out event",
    "should handle press out with custom animation config",
    "should trigger haptic feedback on press in",
    "should trigger haptic feedback on press out",
    "should not trigger haptic feedback when disabled",
    "should handle haptic feedback errors gracefully",
    "should provide animated style with scale and opacity",
    "should use custom scale range in animation",
    "should use custom opacity range in animation",
    "should clamp interpolation values",
    "should provide pressable props for React Native components",
    "should merge with existing pressable props",
    "should handle touch events properly",
    "should use custom spring config for press in",
    "should use custom timing config for press out",
    "should support timing animation instead of spring",
    "should track pressed state correctly",
    "should reset state when needed",
    "should provide current animation progress",
    "should provide accessibility props",
    "should update accessibility state when pressed",
    "should merge with custom accessibility props",
    "should memoize animated style",
    "should memoize configuration",
    "should not recreate functions on re-render",
    "should handle rapid press events",
    "should handle concurrent press events",
    "should work with button components",
    "should support different press feedback styles",
    "should handle extreme scale ranges",
    "should handle zero opacity ranges",
    "should handle very fast press/release cycles",
    "should handle component unmounting during animation",
    "should handle invalid animation configurations",
    "should initialize with default speed",
    "should initialize with custom speed",
    "should handle different speed values",
    "should provide parallax style",
    "should handle speed changes",
    "should handle negative speed values",
    "should provide scroll handler",
    "should initialize page transition",
    "should provide transition style",
    "should maintain stable style reference",
    "should handle component unmount",
    "should provide magnetic handlers when enabled",
    "should handle enabled state changes",
    "should initialize with loading style",
    "should provide animated loading style",
    "should provide style with proper structure",
    "should return haptic feedback functions",
    "should trigger light impact",
    "Light",
    "should trigger medium impact",
    "Medium",
    "should trigger heavy impact",
    "Heavy",
    "should handle notification feedback",
    "should handle selection feedback",
    "should provide floatingStyle property",
    "should generate correct style structure",
    "should handle enabling animation",
    "should handle disabling animation",
    "should initialize with fadeIn type",
    "should initialize with slideIn type",
    "should initialize with scaleIn type",
    "should initialize with bounceIn type",
    "should handle delay parameter",
    "should provide start function",
    "should provide both entranceStyle and animatedStyle",
    "should enqueue uploads and process them sequentially",
    "should enforce concurrency limit of 3 simultaneous uploads",
    "should retry failed uploads with exponential backoff",
    "should stop retrying after maximum attempts",
    "should allow cancelling individual uploads",
    "should allow cancelling all pending uploads",
    "should pause and resume processing",
    "should handle network connectivity changes",
    "should provide progress tracking for individual uploads",
    "should handle priority uploads",
    "should handle duplicate upload prevention",
    "should handle memory pressure by reducing concurrency",
    "should persist queue state across app restarts",
    "should provide accessibility announcements",
    "should handle app background/foreground transitions",
    "should initialize with theme context values",
    "should provide all theme control functions",
    "should toggle theme with haptic feedback",
    "should toggle theme even if haptics fail",
    "should set light theme",
    "should set dark theme",
    "should set system theme",
    "should show theme selector with current theme",
    "should show theme selector with dark mode UI",
    "should show theme selector with system theme label",
    "should call setLightTheme when Light option selected in selector",
    "should call setDarkTheme when Dark option selected in selector",
    "should call setSystemTheme when System Default option selected",
    "should expose theme colors",
    "should maintain stable function references",
    "should handle theme mode changes reactively",
    "should expose styles from theme context",
    "should expose shadows from theme context",
    "should create socket connection with correct configuration",
    "should not create socket if user is not authenticated",
    "should set up event listeners correctly",
    "should handle connect event",
    "should handle disconnect event",
    "should handle auth errors",
    "should clean up on unmount",
    "should reconnect when auth changes",
    "should return socket with connection status",
    "should update connection status on connect",
    "should update connection status on disconnect",
    "should update error status on connection error",
    "should emit events when socket is connected",
    "should not emit when socket is not connected",
    "should emit without data parameter",
    "should initialize with custom configuration",
    "should trigger shake animation",
    "should create shake sequence with correct pattern",
    "should use custom duration for shake timing",
    "should reset shake state when animation completes",
    "should trigger haptic feedback during shake",
    "should use custom haptic style",
    "should disable haptic feedback when configured",
    "should provide animated style with horizontal translation",
    "should use custom intensity in animation",
    "should support vertical shake animation",
    "should prevent concurrent shakes",
    "should allow shake after completion",
    "should provide manual control methods",
    "should reset animation state",
    "should handle invalid intensity values",
    "should handle invalid duration values",
    "should handle invalid repeat count",
    "should work on iOS platform",
    "should work on Android platform",
    "should handle web platform limitations",
    "should minimize re-renders during animation",
    "should reuse animation sequences when possible",
    "should handle animation setup failures",
    "should handle animation runtime errors",
    "should integrate with gesture handlers",
    "should provide shake trigger for external systems",
    "should respect reduced motion preferences",
    "should provide accessibility information",
    "should update accessibility info during animation",
    "should handle rapid consecutive shakes",
    "should handle shake with zero intensity",
    "should handle component unmount during shake",
    "should handle extreme configuration values",
    "should handle invalid configuration types",
    "should handle platform-specific animation limitations",
    "returns false initially when motion is not reduced",
    "returns true when motion is reduced",
    "detects reduced motion preference",
    "handles reduced motion disabled",
    "initializes state to false before async check",
    "updates state after async check completes",
    "calls AccessibilityInfo only once per mount",
    "handles promise rejection gracefully",
    "works with concurrent component usage",
    "maintains consistent value across re-renders",
    "can be used to conditionally disable animations",
    "can be used to enable full animations when motion not reduced",
    "integrates with BouncePressable haptics",
    "integrates with animation libraries",
    "handles rapid mount/unmount cycles",
    "should initialize with empty photos array",
    "should request permissions when picking image",
    "should add photos when image picker succeeds",
    "should mark first photo as primary",
    "should not mark additional photos as primary",
    "should remove photo by index",
    "should make first photo primary when removing primary photo",
    "should set primary photo by index",
    "should generate unique file names",
    "should set image type to image/jpeg",
    "should respect photo limit (10 photos)",
    "should preserve photo data structure",
    "should automatically upload photos when picked",
    "should track upload progress",
    "should mark photo as uploaded successfully",
    "should handle upload errors gracefully",
    "should handle uploading status correctly",
    "should provide uploadPendingPhotos method",
    "should enforce 6 photo limit",
    "should auto-select first photo as primary",
    "should allow demoting current primary when new primary is selected",
    "should maintain queue state machine correctly",
    "should handle photo processing errors",
    "should handle upload failures with retry logic",
    "should remove photos correctly",
    "should prevent removing primary photo when others exist",
    "should handle permission denied for photo library",
    "should handle user cancelling image picker",
    "should reorder photos correctly",
    "should validate photo file size limits",
    "should handle duplicate photo detection",
    "should provide progress updates during upload",
    "should handle concurrent photo additions",
    "should persist photo state across re-renders",
    "should provide accessibility labels for screen readers",
    "should handle memory pressure by clearing processed images",
    "initializes with correct default values",
    "initializes with custom options",
    "updates adjustment values",
    "brightness",
    "updates multiple adjustments",
    "contrast",
    "saturation",
    "rotates left correctly",
    "rotates right correctly",
    "handles multiple rotations",
    "flips horizontally",
    "flips vertically",
    "applies filter preset",
    "resets all adjustments",
    "saves image successfully",
    "applies rotation to saved image",
    "applies flips to saved image",
    "handles save failure gracefully",
    "sets loading state during save",
    "maintains manipulation history",
    "handles edge case rotation values",
    "handles negative rotation (rotate left)",
    "prevents repeated flip toggles",
    "applies combined transformations",
    "should initialize notifications on mount",
    "should cleanup on unmount",
    "should provide sendMatchNotification function",
    "should provide sendMessageNotification function",
    "should provide sendLikeNotification function",
    "should provide scheduleReminderNotification function",
    "should provide setBadgeCount function",
    "should provide clearBadge function",
    "should handle initialization error gracefully",
    "should handle null push token",
    "should provide all notification methods",
    "should only initialize once",
    "should set push token after initialization",
    "should mark as initialized after setup completes",
    "should cleanup notifications on unmount",
    "should track button interactions",
    "should track gesture interactions",
    "should track accessibility interactions",
    "should calculate response time metrics",
    "should track most used features",
    "should build touch heatmap data",
    "should aggregate touch data over multiple interactions",
    "should limit stored coordinates for performance",
    "should track interaction performance",
    "should handle multiple concurrent timings",
    "should handle orphaned timings",
    "should export interaction data",
    "should clear all metrics data",
    "should get interaction summary",
    "should allow disabling tracking",
    "should support custom event filtering",
    "should support custom data transformation",
    "should handle analytics service errors gracefully",
    "should handle invalid timing operations",
    "should handle malformed interaction data",
    "should handle timing overflow",
    "should limit interaction history size",
    "should cleanup resources on unmount",
    "should provide real-time metrics updates",
    "should calculate engagement score",
    "should track accessibility features usage",
    "should provide accessibility insights",
    "should handle extreme timing values",
    "should handle empty interaction data",
    "should handle malformed configuration",
    "should handle platform-specific limitations",
    "should setup listeners on mount",
    "should scroll to top when far from top on tab press",
    "should call refresh when near top on tab press",
    "should scroll to top and refresh on double press",
    "should trigger haptic feedback on actions",
    "should respect cooldown period",
    "should not trigger when not focused",
    "should use default threshold when not provided",
    "should respect custom topThreshold",
    "should handle ScrollView with scrollTo method",
    "should handle SectionList with scrollToIndex method",
    "should handle missing getOffset callback",
    "should cleanup listeners on unmount",
    "should handle async refresh callback",
    "should disable haptics when haptics is false",
    "should emit tabReselect event",
    "should emit tabDoublePulse event on double press",
    "should initialize with offset 0",
    "should track scroll offset correctly",
    "should update offset on multiple scroll events",
    "should maintain latest offset across multiple calls",
    "should return stable references for callbacks",
    "should handle large offset values",
    "should work correctly with multiple hook instances",
    "should handle scroll far from top → tap → scroll to top",
    "should handle scroll near top → tap → refresh",
    "should handle double tap → scroll to top + refresh",
    "should respect cooldown across rapid taps",
    "should provide haptic feedback on all actions",
    "should work with multiple screens simultaneously",
    "should handle zero offset correctly",
    "should handle exactly at threshold",
    "should handle missing listRef gracefully",
    "should handle scrollToOffset missing gracefully",
    "should emit correct navigation events",
    "should handle 1000 rapid scroll events efficiently",
    "should debounce rapid tab presses correctly",
    "should handle complete swipe right flow with animation",
    "should handle swipe left (reject) flow",
    "should trigger match modal on mutual like",
    "should not show match modal on non-mutual like",
    "should handle rapid swipe gestures without conflicts",
    "should maintain swipe history for undo functionality",
    "should handle swipe animations with rotation and opacity",
    "should handle card stack depletion",
    "should refresh card stack when depleted",
    "should handle super like gesture (swipe up)",
    "should prevent super like when limit reached",
    "should sync liked pets with matches list",
    "should handle gesture velocity for quick swipes",
    "should handle swipe cancellation (return to center)",
    "should track swipe analytics",
    "should handle navigation from home to profile",
    "should maintain state consistency across screens",
    "should gracefully handle API failures",
    "should not cause unnecessary re-renders",
    "should maintain state synchronization across auth, profile, and settings",
    "should handle logout and clear all user data",
    "should handle profile updates and persist changes",
    "should handle settings changes and sync with preferences",
    "should handle concurrent updates without conflicts",
    "should restore user session from storage on app restart",
    "should handle error recovery across integrated hooks",
    "should maintain data consistency during profile photo uploads",
    "should handle preferences sync between profile and settings",
    "should handle complete user onboarding flow",
    "Reaction Selected",
    "provides theme context to children",
    "defaults to light theme",
    "Remove Photo",
    "Upload Error",
    "../screens/ProfileScreen",
    "../screens/SettingsScreen",
    "../screens/MatchesScreen",
    "Too short",
    "Playback error",
    "should render all components together",
    "Discover",
    "should show gesture hints on first launch",
    "Swipe left to pass",
    "should show peek sheet when next pet exists",
    "should show confetti burst on match",
    "It",
    "should call onSendMessage to navigate to chat",
    "Send Message",
    "should call onKeepSwiping to dismiss modal",
    "Keep Swiping",
    "should call handleButtonSwipe on like button press",
    "should show loading state when loading",
    "Finding Matches",
    "should show error state when error occurs",
    "Error loading pets",
    "should show empty state when no more pets",
    "No more pets!",
    "should show filters when showFilters is true",
    "should handle full swipe session",
    "should not render when initialDismissed is true",
    "should render when initialDismissed is false",
    "Swipe right to like",
    "Swipe up to super like",
    "should display dismiss button when visible",
    "should check AsyncStorage on mount",
    "should call onDismiss when button is pressed",
    "should not throw when onDismiss is not provided",
    "should persist dismissal to AsyncStorage",
    "should handle rapid dismiss attempts",
    "should schedule auto-dismiss timeout when not using initialDismissed",
    "should render nothing when show is false",
    "should render nothing when nextPet is undefined",
    "should render nothing when nextPet is null",
    "should render when show is true and nextPet is provided",
    "should animate scale on show",
    "should animate opacity on show",
    "should use spring animation",
    "should display next pet name",
    "should handle pets with no photos",
    "should handle pets with single photo",
    "should handle pets with many photos",
    "should position at bottom of screen",
    "should have correct z-index for layering",
    "should center horizontally",
    "should not be interactive (pointerEvents=",
    "should disable card interactions",
    "should show peek indicator",
    "should handle undefined pet gracefully",
    "should handle missing pet properties",
    "should handle rapid show/hide toggles",
    "should handle pet change during animation",
    "should unmount cleanly",
    "should not re-render unnecessarily",
    "should handle multiple peek sheets simultaneously",
    "should work within swipe screen context",
    "should coordinate with card stack",
    "should have pointerEvents=",
    "should have correct card dimensions",
    "should apply correct border radius",
    "should have shadow/elevation effects",
    "should not render when show is false",
    "should render when show is true",
    "should render default show true when not provided",
    "should render confetti burst when shown",
    "should trigger confetti on show",
    "should stop confetti after duration",
    "should display match title",
    "should display pet name in message",
    "should handle long pet names",
    "should render Keep Swiping button",
    "should render Send Message button",
    "should call onKeepSwiping when Keep Swiping is pressed",
    "should call onSendMessage when Send Message is pressed",
    "should handle rapid button presses",
    "should render photo container",
    "should have overlay with correct background",
    "should have correct z-index",
    "should handle navigation on Send Message",
    "should handle dismiss on Keep Swiping",
    "should handle undefined callbacks gracefully",
    "should handle pet changes",
    "should be accessible to screen readers",
    "should have accessible buttons",
    "should handle confetti cleanup efficiently",
    "should render container when show is true",
    "should have correct z-index for overlay",
    "should create correct number of particles for light intensity",
    "should create correct number of particles for medium intensity",
    "should create correct number of particles for heavy intensity",
    "should trigger haptic feedback on show",
    "should trigger second haptic feedback after delay",
    "should animate particles with correct properties",
    "should call onComplete after duration",
    "should stop confetti after completion",
    "should trigger periodic bursts during animation",
    "should handle multiple burst cycles",
    "should use provided colors for particles",
    "should handle single color array",
    "should handle empty colors array",
    "should handle undefined onComplete",
    "should cleanup intervals on unmount",
    "should handle very short duration",
    "should handle very long duration",
    "should not create particles when show becomes false mid-animation",
    "should not create excessive particles for light intensity",
    "should efficiently clean up completed animations",
    "should work with minimal props",
    "should work with all props specified",
    "should coordinate with match modal",
    "Export Failed",
    "Saved!",
    "Save Failed",
    "warmth",
    "blur",
    "sharpen",
    "renders photo editor correctly",
    "Edit Photo",
    "displays preview image",
    "shows adjust tab by default",
    "Adjust",
    "switches between tabs",
    "displays all filter presets",
    "Original",
    "Vivid",
    "Warm",
    "Cool",
    "BW",
    "Vintage",
    "Dramatic",
    "Soft",
    "handles transform controls",
    "Rotate L",
    "Rotate R",
    "Flip H",
    "Flip V",
    "Reset All",
    "displays all adjustment sliders",
    "Brightness",
    "Contrast",
    "Saturation",
    "Warmth",
    "saves photo successfully",
    "Save",
    "cancels without saving",
    "✕",
    "supports custom aspect ratio",
    "supports custom dimensions",
    "provides haptic feedback on interactions",
    "handles multiple filter applications",
    "shows processing state during save",
    "Processing...",
    "maintains state across tab switches",
    "handles rapid interactions without crashes",
    "disables save button during processing",
    "handles errors gracefully",
    "works with different image URIs",
    "should export AdvancedPhotoEditor",
    "should export PhotoAdjustmentSlider",
    "should export usePhotoEditor hook",
    "should integrate slider with editor",
    "should allow slider value to update editor",
    "should complete full editing workflow",
    "should allow filter application",
    "should render loading state initially",
    "should render suggestions after loading",
    "1:1",
    "4:5",
    "9:16",
    "should render method badges",
    "should render use buttons",
    "should call onFocus when thumbnail is tapped",
    "should call onApply when use button is tapped",
    "Use",
    "should handle missing callbacks gracefully",
    "should accept custom ratios",
    "16:9",
    "3:2",
    "should display empty state when detection fails",
    "should display empty state when engine throws error",
    "should re-run on URI change",
    "should re-run on ratios change",
    "should generate thumbnails with correct options",
    "renders with all required props",
    "100",
    "displays correct label",
    "displays correct value",
    "85",
    "renders icon correctly",
    "provides haptic feedback on gesture start",
    "provides haptic feedback on gesture release",
    "calls onValueChange when dragging",
    "clamps values to min/max range",
    "handles minimum value correctly",
    "handles maximum value correctly",
    "200",
    "handles negative min values",
    "-20",
    "displays positive values with plus sign when appropriate",
    "30",
    "uses active state style when dragging",
    "resets to normal state after drag",
    "calculates correct percentage for value",
    "handles rapid drag gestures",
    "uses different icons for different adjustments",
    "maintains value precision for floating point values",
    "50",
    "handles disabled state gracefully",
    "should render with image preview",
    "should render header with title and buttons",
    "should render tab buttons for adjust and filters",
    "should switch to adjust tab",
    "should switch to filters tab",
    "should call rotateLeft when pressing rotate left button",
    "should call rotateRight when pressing rotate right button",
    "should call handleFlipH when pressing flip horizontal button",
    "should call handleFlipV when pressing flip vertical button",
    "should call resetAdjustments when pressing reset button",
    "should apply filter preset when tapped",
    "should apply correct filter adjustments",
    "should call saveImage and onSave when save button is pressed",
    "should not save when loading",
    "should show loading overlay when processing",
    "should call onCancel when cancel button is pressed",
    "should enforce 1:1 aspect ratio for avatars",
    "should enforce 4:3 aspect ratio for pet photos",
    "should update brightness when slider value changes",
    "should update contrast when slider value changes",
    "should update saturation when slider value changes",
    "should update warmth when slider value changes",
    "should handle save error gracefully",
    "should handle invalid image URI",
    "should handle null adjustments",
    "should have accessible labels",
    "renders without crashing",
    "animates when trigger changes",
    "applies default size of 36",
    "applies custom size",
    "applies default stroke of 2",
    "applies custom stroke",
    "applies default color",
    "applies custom color",
    "does not block pointer events",
    "creates ripple with different trigger values",
    "handles rapid trigger changes",
    "uses memo to prevent unnecessary re-renders",
    "handles size variations",
    "handles stroke variations",
    "handles color variations",
    "works within positioned containers",
    "renders multiple ripple icons independently",
    "renders children correctly",
    "Press Me",
    "calls onPress when pressed",
    "provides haptic feedback by default",
    "does not provide haptic feedback when disabled",
    "calls onPressIn handler",
    "calls onPressOut handler",
    "applies custom scale values",
    "handles disabled state",
    "applies custom accessibility props",
    "handles haptic failures gracefully",
    "supports all PressableProps",
    "memoizes component to prevent unnecessary re-renders",
    "applies style prop correctly",
    "renders complex children structures",
    "Title",
    "Description",
    "handles rapid sequential presses",
    "provides haptic feedback on press in, not press out",
    "maintains children layout during animation",
    "works with accessibility states",
    "Report Match",
    "renders a simple View component",
    "renders main filter sections",
    "Advanced Pet Filters",
    "Species",
    "Age Range",
    "Size",
    "Intent",
    "Max Distance",
    "Personality Tags",
    "displays filter values correctly",
    "triggers onChange when species is selected",
    "triggers haptic feedback on selection",
    "updates min age correctly",
    "updates max age correctly",
    "handles empty age input correctly",
    "updates distance when slider value changes",
    "triggers haptic feedback on slider interaction",
    "toggles personality tags correctly",
    "Friendly",
    "removes selected personality tags",
    "triggers haptic feedback on tag press",
    "calls onReset when reset button is pressed",
    "Reset",
    "calls onApply when apply button is pressed",
    "Apply",
    "triggers haptic feedback on button press",
    "Select species",
    "Minimum age",
    "Maximum age",
    "Select size",
    "Select intent",
    "supports screen readers with role attributes",
    "handles undefined values gracefully",
    "handles large personality tag arrays",
    "Energetic",
    "renders efficiently with many personality tags",
    "should forward ref to ScrollView",
    "Test Content",
    "should scroll when ref method is called",
    "should forward all props to ScrollView",
    "should handle children correctly",
    "Child 1",
    "Child 2",
    "Child 3",
    "should apply contentContainerStyle",
    "should handle gradient prop correctly",
    "should handle refreshControl prop",
    "should work with useScrollToTop hook",
    "should handle scrollTo method calls",
    "should handle null ref gracefully",
    "should handle undefined children",
    "should handle empty children",
    "should handle rapid prop changes",
    "should forward accessibility props",
    "should handle accessibilityRole prop",
    "should handle large content efficiently",
    "should not cause memory leaks with rapid updates",
    "should render with empty photos array",
    "Photos",
    "Add Photos",
    "should render add photo button with correct text",
    "should show photo count when photos exist",
    "should display photos when provided",
    "should show primary badge on first photo",
    "Primary",
    "should show uploading indicator when photo is uploading",
    "Uploading photos...",
    "should show progress percentage during upload",
    "should show success indicator after upload completes",
    "should show error indicator when upload fails",
    "should show error message when photos field has error",
    "At least one photo is required",
    "should disable photo picker when at max capacity",
    "should not show star button for primary photo",
    "should not show delete button during upload",
    "should display photo upload hints",
    "should handle photos with uploaded URLs",
    "should handle multiple photos with different states",
    "should have proper accessibility labels",
    "renders with preview blur effect",
    "applies custom blur radius",
    "handles onLoad event",
    "supports resizeMode prop",
    "handles different resizeMode values",
    "works with local image sources",
    "applies accessibility props",
    "renders within containers properly",
    "handles error gracefully",
    "memoizes component properly",
    "shows placeholder until loaded",
    "crossfades to full resolution",
    "handles multiple images in sequence",
    "applies custom transition duration",
    "works with different aspect ratios",
    "handles rapid source changes",
    "supports tintColor prop",
    "handles priority loading",
    "works with testID",
    "Permission to access microphone is required!",
    "Failed to start recording. Please try again.",
    "Failed to save recording. Please try again.",
    "❤️",
    "Add Reaction",
    "Read by",
    "Emoji Picker",
    "End Call",
    "should render children correctly",
    "should initialize WebRTC service with socket",
    "should set up event listeners for call state changes",
    "should show incoming call modal when receiving incoming call",
    "should handle call errors correctly",
    "should clean up event listeners on unmount",
    "should handle call start failure",
    "should end call",
    "Active",
    "renders all form fields",
    "Pet Information",
    "Pet Name *",
    "Pet Breed *",
    "Pet Age *",
    "Pet Personality *",
    "displays validation errors",
    "Pet name is required",
    "Pet breed is required",
    "shows character count for personality field",
    "23/500 characters",
    "calls setters when inputs change",
    "Enter your pet",
    "renders all tone options",
    "Playful",
    "Professional",
    "Casual",
    "calls onToneSelect when tone is selected",
    "shows selected state",
    "renders bio content",
    "displays analysis metrics",
    "Bio Analysis",
    "Positive",
    "shows keywords as chips",
    "calls onSave when save button is pressed",
    "validates form correctly",
    "shows validation errors for empty fields",
    "generates bio successfully",
    "handles generation errors",
    "should display unverified status correctly",
    "Tier 1 Verification",
    "Not Started",
    "Start Verification",
    "should display pending status correctly",
    "In Review",
    "View Status",
    "should display approved status with badge correctly",
    "Verified",
    "View Details",
    "should display rejected status correctly",
    "Rejected",
    "Try Again",
    "should display requires_info status correctly",
    "Additional Info Needed",
    "Provide Info",
    "should show id_verified badge for Tier 1 approval",
    "should show premium_verified badge for Tier 2 approval",
    "should not show badge when not approved",
    "should display Tier 1 specific content",
    "Basic identity verification",
    "should display Tier 2 specific content",
    "Tier 2 Verification",
    "Advanced verification with documents",
    "should call onStartVerification for unverified status",
    "should call onViewDetails for pending status",
    "should call onViewDetails for approved status",
    "should call onStartVerification for rejected status",
    "should call onStartVerification for requires_info status",
    "should show correct status colors",
    "should show progress indicator for pending status",
    "should show warning icon for rejected status",
    "should show info icon for requires_info status",
    "should have correct accessibility labels",
    "Tier 1 Verification, Verified",
    "View verification details",
    "should announce status changes",
    "should support screen reader navigation",
    "Double tap to view verification status",
    "should show loading state during verification start",
    "Starting...",
    "should disable buttons during loading",
    "should display error messages",
    "Verification service unavailable",
    "should show retry option for errors",
    "Retry",
    "should clear errors when retrying",
    "should handle invalid tier numbers",
    "Tier 99 Verification",
    "should handle unknown status gracefully",
    "Unknown Status",
    "should handle missing callback functions",
    "should display localized status text",
    "should support RTL layouts",
    "should memoize expensive computations",
    "should update status when verification completes",
    "should handle verification timeout",
    "Verification timed out",
    "should show estimated completion time",
    "Estimated completion: 3:30 PM",
    "should render add photo button with correct accessibility label",
    "Add photo to pet profile",
    "should show photo count indicator",
    "0 of 6 photos added",
    "should display loading spinner when adding photos",
    "should disable add button when loading",
    "should show limit reached message when at max photos",
    "6 of 6 photos added",
    "Maximum 6 photos reached",
    "should call addPhoto when add button is pressed",
    "should display multiple error messages",
    "should show photo grid when photos exist",
    "should show primary photo indicator",
    "Primary photo",
    "should show photo status indicators",
    "Uploading...",
    "50%",
    "Approved",
    "Upload failed",
    "should allow removing photos",
    "should allow setting primary photo",
    "should prevent removing primary photo when multiple photos exist",
    "should show reorder controls when multiple photos exist",
    "should handle empty state correctly",
    "should update accessibility labels dynamically",
    "4 of 6 photos added",
    "should handle long press for additional actions",
    "should show progress indicators for uploading photos",
    "should handle photo selection errors gracefully",
    "Photo library access is required",
    "should support different photo sources",
    "Choose from Library",
    "should show photo preview before upload",
    "Use Photo",
    "Retake",
    "should handle RTL layout correctly",
    "should support keyboard navigation",
    "should show helpful tooltips for new users",
    "Tip: First photo becomes your primary photo",
    "Tip: You can reorder photos by dragging",
    "should handle component unmounting during upload",
    "should render with photos",
    "Pet Photos",
    "should show photo count",
    "should show add photo button when below max",
    "should hide add photo button when at max",
    "should render empty state when no photos",
    "No photos yet",
    "should pick image from library",
    "should show permission alert when denied",
    "should not pick image when disabled",
    "should limit photos to maxPhotos",
    "should show photo limit alert",
    "should show editor when picking image",
    "should save edited photo",
    "should cancel editor without adding photo",
    "should remove photo when remove button pressed",
    "button",
    "should show uploading overlay",
    "should show error overlay on photo error",
    "Failed",
    "should handle picker error",
    "should trigger haptic feedback on photo pick",
    "should trigger success haptic on save",
    "should handle empty photo array",
    "should handle single photo",
    "should handle max photos",
    "should handle disabled state",
    "should render tab bar with all routes",
    "should render with correct initial focus",
    "should handle empty routes array",
    "should detect double-tap within 300ms window",
    "should NOT detect double-tap after 300ms window",
    "should emit double-tap only on focused tab",
    "should navigate when pressing unfocused tab",
    "should NOT navigate when pressing focused tab",
    "should emit tabPress event on all taps",
    "should trigger haptics on iOS",
    "should not trigger haptics on Android",
    "should show badge when count > 0",
    "should format badge text correctly",
    "99+",
    "should handle zero badge count",
    "should emit tabLongPress on long press",
    "should have correct accessibility role",
    "should have correct accessibility state for focused tab",
    "should have correct accessibility hint",
    "should have correct accessibility label",
    "should update when active tab changes",
    "should handle index out of bounds",
    "should handle missing descriptors gracefully",
    "should handle navigation without methods",
    "should render with animation values",
    "should update animations on state changes",
    "should handle dark theme",
    "should handle custom colors",
    "should handle different safe area insets",
    "should handle zero insets",
    "should select correct icons for each route",
    "should handle unknown route names",
    "renders premium content when user is premium",
    "Premium Content",
    "Premium Feature",
    "renders paywall when user is not premium",
    "Advanced filters requires a premium subscription",
    "navigates to Premium screen when upgrade button is pressed",
    "Upgrade to Premium",
    "renders custom message when provided",
    "Get premium to unlock advanced filters!",
    "renders with dark theme style",
    "renders plan details correctly",
    "Premium",
    "$9.99/month",
    "Unlimited swipes",
    "See who liked you",
    "Advanced filters",
    "renders yearly plan with savings correctly",
    "$99.99/year",
    "Save 15%",
    "calls onSubscribe when subscribe button is pressed",
    "Subscribe",
    "renders free plan correctly",
    "Basic",
    "Free",
    "renders with custom styles when provided",
    "renders correctly with default props",
    "Upgrade",
    "renders with custom text",
    "Go Premium",
    "handles press with haptic feedback",
    "renders with gradient style in light theme",
    "renders with custom size",
    "renders with icon",
    "applies custom style when provided",
    "Advanced Button Interactions",
    "Advanced Card Interactions",
    "Advanced Header Interactions",
    "Haptic Feedback Patterns",
    "Animation Performance",
    "API Integration",
    "Component Variants",
    "Interaction Types",
    "Primary Button",
    "Glass Button",
    "Neon Button",
    "Premium Button",
    "should pass basic test",
    "should test string operations",
    "should test array operations",
    "should run a basic test",
    "should handle async operations",
    "should handle token expiration during API calls",
    "should prevent multiple concurrent login attempts",
    "Email",
    "Password",
    "Login",
    "should handle biometric authentication failures gracefully",
    "Use Biometrics",
    "Biometric authentication failed. Please use password.",
    "should handle logout during active operations",
    "should handle session timeout in background",
    "should handle complete network outage",
    "Network connection lost",
    "Offline Mode",
    "Continue with cached data",
    "should recover from temporary network issues",
    "should handle DNS resolution failures",
    "Unable to connect to servers",
    "Check your internet connection",
    "should handle SSL certificate issues",
    "Security certificate error",
    "Please update your app or contact support",
    "should handle rate limiting gracefully",
    "Send",
    "Too many messages. Please wait before sending another.",
    "should handle server maintenance mode",
    "Server is temporarily down for maintenance",
    "Please try again in a few minutes",
    "should handle concurrent data modifications",
    "should handle offline data conflicts",
    "should handle partial sync failures",
    "should handle data corruption in cache",
    "should handle large dataset synchronization",
    "should handle rapid state changes without crashing",
    "should handle component unmounting during async operations",
    "should handle keyboard show/hide events",
    "Type a message...",
    "should handle orientation changes",
    "should handle font scaling changes",
    "should handle theme changes dynamically",
    "should not leak event listeners",
    "should handle large lists without performance degradation",
    "Item 0",
    "Item 999",
    "should cleanup timers on unmount",
    "should handle memory pressure warnings",
    "should cleanup cached images",
    "should handle rapid user interactions",
    "Click me",
    "Too many clicks!",
    "should handle navigation race conditions",
    "should handle concurrent file operations",
    "should handle iOS-specific keyboard behavior",
    "should handle Android back button",
    "should handle web-specific features",
    "Web-specific feature",
    "should handle different screen densities",
    "should handle different status bar heights",
    "should handle push notification failures",
    "should handle camera permission edge cases",
    "Camera access required",
    "should handle location service failures",
    "Please enable location services",
    "should handle analytics tracking failures",
    "should handle payment processing failures",
    "Payment failed: Your card was declined",
    "should handle double-tap prevention",
    "Submit",
    "should handle long press vs tap distinction",
    "Interactive",
    "should handle swipe gestures correctly",
    "should handle pinch gestures",
    "should handle accessibility actions",
    "Submit form",
    "should handle AsyncStorage quota exceeded",
    "should handle corrupted stored data",
    "should handle storage migration issues",
    "should handle concurrent storage operations",
    "should render initial screen within performance budget",
    "Find Matches",
    "should handle rapid component updates efficiently",
    "should render large lists without performance degradation",
    "Item 99",
    "should optimize re-renders with memoization",
    "should maintain stable memory usage during operations",
    "should prevent memory leaks in event listeners",
    "should handle large image caches efficiently",
    "should monitor memory warnings and respond appropriately",
    "should maintain 60fps during animations",
    "should handle complex animation sequences efficiently",
    "should optimize animations for different screen sizes",
    "should meet API response time targets",
    "should handle concurrent network requests efficiently",
    "should optimize network usage with caching",
    "should handle network timeouts gracefully",
    "should process images within performance budget",
    "should batch process images efficiently",
    "should optimize image loading with lazy loading",
    "should perform AsyncStorage operations efficiently",
    "should handle complex data queries efficiently",
    "/pets/search",
    "should maintain database connection pool efficiently",
    "should maintain reasonable bundle size",
    "should load critical resources quickly",
    "should implement effective code splitting",
    "should optimize initial bundle loading",
    "should handle complete user journey within performance budget",
    "Sign In",
    "Welcome back!",
    "Like",
    "Matches found!",
    "should maintain performance under memory pressure",
    "should handle high-frequency user interactions",
    "Interact",
    "should scale performance with data size",
    "should complete full user onboarding from registration to first match",
    "Get Started",
    "Check your email",
    "Complete Your Profile",
    "First Name",
    "Last Name",
    "Tell us about yourself",
    "Continue",
    "Add Your Pet",
    "Pet Name",
    "Dog",
    "Breed",
    "Create Pet Profile",
    "It\\",
    "should handle offline actions and sync when online",
    "Sync Now",
    "Sync Complete",
    "should integrate community posting with AI bio generation",
    "Create Post",
    "Generate with AI",
    "Enter keywords (e.g., friendly, playful)",
    "Generate Bio",
    "Meet Buddy, a friendly and energetic companion...",
    "Photo added",
    "Share Post",
    "Post shared successfully!",
    "should handle community interactions across services",
    "Beautiful park today!",
    "Write a comment...",
    "Comment",
    "should integrate premium features across the app",
    "Super Like",
    "Get unlimited Super Likes!",
    "Upgrade Now",
    "Premium Active",
    "Advanced Filters",
    "Breed Preferences",
    "Size Preferences",
    "should handle network errors across multiple services",
    "Using cached data",
    "should handle authentication errors across services",
    "Session Expired",
    "Please log in again",
    "should handle partial service failures gracefully",
    "Dashboard",
    "Recent Matches",
    "Community feed temporarily unavailable",
    "Your Pets",
    "App Error",
    "should synchronize state across components",
    "Edit Profile",
    "Name",
    "Save Profile",
    "Welcome, Updated Name",
    "Updated Name",
    "should handle concurrent state updates",
    "should handle navigation state integration",
    "Go to Profile",
    "Profile Screen",
    "Go to Settings",
    "Settings Screen",
    "Go to Matches",
    "Matches Screen",
    "should handle large datasets efficiently",
    "Pet0",
    "Pet999",
    "Loading...",
    "should optimize image loading and caching",
    "Images loaded from cache",
    "Load More",
    "should handle memory warnings gracefully",
    "should track user journey across screens",
    "Start",
    "Step 1",
    "Step 2",
    "Complete",
    "Finished",
    "should integrate analytics with error reporting",
    "Trigger Error",
    "Error occurred",
    "should handle push notifications and in-app navigation",
    "New Match!",
    "You matched with Luna!",
    "View Match",
    "Match Details",
    "should integrate notifications with offline queue",
    "Message will be sent when online",
    "should successfully onboard a new user from registration to first match",
    "Welcome to PawfectMatch",
    "Confirm Password",
    "Enter Code",
    "Verify",
    "Tell us about your pet",
    "Cat",
    "Vaccinated",
    "Neutered",
    "Set Your Preferences",
    "Enable Location",
    "Enable Notifications",
    "Complete Setup",
    "Find Your Perfect Match",
    "Send a Message",
    "Chat with Max",
    "Hi Max! I\\",
    "Onboarding Complete!",
    "should complete premium subscription purchase successfully",
    "Choose Your Plan",
    "Premium Monthly",
    "Unlimited Likes",
    "Priority Matching",
    "Subscribe Now",
    "Secure Payment",
    "Card Number",
    "MM/YY",
    "CVC",
    "Add Billing Address",
    "Address",
    "City",
    "ZIP",
    "Save Address",
    "Complete Purchase",
    "Processing Payment...",
    "Welcome to Premium!",
    "Your subscription is now active",
    "Premium features unlocked",
    "Start Using Premium",
    "Unlimited Super Likes",
    "Super Like sent!",
    "should handle payment failures and retries",
    "Your card was declined",
    "Try Different Card",
    "should manage multiple pet profiles successfully",
    "Add Pet",
    "Add New Pet",
    "Persian",
    "Skip Details",
    "Create Pet",
    "Whiskers",
    "Set as Active",
    "Active: Whiskers",
    "Pet Bio",
    "Save Changes",
    "Profile Updated",
    "should handle photo management for pets",
    "Manage Photos",
    "Photo Management",
    "6 photos maximum",
    "Set as Primary",
    "Primary photo updated",
    "Reorder",
    "Save Order",
    "Photo order saved",
    "should handle complete matching and messaging flow",
    "Chat with Luna\\",
    "Hi! That sounds great! Luna would love to meet Buddy!",
    "Attach Photo",
    "Send Photo",
    "Photo sent",
    "Read receipts: On",
    "should handle conversation management",
    "Messages",
    "Luna\\",
    "2 unread messages",
    "Archive Chat",
    "Chat archived",
    "Archived",
    "Unarchive",
    "Chat unarchived",
    "should manage all privacy and notification settings",
    "Notifications",
    "Push Notifications",
    "Likes",
    "Save Notification Settings",
    "Notification preferences saved",
    "Privacy",
    "Profile Visibility",
    "Show Online Status",
    "Allow Messages",
    "Matches Only",
    "Save Privacy Settings",
    "Privacy settings saved",
    "Account",
    "Change Password",
    "Current Password",
    "New Password",
    "Update Password",
    "Password updated successfully",
    "should handle GDPR data export and deletion",
    "Export My Data",
    "Data export requested",
    "You will receive an email when ready",
    "Your data export is ready",
    "Download Export",
    "Delete Account",
    "Delete Your Account",
    "This action cannot be undone",
    "I understand, delete my account",
    "Enter your password",
    "Account deletion in progress",
    "You will be logged out in 7 days",
    "should work seamlessly in offline mode",
    "You\\",
    "Limited functionality available",
    "Browse cached matches",
    "Message saved for when you\\",
    "Back online!",
    "Syncing 1 message...",
    "Message sent successfully",
    "should handle offline profile updates",
    "Bio",
    "Changes saved locally",
    "Will sync when online",
    "Profile updated successfully",
    "should recover from various error conditions",
    "Log In",
    "Welcome back",
    "Matches temporarily unavailable",
    "Try again later",
    "should complete full verification process",
    "Choose Verification Tier",
    "Tier 1 - Basic",
    "Identity Verification",
    "Start Identity Check",
    "Verification Complete!",
    "ID Verified",
    "Premium features now available",
    "should handle verification failures and retries",
    "Verification Failed",
    "Document unclear",
    "should handle empty strings in all text inputs",
    "Name is required",
    "should handle extremely long text inputs",
    "should handle zero and negative numbers appropriately",
    "should handle arrays and objects at maximum capacity",
    "should handle null and undefined values gracefully",
    "should handle Unicode and emoji inputs correctly",
    "should handle dates at extreme ranges",
    "should handle rapid state changes without race conditions",
    "should handle circular dependencies in state",
    "should handle concurrent API calls to the same endpoint",
    "should handle state updates during component unmount",
    "should handle deeply nested state updates",
    "should handle state persistence across app restarts",
    "should handle complete API service outage",
    "Service temporarily unavailable",
    "View cached matches",
    "should handle partial API degradation",
    "should handle authentication service failures",
    "should handle upload service failures",
    "should handle notification service failures",
    "should handle community service failures",
    "Community feed unavailable",
    "Showing cached posts",
    "should handle offline service synchronization failures",
    "should handle iOS memory warnings",
    "should handle Android back button edge cases",
    "should handle iOS multitasking gestures",
    "should handle Android split-screen mode",
    "should handle web platform differences",
    "should handle tablet-specific layouts",
    "should handle corrupted JSON in AsyncStorage",
    "should handle incomplete API responses",
    "should handle malformed image data",
    "should handle database migration failures",
    "should handle concurrent data writes",
    "should handle storage quota exceeded",
    "should handle infinite loops in render",
    "should handle memory leaks in event listeners",
    "should handle large component trees",
    "should handle rapid re-renders",
    "should handle deep component nesting",
    "should prevent XSS in user inputs",
    "should handle malicious file uploads",
    "should prevent unauthorized API access",
    "should handle token theft attempts",
    "should prevent data exfiltration",
    "should handle very fast user interactions",
    "Pass",
    "Please slow down",
    "should handle accessibility focus management",
    "should handle screen reader announcements",
    "should handle color blindness accessibility",
    "should handle motor impairment accessibility",
    "should handle cognitive accessibility",
    "renders premium plans correctly",
    "Premium Features",
    "Ultimate",
    "toggles between monthly and yearly billing",
    "Monthly",
    "Yearly",
    "initiates subscription checkout",
    "displays user as premium member when subscribed",
    "Premium Member",
    "Manage Subscription",
    "applies haptic feedback when interacting with plans",
    "displays subscription details correctly",
    "Next billing date: November 1, 2025",
    "handles subscription cancellation",
    "Cancel Subscription",
    "displays cancelled status when subscription is set to cancel",
    "Cancels on November 1, 2025",
    "Reactivate Subscription",
    "handles subscription reactivation",
    "opens billing portal when update payment is clicked",
    "Update Payment Method",
    "handles API errors gracefully",
    "Error loading subscription",
    "should accept all required props with proper typing",
    "should have no implicit any types",
    "should have proper accessibility attributes for interactive cards",
    "Custom label",
    "Custom hint",
    "should have proper accessibility attributes for non-interactive cards",
    "Non-interactive Card",
    "should pass axe accessibility audit",
    "Accessible card",
    "should have proper spring animations on press",
    "Animated Card",
    "should respect animation timing within 120-320ms range",
    "Timing Test",
    "should support all variant types",
    "should support all size variants",
    "should use theme colors correctly",
    "Themed Card",
    "Performance Test",
    "should handle disabled state correctly",
    "Disabled Card",
    "should render title and subtitle correctly",
    "Test Title",
    "Test Subtitle",
    "should render children content",
    "Card with Children",
    "should handle onPress events correctly",
    "Pressable Card",
    "should handle missing props gracefully",
    "Card",
    "should handle empty content gracefully",
    "Performance Test Card",
    "should not cause frame drops during rapid interactions",
    "Rapid Interaction Test",
    "should not cause memory leaks during lifecycle",
    "should have minimal bundle impact",
    "Bundle Test",
    "should respond to interactions within 200ms",
    "Interaction Performance Test",
    "should handle disabled state without performance impact",
    "Disabled Performance Test",
    "should not cause layout shifts during state changes",
    "Layout Stability Test",
    "should maintain consistent dimensions across variants",
    "should use spring animations within 120-320ms range",
    "Animation Budget Test",
    "should prioritize transform animations over layout changes",
    "Transform Animation Test",
    "should complete full user flow: home -> scroll -> double-tap -> refresh",
    "should handle user navigating between all tabs with scroll-to-top",
    "should maintain state correctly during rapid tab switching",
    "should handle user scrolling down, then tapping tab to return to top",
    "should handle user rapidly double-tapping to refresh content",
    "should handle background/foreground app transitions with scroll position",
    "should gracefully handle missing scroll refs",
    "should handle navigation errors without crashing",
    "should recover from tab navigation failures",
    "should maintain smooth scrolling with heavy content",
    "should handle 100+ rapid tab presses without issues",
    "should not cause memory leaks over extended use",
    "should work on iOS simulator",
    "should work on Android emulator",
    "should handle platform-specific scroll behaviors",
    "should work with screen readers enabled",
    "should maintain focus management during scroll-to-top",
    "should not lose data during scroll-to-top operation",
    "should maintain list state during scroll operations",
    "should not duplicate or lose items during refresh",
    "should handle successful login",
    "should handle login failure",
    "should handle token refresh",
    "should fetch pet profiles",
    "/pets",
    "should create new pet profile",
    "should update pet profile",
    "should handle pet likes",
    "/matches/like",
    "should handle matches",
    "should fetch chat messages",
    "/chats/chat-123/messages",
    "should send chat message",
    "renders correctly with pet data",
    "renders correctly when disabled",
    "renders correctly as top card",
    "renders correctly without verification badge",
    "renders correctly with single photo",
    "renders correctly with long bio text",
    "renders correctly with many tags",
    "renders correctly with low compatibility score",
    "renders correctly with high distance",
    "renders correctly with custom style",
    "renders correctly with custom duration",
    "renders correctly with onAnimationComplete callback",
    "renders correctly with both custom props",
    "should render accessible buttons",
    "should provide accessible names for images",
    "Pet photo",
    "should have minimum touch targets (44x44pt)",
    "should meet WCAG AA contrast ratios",
    "should respect prefers-reduced-motion",
    "should have logical focus order",
    "should provide visible focus indicators",
    "should associate error messages with inputs",
    "should have proper accessibility labels on buttons",
    "should have proper accessibility hints",
    "should announce important state changes",
    "should have proper navigation labels",
    "should have proper form labels and descriptions",
    "should announce validation errors",
    "should have proper accessibility information for pet cards",
    "Double tap to view pet details",
    "should announce swipe actions",
    "should have proper chat message accessibility",
    "should announce new messages",
    "should have proper call control accessibility",
    "should announce call state changes",
    "should support voice commands",
    "should support high contrast mode",
    "should manage focus properly in modals"
  ],
  "missingKeys": [],
  "extraKeys": [],
  "localeStatus": {
    "en": {
      "totalKeys": 79,
      "translatedKeys": 79,
      "missingKeys": 0,
      "coverage": 100
    },
    "es": {
      "totalKeys": 79,
      "translatedKeys": 79,
      "missingKeys": 0,
      "coverage": 100
    }
  },
  "issues": {
    "hardcodedStrings": [
      {
        "file": "App.tsx",
        "string": "\"ForgotPassword\""
      },
      {
        "file": "App.tsx",
        "string": "\"ResetPassword\""
      },
      {
        "file": "App.tsx",
        "string": "\"Subscription\""
      },
      {
        "file": "App.tsx",
        "string": "\"PremiumSuccess\""
      },
      {
        "file": "App.tsx",
        "string": "\"PremiumCancel\""
      },
      {
        "file": "App.tsx",
        "string": "\"SubscriptionManager\""
      },
      {
        "file": "App.tsx",
        "string": "\"SubscriptionSuccess\""
      },
      {
        "file": "App.tsx",
        "string": "\"ManageSubscription\""
      },
      {
        "file": "App.tsx",
        "string": "\"AIPhotoAnalyzer\""
      },
      {
        "file": "App.tsx",
        "string": "\"AICompatibility\""
      },
      {
        "file": "App.tsx",
        "string": "\"PrivacySettings\""
      },
      {
        "file": "App.tsx",
        "string": "\"BlockedUsers\""
      },
      {
        "file": "App.tsx",
        "string": "\"SafetyCenter\""
      },
      {
        "file": "App.tsx",
        "string": "\"VerificationCenter\""
      },
      {
        "file": "App.tsx",
        "string": "\"NotificationPreferences\""
      },
      {
        "file": "App.tsx",
        "string": "\"HelpSupport\""
      },
      {
        "file": "App.tsx",
        "string": "\"AboutTermsPrivacy\""
      },
      {
        "file": "App.tsx",
        "string": "\"DeactivateAccount\""
      },
      {
        "file": "App.tsx",
        "string": "\"EditProfile\""
      },
      {
        "file": "App.tsx",
        "string": "\"AdvancedFilters\""
      },
      {
        "file": "App.tsx",
        "string": "\"ModerationTools\""
      },
      {
        "file": "App.tsx",
        "string": "\"AdoptionManager\""
      },
      {
        "file": "App.tsx",
        "string": "\"AdoptionApplication\""
      },
      {
        "file": "App.tsx",
        "string": "\"AdminDashboard\""
      },
      {
        "file": "App.tsx",
        "string": "\"AdminAnalytics\""
      },
      {
        "file": "App.tsx",
        "string": "\"AdminBilling\""
      },
      {
        "file": "App.tsx",
        "string": "\"AdminSecurity\""
      },
      {
        "file": "App.tsx",
        "string": "\"AdminUploads\""
      },
      {
        "file": "App.tsx",
        "string": "\"AdminVerifications\""
      },
      {
        "file": "App.tsx",
        "string": "\"IncomingCall\""
      },
      {
        "file": "App.tsx",
        "string": "\"MemoryWeave\""
      },
      {
        "file": "App.tsx",
        "string": "\"ARScentTrails\""
      },
      {
        "file": "App.tsx",
        "string": "\"Leaderboard\""
      },
      {
        "file": "App.tsx",
        "string": "\"ComponentTest\""
      },
      {
        "file": "App.tsx",
        "string": "\"NewComponentsTest\""
      },
      {
        "file": "App.tsx",
        "string": "\"MigrationExample\""
      },
      {
        "file": "App.tsx",
        "string": "\"PremiumDemo\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Invalid email format\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Password must be at least 8 characters\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Invalid email format\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Password must be at least 8 characters\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Password must contain uppercase, lowercase, and number\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"First name too short\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"First name too long\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Last name too short\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Last name too long\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Invalid age (must be 13-120 years old)\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Pet name required\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Pet name too long\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Breed required\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Breed name too long\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Age cannot be negative\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Age seems too high\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Description too long\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Message cannot be empty\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Message too long\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Too many breed filters\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"HTML sanitization failed\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Invalid input type for text sanitization\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Invalid email format\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Rate limit exceeded\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"CSRF token expired or invalid\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"CSRF token mismatch\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Input validation passed\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Input validation failed\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Input validation error\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Content-Security-Policy\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"X-Frame-Options\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"X-Content-Type-Options\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"X-XSS-Protection\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Referrer-Policy\""
      },
      {
        "file": "utils/security.ts",
        "string": "\"Permissions-Policy\""
      },
      {
        "file": "utils/secureStorage.ts",
        "string": "\"Unknown error\""
      },
      {
        "file": "utils/secureStorage.ts",
        "string": "\"Failed to set secure item\""
      },
      {
        "file": "utils/secureStorage.ts",
        "string": "\"Failed to remove secure item\""
      },
      {
        "file": "utils/secureStorage.ts",
        "string": "\"Unknown error\""
      },
      {
        "file": "utils/secureStorage.ts",
        "string": "\"Failed to set async item\""
      },
      {
        "file": "utils/secureStorage.ts",
        "string": "\"Failed to remove async item\""
      },
      {
        "file": "utils/haptics.ts",
        "string": "\"Haptic feedback failed:\""
      },
      {
        "file": "utils/haptics.ts",
        "string": "\"Haptic feedback failed:\""
      },
      {
        "file": "utils/haptics.ts",
        "string": "\"Haptic feedback failed:\""
      },
      {
        "file": "utils/haptics.ts",
        "string": "\"Haptic feedback failed:\""
      },
      {
        "file": "utils/haptics.ts",
        "string": "\"Haptic feedback failed:\""
      },
      {
        "file": "utils/haptics.ts",
        "string": "\"Haptic feedback failed:\""
      },
      {
        "file": "utils/haptics.ts",
        "string": "\"Haptic feedback failed:\""
      },
      {
        "file": "utils/haptics.ts",
        "string": "\"Haptic pattern failed:\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Light tap for like action\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Strong vibration for super like\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Medium tap for pass action\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Light tap for button press\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Subtle tap for tab navigation\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Medium tap for toggle switches\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Success notification pattern\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Error notification pattern\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Warning notification pattern\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Light tap for navigation\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Medium tap for modal opening\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Light tap for modal closing\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Subtle tap for photo navigation\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Medium tap for photo zoom\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Celebratory pattern for new match\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Medium tap for new message\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Could not check accessibility settings:\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Haptic feedback failed:\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Custom haptic pattern failed:\""
      },
      {
        "file": "utils/hapticFeedback.ts",
        "string": "\"Selection haptic feedback failed:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Error parsing deep link\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Error initializing deep linking:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Error handling deep link URL event:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Invalid deep link URL format\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Handling deep link URL:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Error handling URL:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Error parsing URL:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Error parsing web URL:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Deep link navigation:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Navigator not available, cannot navigate to chat:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Navigator not available, cannot navigate to pet profile:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"MatchDetails\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Navigator not available, cannot navigate to match:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"UserProfile\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Navigator not available, cannot navigate to user profile:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Navigator not available, cannot navigate to premium screen\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Error in deep link listener:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Error checking if URL can be opened:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Error opening URL:\""
      },
      {
        "file": "utils/deepLinking.ts",
        "string": "\"Deep link rate limit exceeded\""
      },
      {
        "file": "utils/UltraPublish.ts",
        "string": "\"Failed to detect subject focus\""
      },
      {
        "file": "utils/UltraPublish.ts",
        "string": "\"Failed to generate thumbnail\""
      },
      {
        "file": "utils/UltraBatch.ts",
        "string": "'Unknown error'"
      },
      {
        "file": "utils/UltraBatch.ts",
        "string": "'Unknown error'"
      },
      {
        "file": "utils/SuperRes.ts",
        "string": "'SuperRes: Unsharp mask failed'"
      },
      {
        "file": "utils/SuperRes.ts",
        "string": "'Authorization'"
      },
      {
        "file": "utils/SuperRes.ts",
        "string": "'SuperRes: Using adapter for upscaling'"
      },
      {
        "file": "utils/QualityScore.ts",
        "string": "'QualityScore: Failed to compute size'"
      },
      {
        "file": "utils/QualityScore.ts",
        "string": "\"No URIs provided to pickSharpest\""
      },
      {
        "file": "utils/QualityScore.ts",
        "string": "\"Empty URI provided\""
      },
      {
        "file": "utils/QualityScore.ts",
        "string": "\"No valid URI found\""
      },
      {
        "file": "utils/QualityScore.ts",
        "string": "\"Failed to determine best URI\""
      },
      {
        "file": "utils/PerformanceMonitor.ts",
        "string": "\"Low FPS detected\""
      },
      {
        "file": "utils/PerformanceMonitor.ts",
        "string": "\"Interaction was not started\""
      },
      {
        "file": "utils/PerformanceMonitor.ts",
        "string": "\"Slow interaction detected\""
      },
      {
        "file": "utils/PerformanceMonitor.ts",
        "string": "\"Performance Summary\""
      },
      {
        "file": "utils/BatchAutoCrop.ts",
        "string": "\"No suggestion\""
      },
      {
        "file": "utils/AbortableWorker.ts",
        "string": "\"Worker has been aborted\""
      },
      {
        "file": "utils/AbortableWorker.ts",
        "string": "\"Worker aborted\""
      },
      {
        "file": "utils/AbortableWorker.ts",
        "string": "\"Task timeout\""
      },
      {
        "file": "utils/AbortableWorker.ts",
        "string": "\"Operation aborted\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Brightness slider. Adjust image lightness.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Contrast slider. Adjust image difference.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Saturation slider. Adjust color intensity.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Warmth slider. Adjust color temperature.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Blur slider. Add background blur effect.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Clarity slider. Enhance image sharpness.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Auto crop button. Automatically crop image using face detection.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"One to one ratio button. Square image.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Four to five ratio button. Portrait image.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Nine to sixteen ratio button. Vertical story.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Tight crop option. Close framing.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Medium crop option. Balanced framing.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Loose crop option. Environmental framing.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Save button. Save edited photo.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Cancel button. Discard changes and exit.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Undo button. Revert last change.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Redo button. Restore reverted change.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Compare button. Hold to view original photo.\""
      },
      {
        "file": "utils/A11yHelpers.ts",
        "string": "\"Grid button. Toggle composition guides.\""
      },
      {
        "file": "utils/image-ultra/ssim.ts",
        "string": "\"Image quality assessment: from error visibility to structural similarity\""
      },
      {
        "file": "utils/image-ultra/example-usage.ts",
        "string": "\"Quality found:\""
      },
      {
        "file": "utils/image-ultra/example-usage.ts",
        "string": "\"SSIM achieved:\""
      },
      {
        "file": "utils/image-ultra/example-usage.ts",
        "string": "\"PRO Report:\""
      },
      {
        "file": "utils/image-ultra/example-usage.ts",
        "string": "\"Clipped pixels:\""
      },
      {
        "file": "utils/image-ultra/__tests__/queue.test.ts",
        "string": "'AbortableQueue'"
      },
      {
        "file": "utils/image-ultra/__tests__/pro-modules.test.ts",
        "string": "\"PRO Modules\""
      },
      {
        "file": "utils/audio/upload-helpers.ts",
        "string": "\"Use Blob on web\""
      },
      {
        "file": "utils/__tests__/deepLinking.test.ts",
        "string": "\"Deep Linking Utils\""
      },
      {
        "file": "utils/__tests__/QualityScore.test.ts",
        "string": "\"QualityScore\""
      },
      {
        "file": "utils/__tests__/QualityScore.test.ts",
        "string": "\"Processing failed\""
      },
      {
        "file": "utils/__tests__/QualityScore.test.ts",
        "string": "\"Delete failed\""
      },
      {
        "file": "utils/__tests__/QualityScore.test.ts",
        "string": "\"No URIs provided to pickSharpest\""
      },
      {
        "file": "utils/__tests__/QualityScore.test.ts",
        "string": "\"Processing failed\""
      },
      {
        "file": "utils/__tests__/EditHistory.test.ts",
        "string": "\"EditHistory\""
      },
      {
        "file": "utils/__tests__/BatchAutoCrop.test.ts",
        "string": "\"BatchAutoCrop\""
      },
      {
        "file": "utils/__tests__/BatchAutoCrop.test.ts",
        "string": "\"Processing failed\""
      },
      {
        "file": "utils/__tests__/BatchAutoCrop.test.ts",
        "string": "\"Processing failed\""
      },
      {
        "file": "utils/__tests__/BatchAutoCrop.test.ts",
        "string": "\"No suggestion\""
      },
      {
        "file": "utils/__tests__/AutoCropEngine.test.ts",
        "string": "\"AutoCropEngine\""
      },
      {
        "file": "utils/__tests__/AbortableWorker.test.ts",
        "string": "\"AbortableWorker\""
      },
      {
        "file": "utils/__tests__/AbortableWorker.test.ts",
        "string": "\"Worker aborted\""
      },
      {
        "file": "utils/__tests__/AbortableWorker.test.ts",
        "string": "\"Worker aborted\""
      },
      {
        "file": "utils/__tests__/AbortableWorker.test.ts",
        "string": "\"Worker has been aborted\""
      },
      {
        "file": "utils/__tests__/AbortableWorker.test.ts",
        "string": "\"Task timeout\""
      },
      {
        "file": "utils/__tests__/AbortableWorker.test.ts",
        "string": "\"Task failed\""
      },
      {
        "file": "utils/__tests__/AbortableWorker.test.ts",
        "string": "\"Task failed\""
      },
      {
        "file": "utils/__tests__/A11yHelpers.test.ts",
        "string": "\"A11yHelpers\""
      },
      {
        "file": "utils/__tests__/A11yHelpers.test.ts",
        "string": "\"Vertical story\""
      },
      {
        "file": "test-utils/index.tsx",
        "string": "'Golden Retriever'"
      },
      {
        "file": "test-utils/index.tsx",
        "string": "'Error occurred'"
      },
      {
        "file": "test-utils/index.tsx",
        "string": "'Test message'"
      },
      {
        "file": "test-utils/index.tsx",
        "string": "'You have a new match'"
      },
      {
        "file": "test-utils/msw/handlers.ts",
        "string": "'Invalid credentials'"
      },
      {
        "file": "test-utils/msw/handlers.ts",
        "string": "'Account deletion initiated'"
      },
      {
        "file": "test-utils/msw/handlers.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "test-utils/msw/handlers.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "test-utils/msw/handlers.ts",
        "string": "'A playful and friendly companion who loves adventure!'"
      },
      {
        "file": "test-utils/msw/handlers.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "test-utils/msw/handlers.ts",
        "string": "'Maintain regular exercise'"
      },
      {
        "file": "test-utils/msw/handlers.ts",
        "string": "'Great lighting'"
      },
      {
        "file": "test-utils/msw/handlers.ts",
        "string": "'Good composition'"
      },
      {
        "file": "test-utils/msw/handlers.ts",
        "string": "'No handler defined for this request'"
      },
      {
        "file": "styles/EnhancedDesignTokens.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "styles/EnhancedDesignTokens.tsx",
        "string": "\"Theme.colors.primary[600]\""
      },
      {
        "file": "styles/EnhancedDesignTokens.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "styles/EnhancedDesignTokens.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "styles/EnhancedDesignTokens.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "styles/EnhancedDesignTokens.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "styles/EnhancedDesignTokens.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "styles/EnhancedDesignTokens.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "styles/EnhancedDesignTokens.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "styles/EnhancedDesignTokens.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "styles/EnhancedDesignTokens.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "services/verificationService.ts",
        "string": "'Error getting verification status'"
      },
      {
        "file": "services/verificationService.ts",
        "string": "'Error submitting identity verification'"
      },
      {
        "file": "services/verificationService.ts",
        "string": "'Error submitting pet ownership verification'"
      },
      {
        "file": "services/verificationService.ts",
        "string": "'Error submitting veterinary verification'"
      },
      {
        "file": "services/verificationService.ts",
        "string": "'Error submitting organization verification'"
      },
      {
        "file": "services/verificationService.ts",
        "string": "'Error getting requirements'"
      },
      {
        "file": "services/verificationService.ts",
        "string": "'Error canceling verification'"
      },
      {
        "file": "services/verificationService.ts",
        "string": "'Error getting badges'"
      },
      {
        "file": "services/verificationService.ts",
        "string": "'Error checking tier'"
      },
      {
        "file": "services/verificationService.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/verificationService.ts",
        "string": "'Error uploading document'"
      },
      {
        "file": "services/verificationService.ts",
        "string": "'Error requesting status update'"
      },
      {
        "file": "services/userSettingsService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"Analytics event tracked\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"Failed to track analytics event\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"App crash tracked\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"Failed to track swipe\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"Failed to track super like\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"Failed to track boost\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"Failed to get usage stats\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"Failed to get analytics insights\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"Failed to export user data\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"Failed to flush analytics events\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"Failed to store events locally\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"Failed to send events to server\""
      },
      {
        "file": "services/usageTracking.ts",
        "string": "\"Unknown Device\""
      },
      {
        "file": "services/uploadService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/uploadService.ts",
        "string": "\"Failed to get presigned URL\""
      },
      {
        "file": "services/uploadService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'MIME validation error'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Orientation fix error'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Resize error'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Compress error'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'File info error'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Starting upload hygiene processing'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'MIME type validated'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Orientation fixed'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Original dimensions'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Image resized'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Image cropped'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Image compressed'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Upload hygiene complete'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Upload hygiene processing failed'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Camera roll permissions not granted'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Pick and process error'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Camera permissions not granted'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Capture and process error'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Quota check error'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Upload failed, retrying'"
      },
      {
        "file": "services/uploadHygiene.ts",
        "string": "'Upload failed after retries'"
      },
      {
        "file": "services/upload.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/upload.ts",
        "string": "'Upload error'"
      },
      {
        "file": "services/photoUploadService.ts",
        "string": "'Camera roll permissions not granted'"
      },
      {
        "file": "services/photoUploadService.ts",
        "string": "'No image selected'"
      },
      {
        "file": "services/photoUploadService.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/photoUploadService.ts",
        "string": "'Photo upload error'"
      },
      {
        "file": "services/photoUpload.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/petActivityService.ts",
        "string": "\"Location permission not granted\""
      },
      {
        "file": "services/petActivityService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/petActivityService.ts",
        "string": "\"Activity started\""
      },
      {
        "file": "services/petActivityService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/petActivityService.ts",
        "string": "\"Activity ended\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Offline service initialized successfully\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to initialize offline service\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to load offline data\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to save offline data\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Sync completed successfully\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Sync failed\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to sync action\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to sync from server\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to fetch pets online, using offline data\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to fetch user online, using offline data\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to fetch matches online, using offline data\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to fetch messages online, using offline data\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to swipe online, queuing for offline\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to send message online, queuing for offline\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to update profile online, queuing for offline\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to perform match action online, queuing for offline\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Offline data cleared\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to clear offline data\""
      },
      {
        "file": "services/offlineService.ts",
        "string": "\"Failed to get storage size\""
      },
      {
        "file": "services/observability.ts",
        "string": "\"Sentry error tracking initialized\""
      },
      {
        "file": "services/observability.ts",
        "string": "\"Performance monitoring enabled\""
      },
      {
        "file": "services/observability.ts",
        "string": "\"Observability service initialized successfully\""
      },
      {
        "file": "services/observability.ts",
        "string": "\"Failed to initialize observability service\""
      },
      {
        "file": "services/observability.ts",
        "string": "\"Low FPS detected\""
      },
      {
        "file": "services/observability.ts",
        "string": "\"Network status changed\""
      },
      {
        "file": "services/observability.ts",
        "string": "\"Failed to initialize network monitoring\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Must use physical device for Push Notifications\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Failed to get push token for push notification!\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Failed to register push token with backend\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Push notifications initialized successfully\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Error initializing push notifications\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"New Matches\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Notifications for new matches\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"New message notifications\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Someone liked your pet\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"App usage reminders\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Notification received\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Error sending local notification\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Error getting badge count\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Error setting badge count\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Error canceling notification\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Error canceling all notifications\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"New Match! 🎉\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Super Like! ⭐\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"New Like! ❤️\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Missing Your Furry Friends!\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Push token registered with backend\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Failed to register push token with backend\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Push token unregistered from backend\""
      },
      {
        "file": "services/notifications.ts",
        "string": "\"Failed to unregister push token\""
      },
      {
        "file": "services/matchesSearchAPI.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Failed to initialize encryption\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Failed to generate secure key: \""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Failed to generate random bytes: \""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Encryption not initialized\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Encryption failed: \""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Encryption not initialized\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Decryption failed: \""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Failed to rotate logs:\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Log encryption failed\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Encryption failed\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Encryption not initialized\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"HMAC generation failed: \""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Unknown error\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Log entry exceeded maximum size limit\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Failed to buffer offline log\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Cleaned up old offline logs\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Failed to cleanup old offline logs\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Offline log integrity check failed\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Log tampering detected\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Failed to decrypt offline log\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Offline logs loaded successfully\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Failed to load offline logs\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Failed to send to Sentry:\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Invalid user data provided to logger\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"User context set\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Failed to add breadcrumb:\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"End date must be after start date\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Audit logs exported\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Failed to export audit logs\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Audit log export failed: \""
      },
      {
        "file": "services/logger.ts",
        "string": "\"End date must be after start date\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Audit logs exported\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Failed to export audit logs\""
      },
      {
        "file": "services/logger.ts",
        "string": "\"Audit log export failed: \""
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Connected to LiveKit room'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Failed to connect to LiveKit room'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Toggle camera - LiveKit API integration pending'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Toggle microphone - LiveKit API integration pending'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Switch camera feature - LiveKit API integration pending'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Enable/disable camera - LiveKit API integration pending'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Enable/disable microphone - LiveKit API integration pending'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Track published'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Track unpublished'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Participant connected'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Participant disconnected'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Disconnected from room'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Reconnecting to room'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Reconnected to room'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Connection state changed'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Local track published'"
      },
      {
        "file": "services/livekitService.ts",
        "string": "'Local track unpublished'"
      },
      {
        "file": "services/linkPreviewService.ts",
        "string": "'Failed to fetch link preview'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'INVALID_PASSWORD'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'ALREADY_DELETING'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'SERVER_ERROR'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'SERVER_ERROR'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'Delete account error:'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'Failed to delete account'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'Failed to cancel deletion'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'Cancel deletion error:'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'Get account status error:'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'Export user data error:'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'Failed to export data'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'SERVER_ERROR'"
      },
      {
        "file": "services/gdprService.ts",
        "string": "'Download export error:'"
      },
      {
        "file": "services/errorHandler.ts",
        "string": "\"Error occurred\""
      },
      {
        "file": "services/errorHandler.ts",
        "string": "\"Please check your internet connection and try again.\""
      },
      {
        "file": "services/errorHandler.ts",
        "string": "\"Your session has expired. Please log in again.\""
      },
      {
        "file": "services/errorHandler.ts",
        "string": "\"The requested resource was not found.\""
      },
      {
        "file": "services/errorHandler.ts",
        "string": "\"Server error occurred. Please try again later.\""
      },
      {
        "file": "services/errorHandler.ts",
        "string": "\"An unexpected error occurred. Please try again.\""
      },
      {
        "file": "services/errorHandler.ts",
        "string": "\"Network error. Please check your connection and try again.\""
      },
      {
        "file": "services/errorHandler.ts",
        "string": "\"Please check your input and try again.\""
      },
      {
        "file": "services/errorHandler.ts",
        "string": "\"Authentication failed. Please log in again.\""
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Requesting upload URL...'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Progress callback error'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Uploading to secure storage...'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Progress callback error'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'S3 upload failed'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Registering upload...'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Progress callback error'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Analyzing photo...'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Progress callback error'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Awaiting moderation...'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Progress callback error'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Upload failed'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Upload quota exceeded'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'No image selected'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Upload from picker failed'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Unknown reason'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Upload status polling timeout'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Batch upload failed'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Duplicate check returned malformed response'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'Duplicate check failed'"
      },
      {
        "file": "services/enhancedUploadService.ts",
        "string": "'File system error'"
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Failed to fetch community feed\""
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Post content is required\""
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Failed to create community post\""
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Failed to like/unlike community post\""
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Failed to fetch post comments\""
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Comment content is required\""
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Failed to add comment to post\""
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Failed to report content\""
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Failed to block user\""
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Failed to join activity\""
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Failed to leave activity\""
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Failed to delete post\""
      },
      {
        "file": "services/communityAPI.ts",
        "string": "\"Failed to update post\""
      },
      {
        "file": "services/chatService.ts",
        "string": "\"Reaction sent successfully\""
      },
      {
        "file": "services/chatService.ts",
        "string": "\"Failed to send reaction\""
      },
      {
        "file": "services/chatService.ts",
        "string": "\"Attachment sent successfully\""
      },
      {
        "file": "services/chatService.ts",
        "string": "\"Failed to send attachment\""
      },
      {
        "file": "services/chatService.ts",
        "string": "\"Invalid file type\""
      },
      {
        "file": "services/chatService.ts",
        "string": "\"Voice note sent successfully\""
      },
      {
        "file": "services/chatService.ts",
        "string": "\"Failed to send voice note\""
      },
      {
        "file": "services/chatService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/apiClient.ts",
        "string": "\"EXPO_PUBLIC_API_URL\""
      },
      {
        "file": "services/apiClient.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/apiClient.ts",
        "string": "\"Network connected, processing queue\""
      },
      {
        "file": "services/apiClient.ts",
        "string": "\"Network disconnected, queueing requests\""
      },
      {
        "file": "services/apiClient.ts",
        "string": "\"Authorization\""
      },
      {
        "file": "services/apiClient.ts",
        "string": "\"Request interceptor rejected\""
      },
      {
        "file": "services/apiClient.ts",
        "string": "\"API request failed\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch liked you\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch matches\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch matches\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch match\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to create match\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch messages\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to send message\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to delete message\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to send typing indicator\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to mark messages as read\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to unmatch\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to block user\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to report user\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch pets\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch user profile\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to update user profile\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to upload photos\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch user pets\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch user statistics\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch pet\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to create pet\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to update pet\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to delete pet\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch adoption applications\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to submit adoption application\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch premium features\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to subscribe to premium\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to cancel premium subscription\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch user settings\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to update user settings\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to update user preferences\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch notifications\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to mark notification as read\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to delete notification\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch app statistics\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to submit report\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to block user\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to unblock user\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch blocked users\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to search pets\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch nearby pets\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch pet compatibility\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch user activity\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to fetch app version\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to request account deletion\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to cancel account deletion\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to get account status\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to export user data\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to get current subscription\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to cancel subscription\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to get adoption listings\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to get adoption applications\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to create checkout session\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to get presign URL\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Failed to get presign URL\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Request body too large\""
      },
      {
        "file": "services/api.ts",
        "string": "\"Invalid API endpoint\""
      },
      {
        "file": "services/api.ts",
        "string": "\"API rate limit exceeded\""
      },
      {
        "file": "services/api.ts",
        "string": "\"X-Requested-With\""
      },
      {
        "file": "services/api.ts",
        "string": "\"XMLHttpRequest\""
      },
      {
        "file": "services/analyticsService.ts",
        "string": "'Unknown analytics error'"
      },
      {
        "file": "services/analyticsService.ts",
        "string": "'Analytics tracking failed'"
      },
      {
        "file": "services/aiPhotoService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/adminUsersService.ts",
        "string": "\"Failed to fetch admin users\""
      },
      {
        "file": "services/adminUsersService.ts",
        "string": "\"Failed to fetch admin users\""
      },
      {
        "file": "services/adminUsersService.ts",
        "string": "\"User suspended via mobile admin controls\""
      },
      {
        "file": "services/adminUsersService.ts",
        "string": "\"User reactivated via mobile admin controls\""
      },
      {
        "file": "services/adminUsersService.ts",
        "string": "\"User banned via mobile admin controls\""
      },
      {
        "file": "services/adminUsersService.ts",
        "string": "\"User reinstated via mobile admin controls\""
      },
      {
        "file": "services/adminUsersService.ts",
        "string": "\"Admin user action failed\""
      },
      {
        "file": "services/adminAPI.ts",
        "string": "\"EXPO_PUBLIC_API_URL\""
      },
      {
        "file": "services/adminAPI.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/adminAPI.ts",
        "string": "\"Admin API request failed\""
      },
      {
        "file": "services/adminAPI.ts",
        "string": "\"Removed by admin\""
      },
      {
        "file": "services/adminAPI.ts",
        "string": "\"Upload deleted\""
      },
      {
        "file": "services/WebRTCService.ts",
        "string": "\"TURN server configured\""
      },
      {
        "file": "services/WebRTCService.ts",
        "string": "\"No TURN server configured. Calls may fail across NAT/firewalls.\""
      },
      {
        "file": "services/WebRTCService.ts",
        "string": "\"InCallManager not available\""
      },
      {
        "file": "services/WebRTCService.ts",
        "string": "\"Unknown User\""
      },
      {
        "file": "services/WebRTCService.ts",
        "string": "\"Error starting call\""
      },
      {
        "file": "services/WebRTCService.ts",
        "string": "\"Error answering call\""
      },
      {
        "file": "services/WebRTCService.ts",
        "string": "\"Error ending local stream\""
      },
      {
        "file": "services/WebRTCService.ts",
        "string": "\"Error ending remote stream\""
      },
      {
        "file": "services/WebRTCService.ts",
        "string": "\"ICE connection state changed\""
      },
      {
        "file": "services/WebRTCService.ts",
        "string": "\"ICE connection failed\""
      },
      {
        "file": "services/WebRTCService.ts",
        "string": "\"ICE connection failed\""
      },
      {
        "file": "services/WebRTCService.ts",
        "string": "\"ICE gathering state changed\""
      },
      {
        "file": "services/SecureAPIService.ts",
        "string": "\"EXPO_PUBLIC_API_URL\""
      },
      {
        "file": "services/SecureAPIService.ts",
        "string": "\"PLACEHOLDER_CERTIFICATE_FINGERPRINT_SHA256\""
      },
      {
        "file": "services/SecureAPIService.ts",
        "string": "\"PLACEHOLDER_CERTIFICATE_FINGERPRINT_SHA1\""
      },
      {
        "file": "services/SecureAPIService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/SecureAPIService.ts",
        "string": "\"Authorization\""
      },
      {
        "file": "services/SecureAPIService.ts",
        "string": "\"Secure API request successful\""
      },
      {
        "file": "services/SecureAPIService.ts",
        "string": "\"Secure API request failed after all retries\""
      },
      {
        "file": "services/SecureAPIService.ts",
        "string": "\"Unknown error\""
      },
      {
        "file": "services/SecureAPIService.ts",
        "string": "\"SSL certificate validation failed\""
      },
      {
        "file": "services/SecureAPIService.ts",
        "string": "\"SecureAPIError\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"See who liked you\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Advanced filters\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"EXPO_PUBLIC_STRIPE_BASIC_PRICE_ID\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Unlimited Super Likes\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Priority matching\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Profile boost\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Undo swipes\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"EXPO_PUBLIC_STRIPE_PREMIUM_PRICE_ID\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Everything in Premium\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Video calls\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Advanced analytics\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"VIP support\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"EXPO_PUBLIC_STRIPE_ULTIMATE_PRICE_ID\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Failed to check premium status\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Fetched subscription status\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Failed to get subscription status\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Created checkout session\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Failed to create checkout session\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Subscription cancelled\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Failed to cancel subscription\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Failed to get premium limits\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Failed to check feature access\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Premium feature usage tracked\""
      },
      {
        "file": "services/PremiumService.ts",
        "string": "\"Failed to track premium usage\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Offline sync service initialized\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Failed to initialize offline sync service\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"API call queued for offline sync\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"User action queued for offline sync\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Cannot sync while offline\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Failed items cleared from offline queue\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Offline queue loaded\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Failed to load offline queue\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Failed to persist offline queue\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Network connection restored, starting sync\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Network connection lost\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Failed to process queue item\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Queue processing completed\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Queue processing failed\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Failed to update last sync time\""
      },
      {
        "file": "services/OfflineSyncService.ts",
        "string": "\"Error notifying sync listener\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Fetched pet recommendations\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Failed to get recommendations\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Same species preference\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Compatible intentions\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Size compatible\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Age compatible\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Swipe recorded\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Failed to record swipe\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Fetched user matches\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Failed to get matches\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Fetched compatibility analysis\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Failed to get compatibility analysis\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Fetched swipe statistics\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Failed to get swipe stats\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Last swipe undone\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Failed to undo last swipe\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Failed to check undo availability\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Fetched pet details\""
      },
      {
        "file": "services/MatchingService.ts",
        "string": "\"Failed to get pet details\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"EXPO_PUBLIC_API_URL\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Failed to get leaderboard\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Failed to get user rank\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Failed to get categories\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Failed to get user badges\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Failed to get pet stats\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Failed to update score\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Failed to get leaderboard history\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Failed to get nearby leaders\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Failed to get achievement progress\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Content-Type\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Failed to share achievement\""
      },
      {
        "file": "services/LeaderboardService.ts",
        "string": "\"Authentication required for leaderboard access\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"Starting image compression\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"Image compression completed\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"Image compression failed\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"Failed to compress image\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"Failed to compress image in batch\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"Image file does not exist\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"Image file is too large (max 20MB)\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"Unsupported image format\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"Image validation failed\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"Failed to validate image\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"ImageManipulator\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"Failed to cleanup temp image\""
      },
      {
        "file": "services/ImageCompressionService.ts",
        "string": "\"Failed to get image dimensions\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Biometric capabilities checked\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Failed to check biometric support\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Biometric authentication not supported on this device\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"No biometric authentication methods enrolled\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Authenticate to access PawfectMatch\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Biometric authentication successful\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Authentication failed\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Biometric authentication failed\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Biometric authentication error\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Unknown error occurred\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Enable biometric authentication\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Biometric authentication enabled\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Failed to enable biometric authentication\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Biometric authentication disabled\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Failed to disable biometric authentication\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Failed to check biometric status\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Biometric Authentication\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Encrypt sensitive data\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Biometric authentication required for encryption\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Authenticate to access encrypted data\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Data encrypted securely with biometric authentication\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Failed to encrypt data with biometric protection\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Decrypt sensitive data\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Biometric authentication required\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Authenticate to decrypt sensitive data\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Data decrypted successfully with biometric authentication\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Failed to decrypt biometric data\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Biometric-protected data removed\""
      },
      {
        "file": "services/BiometricService.ts",
        "string": "\"Failed to remove biometric data\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Session expired due to timeout\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Session expired due to inactivity\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Session validity check failed\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to get session start time\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to get last activity time\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to update last activity time\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Tokens rotated successfully\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Token rotation failed\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to check biometric availability\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Biometric authentication is not available on this device\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Authenticate to enable biometric login\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Biometric authentication failed\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Biometric authentication enabled\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to enable biometric authentication\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to enable biometric authentication\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Biometric authentication disabled\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to disable biometric authentication\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to disable biometric authentication\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to check biometric status\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Biometric authentication is not enabled\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Biometric authentication is not available\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Authenticate to login\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Biometric authentication failed\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"No biometric credentials found\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"User logged in with biometrics\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Biometric login failed\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Biometric login failed. Please use email and password.\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"User logged in successfully\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Login failed\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Login failed. Please check your credentials and try again.\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Passwords do not match\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"User registered successfully\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Registration failed\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Registration failed. Please try again.\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Server logout failed, continuing with local logout\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"User logged out successfully\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Logout failed\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Token refresh failed\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Password reset requested\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Forgot password failed\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to send password reset email. Please try again.\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Passwords do not match\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Password reset successful\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Password reset failed\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to reset password. Please try again.\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to get current user\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to get access token\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Authentication check failed\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"No authenticated user found\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"User data updated\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to update user data\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to update user data\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "'Failed to store in Keychain'"
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to store auth data\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to save authentication data\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to clear auth data\""
      },
      {
        "file": "services/AuthService.ts",
        "string": "\"Failed to get refresh token\""
      },
      {
        "file": "services/AssetPreloader.ts",
        "string": "'Inter-Regular'"
      },
      {
        "file": "services/AssetPreloader.ts",
        "string": "\"Starting asset preloading...\""
      },
      {
        "file": "services/AssetPreloader.ts",
        "string": "\"Asset preloading completed\""
      },
      {
        "file": "services/AssetPreloader.ts",
        "string": "\"Asset preloading failed\""
      },
      {
        "file": "services/AssetPreloader.ts",
        "string": "\"Image preload failed\""
      },
      {
        "file": "services/AssetPreloader.ts",
        "string": "\"Fonts loaded successfully\""
      },
      {
        "file": "services/AssetPreloader.ts",
        "string": "\"Font loading failed\""
      },
      {
        "file": "services/AssetPreloader.ts",
        "string": "\"Remote images preloaded\""
      },
      {
        "file": "services/AssetPreloader.ts",
        "string": "\"Remote image preloading failed\""
      },
      {
        "file": "services/AssetPreloader.ts",
        "string": "\"Screen assets preloaded\""
      },
      {
        "file": "services/AssetPreloader.ts",
        "string": "\"Screen asset preloading failed\""
      },
      {
        "file": "services/AccessibilityService.ts",
        "string": "\"Failed to initialize accessibility\""
      },
      {
        "file": "services/AccessibilityService.ts",
        "string": "\"Failed to announce for accessibility\""
      },
      {
        "file": "services/AccessibilityService.ts",
        "string": "\"Failed to set accessibility focus\""
      },
      {
        "file": "services/AccessibilityService.ts",
        "string": "\"Error notifying accessibility listener\""
      },
      {
        "file": "services/types/notifications.ts",
        "string": "\"TOKEN_INVALID\""
      },
      {
        "file": "services/types/notifications.ts",
        "string": "\"TOKEN_EXPIRED\""
      },
      {
        "file": "services/types/notifications.ts",
        "string": "\"TOKEN_BLACKLISTED\""
      },
      {
        "file": "services/types/notifications.ts",
        "string": "\"RATE_LIMIT_EXCEEDED\""
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'VerificationService'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Network Error'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Network Error'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Submission failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Submission failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Validation failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Validation failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Pet verification failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Pet verification failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Happy Paws Veterinary'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Veterinary verification failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Veterinary verification failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Organization verification failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Organization verification failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Valid government-issued ID'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Clear selfie photo'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Address verification'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Requirements not found'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Requirements not found'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Cannot cancel completed verification'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Cannot cancel completed verification'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Badges not available'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Badges not available'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Tier check failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Tier check failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Upload failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Upload failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'FormData not available'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'FormData not available'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Status update failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Status update failed'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Error Handling and Edge Cases'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Request timeout'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Request timeout'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Unauthorized'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Unauthorized'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Internal server error'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Internal server error'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Data Validation'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Invalid tier'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Invalid tier'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Invalid verification ID'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Invalid verification ID'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Unsupported document type'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Unsupported document type'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Status Transitions'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Document unclear'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Document unclear'"
      },
      {
        "file": "services/__tests__/verificationService.test.ts",
        "string": "'Integration Scenarios'"
      },
      {
        "file": "services/__tests__/verificationService.simple.test.ts",
        "string": "'VerificationService - Core Tests'"
      },
      {
        "file": "services/__tests__/verificationService.simple.test.ts",
        "string": "'Submission failed'"
      },
      {
        "file": "services/__tests__/verificationService.simple.test.ts",
        "string": "'Submission failed'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'UsageTracking/AnalyticsService'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Singleton Pattern'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Event Tracking'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Unknown Device'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Screen View Tracking'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'User Interaction Tracking'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Performance Tracking'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Crash Tracking'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Error: Test crash\\n    at test.js:1:1'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Error: Test crash\\n    at test.js:1:1'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Anonymous crash'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Static Swipe Tracking'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Static Super Like Tracking'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Static Boost Tracking'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Usage Statistics'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Stats unavailable'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Analytics Insights'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Insights unavailable'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Data Export (GDPR)'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Export failed'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Event Queue Management'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Local Storage'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Device and Session Info'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Unknown Device'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Error Handling and Edge Cases'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Server error'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'ErrorScreen'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Storage full'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'ConcurrentScreen'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Development vs Production Behavior'"
      },
      {
        "file": "services/__tests__/usageTracking.test.ts",
        "string": "'Analytics event tracked'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'UploadHygiene Service'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'MIME Type Validation'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'File not found'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'EXIF Orientation Fixing'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Orientation fix failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Image Resizing'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Resize failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Resize failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Aspect Ratio Cropping'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Crop failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Crop failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Image Compression'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Compression failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Compression failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'File Information'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'File system error'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Full Upload Hygiene Pipeline'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Starting upload hygiene processing...'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Original dimensions: 2048x1536'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Invalid file type: unknown'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Processing failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Processing failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Upload hygiene processing failed:'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Image Picker Integration'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Camera roll permissions not granted'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Picker failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Picker failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Camera Capture Integration'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Camera permissions not granted'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Upload Quota Management'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Quota check failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Quota check failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Retry Logic with Backoff'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Attempt 1 failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Attempt 2 failed'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Persistent failure'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Persistent failure'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Edge Cases and Error Handling'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Out of memory'"
      },
      {
        "file": "services/__tests__/uploadHygiene.test.ts",
        "string": "'Out of memory'"
      },
      {
        "file": "services/__tests__/uploadHygiene.simple.test.ts",
        "string": "'UploadHygiene Service - Simplified Tests'"
      },
      {
        "file": "services/__tests__/uploadHygiene.simple.test.ts",
        "string": "'Invalid file type'"
      },
      {
        "file": "services/__tests__/uploadHygiene.simple.test.ts",
        "string": "'Camera roll permissions not granted'"
      },
      {
        "file": "services/__tests__/uploadHygiene.simple.test.ts",
        "string": "'Camera permissions not granted'"
      },
      {
        "file": "services/__tests__/uploadHygiene.simple.test.ts",
        "string": "'Attempt 1 failed'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Swipe Service'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Happy Path - Like Pet'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Happy Path - Pass Pet'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Happy Path - Super Like Pet'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Happy Path - Rewind Last'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'A friendly dog'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Rewind failed'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Like failed'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Like failed'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Pass failed'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Pass failed'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Super like failed'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Super like failed'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Integration'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Type Safety'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'A friendly dog'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "services/__tests__/swipeService.test.ts",
        "string": "'A friendly dog'"
      },
      {
        "file": "services/__tests__/storage.test.ts",
        "string": "'Storage Service'"
      },
      {
        "file": "services/__tests__/storage.test.ts",
        "string": "'Happy Path - readJSON'"
      },
      {
        "file": "services/__tests__/storage.test.ts",
        "string": "'Happy Path - writeJSON'"
      },
      {
        "file": "services/__tests__/storage.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/storage.test.ts",
        "string": "'Read failed'"
      },
      {
        "file": "services/__tests__/storage.test.ts",
        "string": "'Write failed'"
      },
      {
        "file": "services/__tests__/storage.test.ts",
        "string": "'Write failed'"
      },
      {
        "file": "services/__tests__/storage.test.ts",
        "string": "'Hello 世界 🌍'"
      },
      {
        "file": "services/__tests__/storage.test.ts",
        "string": "'Hello 世界 🌍'"
      },
      {
        "file": "services/__tests__/storage.test.ts",
        "string": "'Integration'"
      },
      {
        "file": "services/__tests__/storage.test.ts",
        "string": "'Type Safety'"
      },
      {
        "file": "services/__tests__/socket.test.ts",
        "string": "'Socket Service'"
      },
      {
        "file": "services/__tests__/socket.test.ts",
        "string": "'Happy Path - Socket Initialization'"
      },
      {
        "file": "services/__tests__/socket.test.ts",
        "string": "'Happy Path - Socket Connection'"
      },
      {
        "file": "services/__tests__/socket.test.ts",
        "string": "'Happy Path - Event Handling'"
      },
      {
        "file": "services/__tests__/socket.test.ts",
        "string": "'Happy Path - Connection Management'"
      },
      {
        "file": "services/__tests__/socket.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/socket.test.ts",
        "string": "'Integration'"
      },
      {
        "file": "services/__tests__/socket.test.ts",
        "string": "'Reconnection'"
      },
      {
        "file": "services/__tests__/socket.test.ts",
        "string": "'Type Safety'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'SettingsService'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Network timeout'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Network timeout'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Save failed'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Save failed'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Invalid settings format'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Invalid settings format'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Settings Data Structure'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Europe/Paris'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Settings Validation and Constraints'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'America/New_York'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'José María ñoño 🚀'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'I love pets! 🐶🐱🐭'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'José María ñoño 🚀'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Integration Scenarios'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Error Recovery and Resilience'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Network temporarily unavailable'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Network temporarily unavailable'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Second operation failed'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Second operation failed'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Type Safety and Interface Compliance'"
      },
      {
        "file": "services/__tests__/settingsService.test.ts",
        "string": "'Performance and Memory'"
      },
      {
        "file": "services/__tests__/photoUpload.test.ts",
        "string": "'Photo Upload Service'"
      },
      {
        "file": "services/__tests__/photoUpload.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/photoUpload.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/photoUpload.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/photoUpload.test.ts",
        "string": "'Presign failed'"
      },
      {
        "file": "services/__tests__/photoUpload.test.ts",
        "string": "'Presign failed'"
      },
      {
        "file": "services/__tests__/photoUpload.test.ts",
        "string": "'Upload failed'"
      },
      {
        "file": "services/__tests__/photoUpload.test.ts",
        "string": "'Upload failed'"
      },
      {
        "file": "services/__tests__/photoUpload.test.ts",
        "string": "'Integration'"
      },
      {
        "file": "services/__tests__/photoUpload.test.ts",
        "string": "'Type Safety'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'PetActivityService'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Location permission not granted'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Location services are disabled'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Location services are disabled'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Location permission not granted'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Enjoying a walk!'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Enjoying a walk!'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Enjoying a walk!'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Enjoying a walk!'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Activity started'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Invalid pet ID'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Activity ended'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Activity not found'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Activity already ended'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Network timeout'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Network timeout'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Morning walk'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Park playtime'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Pet not found'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Connection failed'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Connection failed'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Socket Communication'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Socket test'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Socket test'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Socket test'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Server error'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Platform Handling'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Concurrent Operations'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Invalid pet'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Edge Cases and Boundary Conditions'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Activity with émojis 🚶‍♂️🐕 and spëcial chärs! @pet_lover #walk'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Type Safety and Interface Compliance'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Typed message'"
      },
      {
        "file": "services/__tests__/petActivityService.test.ts",
        "string": "'Typed message'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'OfflineService'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Network Monitoring'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Sync Status and Listeners'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Pending Actions'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Action failed'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Persistent failure'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Offline-First Data Access'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Failed to fetch pets online, using offline data'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'How are you?'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Offline-Aware Actions'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Hello there!'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Hello there!'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Offline message'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Send failed'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Failed message'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Failed to send message online, queuing for offline'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'John Updated'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Offline Update'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Data Synchronization'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Sync failed'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Sync failed'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Data Persistence'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Failed to save offline data'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Clear error'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Failed to clear offline data'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Storage Size Management'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Failed to get storage size'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Periodic Sync'"
      },
      {
        "file": "services/__tests__/offlineService.test.ts",
        "string": "'Error Handling and Edge Cases'"
      },
      {
        "file": "services/__tests__/offlineService.simple.test.ts",
        "string": "'OfflineService - Core Tests'"
      },
      {
        "file": "services/__tests__/offlineService.simple.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "services/__tests__/offlineService.simple.test.ts",
        "string": "'Data Management'"
      },
      {
        "file": "services/__tests__/offlineService.simple.test.ts",
        "string": "'Pending Actions'"
      },
      {
        "file": "services/__tests__/offlineService.simple.test.ts",
        "string": "'Network Monitoring'"
      },
      {
        "file": "services/__tests__/offlineService.simple.test.ts",
        "string": "'Sync Status'"
      },
      {
        "file": "services/__tests__/offlineService.simple.test.ts",
        "string": "'Data Persistence'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'ObservabilityService'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Singleton Pattern'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Sentry error tracking initialized'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Sentry init failed'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Failed to initialize observability service'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Performance Tracking'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Performance: render_feed'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Analytics: performance_metric'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Performance: simple_operation'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'User Interaction Tracking'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'User interaction: Home.Feed.like'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'User interaction: Profile.Avatar.tap'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Error Tracking'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Error in Home.Feed'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Anonymous error'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Security Event Tracking'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Security event: auth_attempt [HIGH]'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Critical security event: data_breach_attempt'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Security event: rate_limit [LOW]'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Analytics Event Tracking'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Analytics: user_scroll'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Analytics: simple_event'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'User Journey Tracking'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Profile Setup'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Pet Registration'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Pet Registration'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'User journey: Welcome → Profile Setup → Pet Registration → Home'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Single Step'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Single Step'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'User journey: Single Step'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Feature Usage Tracking'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Feature usage: super_like'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Analytics: feature_used'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Feature usage: basic_like'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Performance Tracing'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Performance: api_call'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Performance: render_component'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'User Context Management'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Breadcrumb Tracking'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'User navigated to profile'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Button pressed'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Button pressed'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Network Monitoring'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Network status changed'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Network status changed'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Network monitoring failed'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Failed to initialize network monitoring'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Data Sanitization'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Error message'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Resource Cleanup'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Configuration Management'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Environment Handling'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Error Handling and Edge Cases'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Sentry error'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Original error'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Logger error'"
      },
      {
        "file": "services/__tests__/observability.test.ts",
        "string": "'Concurrent error'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'NotificationService'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Token error'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Backend error'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Notification Channels (Android)'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'New Matches'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Notifications for new matches'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'New message notifications'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Local Notifications'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'You have a new match!'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'You have a new match!'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Check your matches!'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Check your matches!'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Schedule failed'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Badge Management'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Badge error'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Set badge failed'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Notification Management'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Cancel failed'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Specialized Notifications'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'New Match! 🎉'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'You matched with Buddy!'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Message from John'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Super Like! ⭐'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Max super liked your pet!'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'New Like! ❤️'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Max liked your pet!'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Missing Your Furry Friends!'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Notification Handling'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Sound and Channel Management'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Device and Backend Management'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Backend error'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Cleanup error'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Error Handling and Edge Cases'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Handler error'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Channel error'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Listener error'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Platform-Specific Behavior'"
      },
      {
        "file": "services/__tests__/notifications.test.ts",
        "string": "'Token Management'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'MapActivityService'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Enjoying a walk in the park!'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Enjoying a walk in the park!'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Location permission denied'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Location permission denied'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Location services are disabled'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Location services are disabled'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Activity creation failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Activity creation failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Activity end failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Activity end failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Activity not found'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Activity not found'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Pins fetch failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Pins fetch failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Like failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Like failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Pin not found'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Pin not found'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Already liked'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Already liked'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Great activity!'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Comment failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Test comment'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Comment failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Comment contains inappropriate content'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Comment contains inappropriate content'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Great activity! 🌟🚀 #petlife @friend 🐕'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Error Handling and Edge Cases'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Network request failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Network request failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Activity 2 failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Activity 2 failed'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Rate limit exceeded'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Rate limit exceeded'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Unauthorized'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Unauthorized'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Internal server error'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Internal server error'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Location Permission Handling'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Data Validation and Type Safety'"
      },
      {
        "file": "services/__tests__/mapActivityService.test.ts",
        "string": "'Type-safe message'"
      },
      {
        "file": "services/__tests__/mapActivityService.simple.test.ts",
        "string": "'MapActivityService - Core Tests'"
      },
      {
        "file": "services/__tests__/mapActivityService.simple.test.ts",
        "string": "'Going for a walk!'"
      },
      {
        "file": "services/__tests__/mapActivityService.simple.test.ts",
        "string": "'Going for a walk!'"
      },
      {
        "file": "services/__tests__/mapActivityService.simple.test.ts",
        "string": "'Going for a walk!'"
      },
      {
        "file": "services/__tests__/mapActivityService.simple.test.ts",
        "string": "'Location permission denied'"
      },
      {
        "file": "services/__tests__/mapActivityService.simple.test.ts",
        "string": "'Location permission denied'"
      },
      {
        "file": "services/__tests__/mapActivityService.simple.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/mapActivityService.simple.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/mapActivityService.simple.test.ts",
        "string": "'Already liked'"
      },
      {
        "file": "services/__tests__/mapActivityService.simple.test.ts",
        "string": "'Already liked'"
      },
      {
        "file": "services/__tests__/mapActivityService.simple.test.ts",
        "string": "'Activity Parameters'"
      },
      {
        "file": "services/__tests__/homeAPI.test.ts",
        "string": "'Home API Service'"
      },
      {
        "file": "services/__tests__/homeAPI.test.ts",
        "string": "'Happy Path - Get Home Stats'"
      },
      {
        "file": "services/__tests__/homeAPI.test.ts",
        "string": "'Happy Path - Get Activity Feed'"
      },
      {
        "file": "services/__tests__/homeAPI.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/homeAPI.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/homeAPI.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/homeAPI.test.ts",
        "string": "'Internal Server Error'"
      },
      {
        "file": "services/__tests__/homeAPI.test.ts",
        "string": "'JSON parse error'"
      },
      {
        "file": "services/__tests__/homeAPI.test.ts",
        "string": "'JSON parse error'"
      },
      {
        "file": "services/__tests__/homeAPI.test.ts",
        "string": "'Integration'"
      },
      {
        "file": "services/__tests__/homeAPI.test.ts",
        "string": "'Type Safety'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'GDPR Service'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Account deletion requested'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'User request'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'User request'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Invalid password'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'INVALID_PASSWORD'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'INVALID_PASSWORD'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Server error'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Failed to delete account'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Too many requests'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Deletion already in progress'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'ALREADY_DELETING'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'ALREADY_DELETING'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Account deletion cancelled'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Failed to cancel deletion'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Cancellation failed'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Cancellation failed'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Export started'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Export started'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Export failed'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Failed to export data'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'SERVER_ERROR'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Large export started'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Download failed'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Download failed'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Export not found'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Export not found'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Request timeout'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Account deletion requested'"
      },
      {
        "file": "services/__tests__/gdprService.test.ts",
        "string": "'Export completed'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'ErrorHandler'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'General Error Handling'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'TestComponent'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error occurred'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'An unexpected error occurred. Please try again.'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Silent error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'TestComponent'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Unlogged error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'TestComponent'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Custom error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'TestComponent'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Custom fallback message'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Custom fallback message'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'API Error Handling'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error occurred'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Partial API Error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error occurred'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Partial API Error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Specialized Error Handlers'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'TestComponent'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Network timeout'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Network error. Please check your connection and try again.'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Invalid input'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Please check your input and try again.'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Session expired'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Authentication failed. Please log in again.'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Access denied'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'User-Friendly Message Translation'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Network request failed'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Fetch failed'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Connection timeout'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Please check your internet connection and try again.'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Unauthorized access'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Session expired'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Your session has expired. Please log in again.'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Forbidden action'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Access denied'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Internal server error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Service unavailable'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Server error occurred. Please try again later.'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Resource not found'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Item does not exist'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'The requested resource was not found.'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Please enter a valid email address'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Please enter a valid email address'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Some random error that is very long and contains Error: prefix'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'An unexpected error occurred. Please try again.'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'An unexpected error occurred. Please try again.'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'An unexpected error occurred. Please try again.'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error Creation'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Test error message'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Test error message'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'VALIDATION_ERROR'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'VALIDATION_ERROR'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Async Function Wrapping'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'TestComponent'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Async error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'TestComponent'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'String error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'TestComponent'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error occurred'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'String error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'TestComponent'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Alert Notifications'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Test Message'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Test Message'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Test logging error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error occurred'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Test logging error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'No stack error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error occurred'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'No stack error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Complex metadata error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'ComplexTest'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error occurred'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Complex metadata error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error Context Handling'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Minimal context error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'MinimalTest'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error occurred'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Minimal context error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Null metadata error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Large context error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Integration Scenarios'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'API request failed'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Custom API error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error occurred'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'API request failed'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'The requested resource was not found.'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'First attempt fails'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'String error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'ComplexAsync'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Circular reference error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'CircularTest'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'LongErrorTest'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error occurred'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error with émojis 🚀 and spëcial chärs'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'SpecialCharsTest'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error occurred'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Error with émojis 🚀 and spëcial chärs'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'RapidErrorTest'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Alert failed'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Original error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'ErrorInErrorTest'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'NullErrorTest'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'Prototype error'"
      },
      {
        "file": "services/__tests__/errorHandler.test.ts",
        "string": "'PrototypeTest'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'EnhancedUploadService'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Singleton Pattern'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Requesting upload URL...'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Uploading to secure storage...'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Registering upload...'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Analyzing photo...'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Awaiting moderation...'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Presign failed'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Presign failed'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'S3 upload failed'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Registration failed'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Registration failed'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Upload quota exceeded'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'No image selected'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Quota service unavailable'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Quota service unavailable'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Inappropriate content'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Upload rejected: Inappropriate content'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Upload status polling timeout'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Processing photo 1/3'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Processing photo 2/3'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Processing photo 3/3'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Duplicate check failed'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'File URI to Blob Conversion'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'File read failed'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'File read failed'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Retry Upload'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'All retries failed'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'All retries failed'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Error Handling and Edge Cases'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Network timeout'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Network timeout'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Progress callback failed'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'File system error'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'File system error'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Upload not found'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Upload not found'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Invalid retry params'"
      },
      {
        "file": "services/__tests__/enhancedUploadService.test.ts",
        "string": "'Invalid retry params'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'CommunityAPI'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Hello community!'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Failed to fetch community feed:'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'New community post!'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post created successfully'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Join our pet meetup!'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Central Park'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Activity created successfully'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post content is required'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post content is required'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Failed to create community post:'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post liked successfully'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Like failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Like failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Failed to like/unlike community post:'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Like failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Great post!'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Comments fetch failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Comments fetch failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Failed to fetch post comments:'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Comments fetch failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'This is a great comment!'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Comment added successfully'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Comment content is required'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Comment content is required'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Comment creation failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Test comment'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Comment creation failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Failed to add comment to post:'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Comment creation failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Activity Participation'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Central Park'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Successfully joined activity'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Successfully left activity'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Activity operation failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Activity operation failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Failed to join activity:'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Activity operation failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post Management'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post deleted successfully'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Updated post content'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post updated successfully'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post operation failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post operation failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Failed to delete post:'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post operation failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Content Moderation'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Contains offensive language'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Content reported successfully'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Comment reported successfully'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Comment reported'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'User blocked successfully'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Moderation failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Moderation failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Failed to report content:'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Moderation failed'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'String error'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Unknown error'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Failed to fetch community feed: Unknown error'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'String error'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Unknown error'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Failed to fetch community feed: Unknown error'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Original API error'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Original API error'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Failed to fetch community feed:'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Original API error'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post created'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post created'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post with many images'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Hello world! 🌍🚀 #community @user émojis & spëcial chärs'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post created'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Operation successful'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Integration Scenarios'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post created'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Great post!'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Comment added'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Great post!'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Great post!'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Updated content'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post updated'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Updated content'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Updated content'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post deleted'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Post deleted'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Joined activity'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Left activity'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Content reported'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Contains harmful content'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'Content reported'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'User blocked'"
      },
      {
        "file": "services/__tests__/communityAPI.test.ts",
        "string": "'User blocked'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Chat Service'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Failed to send reaction'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Failed to send reaction'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Upload failed'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Upload failed'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Invalid file type'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Upload failed'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Upload failed'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'S3 upload failed'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'S3 upload failed'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Presign failed'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Presign failed'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Match not found'"
      },
      {
        "file": "services/__tests__/chatService.test.ts",
        "string": "'Match not found'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Token Management'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'HTTP Methods'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Request Interceptors'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Authorization'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Bearer test-token'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Authorization'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Request interceptor rejected'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Response Interceptors'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Unauthorized'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Server Error'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Network Error'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Request setup error'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Network Monitoring'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'UnifiedAPIClient Integration'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Resource Management'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Network monitoring error'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Singleton Instance'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Environment Configuration'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Concurrent Requests'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Authorization'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Bearer shared-token'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Authorization'"
      },
      {
        "file": "services/__tests__/apiClient.test.ts",
        "string": "'Bearer shared-token'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'API Service'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Request failed'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Request failed'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Request to /test/endpoint failed: No data returned'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Invalid API endpoint'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'API rate limit exceeded'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'X-Requested-With'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'XMLHttpRequest'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Request timeout'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Request timeout'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Unauthorized'"
      },
      {
        "file": "services/__tests__/api.test.ts",
        "string": "'Unauthorized'"
      },
      {
        "file": "services/__tests__/analyticsService.test.ts",
        "string": "'Analytics Service'"
      },
      {
        "file": "services/__tests__/analyticsService.test.ts",
        "string": "'Happy Path - Basic Tracking'"
      },
      {
        "file": "services/__tests__/analyticsService.test.ts",
        "string": "'Happy Path - Event Constants'"
      },
      {
        "file": "services/__tests__/analyticsService.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/analyticsService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/analyticsService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/analyticsService.test.ts",
        "string": "'ErrorScreen'"
      },
      {
        "file": "services/__tests__/analyticsService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/analyticsService.test.ts",
        "string": "'Integration'"
      },
      {
        "file": "services/__tests__/analyticsService.test.ts",
        "string": "'Type Safety'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Meet Buddy, a friendly and playful pup who loves to run and play all day!'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Meet Buddy, a friendly and playful pup who loves to run and play all day!'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Luna is a three-year-old Persian cat who embodies gentleness and affection. As a professional companion, she enjoys quiet indoor activities and provides the perfect cuddly presence for those seeking a serene pet experience. Her gentle nature makes her an ideal match for families or individuals looking for a calm and loving feline friend.'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'AI service unavailable'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'AI service unavailable'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Special character bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Special character bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Long input bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Long input bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Photo analysis failed'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Photo analysis failed'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Compatibility computation failed'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Compatibility computation failed'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Error Handling and Resilience'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Request timeout'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Request timeout'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'AI service is temporarily unavailable'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'AI service is temporarily unavailable'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Rate limit exceeded'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Rate limit exceeded'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Concurrent Operations'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Success bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Success2 bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Success bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Success2 bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Edge Cases and Boundary Conditions'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Extreme bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Extreme bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Unicode bio with 🐱 and 🚀'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Zero age bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Negative age bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Zero age bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Negative age bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Type Safety and Interface Compliance'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Flexible bio'"
      },
      {
        "file": "services/__tests__/aiService.test.ts",
        "string": "'Flexible bio'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'AIService - Core Tests'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'Luna is a three-year-old Persian cat who embodies gentleness and affection.'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'AI service unavailable'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'AI service unavailable'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'Buddy is an energetic dog full of life.'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'Invalid image format'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'Invalid image format'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'Compatibility calculation failed'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'Compatibility calculation failed'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'Network timeout'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'Network timeout'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'AI service is temporarily unavailable'"
      },
      {
        "file": "services/__tests__/aiService.simple.test.ts",
        "string": "'AI service is temporarily unavailable'"
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"AI API Service\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Buddy is a friendly and energetic Golden Retriever who loves to play fetch.\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Failed to generate bio\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Failed to generate bio\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Regular exercise recommended\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"High quality photo\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Good lighting\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Analysis failed\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Analysis failed\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"These pets show excellent compatibility potential.\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Neutral territory\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Supervised introduction\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Play fetch together\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Go for walks\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Initial supervision recommended\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Compatibility analysis failed\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Compatibility analysis failed\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Good compatibility potential\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Legacy compatibility failed\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Legacy compatibility failed\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Error Handling\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Network timeout\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"TimeoutError\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Network timeout\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Service Unavailable\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Service Unavailable\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Failed to generate bio\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Data Validation\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Generated bio\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "services/__tests__/ai-api.test.ts",
        "string": "\"Generated bio\""
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'AdminUsersService'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Cache Management'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Data Mapping'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Failed to fetch admin users'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'String error'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Failed to fetch admin users'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Failed to fetch admin users'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Violation of terms'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Violation of terms'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Appeal approved'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Appeal approved'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Severe violation'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Severe violation'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'User suspended via mobile admin controls'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'User reactivated via mobile admin controls'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'User banned via mobile admin controls'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Action failed'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Action failed'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Admin user action failed'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'String error'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Failed to ban user'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Admin user action failed'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Service Interface'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'Edge Cases and Error Handling'"
      },
      {
        "file": "services/__tests__/adminUsersService.test.ts",
        "string": "'José María ñoño'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'AdminAPIService'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Core Request Method'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'HTTP error! status: 404'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'User Management'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'User suspended successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Violation of terms'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Violation of terms'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'User banned successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Severe violation'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Severe violation'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'User activated successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Appeal approved'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Appeal approved'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'User not found'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Bulk moderation'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Bulk moderation'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Chat Management'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Chat blocked successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Inappropriate content'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Inappropriate content'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Chat unblocked successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Appeal approved'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Appeal approved'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Message deleted successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Violation of terms'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Violation of terms'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Hello there!'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Message approved'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Upload Management'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Upload approved successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Upload rejected successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Inappropriate content'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Please upload a different photo'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Inappropriate content'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Please upload a different photo'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Upload deleted successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Content violation'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Content violation'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Upload approved'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Good content'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Good content'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Upload deleted'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Upload deleted'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Verification Management'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Verification approved successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'All documents verified'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'All documents verified'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Verification rejected successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Documents unclear'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Please resubmit clearer images'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Documents unclear'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Please resubmit clearer images'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Analytics and System Health'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Security and Safety Moderation'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Alert resolved'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'False positive'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'False positive'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'IP blocked successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Suspicious activity'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Suspicious activity'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Potential inappropriate content'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Safe content'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Safe content'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Upload not found'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Batch approval'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Batch approval'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Billing and Subscription Management'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Subscription cancelled successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'User requested cancellation'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'User requested cancellation'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Subscription reactivated successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Services Management'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Service status updated successfully'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Error Handling and Edge Cases'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/adminAPI.test.ts",
        "string": "'HTTP error! status: 403'"
      },
      {
        "file": "services/__tests__/WebRTCService.test.ts",
        "string": "\"Initialization\""
      },
      {
        "file": "services/__tests__/WebRTCService.test.ts",
        "string": "\"Starting Calls\""
      },
      {
        "file": "services/__tests__/WebRTCService.test.ts",
        "string": "\"Permission denied\""
      },
      {
        "file": "services/__tests__/WebRTCService.test.ts",
        "string": "\"Answering Calls\""
      },
      {
        "file": "services/__tests__/WebRTCService.test.ts",
        "string": "\"Test Caller\""
      },
      {
        "file": "services/__tests__/WebRTCService.test.ts",
        "string": "\"Call Controls\""
      },
      {
        "file": "services/__tests__/WebRTCService.test.ts",
        "string": "\"Ending Calls\""
      },
      {
        "file": "services/__tests__/WebRTCService.test.ts",
        "string": "\"Test Caller\""
      },
      {
        "file": "services/__tests__/WebRTCService.test.ts",
        "string": "\"Call State Management\""
      },
      {
        "file": "services/__tests__/WebRTCService.test.ts",
        "string": "\"WebRTC Signaling\""
      },
      {
        "file": "services/__tests__/WebRTCService.simple.test.ts",
        "string": "'WebRTCService - Core Tests'"
      },
      {
        "file": "services/__tests__/WebRTCService.simple.test.ts",
        "string": "'Service Initialization'"
      },
      {
        "file": "services/__tests__/WebRTCService.simple.test.ts",
        "string": "'Call Management'"
      },
      {
        "file": "services/__tests__/WebRTCService.simple.test.ts",
        "string": "'User not available'"
      },
      {
        "file": "services/__tests__/WebRTCService.simple.test.ts",
        "string": "'User not available'"
      },
      {
        "file": "services/__tests__/WebRTCService.simple.test.ts",
        "string": "'Call Controls'"
      },
      {
        "file": "services/__tests__/WebRTCService.simple.test.ts",
        "string": "'WebRTC Signaling'"
      },
      {
        "file": "services/__tests__/WebRTCService.simple.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/WebRTCService.simple.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/WebRTCService.simple.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/WebRTCService.simple.test.ts",
        "string": "'Call not active'"
      },
      {
        "file": "services/__tests__/WebRTCService.simple.test.ts",
        "string": "'Call not active'"
      },
      {
        "file": "services/__tests__/WebRTCService.basic.test.ts",
        "string": "'WebRTCService - Basic Tests'"
      },
      {
        "file": "services/__tests__/WebRTCService.basic.test.ts",
        "string": "'Service Availability'"
      },
      {
        "file": "services/__tests__/WebRTCService.basic.test.ts",
        "string": "'Call State Management'"
      },
      {
        "file": "services/__tests__/WebRTCService.basic.test.ts",
        "string": "'Call Controls (with mock stream)'"
      },
      {
        "file": "services/__tests__/WebRTCService.basic.test.ts",
        "string": "'WebRTC Signaling'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'SecureAPIService'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Happy Path - GET Request'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Authorization'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Bearer test-token'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Happy Path - POST Request'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Happy Path - PUT Request'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Happy Path - DELETE Request'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Happy Path - Certificate Validation'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Error Handling - Retry Logic'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Persistent error'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Integration'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Bearer persistent-token'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Bearer persistent-token'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Type Safety'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Original error'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Wrapper error'"
      },
      {
        "file": "services/__tests__/SecureAPIService.test.ts",
        "string": "'Wrapper error'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'PremiumService'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Happy Path - Subscription Status'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Happy Path - Subscription Plans'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Happy Path - Checkout Session'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Happy Path - Cancel Subscription'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Subscription cancelled successfully'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Happy Path - Premium Limits'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Happy Path - Feature Access'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Happy Path - Usage Tracking'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Invalid plan ID'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Cancellation failed'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Tracking failed'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Integration'"
      },
      {
        "file": "services/__tests__/PremiumService.test.ts",
        "string": "'Type Safety'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'OfflineSyncService'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Singleton Pattern'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Queue Management - API Calls'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Queue Management - User Actions'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Sync Status'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Manual Sync'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Cannot sync while offline'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Failed Items Management'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Network Monitoring'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Queue Processing'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Queue Item Processing'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Unsupported HTTP method: PATCH'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Event Listeners'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Listener error'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Background Sync'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Persistence'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Storage full'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Error Handling and Logging'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'API call queued for offline sync'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Queue processing completed'"
      },
      {
        "file": "services/__tests__/OfflineSyncService.test.ts",
        "string": "'Failed to process queue item'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'MatchingService'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Similar energy levels'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Compatible personalities'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Perfect match!'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Shared interests'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Invalid pet ID'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Invalid pet ID'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Hey! Want to meet up?'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Failed to load matches'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Failed to load matches'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Similar energy levels'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Compatible sizes'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Shared personality traits'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Pets not found'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Pets not found'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Invalid species filter'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Invalid species filter'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Service unavailable'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Service unavailable'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Integration scenarios'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Great match!'"
      },
      {
        "file": "services/__tests__/MatchingService.test.ts",
        "string": "'Perfect size match'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'LeaderboardService'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Constructor and Initialization'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Bearer test-token'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Internal Server Error'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'HTTP 500: Internal Server Error'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Current User'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Most matches this period'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Most likes received'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'First Match'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Got your first match!'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Speed Dater'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Got a new match'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Got a new match'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Bad Request'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'HTTP 400: Bad Request'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Nearby Owner'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'First Match'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Got your first match!'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Super Liker'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Send 100 super likes'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'HTTP 403: Forbidden'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Authentication'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Authentication required for leaderboard access'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Bearer custom-token'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Cache Management'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Error Handling and Logging'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Network failure'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Failed to get leaderboard'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'Invalid JSON'"
      },
      {
        "file": "services/__tests__/LeaderboardService.test.ts",
        "string": "'HTTP 404: Not Found'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'ImageCompressionService'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Single Image Compression'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Compression failed'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Failed to compress image'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'File not found'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Failed to compress image'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Batch Image Compression'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Failed to compress'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Optimal Compression Settings'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Specialized Compression Methods'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Image Validation'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Image file does not exist'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Image file is too large (max 20MB)'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Unsupported image format'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Permission denied'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Failed to validate image'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Temp File Cleanup'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Delete failed'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Image Dimensions'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Invalid image'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'File Size Formatting'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Edge Cases and Error Handling'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Compression failed'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Compression failed'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Starting image compression'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Image compression completed'"
      },
      {
        "file": "services/__tests__/ImageCompressionService.test.ts",
        "string": "'Image compression failed'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'BiometricService'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Happy Path - Check Biometric Support'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Happy Path - Authenticate'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Authenticate to access your account'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Authenticate to access your account'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Happy Path - Enable Biometric'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Happy Path - Disable Biometric'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Happy Path - Check Biometric Status'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Happy Path - Get Biometric Type Name'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Biometric Authentication'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Biometric authentication not supported on this device'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'No biometric authentication methods enrolled'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'User cancelled'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'User cancelled'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Hardware check failed'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Authentication failed'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Delete failed'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Read failed'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Error Handling - Enable/Disable'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Storage failed'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Authenticate to access PawfectMatch'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Integration'"
      },
      {
        "file": "services/__tests__/BiometricService.test.ts",
        "string": "'Type Safety'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'AuthService'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Secure Storage'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Keychain error'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Login failed'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Token Management'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Token expired'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Biometric Authentication'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Session Management'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'User Management'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Updated Name'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Updated Name'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Password Reset'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Reset email sent'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Password reset successful'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Authentication Check'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "services/__tests__/AuthService.test.ts",
        "string": "'Keychain error'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'AccessibilityService'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Singleton Pattern'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Configuration Management'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Accessibility Checks'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Touch Target Requirements'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Accessibility Announcements'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Button pressed'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Announcement failed'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Accessibility Focus'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Focus failed'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Text Size Multipliers'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Color Schemes'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Contrast Requirements'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Event Listeners'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Listener error'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Init failed'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Listener setup failed'"
      },
      {
        "file": "services/__tests__/AccessibilityService.test.ts",
        "string": "'Platform Differences'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Error loading verification status'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'ID Verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Government-issued ID verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'ID Verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Pet Owner Verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Pet ownership confirmed'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Pet Owner Verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Vet Verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Veterinary records verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Vet Verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Shelter Verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Rescue organization verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Shelter Verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Basic Account'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'ID Verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Pet Owner Verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Vet Verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Organization Verified'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Get Started'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'In Progress'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Under Review'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Coming Soon'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Verification submission will be available soon.'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Coming Soon'"
      },
      {
        "file": "screens/VerificationCenterScreen.tsx",
        "string": "'Verification retry will be available soon.'"
      },
      {
        "file": "screens/TemplateScreen.tsx",
        "string": "'Description 1'"
      },
      {
        "file": "screens/TemplateScreen.tsx",
        "string": "'Description 2'"
      },
      {
        "file": "screens/TemplateScreen.tsx",
        "string": "'Description 3'"
      },
      {
        "file": "screens/TemplateScreen.tsx",
        "string": "'Template screen button pressed'"
      },
      {
        "file": "screens/TemplateScreen.tsx",
        "string": "'Template Screen'"
      },
      {
        "file": "screens/SwipeScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/StoriesScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/StoriesScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/StoriesScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/StoriesScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/StoriesScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/StoriesScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/StoriesScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/StoriesScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/StoriesScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/StoriesScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/StoriesScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Email Notifications\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Receive notifications via email\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Push Notifications\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Receive push notifications\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"New Matches\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Get notified when you have a new match\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Receive notifications for new messages\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Preferences\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Coming soon\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Edit Profile\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Update your personal information\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Privacy Settings\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Control your privacy and visibility\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Subscription\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Manage your premium subscription\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Help & Support\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Get help and contact support\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Send Feedback\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Share your thoughts and suggestions\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"About PawfectMatch\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"App version and information\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Export My Data\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Download a copy of your data (GDPR)\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Sign out of your account\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Request Account Deletion\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Cancel your pending deletion request\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Permanently delete your account (30-day grace period)\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Failed to update settings:\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Failed to update settings. Please try again.\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Coming Soon\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Search settings\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Search settings API action\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Preferences\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/SettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/SafetyCenterScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/SafetyCenterScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/SafetyCenterScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/SafetyCenterScreen.tsx",
        "string": "\"Emergency Mode Active\""
      },
      {
        "file": "screens/SafetyCenterScreen.tsx",
        "string": "\"Emergency Mode Available\""
      },
      {
        "file": "screens/SafetyCenterScreen.tsx",
        "string": "\"Enhanced safety features are enabled\""
      },
      {
        "file": "screens/SafetyCenterScreen.tsx",
        "string": "\"Activate for additional safety measures\""
      },
      {
        "file": "screens/SafetyCenterScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/SafetyCenterScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/SafetyCenterScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/SafetyCenterScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"ResetPassword\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Enter new password\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Confirm new password\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Resetting...\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Reset Password\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ResetPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/RegisterScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/RegisterScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/RegisterScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/RegisterScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/RegisterScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/RegisterScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/RegisterScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/RegisterScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ProfileScreen.tsx",
        "string": "\"Edit profile\""
      },
      {
        "file": "screens/ProfileScreen.tsx",
        "string": "\"Loaded user profile for editing:\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"PrivacySettings\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Who can see my profile\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Control who can view your profile and pet information\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Matches Only\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Show online status\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Let others know when you are active on the app\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Show distance\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Display how far you are from other users\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Show last active time\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Show when you were last active on the app\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Who can message me\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Control who can send you messages\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Matches Only\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Show read receipts\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Let others know when you have read their messages\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Incognito Mode\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Browse profiles without appearing in others'"
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Location sharing\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Share your location for better matching\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Data sharing for improvements\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Help us improve the app by sharing anonymized usage data\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Analytics tracking\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Allow analytics to help us understand app usage\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Blocked Users\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Manage users you have blocked\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"BlockedUsers\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Data Download\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Download all your personal data (GDPR)\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Data Export Initiated\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Failed to initiate data export:\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Failed to initiate data export. Please try again.\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/PrivacySettingsScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/PremiumSuccessScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/PremiumSuccessScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/PremiumSuccessScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/PremiumSuccessScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/PremiumDemoScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/PremiumDemoScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/PremiumDemoScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/PremiumDemoScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/PremiumDemoScreen.tsx",
        "string": "\"Interactive Buttons\""
      },
      {
        "file": "screens/PremiumDemoScreen.tsx",
        "string": "\"Immersive Cards\""
      },
      {
        "file": "screens/PremiumDemoScreen.tsx",
        "string": "\"Motion System\""
      },
      {
        "file": "screens/PremiumDemoScreen.tsx",
        "string": "\"Glass Morphism\""
      },
      {
        "file": "screens/PremiumCancelScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"New Matches\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Get notified when you have new matches\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"New Messages\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Receive notifications for new messages\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Profile Likes\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Notifications when someone likes your profile\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Super Likes\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Special notifications for Super Likes\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Premium Features\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Updates about premium features and benefits\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Safety Alerts\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Important safety and security notifications\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Marketing & Updates\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"News, promotions, and app updates\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Events & Activities\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Notifications about events and group activities\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Notification preferences saved successfully!\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Matches & Likes\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Push Notifications\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Push notification settings would be managed by device settings.\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Quiet Hours\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Quiet hours feature coming soon!\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"Test Notification\""
      },
      {
        "file": "screens/NotificationPreferencesScreen.tsx",
        "string": "\"A test notification would be sent to your device.\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"A friendly and energetic golden retriever who loves playing fetch and going on long walks.\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"A friendly and energetic golden retriever who loves playing fetch and going on long walks.\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"San Francisco, CA\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"Sarah Johnson\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"Good with kids\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"House trained\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"Button Pressed\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"You swiped left on Luna!\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"Swipe Right\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"You swiped right on Luna!\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"You swiped up on Luna!\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"Loading Complete\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"The loading animation has finished!\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"New Components Test\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"Testing the new architecture\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"Loading Test\""
      },
      {
        "file": "screens/NewComponentsTestScreen.tsx",
        "string": "\"Performance Test Complete\""
      },
      {
        "file": "screens/MyPetsScreen.tsx",
        "string": "'Pet like action'"
      },
      {
        "file": "screens/ModernSwipeScreen.tsx",
        "string": "\"Find your perfect match\""
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Your pet profile has been created successfully.\""
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Extra Large\""
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Lost & Found\""
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Good with kids\""
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Good with other pets\""
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"House trained\""
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Leash trained\""
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Create Pet Profile\""
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Share your pet with the community\""
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Enter your pet'"
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Enter breed\""
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Describe your pet'"
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Creating Profile...\""
      },
      {
        "file": "screens/ModernCreatePetScreen.tsx",
        "string": "\"Create Pet Profile\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"User Reports\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Review and moderate reported content\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"User Reports\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Reports moderation coming soon!\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Content Moderation\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Review photos and profiles for violations\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Content Moderation\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Content moderation coming soon!\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Message Monitoring\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Monitor chat messages for inappropriate content\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"User Management\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Manage user accounts and permissions\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"User Management\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"User management coming soon!\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Moderation Analytics\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"View moderation statistics and reports\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Moderation analytics coming soon!\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Moderation Settings\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Configure moderation rules and thresholds\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Moderation settings coming soon!\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Emergency moderation mode coming soon!\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Community guidelines coming soon!\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Moderator training coming soon!\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/ModerationToolsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/MigrationExampleScreen.tsx",
        "string": "\"New Architecture\""
      },
      {
        "file": "screens/MigrationExampleScreen.tsx",
        "string": "\"Legacy Architecture\""
      },
      {
        "file": "screens/MigrationExampleScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"MemoryWeave\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/MemoryWeaveScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/MatchesScreen.tsx",
        "string": "\"Filter matches button pressed\""
      },
      {
        "file": "screens/MatchesScreen.tsx",
        "string": "\"Search matches button pressed\""
      },
      {
        "file": "screens/MatchesScreen.tsx",
        "string": "\"Filter API action triggered\""
      },
      {
        "file": "screens/MatchesScreen.tsx",
        "string": "\"Search API action triggered\""
      },
      {
        "file": "screens/MapScreen.tsx",
        "string": "\"ARScentTrails\""
      },
      {
        "file": "screens/MapScreen.tsx",
        "string": "\"Pet Activity Map\""
      },
      {
        "file": "screens/MapScreen.tsx",
        "string": "\"Real-time locations\""
      },
      {
        "file": "screens/MapScreen.tsx",
        "string": "\"ARScentTrails\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"ManageSubscription\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"Error loading subscription data:\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"Failed to load subscription data\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"Cancel Subscription\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"Are you sure you want to cancel your premium subscription? You will lose access to premium features at the end of your billing period.\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"Content-Type\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"Your subscription has been canceled. You will retain access until the end of your current billing period.\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"Failed to cancel subscription\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"Failed to cancel subscription. Please try again or contact support.\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"Cancel subscription error:\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"Restore Purchases\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"No previous purchases found.\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"Failed to restore purchases.\""
      },
      {
        "file": "screens/ManageSubscriptionScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/LoginScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/LoginScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/LoginScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/LoginScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/LoginScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/LoginScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/LoginScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/LoginScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/LoginScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/LoginScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/LoginScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/LiveViewerScreen.tsx",
        "string": "\"Live reaction received\""
      },
      {
        "file": "screens/LiveBrowseScreen.tsx",
        "string": "\"Live Stream\""
      },
      {
        "file": "screens/HomeScreen.tsx",
        "string": "\"PawfectMatch\""
      },
      {
        "file": "screens/HomeScreen.tsx",
        "string": "\"Upgrade Now\""
      },
      {
        "file": "screens/GoLiveScreen.tsx",
        "string": "\"Failed to start live stream\""
      },
      {
        "file": "screens/GoLiveScreen.tsx",
        "string": "\"Failed to start live stream\""
      },
      {
        "file": "screens/GoLiveScreen.tsx",
        "string": "\"Failed to stop live stream\""
      },
      {
        "file": "screens/GoLiveScreen.tsx",
        "string": "\"Feature Unavailable\""
      },
      {
        "file": "screens/GoLiveScreen.tsx",
        "string": "\"Live streaming is not enabled yet.\""
      },
      {
        "file": "screens/GoLiveScreen.tsx",
        "string": "\"Live from PawfectMatch\""
      },
      {
        "file": "screens/GoLiveScreen.tsx",
        "string": "\"Live stream initiated\""
      },
      {
        "file": "screens/GoLiveScreen.tsx",
        "string": "\"Live stream error\""
      },
      {
        "file": "screens/GoLiveScreen.tsx",
        "string": "\"Failed to start streaming\""
      },
      {
        "file": "screens/GoLiveScreen.tsx",
        "string": "\"Unknown error\""
      },
      {
        "file": "screens/GoLiveScreen.tsx",
        "string": "\"Failed to end live stream\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"ForgotPassword\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Send Reset Link\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/ForgotPasswordScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/EditProfileScreen.tsx",
        "string": "\"Profile updated successfully!\""
      },
      {
        "file": "screens/EditProfileScreen.tsx",
        "string": "\"Enter first name\""
      },
      {
        "file": "screens/EditProfileScreen.tsx",
        "string": "\"Enter last name\""
      },
      {
        "file": "screens/EditProfileScreen.tsx",
        "string": "\"Enter email\""
      },
      {
        "file": "screens/EditProfileScreen.tsx",
        "string": "\"Enter phone number\""
      },
      {
        "file": "screens/EditProfileScreen.tsx",
        "string": "\"Enter your location\""
      },
      {
        "file": "screens/EditProfileScreen.tsx",
        "string": "\"Tell us about yourself and what you'"
      },
      {
        "file": "screens/DeactivateAccountScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/DeactivateAccountScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/DeactivateAccountScreen.tsx",
        "string": "\"Please tell us more...\""
      },
      {
        "file": "screens/DeactivateAccountScreen.tsx",
        "string": "\"Deactivating...\""
      },
      {
        "file": "screens/DeactivateAccountScreen.tsx",
        "string": "\"Deactivate Account\""
      },
      {
        "file": "screens/DeactivateAccountScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/CreatePetScreen.tsx",
        "string": "'Create Pet Profile'"
      },
      {
        "file": "screens/ComponentTestScreen.tsx",
        "string": "\"Test Button\""
      },
      {
        "file": "screens/ComponentTestScreen.tsx",
        "string": "\"Button pressed!\""
      },
      {
        "file": "screens/CommunityScreen.tsx",
        "string": "\"Error liking post:\""
      },
      {
        "file": "screens/CommunityScreen.tsx",
        "string": "'Post reaction'"
      },
      {
        "file": "screens/CommunityScreen.tsx",
        "string": "\"Error adding comment:\""
      },
      {
        "file": "screens/CommunityScreen.tsx",
        "string": "\"Failed to add comment. Please try again.\""
      },
      {
        "file": "screens/CommunityScreen.tsx",
        "string": "\"Report Post\""
      },
      {
        "file": "screens/CommunityScreen.tsx",
        "string": "\"Why are you reporting this post?\""
      },
      {
        "file": "screens/CommunityScreen.tsx",
        "string": "\"Inappropriate\""
      },
      {
        "file": "screens/CommunityScreen.tsx",
        "string": "\"User has been blocked.\""
      },
      {
        "file": "screens/CommunityScreen.tsx",
        "string": "\"Failed to block user.\""
      },
      {
        "file": "screens/CommunityScreen.tsx",
        "string": "\"Failed to join activity.\""
      },
      {
        "file": "screens/CommunityScreen.tsx",
        "string": "\"Create post button pressed\""
      },
      {
        "file": "screens/ChatScreen.tsx",
        "string": "\"Last seen recently\""
      },
      {
        "file": "screens/BlockedUsersScreen.tsx",
        "string": "\"Unblock User\""
      },
      {
        "file": "screens/BlockedUsersScreen.tsx",
        "string": "\"Are you sure you want to unblock this user?\""
      },
      {
        "file": "screens/BlockedUsersScreen.tsx",
        "string": "\"Unblock User\""
      },
      {
        "file": "screens/BlockedUsersScreen.tsx",
        "string": "\"Failed to unblock user:\""
      },
      {
        "file": "screens/BlockedUsersScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/AdvancedFiltersScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/AdvancedFiltersScreen.tsx",
        "string": "\"Pet Characteristics\""
      },
      {
        "file": "screens/AdvancedFiltersScreen.tsx",
        "string": "\"Size Preferences\""
      },
      {
        "file": "screens/AdvancedFiltersScreen.tsx",
        "string": "\"Energy Level\""
      },
      {
        "file": "screens/AdvancedFiltersScreen.tsx",
        "string": "\"Special Considerations\""
      },
      {
        "file": "screens/AdvancedFiltersScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/AdvancedFiltersScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Terms of Service\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Rules and guidelines for using PawfectMatch\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Terms of Service\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Terms document coming soon!\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Privacy Policy\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"How we collect and use your data\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Privacy Policy\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Privacy policy document coming soon!\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"GDPR Rights\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Your data protection rights under GDPR\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"GDPR Rights\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"GDPR information coming soon!\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Cookie Policy\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Information about our use of cookies\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Cookie Policy\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Cookie policy coming soon!\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/AboutTermsPrivacyScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/ARScentTrailsScreen.tsx",
        "string": "\"Permissions Required\""
      },
      {
        "file": "screens/ARScentTrailsScreen.tsx",
        "string": "\"Camera and location permissions are required\""
      },
      {
        "file": "screens/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Permission needed\""
      },
      {
        "file": "screens/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Please grant photo library access\""
      },
      {
        "file": "screens/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Permission needed\""
      },
      {
        "file": "screens/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Please grant camera access\""
      },
      {
        "file": "screens/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Analysis Failed\""
      },
      {
        "file": "screens/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Analyzing...\""
      },
      {
        "file": "screens/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Analyze Photo\""
      },
      {
        "file": "screens/AIPhotoAnalyzerScreen.tsx",
        "string": "\"No breed detected\""
      },
      {
        "file": "screens/AICompatibilityScreen.tsx",
        "string": "\"Failed to load pets\""
      },
      {
        "file": "screens/AICompatibilityScreen.tsx",
        "string": "\"Failed to load pets\""
      },
      {
        "file": "screens/AICompatibilityScreen.tsx",
        "string": "\"Selection Required\""
      },
      {
        "file": "screens/AICompatibilityScreen.tsx",
        "string": "\"Please select two pets to analyze compatibility.\""
      },
      {
        "file": "screens/AICompatibilityScreen.tsx",
        "string": "\"Analysis failed\""
      },
      {
        "file": "screens/AICompatibilityScreen.tsx",
        "string": "\"Excellent Match!\""
      },
      {
        "file": "screens/AICompatibilityScreen.tsx",
        "string": "\"Very Good Match\""
      },
      {
        "file": "screens/AICompatibilityScreen.tsx",
        "string": "\"Good Compatibility\""
      },
      {
        "file": "screens/AICompatibilityScreen.tsx",
        "string": "\"Fair Compatibility\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Enter your pet'"
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Describe your pet'"
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Generating...\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Generate Bio\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/AIBioScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/AIBioScreen.refactored.tsx",
        "string": "\"Select pet photo\""
      },
      {
        "file": "screens/AIBioScreen.refactored.tsx",
        "string": "\"Generate AI bio\""
      },
      {
        "file": "screens/AIBioScreen.refactored.tsx",
        "string": "\"Generating...\""
      },
      {
        "file": "screens/AIBioScreen.refactored.tsx",
        "string": "\"Generate Bio\""
      },
      {
        "file": "screens/AIBioScreen.refactored.tsx",
        "string": "\"Create new bio\""
      },
      {
        "file": "screens/settings/ProfileSummarySection.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/settings/ProfileSummarySection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/settings/ProfileSummarySection.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/settings/ProfileSummarySection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/settings/ProfileSummarySection.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/settings/ProfileSummarySection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/settings/ProfileSummarySection.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/settings/ProfileSummarySection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/settings/NotificationSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/settings/DangerZoneSection.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/settings/DangerZoneSection.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/settings/DangerZoneSection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/settings/DangerZoneSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/settings/DangerZoneSection.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/settings/DangerZoneSection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/settings/DangerZoneSection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/settings/DangerZoneSection.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/settings/DangerZoneSection.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/settings/DangerZoneSection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/settings/AccountSettingsSection.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/settings/AccountSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/settings/AccountSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/settings/AccountSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/settings/AccountSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/settings/AccountSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/settings/AccountSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/settings/AccountSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/settings/AccountSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/settings/AccountSettingsSection.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/settings/AccountSettingsSection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/profile/components/ProfileStatsSection.tsx",
        "string": "\"Loaded stats:\""
      },
      {
        "file": "screens/profile/components/ProfileStatsSection.tsx",
        "string": "'ProfileStatsSection'"
      },
      {
        "file": "screens/profile/components/ProfileSettingsSection.tsx",
        "string": "'Notifications'"
      },
      {
        "file": "screens/profile/components/ProfileSettingsSection.tsx",
        "string": "\"Visible to others\""
      },
      {
        "file": "screens/profile/components/ProfileSettingsSection.tsx",
        "string": "\"Hidden from others\""
      },
      {
        "file": "screens/profile/components/ProfileSettingsSection.tsx",
        "string": "\"Visible to others\""
      },
      {
        "file": "screens/profile/components/ProfileSettingsSection.tsx",
        "string": "\"Hidden from others\""
      },
      {
        "file": "screens/profile/components/ProfileSettingsSection.tsx",
        "string": "\"Notifications\""
      },
      {
        "file": "screens/profile/components/ProfileSettingsSection.tsx",
        "string": "'SettingsSection'"
      },
      {
        "file": "screens/profile/components/ProfileSettingsSection.tsx",
        "string": "'ProfileSettingsSection'"
      },
      {
        "file": "screens/profile/components/ProfileMenuSection.tsx",
        "string": "\"Add New Pet\""
      },
      {
        "file": "screens/profile/components/ProfileMenuSection.tsx",
        "string": "\"Help & Support\""
      },
      {
        "file": "screens/profile/components/ProfileMenuSection.tsx",
        "string": "\"Help center coming soon!\""
      },
      {
        "file": "screens/profile/components/ProfileMenuSection.tsx",
        "string": "\"PawfectMatch v1.0.0\""
      },
      {
        "file": "screens/profile/components/ProfileMenuSection.tsx",
        "string": "\"Menu item action failed:\""
      },
      {
        "file": "screens/profile/components/ProfileMenuSection.tsx",
        "string": "'ProfileMenuSection'"
      },
      {
        "file": "screens/profile/components/ProfileHeaderSection.tsx",
        "string": "\"Loaded user profile:\""
      },
      {
        "file": "screens/profile/components/ProfileHeaderSection.tsx",
        "string": "'ProfileHeaderSection'"
      },
      {
        "file": "screens/premium/SubscriptionSuccessScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/premium/SubscriptionSuccessScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/SubscriptionSuccessScreen.tsx",
        "string": "\"Subscription success tracked\""
      },
      {
        "file": "screens/premium/SubscriptionSuccessScreen.tsx",
        "string": "\"Failed to track subscription success:\""
      },
      {
        "file": "screens/premium/SubscriptionSuccessScreen.tsx",
        "string": "\"SubscriptionManager\""
      },
      {
        "file": "screens/premium/SubscriptionSuccessScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/SubscriptionSuccessScreen.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/premium/SubscriptionSuccessScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/premium/SubscriptionSuccessScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/premium/SubscriptionSuccessScreen.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/premium/SubscriptionSuccessScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/SubscriptionSuccessScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"EXPO_PUBLIC_API_BASE_URL\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Content-Type\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Failed to create checkout session\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"EXPO_PUBLIC_API_BASE_URL\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Content-Type\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Failed to fetch subscription data:\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Failed to load subscription data. Please try again.\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Cancel Subscription\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Are you sure you want to cancel your subscription? You can continue to use premium features until the end of your billing period.\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Yes, Cancel\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"EXPO_PUBLIC_API_BASE_URL\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Content-Type\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Subscription Canceled\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Your subscription has been canceled. You can continue using premium features until the end of your current billing period.\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Failed to cancel subscription:\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Failed to cancel your subscription. Please try again later.\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"EXPO_PUBLIC_API_BASE_URL\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Content-Type\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Subscription Reactivated\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Your subscription has been successfully reactivated.\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Failed to reactivate subscription:\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Failed to reactivate your subscription. Please try again later.\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Failed to update payment method:\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Failed to update payment method. Please try again later.\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[600]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[600]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[600]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/premium/SubscriptionManagerScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Subscribe Now\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Select Plan\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[600]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/premium/PremiumScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/premium/__tests__/PremiumScreen.test.tsx",
        "string": "\"PremiumScreen\""
      },
      {
        "file": "screens/premium/__tests__/PremiumScreen.test.tsx",
        "string": "\"User Interaction\""
      },
      {
        "file": "screens/premium/__tests__/PremiumScreen.test.tsx",
        "string": "\"Subscription Flow\""
      },
      {
        "file": "screens/premium/__tests__/PremiumScreen.test.tsx",
        "string": "\"Feature Display\""
      },
      {
        "file": "screens/premium/__tests__/PremiumScreen.test.tsx",
        "string": "\"Current Subscription\""
      },
      {
        "file": "screens/premium/__tests__/PremiumScreen.test.tsx",
        "string": "\"Accessibility\""
      },
      {
        "file": "screens/premium/__tests__/PremiumScreen.test.tsx",
        "string": "\"Loading States\""
      },
      {
        "file": "screens/premium/__tests__/PremiumScreen.test.tsx",
        "string": "\"Error Handling\""
      },
      {
        "file": "screens/onboarding/WelcomeScreen.tsx",
        "string": "\"Error saving onboarding status:\""
      },
      {
        "file": "screens/onboarding/WelcomeScreen.tsx",
        "string": "\"Start Matching! 🚀\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"PreferencesSetup\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"PetProfileSetup\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"Theme.colors.primary[700]\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"Theme.colors.secondary[600]\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "screens/onboarding/UserIntentScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"PreferencesSetup\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Missing Information\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Please select at least one species you'"
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Missing Information\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Please select at least one intent.\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Saving preferences:\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Failed to save preferences. Please try again.\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Push Notifications\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Get notified instantly\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Email Updates\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Weekly summaries and important updates\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"New Matches\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"When you get a new match\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"New Messages\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"When someone messages you\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/onboarding/PreferencesSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Tiny (0-10 lbs)\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Small (10-25 lbs)\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Medium (25-55 lbs)\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Large (55-85 lbs)\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Extra Large (85+ lbs)\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Open to All\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"PetProfileSetup\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Missing Information\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Please fill in all required fields to continue.\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Creating pet profile:\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"PreferencesSetup\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Failed to create pet profile. Please try again.\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Tell us more about your pet'"
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Spayed/Neutered\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Microchipped\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/onboarding/PetProfileSetupScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/live/LiveStreamViewerScreen.tsx",
        "string": "\"Type a message...\""
      },
      {
        "file": "screens/live/LiveStreamPublisherScreen.tsx",
        "string": "'End Live Stream'"
      },
      {
        "file": "screens/live/LiveStreamPublisherScreen.tsx",
        "string": "'Are you sure you want to end the stream?'"
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Failed to load leaderboard:\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Failed to load leaderboard\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Failed to load user rank:\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Failed to refresh data:\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Failed to load initial data:\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Failed to load leaderboard data\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Failed to load categories:\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Failed to load more entries:\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/leaderboard/LeaderboardScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/calling/IncomingCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/IncomingCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/IncomingCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/IncomingCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/IncomingCallScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/calling/IncomingCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/IncomingCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/IncomingCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/IncomingCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/IncomingCallScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/calling/IncomingCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Connecting...\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/ActiveCallScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/calling/__tests__/SimpleTest.test.tsx",
        "string": "\"Simple Test\""
      },
      {
        "file": "screens/calling/__tests__/IncomingCallScreen.test.tsx",
        "string": "\"Animated.View\""
      },
      {
        "file": "screens/calling/__tests__/IncomingCallScreen.test.tsx",
        "string": "\"Animated.Text\""
      },
      {
        "file": "screens/calling/__tests__/IncomingCallScreen.test.tsx",
        "string": "\"IncomingCallScreen imported:\""
      },
      {
        "file": "screens/calling/__tests__/IncomingCallScreen.test.tsx",
        "string": "\"IncomingCallScreen:\""
      },
      {
        "file": "screens/calling/__tests__/IncomingCallScreen.test.tsx",
        "string": "\"LinearGradient\""
      },
      {
        "file": "screens/calling/__tests__/IncomingCallScreen.test.tsx",
        "string": "\"Test Caller\""
      },
      {
        "file": "screens/calling/__tests__/IncomingCallScreen.test.tsx",
        "string": "\"IncomingCallScreen\""
      },
      {
        "file": "screens/calling/__tests__/IncomingCallScreen.test.tsx",
        "string": "\"Incoming Call\""
      },
      {
        "file": "screens/calling/__tests__/IncomingCallScreen.test.tsx",
        "string": "\"Test Caller\""
      },
      {
        "file": "screens/calling/__tests__/IncomingCallScreen.test.tsx",
        "string": "\"PawfectMatch\""
      },
      {
        "file": "screens/calling/__tests__/IncomingCallScreen.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/calling/__tests__/ActiveCallScreen.test.tsx",
        "string": "\"LinearGradient\""
      },
      {
        "file": "screens/calling/__tests__/ActiveCallScreen.test.tsx",
        "string": "\"Test Caller\""
      },
      {
        "file": "screens/calling/__tests__/ActiveCallScreen.test.tsx",
        "string": "\"ActiveCallScreen\""
      },
      {
        "file": "screens/calling/__tests__/ActiveCallScreen.test.tsx",
        "string": "\"Test Caller\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Permission needed\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"We need camera roll permissions to analyze your pet photo\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Error picking image:\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Failed to pick image\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Permission needed\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"We need camera permissions to take a photo\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Error taking photo:\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Failed to take photo\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Please select an image first\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Healthy appearance\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Bright and alert\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Good stance\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Appears energetic\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Well-groomed\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Photo analysis completed\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Photo analysis failed:\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Mixed Breed\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Healthy appearance\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Bright and alert\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Good stance\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Appears energetic\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Well-groomed\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Great photo quality!\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Consider adding more personality shots\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Try different lighting conditions\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Analysis History\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/ai/AIPhotoAnalyzerScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"AICompatibility\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Failed to load pets:\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Both are playful\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Similar energy levels\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Compatible sizes\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Age difference\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Different play styles\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Gradual introduction\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Supervised playtime\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Monitor interactions\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Both pets share similar temperaments and energy levels, making them well-suited for playdates and potential adoption.\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Introduce them gradually in a neutral environment\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Monitor their interactions closely during initial meetings\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Consider their individual needs and preferences\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Compatibility analysis completed\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Compatibility analysis failed:\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Compatible personalities\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Similar activity levels\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Different play preferences\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Supervised introduction\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Gradual socialization\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"These pets show promising compatibility with some areas that need attention.\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Start with short supervised interactions\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Pay attention to body language\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Respect their individual boundaries\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Selection Required\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Please select both pets to analyze compatibility\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Invalid Selection\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Please select two different pets\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Analysis History\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Select Pet A\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Select Pet B\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/ai/AICompatibilityScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/ai/photoanalyzer/PhotoUploadSection.tsx",
        "string": "\"Permission needed\""
      },
      {
        "file": "screens/ai/photoanalyzer/PhotoUploadSection.tsx",
        "string": "\"We need camera roll permissions to analyze your pet photo\""
      },
      {
        "file": "screens/ai/photoanalyzer/PhotoUploadSection.tsx",
        "string": "\"Failed to pick image\""
      },
      {
        "file": "screens/ai/photoanalyzer/PhotoUploadSection.tsx",
        "string": "\"Permission needed\""
      },
      {
        "file": "screens/ai/photoanalyzer/PhotoUploadSection.tsx",
        "string": "\"We need camera permissions to take a photo\""
      },
      {
        "file": "screens/ai/photoanalyzer/PhotoUploadSection.tsx",
        "string": "\"Failed to take photo\""
      },
      {
        "file": "screens/ai/photoanalyzer/PhotoUploadSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ai/photoanalyzer/PhotoUploadSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ai/photoanalyzer/PhotoUploadSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ai/photoanalyzer/PhotoUploadSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/ai/photoanalyzer/AnalysisResultsSection.tsx",
        "string": "\"Excellent for matching!\""
      },
      {
        "file": "screens/ai/photoanalyzer/AnalysisResultsSection.tsx",
        "string": "\"Good matching potential\""
      },
      {
        "file": "screens/ai/photoanalyzer/AnalysisResultsSection.tsx",
        "string": "\"Consider improving photos\""
      },
      {
        "file": "screens/ai/compatibility/AnalysisResultsSection.tsx",
        "string": "\"Excellent Match!\""
      },
      {
        "file": "screens/ai/compatibility/AnalysisResultsSection.tsx",
        "string": "\"Good Compatibility\""
      },
      {
        "file": "screens/ai/compatibility/AnalysisResultsSection.tsx",
        "string": "\"Moderate Compatibility\""
      },
      {
        "file": "screens/ai/compatibility/AnalysisResultsSection.tsx",
        "string": "\"Low Compatibility\""
      },
      {
        "file": "screens/ai/compatibility/AnalysisResultsSection.tsx",
        "string": "\"Personality\""
      },
      {
        "file": "screens/ai/compatibility/AnalysisResultsSection.tsx",
        "string": "\"Activity Level\""
      },
      {
        "file": "screens/ai/compatibility/AnalysisResultsSection.tsx",
        "string": "\"Social Behavior\""
      },
      {
        "file": "screens/ai/compatibility/AnalysisResultsSection.tsx",
        "string": "\"Environment\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Failed to load pet details:\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Failed to load pet details\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Change Status\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Coming Soon\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Application review feature coming soon!\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Edit pet details coming soon!\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[600]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/PetDetailsScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"CreateListing\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Good with kids\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Good with other pets\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Independent\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Affectionate\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Missing Information\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Please fill in all required fields.\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Your pet listing has been created successfully.\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Failed to create listing:\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Failed to create listing. Please try again.\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Photo upload feature coming soon!\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Enter breed\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Tell potential adopters about your pet'"
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.primary[600]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/adoption/CreateListingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"ApplicationReview\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Failed to load application:\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Failed to load application details\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Update Application Status\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Failed to update application status:\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Failed to update application status\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"No notes added yet. Add your observations about this applicant.\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[600]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[600]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/ApplicationReviewScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"AdoptionManager\""
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"Unknown Pet\""
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"Pending Applicant\""
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"ApplicationReview\""
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"View Details\""
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"ApplicationReview\""
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"Adoption Manager\""
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"CreateListing\""
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"No pets listed yet\""
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"Start by adding your first pet for adoption. It'"
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"No applications yet\""
      },
      {
        "file": "screens/adoption/AdoptionManagerScreen.tsx",
        "string": "\"Once people start applying for your pets, you'"
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"AdoptionContract\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Contract Generated\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"The adoption contract has been generated and sent to both parties for review and signature.\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"View Contract\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"View contract\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Send for Signature\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Failed to generate contract. Please try again.\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Contract Sent\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Spay/Neuter Required\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Pet must be spayed/neutered within 6 months\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Vaccination Updates Required\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Keep vaccinations current per vet schedule\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Microchip Required\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Pet must be microchipped for identification\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Return Policy Agreement\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Pet must be returned to original owner if unable to care for it\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Home Visit Required\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Allow home visit before/after adoption\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Follow-up Check Required\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Allow follow-up contact within first year\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Phone Number\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Enter any special conditions, restrictions, or requirements...\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Generating Contract...\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Generate & Send Contract\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "screens/adoption/AdoptionContractScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"AdoptionApplication\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Missing Information\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Please fill in all required fields.\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Submitting application:\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Application Submitted!\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Failed to submit application. Please try again.\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"First-time owner\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"House with yard\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"House without yard\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Tell us about any other pets you have...\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Tell us what draws you to this pet and what you hope to provide...\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Phone Number\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Relationship (friend, family, etc.)\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Veterinarian Name\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Clinic Name\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Clinic Phone\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Please explain your long-term commitment to caring for this pet, including financial responsibility, medical care, and what you would do if circumstances change...\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Submit Application\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "screens/adoption/AdoptionApplicationScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Failed to load verifications\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"AdminVerificationsScreen\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Unknown action\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"AdminVerificationsScreen\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Reject Verification\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Please provide a reason for rejection:\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Request Additional Information\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"What additional information is needed?\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Search verifications...\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"High Priority\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminVerificationsScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/admin/AdminUsersScreen.tsx",
        "string": "\"Search users by name or email\""
      },
      {
        "file": "screens/admin/AdminUsersScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Failed to load uploads\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"AdminUploadsScreen\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"AdminUploadsScreen\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Reject Upload\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Please provide a reason for rejection:\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Search uploads...\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminUploadsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminServicesScreen.tsx",
        "string": "'AWS Rekognition'"
      },
      {
        "file": "screens/admin/AdminServicesScreen.tsx",
        "string": "'Content moderation and safety checks'"
      },
      {
        "file": "screens/admin/AdminServicesScreen.tsx",
        "string": "'Image storage and processing'"
      },
      {
        "file": "screens/admin/AdminServicesScreen.tsx",
        "string": "'Payment processing'"
      },
      {
        "file": "screens/admin/AdminServicesScreen.tsx",
        "string": "'Error monitoring and tracking'"
      },
      {
        "file": "screens/admin/AdminServicesScreen.tsx",
        "string": "'Primary database'"
      },
      {
        "file": "screens/admin/AdminServicesScreen.tsx",
        "string": "'DeepSeek AI'"
      },
      {
        "file": "screens/admin/AdminServicesScreen.tsx",
        "string": "'AI bio generation and compatibility analysis'"
      },
      {
        "file": "screens/admin/AdminServicesScreen.tsx",
        "string": "'Failed to load services'"
      },
      {
        "file": "screens/admin/AdminServicesScreen.tsx",
        "string": "'Failed to load services'"
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"AdminSecurity\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Error loading security data:\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Failed to load security data\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Alert resolved successfully\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Error resolving alert:\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Failed to resolve alert\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Block IP Address\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Manual block\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"IP address blocked successfully\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Error blocking IP:\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Failed to block IP address\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminSecurityScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"AdminDashboard\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Error loading dashboard data:\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Failed to load dashboard data\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"AdminAnalytics\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"AdminSecurity\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"AdminBilling\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"AdminUploads\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"AdminVerifications\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"AdminServices\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminDashboardScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminChatsScreen.tsx",
        "string": "\"Failed to load chat messages\""
      },
      {
        "file": "screens/admin/AdminChatsScreen.tsx",
        "string": "\"AdminChatsScreen\""
      },
      {
        "file": "screens/admin/AdminChatsScreen.tsx",
        "string": "\"AdminChatsScreen\""
      },
      {
        "file": "screens/admin/AdminChatsScreen.tsx",
        "string": "\"Search messages...\""
      },
      {
        "file": "screens/admin/AdminChatsScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/admin/AdminChatsScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/admin/AdminChatsScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminChatsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminChatsScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminChatsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"AdminBilling\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Error loading billing data:\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Failed to load billing data\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Cancel Subscription\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Are you sure you want to cancel this subscription?\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Subscription canceled successfully\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Error canceling subscription:\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Failed to cancel subscription\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Subscription reactivated successfully\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Error reactivating subscription:\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Failed to reactivate subscription\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminBillingScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"AdminAnalytics\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Error loading analytics data:\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Failed to load analytics data\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/admin/AdminAnalyticsScreen.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "screens/__tests__/scrollToTop.integration.test.tsx",
        "string": "'Scroll-to-Top Integration Tests'"
      },
      {
        "file": "screens/__tests__/scrollToTop.integration.test.tsx",
        "string": "'MatchesScreen'"
      },
      {
        "file": "screens/__tests__/scrollToTop.integration.test.tsx",
        "string": "'ProfileScreen'"
      },
      {
        "file": "screens/__tests__/scrollToTop.integration.test.tsx",
        "string": "'Cross-tab navigation'"
      },
      {
        "file": "screens/__tests__/scrollToTop.integration.test.tsx",
        "string": "'Accessibility'"
      },
      {
        "file": "screens/__tests__/scrollToTop.integration.test.tsx",
        "string": "'Performance'"
      },
      {
        "file": "screens/__tests__/scrollToTop.integration.test.tsx",
        "string": "'Integration with navigation events'"
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"MyPetsScreen\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"Loading pets...\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"No Pets Yet\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"Start building your pet'"
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"Create Your First Pet Profile\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"Delete Pet Profile\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"Are you sure you want to delete this pet profile? This action cannot be undone.\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"Network error\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"Connection Error\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"Network error\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"For Adoption\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"Delete failed\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.test.tsx",
        "string": "\"Failed to delete pet profile. Please check your connection and try again.\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.debug.test.tsx",
        "string": "\"MyPetsScreen Debug\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.debug.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/MyPetsScreen.debug.test.tsx",
        "string": "\"Error rendering component:\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.tab-reselect.test.tsx",
        "string": "\"MatchesScreen Tab Reselect Integration\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.calling.test.tsx",
        "string": "\"LinearGradient\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.calling.test.tsx",
        "string": "\"TouchableOpacity\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.calling.test.tsx",
        "string": "\"How are you?\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.calling.test.tsx",
        "string": "\"MatchesScreen - Calling Features\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.calling.test.tsx",
        "string": "\"Start a voice call with Buddy?\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.calling.test.tsx",
        "string": "\"Start a video call with Buddy?\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.calling.test.tsx",
        "string": "\"Failed to start call. Please check your permissions and try again.\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.calling.test.tsx",
        "string": "\"Call in Progress\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.calling.test.tsx",
        "string": "\"You already have an active call.\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.calling.test.tsx",
        "string": "\"Start a voice call with Luna?\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.calling.test.tsx",
        "string": "\"Call manager error\""
      },
      {
        "file": "screens/__tests__/MatchesScreen.calling.test.tsx",
        "string": "\"Failed to start call. Please check your permissions and try again.\""
      },
      {
        "file": "screens/__tests__/MapScreen.interactions.test.tsx",
        "string": "\"LinearGradient\""
      },
      {
        "file": "screens/__tests__/MapScreen.interactions.test.tsx",
        "string": "\"MapFiltersModal\""
      },
      {
        "file": "screens/__tests__/MapScreen.interactions.test.tsx",
        "string": "\"MapStatsPanel\""
      },
      {
        "file": "screens/__tests__/MapScreen.interactions.test.tsx",
        "string": "\"PinDetailsModal\""
      },
      {
        "file": "screens/__tests__/MapScreen.interactions.test.tsx",
        "string": "\"MapScreen (interactions)\""
      },
      {
        "file": "screens/__tests__/MapScreen.interactions.test.tsx",
        "string": "\"PinDetailsModal\""
      },
      {
        "file": "screens/__tests__/MapScreen.interactions.test.tsx",
        "string": "\"PinDetailsModal\""
      },
      {
        "file": "screens/__tests__/MapScreen.interactions.test.tsx",
        "string": "\"AR FAB is disabled when userLocation is missing (no navigation occurs)\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"LinearGradient\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"MapFiltersModal\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"MapStatsPanel\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"PinDetailsModal\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"Dog walking spotted\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"MapScreen (base)\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"Pet Activity Map\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"Real-time locations\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"FAB: pressing location triggers getCurrentLocation()\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"AR FAB navigates to ARScentTrails with user location\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"ARScentTrails\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"MapFiltersModal\""
      },
      {
        "file": "screens/__tests__/MapScreen.base.test.tsx",
        "string": "\"MapStatsPanel\""
      },
      {
        "file": "screens/__tests__/MapScreen.accessibility.test.tsx",
        "string": "\"LinearGradient\""
      },
      {
        "file": "screens/__tests__/MapScreen.accessibility.test.tsx",
        "string": "\"MapFiltersModal\""
      },
      {
        "file": "screens/__tests__/MapScreen.accessibility.test.tsx",
        "string": "\"MapStatsPanel\""
      },
      {
        "file": "screens/__tests__/MapScreen.accessibility.test.tsx",
        "string": "\"MapScreen (accessibility)\""
      },
      {
        "file": "screens/__tests__/MapScreen.accessibility.test.tsx",
        "string": "\"Pet Activity Map\""
      },
      {
        "file": "screens/__tests__/MapScreen.accessibility.test.tsx",
        "string": "\"Real-time locations\""
      },
      {
        "file": "screens/__tests__/MapScreen.accessibility.test.tsx",
        "string": "\"LinearGradient\""
      },
      {
        "file": "screens/__tests__/ChatScreen.theme.test.tsx",
        "string": "\"ChatScreen with Theme\""
      },
      {
        "file": "screens/__tests__/ChatScreen.calling.test.tsx",
        "string": "\"TouchableOpacity\""
      },
      {
        "file": "screens/__tests__/ChatScreen.calling.test.tsx",
        "string": "\"ChatScreen - Calling Features\""
      },
      {
        "file": "screens/__tests__/ChatScreen.calling.test.tsx",
        "string": "\"Start a voice call with Test Pet?\""
      },
      {
        "file": "screens/__tests__/ChatScreen.calling.test.tsx",
        "string": "\"Start a video call with Test Pet?\""
      },
      {
        "file": "screens/__tests__/ChatScreen.calling.test.tsx",
        "string": "\"Failed to start call. Please check your permissions and try again.\""
      },
      {
        "file": "screens/__tests__/ChatScreen.calling.test.tsx",
        "string": "\"Call in Progress\""
      },
      {
        "file": "screens/__tests__/ChatScreen.calling.test.tsx",
        "string": "\"You already have an active call.\""
      },
      {
        "file": "screens/__tests__/ChatScreen.calling.test.tsx",
        "string": "\"Call manager error\""
      },
      {
        "file": "screens/__tests__/ChatScreen.calling.test.tsx",
        "string": "\"Start a voice call with Test Pet?\""
      },
      {
        "file": "screens/__tests__/ChatScreen.calling.test.tsx",
        "string": "\"Start a video call with Test Pet?\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"AIPhotoAnalyzerScreen\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"AI Photo Analyzer\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Photo Selection\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Permission Required\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"We need access to your camera to take pet photos.\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Permission Required\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"We need access to your photo library to analyze pet photos.\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analyze Photos\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Photo Analysis\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analyze Photos\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Please select at least one photo to analyze.\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Regular exercise recommended\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"High quality photo\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Good lighting\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analyze Photos\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Regular exercise recommended\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Annual vet checkup\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"High quality photo\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Good lighting\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Clear subject\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analyze Photos\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analyze Photos\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analyzing...\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analysis failed\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analyze Photos\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analysis failed\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Results Display\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analyze Photos\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Excellent for matching!\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analyze Photos\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Possible Mixed Breeds:\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"High quality photo with good lighting\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Clear subject focus\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Professional composition\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analyze Photos\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Reset Functionality\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Analyze Photos\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"New Analysis\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Error Handling\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Image picker error\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"From Gallery\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Failed to select images. Please try again.\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Camera error\""
      },
      {
        "file": "screens/__tests__/AIPhotoAnalyzerScreen.test.tsx",
        "string": "\"Failed to take photo. Please try again.\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"German Shepherd\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"AICompatibilityScreen\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"AI Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Available Pets\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Loading pets...\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Loading pets...\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Pet Selection\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"German Shepherd\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Select Pet 1\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Compatibility Analysis\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Selection Required\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Please select two pets to analyze compatibility.\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"These pets show excellent compatibility potential.\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Neutral territory\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Supervised introduction\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Play fetch together\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Go for walks\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Initial supervision recommended\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"These pets show excellent compatibility potential.\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Neutral territory\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Supervised introduction\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Play fetch together\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Go for walks\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Initial supervision recommended\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Very Good Match\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"These pets show excellent compatibility potential.\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyzing...\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Test analysis\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analysis failed\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analysis failed\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Results Display\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Excellent Match!\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Excellent compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Excellent Match!\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Good compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Fair Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Good compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Personality\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Activity Level\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Social Behavior\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Environment\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Good compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Neutral territory\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Supervised introduction\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Play fetch together\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Go for walks\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Initial supervision recommended\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Success Probability:\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Route Parameters\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Reset Functionality\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Good compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"New Analysis\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Error Handling\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Failed to load pets. Please try again.\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Failed to load pets. Please try again.\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Network timeout\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"TimeoutError\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Analyze Compatibility\""
      },
      {
        "file": "screens/__tests__/AICompatibilityScreen.test.tsx",
        "string": "\"Network timeout\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"AIBioScreen\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet name\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet breed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet age\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter personality traits (comma-separated)\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"AI Bio Generator\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Form Validation\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Validation Error\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Please enter your pet'"
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet name\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Validation Error\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Please enter your pet'"
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet name\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet breed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Validation Error\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Please enter your pet'"
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet name\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet breed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet age\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Validation Error\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Please enter personality traits.\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"API Integration\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Buddy is a friendly and energetic Golden Retriever who loves to play fetch.\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet name\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet breed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet age\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter personality traits (comma-separated)\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Buddy is a friendly and energetic Golden Retriever who loves to play fetch.\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet name\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet breed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet age\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter personality traits (comma-separated)\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generated Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Match Score: 85%\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet name\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet breed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet age\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter personality traits (comma-separated)\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generation Failed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Failed to generate bio. Please try again.\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet name\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet breed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet age\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter personality traits (comma-separated)\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generating...\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generated bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"User Experience\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet name\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet breed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet age\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter personality traits (comma-separated)\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet name\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet breed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet age\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter personality traits (comma-separated)\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Validation Error\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Please enter personality traits.\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Error Handling\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Network timeout\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"TimeoutError\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet name\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet breed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet age\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter personality traits (comma-separated)\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generation Failed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Failed to generate bio. Please try again.\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Service Unavailable\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet name\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet breed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter pet age\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Enter personality traits (comma-separated)\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generate AI Bio\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Generation Failed\""
      },
      {
        "file": "screens/__tests__/AIBioScreen.test.tsx",
        "string": "\"Failed to generate bio. Please try again.\""
      },
      {
        "file": "providers/PremiumProvider.tsx",
        "string": "\"Purchases not configured\""
      },
      {
        "file": "providers/PremiumProvider.tsx",
        "string": "\"Failed to refresh premium status\""
      },
      {
        "file": "providers/PremiumProvider.tsx",
        "string": "\"No package available\""
      },
      {
        "file": "providers/PremiumProvider.tsx",
        "string": "\"Failed to purchase\""
      },
      {
        "file": "providers/PremiumProvider.tsx",
        "string": "\"Failed to restore purchases\""
      },
      {
        "file": "navigation/UltraTabBar.tsx",
        "string": "\"AdoptionManager\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"AdminDashboard\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"AdminDashboard\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Admin Dashboard\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"AdminAnalytics\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Analytics Dashboard\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"User Management\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"AdminSecurity\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Security Dashboard\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"AdminBilling\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Billing Management\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Chat Moderation\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"AdminUploads\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Upload Management\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"AdminVerifications\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Verification Management\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"AdminServices\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Services Management\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "navigation/AdminNavigator.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "navigation/ActivePillTabBar.tsx",
        "string": "\"AdoptionManager\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"UltraTabBar Integration Tests\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Rendering and Initial State\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Animated.View\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Accessibility\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Matches tab\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Profile tab\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Badge Functionality\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Long Press Events\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Visual Effects\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Animated.View\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Layout and Responsiveness\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"TouchableOpacity\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Performance\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Error Handling\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Theme Support\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Animation States\""
      },
      {
        "file": "navigation/__tests__/UltraTabBar.integration.test.tsx",
        "string": "\"Animated.View\""
      },
      {
        "file": "navigation/__tests__/TabNavigation.screen-integration.test.tsx",
        "string": "\"Tab Navigation Screen Integration\""
      },
      {
        "file": "navigation/__tests__/TabNavigation.screen-integration.test.tsx",
        "string": "\"HomeScreen Double-Tap Integration\""
      },
      {
        "file": "navigation/__tests__/TabNavigation.screen-integration.test.tsx",
        "string": "\"MatchesScreen Double-Tap Integration\""
      },
      {
        "file": "navigation/__tests__/TabNavigation.screen-integration.test.tsx",
        "string": "\"ProfileScreen Double-Tap Integration\""
      },
      {
        "file": "navigation/__tests__/TabNavigation.screen-integration.test.tsx",
        "string": "\"SwipeScreen Double-Tap Integration\""
      },
      {
        "file": "navigation/__tests__/TabNavigation.screen-integration.test.tsx",
        "string": "\"MapScreen Double-Tap Integration\""
      },
      {
        "file": "navigation/__tests__/TabNavigation.screen-integration.test.tsx",
        "string": "\"Complete Tab Bar Navigation Flow\""
      },
      {
        "file": "navigation/__tests__/TabNavigation.screen-integration.test.tsx",
        "string": "\"Gesture and Animation Integration\""
      },
      {
        "file": "navigation/__tests__/TabNavigation.screen-integration.test.tsx",
        "string": "\"Accessibility Integration\""
      },
      {
        "file": "navigation/__tests__/TabNavigation.screen-integration.test.tsx",
        "string": "\"Performance Integration\""
      },
      {
        "file": "navigation/__tests__/ActivePillTabBar.test.tsx",
        "string": "\"ActivePillTabBar\""
      },
      {
        "file": "navigation/__tests__/ActivePillTabBar.test.tsx",
        "string": "\"UnknownRoute\""
      },
      {
        "file": "navigation/__tests__/ActivePillTabBar.integration.test.tsx",
        "string": "\"ActivePillTabBar Integration\""
      },
      {
        "file": "navigation/__tests__/ActivePillTabBar.integration.test.tsx",
        "string": "\"Complete Tab Navigation Flow\""
      },
      {
        "file": "navigation/__tests__/ActivePillTabBar.integration.test.tsx",
        "string": "\"Double-Tap Detection Integration\""
      },
      {
        "file": "navigation/__tests__/ActivePillTabBar.integration.test.tsx",
        "string": "\"Animation Integration\""
      },
      {
        "file": "navigation/__tests__/ActivePillTabBar.integration.test.tsx",
        "string": "\"Badge Integration\""
      },
      {
        "file": "navigation/__tests__/ActivePillTabBar.integration.test.tsx",
        "string": "\"Edge Cases and Error Handling\""
      },
      {
        "file": "navigation/__tests__/ActivePillTabBar.integration.test.tsx",
        "string": "\"Haptics unavailable\""
      },
      {
        "file": "navigation/__tests__/ActivePillTabBar.integration.test.tsx",
        "string": "\"Accessibility Integration\""
      },
      {
        "file": "navigation/__tests__/ActivePillTabBar.integration.test.tsx",
        "string": "\"Theme Integration\""
      },
      {
        "file": "lib/sentry.ts",
        "string": "\"Sentry DSN not configured - error tracking disabled\""
      },
      {
        "file": "lib/sentry.ts",
        "string": "\"Network request failed\""
      },
      {
        "file": "lib/sentry.ts",
        "string": "\"NetworkError\""
      },
      {
        "file": "lib/sentry.ts",
        "string": "\"Failed to fetch\""
      },
      {
        "file": "lib/sentry.ts",
        "string": "\"Network request failed\""
      },
      {
        "file": "lib/sentry.ts",
        "string": "\"Sentry initialized successfully\""
      },
      {
        "file": "lib/sentry.ts",
        "string": "\"Failed to initialize Sentry\""
      },
      {
        "file": "lib/sentry.ts",
        "string": "\"Transaction tracking:\""
      },
      {
        "file": "hooks/useThemeToggle.ts",
        "string": "\"System Default\""
      },
      {
        "file": "hooks/useThemeToggle.ts",
        "string": "\"Select Theme\""
      },
      {
        "file": "hooks/useThemeToggle.ts",
        "string": "\"System Default\""
      },
      {
        "file": "hooks/useSwipeData.ts",
        "string": "\"User not authenticated\""
      },
      {
        "file": "hooks/useSwipeData.ts",
        "string": "\"Pets loaded successfully\""
      },
      {
        "file": "hooks/useSwipeData.ts",
        "string": "\"Failed to load pets\""
      },
      {
        "file": "hooks/useSwipeData.ts",
        "string": "\"Failed to load pets\""
      },
      {
        "file": "hooks/useSwipeData.ts",
        "string": "\"Swipe action completed\""
      },
      {
        "file": "hooks/useSwipeData.ts",
        "string": "\"Failed to process swipe\""
      },
      {
        "file": "hooks/useSwipeData.ts",
        "string": "\"Swipe action failed\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"EXPO_PUBLIC_SOCKET_URL\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Socket connected:\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Socket disconnected:\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Socket connection error:\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Failed to connect after multiple attempts\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Socket error:\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Socket error occurred\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Socket auth error:\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Authentication failed\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"User came online:\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"User went offline:\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"New message:\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Incoming call:\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Error creating socket:\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Failed to create socket connection\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Cleaning up socket connection\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"EXPO_PUBLIC_SOCKET_URL\""
      },
      {
        "file": "hooks/useSocket.ts",
        "string": "\"Socket not connected, cannot emit:\""
      },
      {
        "file": "hooks/useRetry.ts",
        "string": "\"Retry logic failed unexpectedly\""
      },
      {
        "file": "hooks/useRetry.ts",
        "string": "\"NETWORK_ERROR\""
      },
      {
        "file": "hooks/usePremium.ts",
        "string": "\"Failed to load premium status\""
      },
      {
        "file": "hooks/usePhotoManager.ts",
        "string": "\"Permission needed\""
      },
      {
        "file": "hooks/usePhotoManager.ts",
        "string": "\"Please grant permission to access your photos\""
      },
      {
        "file": "hooks/usePhotoManager.ts",
        "string": "\"Error picking images:\""
      },
      {
        "file": "hooks/usePhotoManager.ts",
        "string": "\"Failed to pick images. Please try again.\""
      },
      {
        "file": "hooks/usePhotoManager.ts",
        "string": "\"Photo uploaded successfully:\""
      },
      {
        "file": "hooks/usePhotoManager.ts",
        "string": "\"Error uploading photo:\""
      },
      {
        "file": "hooks/usePhotoManager.ts",
        "string": "\"Upload failed\""
      },
      {
        "file": "hooks/usePhotoManager.ts",
        "string": "\"Upload Failed\""
      },
      {
        "file": "hooks/usePhotoManager.ts",
        "string": "\"Error uploading pending photos:\""
      },
      {
        "file": "hooks/usePhotoEditor.ts",
        "string": "'Photo saved with adjustments'"
      },
      {
        "file": "hooks/usePhotoEditor.ts",
        "string": "'Photo save failed'"
      },
      {
        "file": "hooks/usePhotoEditor.ts",
        "string": "'Failed to save image. Please try again.'"
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Pet name is required\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Species is required\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Breed is required\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Age must be between 0 and 30 years\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Gender is required\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Size is required\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Intent is required\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Validation Error\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Please fill in all required fields\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Photos Required\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Please add at least one photo\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Creating pet:\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Upload in Progress\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Please wait for all photos to finish uploading before submitting.\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Photos Not Uploaded\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Some photos failed to upload. Please remove them and try again.\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Pet profile created successfully!\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Error creating pet:\""
      },
      {
        "file": "hooks/usePetForm.ts",
        "string": "\"Failed to create pet profile. Please try again.\""
      },
      {
        "file": "hooks/useMatchesData.ts",
        "string": "\"Failed to load matches:\""
      },
      {
        "file": "hooks/useMatchesData.ts",
        "string": "\"Connection Error\""
      },
      {
        "file": "hooks/useMatchesData.ts",
        "string": "\"Unable to load matches. Please check your connection and try again.\""
      },
      {
        "file": "hooks/useMatchesData.ts",
        "string": "\"Failed to load liked you:\""
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Failed to start stream'"
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Stream started successfully'"
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Failed to start stream'"
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Failed to start stream'"
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Failed to join stream'"
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Joined stream successfully'"
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Failed to watch stream'"
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Failed to watch stream'"
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Failed to end stream'"
      },
      {
        "file": "hooks/useLiveStream.ts",
        "string": "'Failed to end stream'"
      },
      {
        "file": "hooks/useLinkPreview.ts",
        "string": "'Failed to load preview'"
      },
      {
        "file": "hooks/useInteractionMetrics.ts",
        "string": "'Unknown error'"
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Frequently asked questions\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"FAQ section coming soon!\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Contact Support\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Get help from our support team\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Contact Support\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Support chat coming soon!\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Report a Bug\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Help us improve by reporting issues\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Bug reporting feature coming soon!\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Safety Center\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Safety tips and reporting tools\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Safety Center\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Navigate back to safety center\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"PawfectMatch Support Request\""
      },
      {
        "file": "hooks/useHelpSupportData.ts",
        "string": "\"Email Support\""
      },
      {
        "file": "hooks/useErrorRecovery.ts",
        "string": "\"Offline retry failed\""
      },
      {
        "file": "hooks/useErrorRecovery.ts",
        "string": "\"Network retry failed\""
      },
      {
        "file": "hooks/useErrorRecovery.ts",
        "string": "\"No internet connection\""
      },
      {
        "file": "hooks/useErrorRecovery.ts",
        "string": "\"NETWORK_ERROR\""
      },
      {
        "file": "hooks/useErrorRecovery.ts",
        "string": "\"ECONNREFUSED\""
      },
      {
        "file": "hooks/useErrorRecovery.ts",
        "string": "\"NETWORK_ERROR\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"Something went wrong. Please try again.\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"Invalid request. Please check your input.\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"Session expired. Please log in again.\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"Access denied. You may not have permission for this action.\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"Resource not found.\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"Too many requests. Please wait a moment and try again.\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"Server error. Please try again later.\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"Service temporarily unavailable. Please try again later.\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"Error handled by useErrorHandler\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"Network error. Please check your connection and try again.\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"Authentication failed. Please log in again.\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"Please check your input and try again.\""
      },
      {
        "file": "hooks/useErrorHandler.ts",
        "string": "\"You appear to be offline. Please check your connection.\""
      },
      {
        "file": "hooks/useCommunityFeed.ts",
        "string": "\"Failed to load community feed\""
      },
      {
        "file": "hooks/useCommunityFeed.ts",
        "string": "\"Error loading feed:\""
      },
      {
        "file": "hooks/useCommunityFeed.ts",
        "string": "\"Error creating post:\""
      },
      {
        "file": "hooks/useCommunityFeed.ts",
        "string": "\"Error liking post:\""
      },
      {
        "file": "hooks/useCommunityFeed.ts",
        "string": "\"Error adding comment:\""
      },
      {
        "file": "hooks/useCommunityFeed.ts",
        "string": "\"Error deleting post:\""
      },
      {
        "file": "hooks/useCommunityFeed.ts",
        "string": "\"Error reporting post:\""
      },
      {
        "file": "hooks/useCommunityFeed.ts",
        "string": "\"Error blocking user:\""
      },
      {
        "file": "hooks/useCommunityFeed.ts",
        "string": "\"Error joining activity:\""
      },
      {
        "file": "hooks/useCommunityFeed.ts",
        "string": "\"Error leaving activity:\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Socket not available yet\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Socket connected for chat\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"New message received via socket\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"User came online\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"User went offline\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Cleaning up socket listeners\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Failed to load messages. Please check your connection and try again.\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Failed to load messages\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Connection Error\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Failed to send message\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Failed to send message. Please try again.\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Failed to retry message\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Messages marked as read\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Failed to mark messages as read\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Weekends work perfectly for me! My schedule is pretty flexible then 📅\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"The dog park sounds amazing! My pup absolutely loves meeting new friends there 🌳🐕\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Yes! I checked the forecast too - it'"
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Me too! This is going to be so much fun. I think our pets are going to be best friends! 🐾💕\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"That sounds absolutely perfect! I'"
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Amazing! My pet is going to be so excited to meet yours 🐕💕\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Perfect! I think this is going to be the start of a beautiful friendship 😊\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Wonderful! I can already tell our pets are going to get along great 🌟\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Fantastic! This is exactly what I was hoping for 🎉\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Love it! I have a really good feeling about this playdate ✨\""
      },
      {
        "file": "hooks/useChatData.ts",
        "string": "\"Sounds great!\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Initialization failed\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Authentication failed\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Biometric Enabled\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Failed to enable biometric authentication\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Failed to enable biometric\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Biometric Disabled\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Failed to disable biometric authentication\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Failed to disable biometric\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Quick authenticate\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Quick authentication failed\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Setup prompt failed\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Failed to store secure data\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Failed to retrieve secure data\""
      },
      {
        "file": "hooks/useBiometric.ts",
        "string": "\"Failed to remove secure data\""
      },
      {
        "file": "hooks/useAdminUsersScreen.ts",
        "string": "\"Joined recently\""
      },
      {
        "file": "hooks/useAdminUsersScreen.ts",
        "string": "\"Failed to load users\""
      },
      {
        "file": "hooks/useAdminUsersScreen.ts",
        "string": "\"Haptics not available\""
      },
      {
        "file": "hooks/useAdminUsersScreen.ts",
        "string": "\"Suspend user\""
      },
      {
        "file": "hooks/useAdminUsersScreen.ts",
        "string": "\"Activate user\""
      },
      {
        "file": "hooks/useAdminUsersScreen.ts",
        "string": "\"Reinstate user\""
      },
      {
        "file": "hooks/useAdminUsersScreen.ts",
        "string": "\"No users selected\""
      },
      {
        "file": "hooks/useAdminUsersScreen.ts",
        "string": "\"Select at least one user to perform this action.\""
      },
      {
        "file": "hooks/useAdminUsersScreen.ts",
        "string": "\"User Management\""
      },
      {
        "file": "hooks/useAdminUsersScreen.ts",
        "string": "\"Monitor, filter, and moderate the entire user base with precision controls.\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Professional\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Pet name is required\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Pet breed is required\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Pet age is required\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Pet personality is required\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Bio generation validation failed\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Generating AI bio\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"AI bio generated successfully\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Unknown error occurred\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"AI bio generation failed\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Camera roll permissions are required to select photos\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Photo selected for AI bio\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Failed to pick image\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Image picker failed\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"Bio saved to history\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"AI bio form cleared\""
      },
      {
        "file": "hooks/useAIBio.ts",
        "string": "\"AI bio generation reset\""
      },
      {
        "file": "hooks/utils/useScrollPersistence.ts",
        "string": "'Failed to restore scroll position'"
      },
      {
        "file": "hooks/utils/useScrollPersistence.ts",
        "string": "'Failed to save scroll position'"
      },
      {
        "file": "hooks/utils/usePersistedState.ts",
        "string": "'Failed to load persisted state'"
      },
      {
        "file": "hooks/utils/usePersistedState.ts",
        "string": "'Failed to persist state'"
      },
      {
        "file": "hooks/utils/usePersistedState.ts",
        "string": "'Failed to clear persisted state'"
      },
      {
        "file": "hooks/utils/useFormState.ts",
        "string": "'Email is required'"
      },
      {
        "file": "hooks/utils/useFormState.ts",
        "string": "'Password is required'"
      },
      {
        "file": "hooks/utils/useFormState.ts",
        "string": "'Form submission failed'"
      },
      {
        "file": "hooks/utils/useFormState.ts",
        "string": "\"Form submission error\""
      },
      {
        "file": "hooks/utils/useAsyncAction.ts",
        "string": "'User loaded'"
      },
      {
        "file": "hooks/utils/useAsyncAction.ts",
        "string": "'Failed to load user'"
      },
      {
        "file": "hooks/utils/__tests__/useScrollPersistence.test.ts",
        "string": "\"Storage error\""
      },
      {
        "file": "hooks/utils/__tests__/usePersistedState.test.ts",
        "string": "\"Storage error\""
      },
      {
        "file": "hooks/utils/__tests__/useFormState.test.ts",
        "string": "\"Email is required\""
      },
      {
        "file": "hooks/utils/__tests__/useFormState.test.ts",
        "string": "\"Invalid email format\""
      },
      {
        "file": "hooks/utils/__tests__/useFormState.test.ts",
        "string": "\"Password is required\""
      },
      {
        "file": "hooks/utils/__tests__/useFormState.test.ts",
        "string": "\"Password must be at least 6 characters\""
      },
      {
        "file": "hooks/utils/__tests__/useFormState.test.ts",
        "string": "\"Must be at least 18 years old\""
      },
      {
        "file": "hooks/utils/__tests__/useFormState.test.ts",
        "string": "\"Email is required\""
      },
      {
        "file": "hooks/utils/__tests__/useFormState.test.ts",
        "string": "\"Password is required\""
      },
      {
        "file": "hooks/utils/__tests__/useFormState.test.ts",
        "string": "\"Password is required\""
      },
      {
        "file": "hooks/screens/useUserIntentScreen.ts",
        "string": "\"PetProfileSetup\""
      },
      {
        "file": "hooks/screens/useSubscriptionManager.ts",
        "string": "\"Subscription data fetched\""
      },
      {
        "file": "hooks/screens/useSubscriptionManager.ts",
        "string": "\"Failed to fetch subscription data\""
      },
      {
        "file": "hooks/screens/useSubscriptionManager.ts",
        "string": "\"Failed to fetch subscription data\""
      },
      {
        "file": "hooks/screens/useSubscriptionManager.ts",
        "string": "\"Cancel Subscription\""
      },
      {
        "file": "hooks/screens/useSubscriptionManager.ts",
        "string": "\"Are you sure you want to cancel your subscription? You'"
      },
      {
        "file": "hooks/screens/useSubscriptionManager.ts",
        "string": "\"Keep Subscription\""
      },
      {
        "file": "hooks/screens/useSubscriptionManager.ts",
        "string": "\"Your subscription has been cancelled.\""
      },
      {
        "file": "hooks/screens/useSubscriptionManager.ts",
        "string": "\"Payment method update initiated. Check your email for the secure link.\""
      },
      {
        "file": "hooks/screens/useSubscriptionFlow.ts",
        "string": "\"Subscription flow started\""
      },
      {
        "file": "hooks/screens/useSubscriptionFlow.ts",
        "string": "\"No plan selected\""
      },
      {
        "file": "hooks/screens/useSubscriptionFlow.ts",
        "string": "\"Selected plan not found\""
      },
      {
        "file": "hooks/screens/useSubscriptionFlow.ts",
        "string": "\"Failed to create checkout session\""
      },
      {
        "file": "hooks/screens/useSubscriptionFlow.ts",
        "string": "\"Failed to start checkout\""
      },
      {
        "file": "hooks/screens/useSubscriptionFlow.ts",
        "string": "\"Checkout failed\""
      },
      {
        "file": "hooks/screens/useSubscriptionFlow.ts",
        "string": "\"Checkout Error\""
      },
      {
        "file": "hooks/screens/useSubscriptionFlow.ts",
        "string": "\"Failed to start checkout process. Please try again.\""
      },
      {
        "file": "hooks/screens/useSubscriptionFlow.ts",
        "string": "\"SubscriptionSuccess\""
      },
      {
        "file": "hooks/screens/useSubscriptionFlow.ts",
        "string": "\"Subscription flow completed successfully\""
      },
      {
        "file": "hooks/screens/useSubscriptionFlow.ts",
        "string": "\"Subscription flow cancelled\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Stripe checkout session created\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Failed to create checkout session\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Failed to create Stripe checkout session\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Payment Error\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Processing payment\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Payment processed successfully\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Payment failed - insufficient funds\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Payment processing failed\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Payment processing failed\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Payment Failed\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Confirming payment\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Payment confirmation failed\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Payment confirmation failed\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Payment success handled\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Failed to handle payment success\""
      },
      {
        "file": "hooks/screens/useStripePayment.ts",
        "string": "\"Payment cancelled\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Failed to check deletion status:\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Are you sure you want to logout?\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Delete Account\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Enter your password to confirm account deletion.\\n\\nYour account will be deleted in 30 days unless you cancel.\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Password is required to delete your account.\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"User requested from settings\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Account Deletion Requested\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Your account will be deleted in 30 days. You can cancel this anytime from settings.\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Failed to delete account.\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Failed to request account deletion:\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Failed to delete account. Please try again.\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Data Export Ready\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Export Started\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Your data export is being prepared.\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Failed to export data:\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Failed to export data. Please try again.\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Export Complete\""
      },
      {
        "file": "hooks/screens/useSettingsScreen.ts",
        "string": "\"Your data has been exported successfully.\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"ResetPassword\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"ResetPassword\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Password is required\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Password must be at least 8 characters\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Password must contain at least one lowercase letter\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Password must contain at least one uppercase letter\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Password must contain at least one number\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Please confirm your password\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Passwords do not match\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Password reset attempt\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Password Reset Successful\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Your password has been reset successfully. You can now log in with your new password.\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Go to Login\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Password reset failed\""
      },
      {
        "file": "hooks/screens/useResetPasswordScreen.ts",
        "string": "\"Unable to reset password. The reset link may have expired. Please request a new one.\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Email is required\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Email format is invalid\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Password is required\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Password must be at least 8 characters\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Password must contain at least one lowercase letter\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Password must contain at least one uppercase letter\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Password must contain at least one number\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Passwords do not match\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"First name is required\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Last name is required\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Date of birth is required\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Date format should be YYYY-MM-DD\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Registration attempt:\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Password must be at least 8 characters and include uppercase, lowercase, number, and special character\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Registration successful\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Registration Successful\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Your account has been created successfully. You can now log in.\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Registration failed\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Registration failed. Please check your information and try again.\""
      },
      {
        "file": "hooks/screens/useRegisterScreen.ts",
        "string": "\"Registration Failed\""
      },
      {
        "file": "hooks/screens/useProfileScreen.ts",
        "string": "\"Are you sure you want to logout?\""
      },
      {
        "file": "hooks/screens/useProfileScreen.ts",
        "string": "\"User logged out successfully\""
      },
      {
        "file": "hooks/screens/useProfileScreen.ts",
        "string": "\"Logout error:\""
      },
      {
        "file": "hooks/screens/usePrivacySettingsScreen.ts",
        "string": "\"Privacy settings loaded\""
      },
      {
        "file": "hooks/screens/usePrivacySettingsScreen.ts",
        "string": "\"Failed to load privacy settings:\""
      },
      {
        "file": "hooks/screens/usePrivacySettingsScreen.ts",
        "string": "\"Privacy setting updated\""
      },
      {
        "file": "hooks/screens/usePrivacySettingsScreen.ts",
        "string": "\"Failed to update privacy setting:\""
      },
      {
        "file": "hooks/screens/usePrivacySettingsScreen.ts",
        "string": "\"Failed to update setting\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Basic matching\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Standard chat\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Weather updates\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Community support\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Unlimited swipes\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"See who liked you\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Advanced filters\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Ad-free experience\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Advanced matching algorithm\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Priority in search results\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Read receipts\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Video calls\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"All Premium features\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"AI-powered recommendations\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Exclusive events access\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Priority support\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Profile boost\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Unlimited Super Likes\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Advanced analytics\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Invalid subscription tier\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Subscription error:\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Subscription Error\""
      },
      {
        "file": "hooks/screens/usePremiumScreen.ts",
        "string": "\"Failed to start checkout process. Please try again.\""
      },
      {
        "file": "hooks/screens/usePetProfileSetupScreen.ts",
        "string": "\"PreferencesSetup\""
      },
      {
        "file": "hooks/screens/useMyPetsScreen.ts",
        "string": "\"Error loading pets:\""
      },
      {
        "file": "hooks/screens/useMyPetsScreen.ts",
        "string": "\"Connection Error\""
      },
      {
        "file": "hooks/screens/useMyPetsScreen.ts",
        "string": "\"Network error\""
      },
      {
        "file": "hooks/screens/useMyPetsScreen.ts",
        "string": "\"For Adoption\""
      },
      {
        "file": "hooks/screens/useMyPetsScreen.ts",
        "string": "\"Seeking Mates\""
      },
      {
        "file": "hooks/screens/useMyPetsScreen.ts",
        "string": "\"Open to All\""
      },
      {
        "file": "hooks/screens/useMyPetsScreen.ts",
        "string": "\"Delete Pet Profile\""
      },
      {
        "file": "hooks/screens/useMyPetsScreen.ts",
        "string": "\"Are you sure you want to delete this pet profile? This action cannot be undone.\""
      },
      {
        "file": "hooks/screens/useMyPetsScreen.ts",
        "string": "\"Pet profile deleted successfully\""
      },
      {
        "file": "hooks/screens/useMyPetsScreen.ts",
        "string": "\"Failed to delete pet profile. Please try again.\""
      },
      {
        "file": "hooks/screens/useModernSwipeScreen.ts",
        "string": "\"Failed to load pets. Please check your connection.\""
      },
      {
        "file": "hooks/screens/useModernSwipeScreen.ts",
        "string": "\"Error liking pet\""
      },
      {
        "file": "hooks/screens/useModernSwipeScreen.ts",
        "string": "\"Error passing pet\""
      },
      {
        "file": "hooks/screens/useModernSwipeScreen.ts",
        "string": "\"Super Like Sent!\""
      },
      {
        "file": "hooks/screens/useModernSwipeScreen.ts",
        "string": "\"Error super liking pet\""
      },
      {
        "file": "hooks/screens/useModernSwipeScreen.ts",
        "string": "\"Unknown error occurred\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Match removed\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Failed to unmatch\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Failed to unmatch. Please try again.\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"User blocked\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Failed to block user\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Failed to block user. Please try again.\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"User reported\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Thank you for reporting. We'"
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Failed to report\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Failed to report. Please try again.\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Inappropriate Content\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"User reported\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Thank you for reporting. We'"
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Failed to report\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Failed to report. Please try again.\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"User reported\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Thank you for reporting. We'"
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Failed to report\""
      },
      {
        "file": "hooks/screens/useMatchesActions.ts",
        "string": "\"Failed to report. Please try again.\""
      },
      {
        "file": "hooks/screens/useMapScreen.ts",
        "string": "\"Location error:\""
      },
      {
        "file": "hooks/screens/useMapScreen.ts",
        "string": "\"Location Error\""
      },
      {
        "file": "hooks/screens/useMapScreen.ts",
        "string": "\"Unable to get your current location.\""
      },
      {
        "file": "hooks/screens/useMapScreen.ts",
        "string": "\"Location Permission\""
      },
      {
        "file": "hooks/screens/useMapScreen.ts",
        "string": "\"Please enable location access to see nearby pets.\""
      },
      {
        "file": "hooks/screens/useMapScreen.ts",
        "string": "\"Location permission error:\""
      },
      {
        "file": "hooks/screens/useMapScreen.ts",
        "string": "\"MapSocket connected\""
      },
      {
        "file": "hooks/screens/useMapScreen.ts",
        "string": "\"MapSocket disconnected\""
      },
      {
        "file": "hooks/screens/useLoginScreen.ts",
        "string": "\"Email is required\""
      },
      {
        "file": "hooks/screens/useLoginScreen.ts",
        "string": "\"Email format is invalid\""
      },
      {
        "file": "hooks/screens/useLoginScreen.ts",
        "string": "\"Password is required\""
      },
      {
        "file": "hooks/screens/useLoginScreen.ts",
        "string": "\"Password must be at least 8 characters\""
      },
      {
        "file": "hooks/screens/useLoginScreen.ts",
        "string": "\"Login attempt:\""
      },
      {
        "file": "hooks/screens/useLoginScreen.ts",
        "string": "\"Login successful\""
      },
      {
        "file": "hooks/screens/useLoginScreen.ts",
        "string": "\"Login failed\""
      },
      {
        "file": "hooks/screens/useLoginScreen.ts",
        "string": "\"Login failed. Please check your credentials and try again.\""
      },
      {
        "file": "hooks/screens/useLoginScreen.ts",
        "string": "\"Login Failed\""
      },
      {
        "file": "hooks/screens/useLoginScreen.ts",
        "string": "\"ForgotPassword\""
      },
      {
        "file": "hooks/screens/useHomeScreen.ts",
        "string": "'Content-Type'"
      },
      {
        "file": "hooks/screens/useHomeScreen.ts",
        "string": "\"Failed to refresh data:\""
      },
      {
        "file": "hooks/screens/useHomeScreen.ts",
        "string": "\"Navigation error:\""
      },
      {
        "file": "hooks/screens/useForgotPasswordScreen.ts",
        "string": "\"ForgotPassword\""
      },
      {
        "file": "hooks/screens/useForgotPasswordScreen.ts",
        "string": "\"Email is required\""
      },
      {
        "file": "hooks/screens/useForgotPasswordScreen.ts",
        "string": "\"Please enter a valid email address\""
      },
      {
        "file": "hooks/screens/useForgotPasswordScreen.ts",
        "string": "\"Forgot password request\""
      },
      {
        "file": "hooks/screens/useForgotPasswordScreen.ts",
        "string": "\"Check Your Email\""
      },
      {
        "file": "hooks/screens/useForgotPasswordScreen.ts",
        "string": "\"Forgot password failed\""
      },
      {
        "file": "hooks/screens/useForgotPasswordScreen.ts",
        "string": "\"Failed to send password reset email. Please try again.\""
      },
      {
        "file": "hooks/screens/useEditProfileScreen.ts",
        "string": "\"Permission required\""
      },
      {
        "file": "hooks/screens/useEditProfileScreen.ts",
        "string": "\"Please enable photo library access to change your avatar.\""
      },
      {
        "file": "hooks/screens/useEditProfileScreen.ts",
        "string": "\"Error selecting avatar:\""
      },
      {
        "file": "hooks/screens/useEditProfileScreen.ts",
        "string": "\"Failed to select avatar. Please try again.\""
      },
      {
        "file": "hooks/screens/useEditProfileScreen.ts",
        "string": "\"Profile updated successfully\""
      },
      {
        "file": "hooks/screens/useEditProfileScreen.ts",
        "string": "\"Error updating profile:\""
      },
      {
        "file": "hooks/screens/useEditProfileScreen.ts",
        "string": "\"Failed to update profile. Please try again.\""
      },
      {
        "file": "hooks/screens/useEditProfileScreen.ts",
        "string": "\"Discard Changes\""
      },
      {
        "file": "hooks/screens/useEditProfileScreen.ts",
        "string": "\"Are you sure you want to discard your changes?\""
      },
      {
        "file": "hooks/screens/useEditProfileScreen.ts",
        "string": "\"Keep Editing\""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "\"Taking a break from dating\""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "\"Found a partner\""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "\"Not enjoying the app\""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "\"Privacy concerns\""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "\"Too many notifications\""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "\"Please select a reason for deactivation.\""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "\"Confirmation Required\""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "'Please type \""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "\"Account deactivated\""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "\"Account Deactivated\""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "\"Your account has been temporarily deactivated. You can reactivate it anytime by logging back in.\""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "\"Failed to deactivate account\""
      },
      {
        "file": "hooks/screens/useDeactivateAccountScreen.ts",
        "string": "\"Failed to deactivate account. Please try again.\""
      },
      {
        "file": "hooks/screens/useCreatePetScreen.ts",
        "string": "\"Pet name is required\""
      },
      {
        "file": "hooks/screens/useCreatePetScreen.ts",
        "string": "\"Species is required\""
      },
      {
        "file": "hooks/screens/useCreatePetScreen.ts",
        "string": "\"Breed is required\""
      },
      {
        "file": "hooks/screens/useCreatePetScreen.ts",
        "string": "\"Age is required\""
      },
      {
        "file": "hooks/screens/useCreatePetScreen.ts",
        "string": "\"Description is required\""
      },
      {
        "file": "hooks/screens/useCreatePetScreen.ts",
        "string": "\"At least one photo is required\""
      },
      {
        "file": "hooks/screens/useCreatePetScreen.ts",
        "string": "\"Email is required\""
      },
      {
        "file": "hooks/screens/useCreatePetScreen.ts",
        "string": "\"Validation Error\""
      },
      {
        "file": "hooks/screens/useCreatePetScreen.ts",
        "string": "\"Pet profile created successfully\""
      },
      {
        "file": "hooks/screens/useCreatePetScreen.ts",
        "string": "\"Failed to create pet profile:\""
      },
      {
        "file": "hooks/screens/useCreatePetScreen.ts",
        "string": "\"Failed to create pet profile. Please try again.\""
      },
      {
        "file": "hooks/screens/useChatScreen.ts",
        "string": "\"Reacted with emoji\""
      },
      {
        "file": "hooks/screens/useChatScreen.ts",
        "string": "\"Call Feature\""
      },
      {
        "file": "hooks/screens/useChatScreen.ts",
        "string": "\"Voice calling feature coming soon!\""
      },
      {
        "file": "hooks/screens/useChatScreen.ts",
        "string": "\"Call Feature\""
      },
      {
        "file": "hooks/screens/useChatScreen.ts",
        "string": "\"Video calling feature coming soon!\""
      },
      {
        "file": "hooks/screens/useChatScreen.ts",
        "string": "\"More Options\""
      },
      {
        "file": "hooks/screens/useChatScreen.ts",
        "string": "\"Additional options coming soon!\""
      },
      {
        "file": "hooks/screens/useChatScreen.ts",
        "string": "\"Sounds good! 👍\""
      },
      {
        "file": "hooks/screens/useChatScreen.ts",
        "string": "\"When works for you?\""
      },
      {
        "file": "hooks/screens/useChatScreen.ts",
        "string": "\"Perfect! 😊\""
      },
      {
        "file": "hooks/screens/useBlockedUsersScreen.ts",
        "string": "\"User blocked\""
      },
      {
        "file": "hooks/screens/useBlockedUsersScreen.ts",
        "string": "\"Failed to load blocked users:\""
      },
      {
        "file": "hooks/screens/useBlockedUsersScreen.ts",
        "string": "\"Failed to load blocked users. Please try again.\""
      },
      {
        "file": "hooks/screens/useBlockedUsersScreen.ts",
        "string": "\"User unblocked successfully\""
      },
      {
        "file": "hooks/screens/useBlockedUsersScreen.ts",
        "string": "\"User has been unblocked\""
      },
      {
        "file": "hooks/screens/useBlockedUsersScreen.ts",
        "string": "\"Failed to unblock user:\""
      },
      {
        "file": "hooks/screens/useBlockedUsersScreen.ts",
        "string": "\"Failed to unblock user. Please try again.\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Neutered/Spayed Only\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Fully Vaccinated\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Microchipped\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"House Trained\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Small Dogs Only\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Medium Dogs Only\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Large Dogs Only\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Low Energy (Couch Potato)\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Moderate Energy\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"High Energy (Athletic)\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Good with Children\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Good with Other Dogs\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Good with Cats\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Apartment Friendly\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Include Senior Pets (7+ years)\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Rescue Pets Only\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Reset Filters\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Are you sure you want to reset all advanced filters?\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Saving advanced filters\""
      },
      {
        "file": "hooks/screens/useAdvancedFiltersScreen.ts",
        "string": "\"Advanced filters saved successfully!\""
      },
      {
        "file": "hooks/screens/useAdoptionManagerScreen.ts",
        "string": "\"Unknown Pet\""
      },
      {
        "file": "hooks/screens/useAdoptionManagerScreen.ts",
        "string": "\"Pending Applicant\""
      },
      {
        "file": "hooks/screens/useAdoptionManagerScreen.ts",
        "string": "\"Failed to load data. Please try again.\""
      },
      {
        "file": "hooks/screens/useAdoptionManagerScreen.ts",
        "string": "\"Failed to load adoption data:\""
      },
      {
        "file": "hooks/screens/useAdoptionManagerScreen.ts",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "hooks/screens/useAdoptionManagerScreen.ts",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "hooks/screens/useAdoptionManagerScreen.ts",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "hooks/screens/useAdoptionManagerScreen.ts",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "hooks/screens/useAdoptionManagerScreen.ts",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "hooks/screens/useAdoptionManagerScreen.ts",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "hooks/screens/useAdoptionApplicationScreen.ts",
        "string": "\"AdoptionApplication\""
      },
      {
        "file": "hooks/screens/useAdoptionApplicationScreen.ts",
        "string": "\"Missing Information\""
      },
      {
        "file": "hooks/screens/useAdoptionApplicationScreen.ts",
        "string": "\"Please fill in all required fields.\""
      },
      {
        "file": "hooks/screens/useAdoptionApplicationScreen.ts",
        "string": "\"Submitting application:\""
      },
      {
        "file": "hooks/screens/useAdoptionApplicationScreen.ts",
        "string": "\"Application Submitted!\""
      },
      {
        "file": "hooks/screens/useAdoptionApplicationScreen.ts",
        "string": "\"Failed to submit application. Please try again.\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"AdminVerifications\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Alice Johnson\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Persian Cat\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Verification requests loaded\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Failed to load verification requests\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Failed to load verification requests\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Verification request approved\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Failed to approve request\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Failed to approve verification request\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Verification request rejected\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Failed to reject request\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Failed to reject verification request\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Verification request assigned\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Failed to assign request\""
      },
      {
        "file": "hooks/screens/useAdminVerificationsScreen.ts",
        "string": "\"Failed to assign verification request\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"AdminUploads\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Alice Johnson\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Inappropriate content detected\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Charlie Brown\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Admin uploads loaded\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Failed to load uploads\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Failed to load admin uploads\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Upload approved by admin\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Failed to approve upload\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Failed to approve upload\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Upload rejected by admin\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Failed to reject upload\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Failed to reject upload\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Upload flagged by admin\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Failed to flag upload\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Failed to flag upload\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Bulk upload approval completed\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Failed to bulk approve uploads\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Failed to bulk approve uploads\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Bulk upload rejection completed\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Failed to bulk reject uploads\""
      },
      {
        "file": "hooks/screens/useAdminUploadsScreen.ts",
        "string": "\"Failed to bulk reject uploads\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"AdminSecurity\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Alice Johnson\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X)\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"New York, US\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Multiple failed login attempts\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Unusual API usage pattern detected\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Rate limit exceeded - potential DDoS attempt\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"IP temporarily blocked\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed Login Threshold\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Alert when user fails to login more than 5 times\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"API Rate Limit\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Block IP after excessive API calls\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Suspicious Location\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Alert on logins from unusual locations\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Security data loaded\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to load security data\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to load admin security data\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Security Event\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Security event resolved\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to resolve event\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to resolve security event\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"IP address blocked\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to block IP\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to block IP address\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"IP address unblocked\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to unblock IP\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to unblock IP address\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Security rule enabled\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to enable rule\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to enable security rule\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Security rule disabled\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to disable rule\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to disable security rule\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Security rule updated\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to update rule\""
      },
      {
        "file": "hooks/screens/useAdminSecurityScreen.ts",
        "string": "\"Failed to update security rule\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"AdminDashboard\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"New pet verification submitted\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Content report filed\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"New user registered\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"New match created\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Admin dashboard data loaded\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Failed to load dashboard\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Failed to load admin dashboard\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"AdminVerifications\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"AdminUploads\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"AdminAnalytics\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"AdminSecurity\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"AdminBilling\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Review Reports\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Moderate Reports\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Navigate to reports moderation\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Verify Pets\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"System Health\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"All systems normal\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Check system status\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"System Health\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Export Data\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Download system reports\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Export Data\""
      },
      {
        "file": "hooks/screens/useAdminDashboardScreen.ts",
        "string": "\"Data export feature coming soon\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Alice Johnson\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Alice Johnson\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Hi! I think we would be a great match for our pets!\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Charlie Brown\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Diana Wilson\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Diana Wilson\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"This conversation violates our community guidelines\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Inappropriate content\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Admin chats loaded\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Failed to load chats\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Failed to load admin chats\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Alice Johnson\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Hi! I think we would be a great match for our pets!\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Hello! Tell me more about your dog.\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Alice Johnson\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"He loves playing fetch and is very friendly!\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Chat messages loaded\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Failed to load messages\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Failed to load chat messages\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Message deleted by admin\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Failed to delete message\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Failed to delete message\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"This will prevent both users from communicating. Are you sure?\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Chat blocked by admin\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Failed to block chat\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Failed to block chat\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Warning Sent\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Both users have been warned about community guidelines.\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Chat warning sent by admin\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Failed to send warning\""
      },
      {
        "file": "hooks/screens/useAdminChatsScreen.ts",
        "string": "\"Failed to send chat warning\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"AdminBilling\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Alice Johnson\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Premium Plan - Monthly\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Super Like Boost\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Card declined\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Charlie Brown\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Subscription refund\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Alice Johnson\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Diana Wilson\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Billing data loaded\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Failed to load billing data\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Failed to load admin billing data\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Transaction Details\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Subscription Details\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Process Refund\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Transaction refunded\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Failed to process refund\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Failed to refund transaction\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Cancel Subscription\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"This will cancel the subscription at the end of the current billing period. The user will retain access until then.\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Subscription cancelled\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Failed to cancel subscription\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Failed to cancel subscription\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Subscription reactivated\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Failed to reactivate subscription\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Failed to reactivate subscription\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Subscription plan updated\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Failed to update subscription plan\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Failed to update subscription plan\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Export Complete\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Billing data exported\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Failed to export billing data\""
      },
      {
        "file": "hooks/screens/useAdminBillingScreen.ts",
        "string": "\"Failed to export billing data\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"AdminAnalytics\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Persian Cat\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"German Shepherd\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Siamese Cat\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Los Angeles\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Total Users\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Active Users\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Total Matches\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Monthly Revenue\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"System Uptime\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Admin analytics loaded\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Failed to load analytics\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Failed to load admin analytics\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Analytics data exported\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Failed to export data\""
      },
      {
        "file": "hooks/screens/useAdminAnalyticsScreen.ts",
        "string": "\"Failed to export analytics data\""
      },
      {
        "file": "hooks/screens/useARScentTrailsScreen.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/screens/useARScentTrailsScreen.ts",
        "string": "\"Siberian Husky\""
      },
      {
        "file": "hooks/screens/useARScentTrailsScreen.ts",
        "string": "\"Scan Complete\""
      },
      {
        "file": "hooks/screens/useARScentTrailsScreen.ts",
        "string": "\"Found 3 scent trails nearby!\""
      },
      {
        "file": "hooks/screens/useARScentTrailsScreen.ts",
        "string": "\"Follow Trail\""
      },
      {
        "file": "hooks/screens/useARScentTrailsScreen.ts",
        "string": "\"Starting navigation to scent trail...\""
      },
      {
        "file": "hooks/screens/useAICompatibilityScreen.ts",
        "string": "\"Error loading specific pets\""
      },
      {
        "file": "hooks/screens/useAICompatibilityScreen.ts",
        "string": "\"Selection Required\""
      },
      {
        "file": "hooks/screens/useAICompatibilityScreen.ts",
        "string": "\"Please select two pets to analyze compatibility.\""
      },
      {
        "file": "hooks/screens/useAICompatibilityScreen.ts",
        "string": "\"Compatibility analysis failed\""
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"Professional\""
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"Permission needed\""
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"We need camera roll permissions to analyze your pet photo\""
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"Missing Information\""
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"Please enter your pet'"
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"Bio generation failed\""
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"Pet profile updated successfully!\""
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"Saved Locally\""
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"Bio has been saved to your device\""
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"Saved Locally\""
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"Bio has been saved to your device\""
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"Saved Locally\""
      },
      {
        "file": "hooks/screens/useAIBioScreen.ts",
        "string": "\"Bio has been saved to your device\""
      },
      {
        "file": "hooks/screens/__tests__/useUserIntentScreen.test.ts",
        "string": "\"Find a Match\""
      },
      {
        "file": "hooks/screens/__tests__/useUserIntentScreen.test.ts",
        "string": "\"Find a pet for mine\""
      },
      {
        "file": "hooks/screens/__tests__/useUserIntentScreen.test.ts",
        "string": "\"Find a Home\""
      },
      {
        "file": "hooks/screens/__tests__/useUserIntentScreen.test.ts",
        "string": "\"Find a home for my pet\""
      },
      {
        "file": "hooks/screens/__tests__/useUserIntentScreen.test.ts",
        "string": "\"Just Browsing\""
      },
      {
        "file": "hooks/screens/__tests__/useUserIntentScreen.test.ts",
        "string": "\"Looking around\""
      },
      {
        "file": "hooks/screens/__tests__/useUserIntentScreen.test.ts",
        "string": "\"PetProfileSetup\""
      },
      {
        "file": "hooks/screens/__tests__/useUserIntentScreen.test.ts",
        "string": "\"Network error\""
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Initial State and Data Loading'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'SettingsScreen'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Settings not available'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Settings not available'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Privacy Settings'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Notification Settings'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'App Preferences'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Account Management'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Account deletion requested'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'User request'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'User request'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Device Management'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Settings Validation'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Invalid privacy settings'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Invalid age range'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Invalid notification settings'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Cache Management'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Invalid preference value'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'VALIDATION_ERROR'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Invalid preference value'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Real-time Updates'"
      },
      {
        "file": "hooks/screens/__tests__/useSettingsScreen.test.ts",
        "string": "'Analytics and Tracking'"
      },
      {
        "file": "hooks/screens/__tests__/useRegisterScreen.test.ts",
        "string": "\"First name is required\""
      },
      {
        "file": "hooks/screens/__tests__/useRegisterScreen.test.ts",
        "string": "\"Last name is required\""
      },
      {
        "file": "hooks/screens/__tests__/useRegisterScreen.test.ts",
        "string": "\"Email is required\""
      },
      {
        "file": "hooks/screens/__tests__/useRegisterScreen.test.ts",
        "string": "\"Password is required\""
      },
      {
        "file": "hooks/screens/__tests__/useRegisterScreen.test.ts",
        "string": "\"Date of birth is required\""
      },
      {
        "file": "hooks/screens/__tests__/useRegisterScreen.test.ts",
        "string": "\"Please enter a valid email address\""
      },
      {
        "file": "hooks/screens/__tests__/useRegisterScreen.test.ts",
        "string": "\"Password must be at least 8 characters\""
      },
      {
        "file": "hooks/screens/__tests__/useRegisterScreen.test.ts",
        "string": "\"Passwords do not match\""
      },
      {
        "file": "hooks/screens/__tests__/useRegisterScreen.test.ts",
        "string": "\"You must be at least 18 years old\""
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'I love pets and outdoor activities!'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Initial State and Data Loading'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'ProfileScreen'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Profile not found'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Profile not found'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Profile Updates'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Updated bio!'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Updated bio!'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Update failed'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Update failed'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Invalid age'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Bio is too long'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Photo Management'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Photo library permission denied'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Pet Management'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Privacy and Settings'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Profile Completion'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Add profile photo'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Write a bio'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Add pet information'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Statistics and Analytics'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Cache Management'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Storage full'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Real-time Updates'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Buddy Updated'"
      },
      {
        "file": "hooks/screens/__tests__/useProfileScreen.test.ts",
        "string": "'Buddy Updated'"
      },
      {
        "file": "hooks/screens/__tests__/usePremiumScreen.test.ts",
        "string": "\"Network error\""
      },
      {
        "file": "hooks/screens/__tests__/usePremiumScreen.test.ts",
        "string": "\"Subscription Error\""
      },
      {
        "file": "hooks/screens/__tests__/usePremiumScreen.test.ts",
        "string": "\"Failed to start checkout process. Please try again.\""
      },
      {
        "file": "hooks/screens/__tests__/usePremiumScreen.test.ts",
        "string": "\"Subscription Error\""
      },
      {
        "file": "hooks/screens/__tests__/usePremiumScreen.test.ts",
        "string": "\"Failed to start checkout process. Please try again.\""
      },
      {
        "file": "hooks/screens/__tests__/usePremiumScreen.test.ts",
        "string": "\"Unlimited swipes\""
      },
      {
        "file": "hooks/screens/__tests__/usePremiumScreen.test.ts",
        "string": "\"AI-powered recommendations\""
      },
      {
        "file": "hooks/screens/__tests__/usePetProfileSetupScreen.test.ts",
        "string": "\"PreferencesSetup\""
      },
      {
        "file": "hooks/screens/__tests__/usePetProfileSetupScreen.test.ts",
        "string": "\"Submission failed\""
      },
      {
        "file": "hooks/screens/__tests__/usePetProfileSetupScreen.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/screens/__tests__/usePetProfileSetupScreen.test.ts",
        "string": "\"Friendly dog\""
      },
      {
        "file": "hooks/screens/__tests__/usePetProfileSetupScreen.test.ts",
        "string": "\"Validation error\""
      },
      {
        "file": "hooks/screens/__tests__/usePetProfileSetupScreen.test.ts",
        "string": "\"PreferencesSetup\""
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'Swipe Actions'"
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'State Management'"
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'Filter Management'"
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'Filter error'"
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'Current Pet Management'"
      },
      {
        "file": "hooks/screens/__tests__/useModernSwipeScreen.test.ts",
        "string": "'Match Modal'"
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Are you sure you want to unmatch with Buddy?\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Match removed\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Failed to unmatch\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Failed to unmatch. Please try again.\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Are you sure you want to block Max? This action cannot be undone.\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"User blocked\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Failed to block user\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Failed to block user. Please try again.\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Why are you reporting Charlie?\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Inappropriate Content\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"User reported\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Thank you for reporting. We'"
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Inappropriate Content\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"User reported\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"User reported\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Failed to report\""
      },
      {
        "file": "hooks/screens/__tests__/useMatchesActions.test.ts",
        "string": "\"Failed to report. Please try again.\""
      },
      {
        "file": "hooks/screens/__tests__/useLoginScreen.test.ts",
        "string": "\"Please enter a valid email address\""
      },
      {
        "file": "hooks/screens/__tests__/useLoginScreen.test.ts",
        "string": "\"Password is required\""
      },
      {
        "file": "hooks/screens/__tests__/useLoginScreen.test.ts",
        "string": "\"ForgotPassword\""
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Siamese Cat'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Boost Profile'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'You matched with Buddy'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'New Message'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Luna sent you a message'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Initial State and Data Loading'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Data Refresh and Pull-to-Refresh'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Refresh failed'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Refresh failed'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Activity Feed Management'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Quick Actions'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Recommendations'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'User Stats and Analytics'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Real-time Updates'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Super Like!'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Someone super liked your pet'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Cache Management'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'API unavailable'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'API unavailable'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Feed unavailable'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/screens/__tests__/useHomeScreen.test.ts",
        "string": "'Performance and Analytics'"
      },
      {
        "file": "hooks/screens/__tests__/useForgotPasswordScreen.test.ts",
        "string": "\"Initial State\""
      },
      {
        "file": "hooks/screens/__tests__/useDeactivateAccountScreen.test.ts",
        "string": "\"Initial State\""
      },
      {
        "file": "hooks/screens/__tests__/useDeactivateAccountScreen.test.ts",
        "string": "\"Taking a break from dating\""
      },
      {
        "file": "hooks/screens/__tests__/useDeactivateAccountScreen.test.ts",
        "string": "\"Found a partner\""
      },
      {
        "file": "hooks/screens/__tests__/useDeactivateAccountScreen.test.ts",
        "string": "\"Found a partner\""
      },
      {
        "file": "hooks/screens/__tests__/useDeactivateAccountScreen.test.ts",
        "string": "\"Please select a reason for deactivation.\""
      },
      {
        "file": "hooks/screens/__tests__/useDeactivateAccountScreen.test.ts",
        "string": "\"Found a partner\""
      },
      {
        "file": "hooks/screens/__tests__/useDeactivateAccountScreen.test.ts",
        "string": "\"Confirmation Required\""
      },
      {
        "file": "hooks/screens/__tests__/useDeactivateAccountScreen.test.ts",
        "string": "'Please type \""
      },
      {
        "file": "hooks/screens/__tests__/useDeactivateAccountScreen.test.ts",
        "string": "\"Account deactivated\""
      },
      {
        "file": "hooks/screens/__tests__/useDeactivateAccountScreen.test.ts",
        "string": "\"Found a partner\""
      },
      {
        "file": "hooks/screens/__tests__/useDeactivateAccountScreen.test.ts",
        "string": "\"Found a partner\""
      },
      {
        "file": "hooks/screens/__tests__/useDeactivateAccountScreen.test.ts",
        "string": "\"Account Deactivated\""
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'This is a draft message'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Input Management'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'New message'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'New message'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Test message'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Test message'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Message Sending'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Test message'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Test message'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Trimmed message'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Typing Indicators'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Quick Replies'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Sounds good! 👍'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Sounds good! 👍'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Sounds good! 👍'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Reacted with emoji'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Call Handlers'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Scroll Position'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Data Integration'"
      },
      {
        "file": "hooks/screens/__tests__/useChatScreen.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "hooks/screens/__tests__/useBlockedUsersScreen.test.ts",
        "string": "\"Initial State\""
      },
      {
        "file": "hooks/screens/__tests__/useBlockedUsersScreen.test.ts",
        "string": "\"Failed to load blocked users. Please try again.\""
      },
      {
        "file": "hooks/screens/__tests__/useBlockedUsersScreen.test.ts",
        "string": "\"User has been unblocked\""
      },
      {
        "file": "hooks/screens/__tests__/useBlockedUsersScreen.test.ts",
        "string": "\"Failed to unblock user. Please try again.\""
      },
      {
        "file": "hooks/screens/__tests__/useAdvancedFiltersScreen.test.ts",
        "string": "\"Initial State\""
      },
      {
        "file": "hooks/screens/__tests__/useAdvancedFiltersScreen.test.ts",
        "string": "\"Reset Filters\""
      },
      {
        "file": "hooks/screens/__tests__/useAdvancedFiltersScreen.test.ts",
        "string": "\"Are you sure you want to reset all advanced filters?\""
      },
      {
        "file": "hooks/screens/__tests__/useAdvancedFiltersScreen.test.ts",
        "string": "\"Advanced filters saved successfully!\""
      },
      {
        "file": "hooks/screens/__tests__/useAdminDashboardScreen.test.ts",
        "string": "\"AdminVerifications\""
      },
      {
        "file": "hooks/screens/__tests__/useAdminDashboardScreen.test.ts",
        "string": "\"AdminUploads\""
      },
      {
        "file": "hooks/screens/__tests__/useAdminDashboardScreen.test.ts",
        "string": "\"AdminAnalytics\""
      },
      {
        "file": "hooks/screens/__tests__/useAdminDashboardScreen.test.ts",
        "string": "\"AdminSecurity\""
      },
      {
        "file": "hooks/screens/__tests__/useAdminDashboardScreen.test.ts",
        "string": "\"AdminBilling\""
      },
      {
        "file": "hooks/screens/__tests__/useAdminDashboardScreen.test.ts",
        "string": "\"AdminVerifications\""
      },
      {
        "file": "hooks/screens/__tests__/useAICompatibilityScreen.test.ts",
        "string": "\"Selection Required\""
      },
      {
        "file": "hooks/screens/__tests__/useAICompatibilityScreen.test.ts",
        "string": "\"Please select two pets to analyze compatibility.\""
      },
      {
        "file": "hooks/screens/__tests__/useAICompatibilityScreen.test.ts",
        "string": "\"Analysis failed\""
      },
      {
        "file": "hooks/screens/__tests__/useAICompatibilityScreen.test.ts",
        "string": "\"Great match!\""
      },
      {
        "file": "hooks/screens/__tests__/useAICompatibilityScreen.test.ts",
        "string": "\"Failed to analyze\""
      },
      {
        "file": "hooks/screens/__tests__/useAICompatibilityScreen.test.ts",
        "string": "\"Failed to analyze\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Meet Buddy! A friendly dog.\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Permission needed\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"We need camera roll permissions to analyze your pet photo\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Missing Information\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Please enter your pet'"
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Pet profile updated successfully!\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Saved Locally\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Bio has been saved to your device\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Saved Locally\""
      },
      {
        "file": "hooks/screens/__tests__/useAIBioScreen.test.ts",
        "string": "\"Bio has been saved to your device\""
      },
      {
        "file": "hooks/screens/__tests__/e2e/hook-e2e.test.tsx",
        "string": "\"E2E: Authentication Flow\""
      },
      {
        "file": "hooks/screens/__tests__/e2e/hook-e2e.test.tsx",
        "string": "\"Create Account\""
      },
      {
        "file": "hooks/screens/__tests__/e2e/hook-e2e.test.tsx",
        "string": "\"Send Reset Link\""
      },
      {
        "file": "hooks/screens/__tests__/e2e/hook-e2e.test.tsx",
        "string": "\"E2E: Error Handling\""
      },
      {
        "file": "hooks/screens/__tests__/e2e/hook-e2e.test.tsx",
        "string": "\"Create Account\""
      },
      {
        "file": "hooks/screens/__tests__/e2e/hook-e2e.test.tsx",
        "string": "\"E2E: Navigation\""
      },
      {
        "file": "hooks/performance/usePerformanceMonitor.ts",
        "string": "\"Hook Performance\""
      },
      {
        "file": "hooks/navigation/__tests__/useTabReselectRefresh.test.ts",
        "string": "'Basic Setup'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabReselectRefresh.test.ts",
        "string": "'Single Tap Behavior (far from top)'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabReselectRefresh.test.ts",
        "string": "'Single Tap Behavior (near top)'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabReselectRefresh.test.ts",
        "string": "'Double Tap Behavior'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabReselectRefresh.test.ts",
        "string": "'Cooldown Protection'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabReselectRefresh.test.ts",
        "string": "'Focus State'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabReselectRefresh.test.ts",
        "string": "'Haptics Control'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabReselectRefresh.test.ts",
        "string": "'Custom Thresholds'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabReselectRefresh.test.ts",
        "string": "'Dependency Updates'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabDoublePress.test.ts",
        "string": "'Basic Functionality'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabDoublePress.test.ts",
        "string": "'Callback Execution'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabDoublePress.test.ts",
        "string": "'Callback Updates'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabDoublePress.test.ts",
        "string": "'Navigation Changes'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabDoublePress.test.ts",
        "string": "'Cleanup error'"
      },
      {
        "file": "hooks/navigation/__tests__/useTabDoublePress.test.ts",
        "string": "'Hook Invocation'"
      },
      {
        "file": "hooks/navigation/__tests__/useScrollOffsetTracker.test.ts",
        "string": "'Basic Functionality'"
      },
      {
        "file": "hooks/navigation/__tests__/useScrollOffsetTracker.test.ts",
        "string": "'Callback Stability'"
      },
      {
        "file": "hooks/navigation/__tests__/useScrollOffsetTracker.test.ts",
        "string": "'Integration with FlatList'"
      },
      {
        "file": "hooks/navigation/__tests__/useScrollOffsetTracker.test.ts",
        "string": "'Multiple Instances'"
      },
      {
        "file": "hooks/navigation/__tests__/navigation.integration.test.ts",
        "string": "'Navigation System Integration'"
      },
      {
        "file": "hooks/navigation/__tests__/navigation.integration.test.ts",
        "string": "'Complete Flow: Scroll + Reselect'"
      },
      {
        "file": "hooks/navigation/__tests__/navigation.integration.test.ts",
        "string": "'Multiple Hooks Integration'"
      },
      {
        "file": "hooks/navigation/__tests__/navigation.integration.test.ts",
        "string": "'Real-World Scenarios'"
      },
      {
        "file": "hooks/navigation/__tests__/navigation.integration.test.ts",
        "string": "'Performance and Edge Cases'"
      },
      {
        "file": "hooks/navigation/__tests__/navigation.integration.test.ts",
        "string": "'Cross-Component Communication'"
      },
      {
        "file": "hooks/domains/social/useStories.ts",
        "string": "\"Reached end of stories\""
      },
      {
        "file": "hooks/domains/social/useStories.ts",
        "string": "\"Failed to mark story as viewed\""
      },
      {
        "file": "hooks/domains/social/useLeaderboard.ts",
        "string": "\"Failed to load categories:\""
      },
      {
        "file": "hooks/domains/social/useLeaderboard.ts",
        "string": "\"Failed to load leaderboard:\""
      },
      {
        "file": "hooks/domains/social/useLeaderboard.ts",
        "string": "\"Failed to load user rank:\""
      },
      {
        "file": "hooks/domains/social/useLeaderboard.ts",
        "string": "\"Failed to load initial data:\""
      },
      {
        "file": "hooks/domains/social/useLeaderboard.ts",
        "string": "\"Failed to refresh data:\""
      },
      {
        "file": "hooks/domains/social/useLeaderboard.ts",
        "string": "\"Failed to load more entries:\""
      },
      {
        "file": "hooks/domains/settings/useSettingsSync.ts",
        "string": "\"Settings synced successfully\""
      },
      {
        "file": "hooks/domains/settings/useSettingsSync.ts",
        "string": "\"Failed to sync settings\""
      },
      {
        "file": "hooks/domains/settings/useSettingsSync.ts",
        "string": "\"Failed to sync settings\""
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsSync.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsSync.test.ts",
        "string": "'Sync Settings'"
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsSync.test.ts",
        "string": "'Settings synced successfully'"
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsSync.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsSync.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsSync.test.ts",
        "string": "'Failed to sync settings'"
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsSync.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsSync.test.ts",
        "string": "'String error'"
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsSync.test.ts",
        "string": "'Failed to sync settings'"
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsSync.test.ts",
        "string": "'State Management'"
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsSync.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsSync.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsPersistence.test.ts",
        "string": "\"Storage error\""
      },
      {
        "file": "hooks/domains/settings/__tests__/useSettingsPersistence.test.ts",
        "string": "\"Clear error\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Enable Emergency Mode\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Disable Emergency Mode\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Emergency mode will limit interactions and enhance safety features.\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"This will restore normal app functionality.\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Emergency Mode\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Emergency mode enabled. Stay safe!\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Emergency mode disabled\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Reporting user\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Report Submitted\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Thank you for your report. We will review it shortly.\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Failed to report user\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Failed to submit report. Please try again.\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Contact Support\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Support contact options coming soon!\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Safety Guidelines\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Safety guidelines will be available soon!\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Privacy Settings\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Navigate to Privacy Settings screen (coming soon)\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Emergency Contacts\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Emergency contact setup coming soon\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Safety Tips\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Safety tips and guidelines will be available soon\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Report User\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Report inappropriate behavior or content\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Report User\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"This feature is coming soon. Please contact support for urgent issues.\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Block & Report\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Block a user and report their behavior\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Navigate back to profile for blocking\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Privacy Settings\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Control who can see your profile and contact you\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Emergency Contacts\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Set up emergency contacts for safety\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Safety Tips\""
      },
      {
        "file": "hooks/domains/safety/useSafetyCenter.ts",
        "string": "\"Learn about online safety and best practices\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"User Reports\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Reports moderation coming soon!\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Content Moderation\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Content moderation coming soon!\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Navigate to message monitoring\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"User Management\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"User management coming soon!\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Moderation analytics coming soon!\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Moderation settings coming soon!\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Refreshing moderation stats\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Failed to refresh moderation stats\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"User Reports\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Review and moderate reported content\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Content Moderation\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Review photos and profiles for violations\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Message Monitoring\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Monitor chat messages for inappropriate content\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"User Management\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Manage user accounts and permissions\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Moderation Analytics\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"View moderation statistics and reports\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Moderation Settings\""
      },
      {
        "file": "hooks/domains/safety/useModerationTools.ts",
        "string": "\"Configure moderation rules and thresholds\""
      },
      {
        "file": "hooks/domains/safety/useBlockedUsers.ts",
        "string": "\"Loading blocked users\""
      },
      {
        "file": "hooks/domains/safety/useBlockedUsers.ts",
        "string": "\"Inappropriate behavior\""
      },
      {
        "file": "hooks/domains/safety/useBlockedUsers.ts",
        "string": "\"Spam messages\""
      },
      {
        "file": "hooks/domains/safety/useBlockedUsers.ts",
        "string": "\"Failed to load blocked users\""
      },
      {
        "file": "hooks/domains/safety/useBlockedUsers.ts",
        "string": "\"Failed to load blocked users. Please try again.\""
      },
      {
        "file": "hooks/domains/safety/useBlockedUsers.ts",
        "string": "\"Unblock User\""
      },
      {
        "file": "hooks/domains/safety/useBlockedUsers.ts",
        "string": "\"Unblocking user\""
      },
      {
        "file": "hooks/domains/safety/useBlockedUsers.ts",
        "string": "\"Failed to unblock user\""
      },
      {
        "file": "hooks/domains/safety/useBlockedUsers.ts",
        "string": "\"Failed to unblock user. Please try again.\""
      },
      {
        "file": "hooks/domains/safety/useBlockedUsers.ts",
        "string": "\"Blocking user\""
      },
      {
        "file": "hooks/domains/safety/useBlockedUsers.ts",
        "string": "\"Failed to block user\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Enable Emergency Mode\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Emergency mode will limit interactions and enhance safety features.\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Inappropriate behavior\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Report Submitted\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Thank you for your report. We will review it shortly.\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Report User\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"This feature is coming soon. Please contact support for urgent issues.\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Contact Support\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Support contact options coming soon!\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Safety Guidelines\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Safety guidelines will be available soon!\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Privacy Settings\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Navigate to Privacy Settings screen (coming soon)\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Emergency Contacts\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Emergency contact setup coming soon\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Safety Tips\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Safety tips and guidelines will be available soon\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Privacy Settings\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useSafetyCenter.test.ts",
        "string": "\"Emergency Contacts\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useBlockedUsers.test.ts",
        "string": "\"Unblock User\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useBlockedUsers.test.ts",
        "string": "\"Are you sure you want to unblock John Doe?\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useBlockedUsers.test.ts",
        "string": "\"Network error\""
      },
      {
        "file": "hooks/domains/safety/__tests__/useBlockedUsers.test.ts",
        "string": "\"Inappropriate behavior\""
      },
      {
        "file": "hooks/domains/profile/useProfileUpdate.ts",
        "string": "\"User not authenticated\""
      },
      {
        "file": "hooks/domains/profile/useProfileUpdate.ts",
        "string": "\"Profile updated successfully\""
      },
      {
        "file": "hooks/domains/profile/useProfileUpdate.ts",
        "string": "\"Profile updated successfully!\""
      },
      {
        "file": "hooks/domains/profile/useProfileUpdate.ts",
        "string": "\"Failed to update profile\""
      },
      {
        "file": "hooks/domains/profile/useProfileUpdate.ts",
        "string": "\"Failed to update profile\""
      },
      {
        "file": "hooks/domains/profile/useProfileData.ts",
        "string": "\"Profile data refreshed\""
      },
      {
        "file": "hooks/domains/profile/useProfileData.ts",
        "string": "\"Failed to load profile\""
      },
      {
        "file": "hooks/domains/profile/useProfileData.ts",
        "string": "\"Failed to refresh profile\""
      },
      {
        "file": "hooks/domains/profile/usePhotoManagement.ts",
        "string": "\"Permission needed\""
      },
      {
        "file": "hooks/domains/profile/usePhotoManagement.ts",
        "string": "\"Please grant permission to access your photos\""
      },
      {
        "file": "hooks/domains/profile/usePhotoManagement.ts",
        "string": "\"Maximum photos reached\""
      },
      {
        "file": "hooks/domains/profile/usePhotoManagement.ts",
        "string": "\"Please add at least one photo\""
      },
      {
        "file": "hooks/domains/profile/usePhotoManagement.ts",
        "string": "\"Photos uploaded successfully\""
      },
      {
        "file": "hooks/domains/profile/usePhotoManagement.ts",
        "string": "\"Failed to upload photos\""
      },
      {
        "file": "hooks/domains/profile/usePhotoManagement.ts",
        "string": "\"Failed to upload photos. Please try again.\""
      },
      {
        "file": "hooks/domains/profile/__tests__/useProfileData.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/domains/profile/__tests__/useProfileData.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/domains/profile/__tests__/useProfileData.test.ts",
        "string": "\"Profile data refreshed\""
      },
      {
        "file": "hooks/domains/profile/__tests__/useProfileData.test.ts",
        "string": "\"Failed to load pets\""
      },
      {
        "file": "hooks/domains/profile/__tests__/useProfileData.test.ts",
        "string": "\"Failed to refresh profile\""
      },
      {
        "file": "hooks/domains/profile/__tests__/useProfileData.test.ts",
        "string": "\"String error\""
      },
      {
        "file": "hooks/domains/profile/__tests__/useProfileData.test.ts",
        "string": "\"Failed to load profile\""
      },
      {
        "file": "hooks/domains/profile/__tests__/useProfileData.test.ts",
        "string": "\"Profile data refreshed\""
      },
      {
        "file": "hooks/domains/profile/__tests__/useProfileData.test.ts",
        "string": "\"Network error\""
      },
      {
        "file": "hooks/domains/profile/__tests__/useProfileData.test.ts",
        "string": "\"Network error\""
      },
      {
        "file": "hooks/domains/profile/__tests__/profile-hooks.integration.test.ts",
        "string": "\"Hooks Integration - Profile Management Flow\""
      },
      {
        "file": "hooks/domains/profile/__tests__/profile-hooks.integration.test.ts",
        "string": "\"Updated bio\""
      },
      {
        "file": "hooks/domains/profile/__tests__/profile-hooks.integration.test.ts",
        "string": "\"Network error\""
      },
      {
        "file": "hooks/domains/profile/__tests__/profile-hooks.integration.test.ts",
        "string": "\"Network error\""
      },
      {
        "file": "hooks/domains/premium/useSubscriptionState.ts",
        "string": "\"Activating subscription\""
      },
      {
        "file": "hooks/domains/premium/useSubscriptionState.ts",
        "string": "\"Failed to activate subscription\""
      },
      {
        "file": "hooks/domains/premium/useSubscriptionState.ts",
        "string": "\"Failed to activate subscription\""
      },
      {
        "file": "hooks/domains/premium/useSubscriptionState.ts",
        "string": "\"Subscription cancelled\""
      },
      {
        "file": "hooks/domains/premium/useSubscriptionState.ts",
        "string": "\"Failed to cancel subscription\""
      },
      {
        "file": "hooks/domains/premium/useSubscriptionState.ts",
        "string": "\"Failed to cancel subscription\""
      },
      {
        "file": "hooks/domains/premium/useSubscriptionState.ts",
        "string": "\"Updating payment method\""
      },
      {
        "file": "hooks/domains/premium/useSubscriptionState.ts",
        "string": "\"Failed to update payment method\""
      },
      {
        "file": "hooks/domains/premium/useSubscriptionState.ts",
        "string": "\"Failed to update payment method\""
      },
      {
        "file": "hooks/domains/premium/usePremiumStatus.ts",
        "string": "\"Premium status refreshed\""
      },
      {
        "file": "hooks/domains/premium/usePremiumStatus.ts",
        "string": "\"Failed to fetch premium status\""
      },
      {
        "file": "hooks/domains/premium/usePremiumStatus.ts",
        "string": "\"Failed to refresh premium status\""
      },
      {
        "file": "hooks/domains/premium/useFeatureGating.ts",
        "string": "\"Super Likes\""
      },
      {
        "file": "hooks/domains/premium/useFeatureGating.ts",
        "string": "\"Failed to check feature access\""
      },
      {
        "file": "hooks/domains/premium/useFeatureGating.ts",
        "string": "\"Unable to verify premium status\""
      },
      {
        "file": "hooks/domains/premium/useFeatureGating.ts",
        "string": "\"Failed to track feature usage\""
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Premium Monthly'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Visa **** 4242'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Initial State'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Subscription Management'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Payment failed'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Payment failed'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Premium Yearly'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Premium Yearly'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Payment Method Management'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Stripe Payment Sheet'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'PawfectMatch'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Visa **** 4242'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Invalid client secret'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Subscription Status Utilities'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Billing History'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Premium Monthly'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Processing States'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Payment declined'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Payment declined'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useSubscriptionState.test.ts",
        "string": "'Cache Management'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Initial State'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Status Checking'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Cache Management'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Auto Refresh'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Refresh error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Refresh error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Subscription Details'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Details error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Details error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Network Error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Network Error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Subscription service unavailable'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Subscription service unavailable'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Storage full'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/usePremiumStatus.test.ts",
        "string": "'Hook Configuration'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Initial State'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Feature Access Control'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Usage Limits'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Usage Tracking'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Feature Configurations'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Refresh and Updates'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Refresh failed'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Refresh failed'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Loading failed'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Loading failed'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Premium Status Integration'"
      },
      {
        "file": "hooks/domains/premium/__tests__/useFeatureGating.test.ts",
        "string": "'Cache Management'"
      },
      {
        "file": "hooks/domains/onboarding/useWelcome.ts",
        "string": "\"Welcome screen animations initialized\""
      },
      {
        "file": "hooks/domains/onboarding/useWelcome.ts",
        "string": "\"Failed to initialize welcome animations\""
      },
      {
        "file": "hooks/domains/onboarding/useWelcome.ts",
        "string": "\"User started onboarding flow\""
      },
      {
        "file": "hooks/domains/onboarding/useWelcome.ts",
        "string": "\"User skipped onboarding\""
      },
      {
        "file": "hooks/domains/onboarding/useUserIntent.ts",
        "string": "\"Find My Perfect Pet\""
      },
      {
        "file": "hooks/domains/onboarding/useUserIntent.ts",
        "string": "\"Connect with Pet Lovers\""
      },
      {
        "file": "hooks/domains/onboarding/useUserIntent.ts",
        "string": "\"I want to meet other pet owners and build a community\""
      },
      {
        "file": "hooks/domains/onboarding/useUserIntent.ts",
        "string": "\"Both Adoption & Community\""
      },
      {
        "file": "hooks/domains/onboarding/useUserIntent.ts",
        "string": "\"User selected intent\""
      },
      {
        "file": "hooks/domains/onboarding/useUserIntent.ts",
        "string": "\"No intent selected\""
      },
      {
        "file": "hooks/domains/onboarding/useUserIntent.ts",
        "string": "\"User confirmed intent\""
      },
      {
        "file": "hooks/domains/onboarding/useUserIntent.ts",
        "string": "\"Failed to confirm user intent\""
      },
      {
        "file": "hooks/domains/onboarding/useUserIntent.ts",
        "string": "\"User intent selection reset\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Labrador Retriever\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"German Shepherd\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Yorkshire Terrier\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Mixed Breed\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Low Activity\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Calm, relaxed lifestyle\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Moderate Activity\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Regular walks and play\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"High Activity\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Active lifestyle with lots of exercise\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Under 20 lbs\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Over 60 lbs\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Please complete all required preferences\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Submitting user preferences\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"User preferences saved successfully\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Failed to save preferences\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"Failed to submit preferences\""
      },
      {
        "file": "hooks/domains/onboarding/usePreferencesSetup.ts",
        "string": "\"User preferences reset to defaults\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Pet profile updated\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Pet profile setup step changed\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Uploading pet photo\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Pet photo uploaded successfully\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Failed to upload photo\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Failed to upload pet photo\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Pet photo removed\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Please complete all required fields\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Submitting pet profile\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Pet profile created successfully\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Failed to create pet profile\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Failed to submit pet profile\""
      },
      {
        "file": "hooks/domains/onboarding/usePetProfileSetup.ts",
        "string": "\"Pet profile setup reset\""
      },
      {
        "file": "hooks/domains/gdpr/useGDPRStatus.ts",
        "string": "\"Failed to check GDPR status:\""
      },
      {
        "file": "hooks/domains/gdpr/useDataExport.ts",
        "string": "\"Data Export Started\""
      },
      {
        "file": "hooks/domains/gdpr/useDataExport.ts",
        "string": "\"Your data export has been initiated. You'"
      },
      {
        "file": "hooks/domains/gdpr/useDataExport.ts",
        "string": "\"Data export requested\""
      },
      {
        "file": "hooks/domains/gdpr/useDataExport.ts",
        "string": "\"Failed to export data\""
      },
      {
        "file": "hooks/domains/gdpr/useDataExport.ts",
        "string": "\"Failed to export data\""
      },
      {
        "file": "hooks/domains/gdpr/useDataExport.ts",
        "string": "\"Data export failed:\""
      },
      {
        "file": "hooks/domains/gdpr/useAccountDeletion.ts",
        "string": "\"Account Deletion Requested\""
      },
      {
        "file": "hooks/domains/gdpr/useAccountDeletion.ts",
        "string": "\"Account deletion requested\""
      },
      {
        "file": "hooks/domains/gdpr/useAccountDeletion.ts",
        "string": "\"Failed to request account deletion\""
      },
      {
        "file": "hooks/domains/gdpr/useAccountDeletion.ts",
        "string": "\"Account deletion request failed:\""
      },
      {
        "file": "hooks/domains/gdpr/useAccountDeletion.ts",
        "string": "\"Deletion Cancelled\""
      },
      {
        "file": "hooks/domains/gdpr/useAccountDeletion.ts",
        "string": "\"Your account deletion has been cancelled.\""
      },
      {
        "file": "hooks/domains/gdpr/useAccountDeletion.ts",
        "string": "\"Account deletion cancelled\""
      },
      {
        "file": "hooks/domains/gdpr/useAccountDeletion.ts",
        "string": "\"Failed to cancel deletion\""
      },
      {
        "file": "hooks/domains/gdpr/useAccountDeletion.ts",
        "string": "\"Failed to cancel account deletion:\""
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useGDPRStatus.test.ts",
        "string": "\"Storage error\""
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Export started successfully'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Initial State'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Cached User'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Export Data'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Export failed due to server error'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Download Export'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'No export data available'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Download failed'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Download failed'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'File system error'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'File system error'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Cache Management'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Cache clear failed'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Network Error'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Network Error'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Server temporarily unavailable'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Server temporarily unavailable'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'First error'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'File Management'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Download failed'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Concurrent Operations'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Export completed'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Large export in progress'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Quick export'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Export not found'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useDataExport.test.ts",
        "string": "'Export not found'"
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useAccountDeletion.test.ts",
        "string": "\"Deletion requested successfully\""
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useAccountDeletion.test.ts",
        "string": "\"Deletion cancelled successfully\""
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useAccountDeletion.test.ts",
        "string": "\"Privacy concerns\""
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useAccountDeletion.test.ts",
        "string": "\"Detailed feedback\""
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useAccountDeletion.test.ts",
        "string": "\"Privacy concerns\""
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useAccountDeletion.test.ts",
        "string": "\"Detailed feedback\""
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useAccountDeletion.test.ts",
        "string": "\"Invalid password\""
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useAccountDeletion.test.ts",
        "string": "\"Invalid password\""
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useAccountDeletion.test.ts",
        "string": "\"Cancellation failed\""
      },
      {
        "file": "hooks/domains/gdpr/__tests__/useAccountDeletion.test.ts",
        "string": "\"Cancellation failed\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Permission Required\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"We need access to your photo library to analyze pet photos.\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Error picking images:\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Failed to select images. Please try again.\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Permission Required\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"We need access to your camera to take pet photos.\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Error taking photo:\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Failed to take photo. Please try again.\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Please select at least one photo to analyze.\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Photo analysis completed\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Failed to analyze photos. Please try again.\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Photo analysis error:\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Labrador Retriever\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Bernese Mountain Dog\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Regular exercise is important\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Maintain healthy weight\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Annual veterinary checkups\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Friendly and approachable expression\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Well-groomed coat suggests good care\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Energetic pose indicates playful personality\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Clear, high-quality image enhances visibility\""
      },
      {
        "file": "hooks/domains/ai/useAIPhotoAnalyzer.ts",
        "string": "\"Using mock photo analysis result\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Available pets loaded\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Failed to load pets. Please try again.\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Error loading pets\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Please select two pets to analyze compatibility.\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Please select two different pets.\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Compatibility analysis completed\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Failed to analyze compatibility. Please try again.\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Compatibility analysis error\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"These pets show excellent compatibility! Both are energetic and social, making them perfect playmates.\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Introduce them in a neutral outdoor space\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Keep initial meetings short (15-20 minutes)\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Have both owners present for supervision\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Daily walks together\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Joint play sessions in the park\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Shared grooming sessions\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Monitor for signs of stress\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Separate if either shows discomfort\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Gradually increase interaction time\""
      },
      {
        "file": "hooks/domains/ai/useAICompatibility.ts",
        "string": "\"Using mock compatibility result\""
      },
      {
        "file": "hooks/domains/ai/useAIBio.ts",
        "string": "\"Pet name is required\""
      },
      {
        "file": "hooks/domains/ai/useAIBio.ts",
        "string": "\"AI bio generated successfully\""
      },
      {
        "file": "hooks/domains/ai/useAIBio.ts",
        "string": "\"They love making new friends\""
      },
      {
        "file": "hooks/domains/ai/useAIBio.ts",
        "string": "\"Using fallback bio generation\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Excellent compatibility! Both pets are energetic and social.\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Meet in neutral space\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Keep initial meetings short\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Daily walks\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Joint play sessions\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Monitor stress\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Separate if uncomfortable\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Network error\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Failed to load pets\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Failed to load pets. Please try again.\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Please select two pets\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Please select two pets to analyze compatibility.\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Please select two different pets\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Please select two different pets.\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAICompatibility.test.ts",
        "string": "\"Excellent compatibility! Both pets are energetic and social.\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAIBio.test.ts",
        "string": "\"Meet Buddy! A playful golden retriever ready for adventures.\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAIBio.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAIBio.test.ts",
        "string": "\"Pet name is required\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAIBio.test.ts",
        "string": "\"Pet name is required\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAIBio.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAIBio.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/domains/ai/__tests__/useAIBio.test.ts",
        "string": "\"Pet name is required\""
      },
      {
        "file": "hooks/chat/useMessageActions.ts",
        "string": "\"Message retried\""
      },
      {
        "file": "hooks/chat/useMessageActions.ts",
        "string": "\"Failed to retry message\""
      },
      {
        "file": "hooks/chat/useMessageActions.ts",
        "string": "\"Message deleted\""
      },
      {
        "file": "hooks/chat/useMessageActions.ts",
        "string": "\"Failed to delete message\""
      },
      {
        "file": "hooks/chat/useChatScroll.ts",
        "string": "\"Failed to restore scroll position for chat\""
      },
      {
        "file": "hooks/chat/useChatInput.ts",
        "string": "\"Failed to load draft\""
      },
      {
        "file": "hooks/chat/useChatInput.ts",
        "string": "\"Failed to persist draft\""
      },
      {
        "file": "hooks/chat/__tests__/useMessageActions.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "hooks/chat/__tests__/useMessageActions.test.ts",
        "string": "'Retry Message'"
      },
      {
        "file": "hooks/chat/__tests__/useMessageActions.test.ts",
        "string": "'Message retried'"
      },
      {
        "file": "hooks/chat/__tests__/useMessageActions.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/chat/__tests__/useMessageActions.test.ts",
        "string": "'Failed to retry message'"
      },
      {
        "file": "hooks/chat/__tests__/useMessageActions.test.ts",
        "string": "'Delete Message'"
      },
      {
        "file": "hooks/chat/__tests__/useMessageActions.test.ts",
        "string": "'Message deleted'"
      },
      {
        "file": "hooks/chat/__tests__/useMessageActions.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/chat/__tests__/useMessageActions.test.ts",
        "string": "'Failed to delete message'"
      },
      {
        "file": "hooks/chat/__tests__/useMessageActions.test.ts",
        "string": "'Integration'"
      },
      {
        "file": "hooks/chat/__tests__/useChatScroll.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "hooks/chat/__tests__/useChatScroll.test.ts",
        "string": "'Scroll Handling'"
      },
      {
        "file": "hooks/chat/__tests__/useChatScroll.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "hooks/chat/__tests__/useChatScroll.test.ts",
        "string": "'Real-world Scenarios'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'Hello, this is a draft!'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'Input Management'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'This is too long'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'Draft Persistence'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'Test message'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'Test message'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'Storage error'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'Typing Indicator'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'Match 1 text'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'Match 2 text'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'Match 1 text'"
      },
      {
        "file": "hooks/chat/__tests__/useChatInput.test.ts",
        "string": "'Match 2 text'"
      },
      {
        "file": "hooks/animations/__tests__/useStaggeredAnimation.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "hooks/animations/__tests__/useStaggeredAnimation.test.ts",
        "string": "'Animation Control'"
      },
      {
        "file": "hooks/animations/__tests__/useStaggeredAnimation.test.ts",
        "string": "'Dynamic Item Management'"
      },
      {
        "file": "hooks/animations/__tests__/useStaggeredAnimation.test.ts",
        "string": "'Animation Progress and State'"
      },
      {
        "file": "hooks/animations/__tests__/useStaggeredAnimation.test.ts",
        "string": "'Animation Callbacks'"
      },
      {
        "file": "hooks/animations/__tests__/useStaggeredAnimation.test.ts",
        "string": "'Callback error'"
      },
      {
        "file": "hooks/animations/__tests__/useStaggeredAnimation.test.ts",
        "string": "'Configuration Options'"
      },
      {
        "file": "hooks/animations/__tests__/useStaggeredAnimation.test.ts",
        "string": "'Performance Optimizations'"
      },
      {
        "file": "hooks/animations/__tests__/useStaggeredAnimation.test.ts",
        "string": "'Integration with Lists'"
      },
      {
        "file": "hooks/animations/__tests__/useStaggeredAnimation.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "hooks/animations/__tests__/useStaggeredAnimation.test.ts",
        "string": "'Animation error'"
      },
      {
        "file": "hooks/animations/__tests__/useStaggeredAnimation.test.ts",
        "string": "'Advanced Features'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Press Event Handling'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Haptic Feedback'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Haptic not available'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Animation Styles'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Press Handlers for Components'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Custom Animation Configurations'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'State Management'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Accessibility Support'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Custom Button'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Press to activate'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Custom Button'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Press to activate'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Performance Optimizations'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Animation error'"
      },
      {
        "file": "hooks/animations/__tests__/usePressAnimation.test.ts",
        "string": "'Integration Scenarios'"
      },
      {
        "file": "hooks/animations/__tests__/useHapticFeedback.test.ts",
        "string": "'Haptic not available'"
      },
      {
        "file": "hooks/__tests__/useUploadQueue.test.ts",
        "string": "'Network error'"
      },
      {
        "file": "hooks/__tests__/useUploadQueue.test.ts",
        "string": "'Persistent network error'"
      },
      {
        "file": "hooks/__tests__/useUploadQueue.test.ts",
        "string": "'Upload already queued'"
      },
      {
        "file": "hooks/__tests__/useUploadQueue.test.ts",
        "string": "'Upload started'"
      },
      {
        "file": "hooks/__tests__/useUploadQueue.test.ts",
        "string": "'Upload completed'"
      },
      {
        "file": "hooks/__tests__/useThemeToggle.test.ts",
        "string": "\"Haptics unavailable\""
      },
      {
        "file": "hooks/__tests__/useThemeToggle.test.ts",
        "string": "\"Select Theme\""
      },
      {
        "file": "hooks/__tests__/useThemeToggle.test.ts",
        "string": "\"Current theme: Light\""
      },
      {
        "file": "hooks/__tests__/useThemeToggle.test.ts",
        "string": "\"System Default\""
      },
      {
        "file": "hooks/__tests__/useThemeToggle.test.ts",
        "string": "\"Select Theme\""
      },
      {
        "file": "hooks/__tests__/useThemeToggle.test.ts",
        "string": "\"Current theme: Dark\""
      },
      {
        "file": "hooks/__tests__/useThemeToggle.test.ts",
        "string": "\"Select Theme\""
      },
      {
        "file": "hooks/__tests__/useThemeToggle.test.ts",
        "string": "\"Current theme: System Default\""
      },
      {
        "file": "hooks/__tests__/useThemeToggle.test.ts",
        "string": "\"System Default\""
      },
      {
        "file": "hooks/__tests__/useSocket.test.ts",
        "string": "\"Connection failed\""
      },
      {
        "file": "hooks/__tests__/useSocket.test.ts",
        "string": "\"Socket connection error:\""
      },
      {
        "file": "hooks/__tests__/useSocket.test.ts",
        "string": "\"Authentication failed\""
      },
      {
        "file": "hooks/__tests__/useSocket.test.ts",
        "string": "\"Socket auth error:\""
      },
      {
        "file": "hooks/__tests__/useSocket.test.ts",
        "string": "\"Authentication failed\""
      },
      {
        "file": "hooks/__tests__/useSocket.test.ts",
        "string": "\"Connection failed\""
      },
      {
        "file": "hooks/__tests__/useSocket.test.ts",
        "string": "\"Connection failed\""
      },
      {
        "file": "hooks/__tests__/useSocket.test.ts",
        "string": "\"Socket not connected, cannot emit:\""
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Shake Animation'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Haptic Feedback'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Haptic not available'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Animation Styles'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Shake Control'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Configuration Validation'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Platform Compatibility'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Performance Optimizations'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Shared value creation failed'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Animation runtime error'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Callback error'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Integration with Other Systems'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Accessibility Features'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Shaking animation'"
      },
      {
        "file": "hooks/__tests__/useShake.test.ts",
        "string": "'Animations not supported'"
      },
      {
        "file": "hooks/__tests__/useReducedMotion.test.ts",
        "string": "\"Accessibility API unavailable\""
      },
      {
        "file": "hooks/__tests__/usePhotoManager.test.ts",
        "string": "\"Permission needed\""
      },
      {
        "file": "hooks/__tests__/usePhotoManager.test.ts",
        "string": "\"Please grant permission to access your photos\""
      },
      {
        "file": "hooks/__tests__/usePhotoManager.test.ts",
        "string": "\"Multipart Upload Functionality\""
      },
      {
        "file": "hooks/__tests__/usePhotoManager.test.ts",
        "string": "\"Upload failed\""
      },
      {
        "file": "hooks/__tests__/usePhotoManager.test.ts",
        "string": "\"Upload failed\""
      },
      {
        "file": "hooks/__tests__/usePhotoManager.test.ts",
        "string": "\"Upload Failed\""
      },
      {
        "file": "hooks/__tests__/usePhotoManager.test.ts",
        "string": "\"Failed to upload\""
      },
      {
        "file": "hooks/__tests__/usePhotoManagement.test.ts",
        "string": "'Maximum 6 photos allowed'"
      },
      {
        "file": "hooks/__tests__/usePhotoManagement.test.ts",
        "string": "'Image processing failed'"
      },
      {
        "file": "hooks/__tests__/usePhotoManagement.test.ts",
        "string": "'Failed to process image'"
      },
      {
        "file": "hooks/__tests__/usePhotoManagement.test.ts",
        "string": "'Upload failed'"
      },
      {
        "file": "hooks/__tests__/usePhotoManagement.test.ts",
        "string": "'Cannot remove primary photo'"
      },
      {
        "file": "hooks/__tests__/usePhotoManagement.test.ts",
        "string": "'Photo library access required'"
      },
      {
        "file": "hooks/__tests__/usePhotoManagement.test.ts",
        "string": "'File size too large'"
      },
      {
        "file": "hooks/__tests__/usePhotoManagement.test.ts",
        "string": "'Duplicate photo detected'"
      },
      {
        "file": "hooks/__tests__/usePhotoManagement.test.ts",
        "string": "'Network timeout'"
      },
      {
        "file": "hooks/__tests__/usePhotoManagement.test.ts",
        "string": "'Upload timed out'"
      },
      {
        "file": "hooks/__tests__/usePhotoManagement.test.ts",
        "string": "'Add photo to pet profile'"
      },
      {
        "file": "hooks/__tests__/usePhotoManagement.test.ts",
        "string": "'Primary photo'"
      },
      {
        "file": "hooks/__tests__/usePhotoEditor.test.ts",
        "string": "\"Save failed\""
      },
      {
        "file": "hooks/__tests__/useNotifications.test.ts",
        "string": "\"ExpoPushToken[test123]\""
      },
      {
        "file": "hooks/__tests__/useNotifications.test.ts",
        "string": "\"ExpoPushToken[test123]\""
      },
      {
        "file": "hooks/__tests__/useNotifications.test.ts",
        "string": "\"Permission denied\""
      },
      {
        "file": "hooks/__tests__/useNotifications.test.ts",
        "string": "\"ExpoPushToken[xyz789]\""
      },
      {
        "file": "hooks/__tests__/useInteractionMetrics.test.ts",
        "string": "'Initialization'"
      },
      {
        "file": "hooks/__tests__/useInteractionMetrics.test.ts",
        "string": "'Interaction Tracking'"
      },
      {
        "file": "hooks/__tests__/useInteractionMetrics.test.ts",
        "string": "'Touch Heatmap'"
      },
      {
        "file": "hooks/__tests__/useInteractionMetrics.test.ts",
        "string": "'Performance Metrics'"
      },
      {
        "file": "hooks/__tests__/useInteractionMetrics.test.ts",
        "string": "'Data Export and Analysis'"
      },
      {
        "file": "hooks/__tests__/useInteractionMetrics.test.ts",
        "string": "'Configuration and Customization'"
      },
      {
        "file": "hooks/__tests__/useInteractionMetrics.test.ts",
        "string": "'Error Handling'"
      },
      {
        "file": "hooks/__tests__/useInteractionMetrics.test.ts",
        "string": "'Analytics error'"
      },
      {
        "file": "hooks/__tests__/useInteractionMetrics.test.ts",
        "string": "'Memory Management'"
      },
      {
        "file": "hooks/__tests__/useInteractionMetrics.test.ts",
        "string": "'Real-time Updates'"
      },
      {
        "file": "hooks/__tests__/useInteractionMetrics.test.ts",
        "string": "'Accessibility Integration'"
      },
      {
        "file": "hooks/__tests__/navigation/useTabReselectRefresh.test.ts",
        "string": "\"Refresh failed\""
      },
      {
        "file": "hooks/__tests__/navigation/tab-reselect.integration.test.ts",
        "string": "\"Tab Reselect Integration Tests\""
      },
      {
        "file": "hooks/__tests__/navigation/tab-reselect.integration.test.ts",
        "string": "\"Complete Flow\""
      },
      {
        "file": "hooks/__tests__/navigation/tab-reselect.integration.test.ts",
        "string": "\"Navigation Events\""
      },
      {
        "file": "hooks/__tests__/navigation/tab-reselect.integration.test.ts",
        "string": "\"Performance\""
      },
      {
        "file": "hooks/__tests__/integration/swipe-match.integration.test.ts",
        "string": "\"Swipe + Match Integration\""
      },
      {
        "file": "hooks/__tests__/integration/hooks.integration.test.ts",
        "string": "\"Hooks Integration Tests\""
      },
      {
        "file": "hooks/__tests__/integration/hooks.integration.test.ts",
        "string": "\"Navigation Flow\""
      },
      {
        "file": "hooks/__tests__/integration/hooks.integration.test.ts",
        "string": "\"Error Handling\""
      },
      {
        "file": "hooks/__tests__/integration/hooks.integration.test.ts",
        "string": "\"Performance\""
      },
      {
        "file": "hooks/__tests__/integration/auth-profile.integration.test.ts",
        "string": "\"Auth + Profile + Settings Integration\""
      },
      {
        "file": "hooks/__tests__/integration/auth-profile.integration.test.ts",
        "string": "\"Original bio\""
      },
      {
        "file": "hooks/__tests__/integration/auth-profile.integration.test.ts",
        "string": "\"Updated bio\""
      },
      {
        "file": "hooks/__tests__/integration/auth-profile.integration.test.ts",
        "string": "\"John Updated\""
      },
      {
        "file": "hooks/__tests__/integration/auth-profile.integration.test.ts",
        "string": "\"Updated bio\""
      },
      {
        "file": "hooks/__tests__/integration/auth-profile.integration.test.ts",
        "string": "\"John Updated\""
      },
      {
        "file": "hooks/__tests__/integration/auth-profile.integration.test.ts",
        "string": "\"Network error\""
      },
      {
        "file": "hooks/__tests__/integration/auth-profile.integration.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/__tests__/integration/auth-profile.integration.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/__tests__/integration/auth-profile.integration.test.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "hooks/__tests__/integration/auth-profile.integration.test.ts",
        "string": "\"Friendly dog\""
      },
      {
        "file": "examples/GestureUsageExamples.tsx",
        "string": "'Single tap - could show details'"
      },
      {
        "file": "examples/GestureUsageExamples.tsx",
        "string": "'Reaction Selected'"
      },
      {
        "file": "examples/GestureUsageExamples.tsx",
        "string": "'Reaction cancelled'"
      },
      {
        "file": "data/pets.ts",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "data/pets.ts",
        "string": "\"Great with kids\""
      },
      {
        "file": "data/pets.ts",
        "string": "\"Border Collie\""
      },
      {
        "file": "data/pets.ts",
        "string": "\"Intelligent\""
      },
      {
        "file": "data/pets.ts",
        "string": "\"Agility champion\""
      },
      {
        "file": "data/pets.ts",
        "string": "\"Australian Shepherd\""
      },
      {
        "file": "data/pets.ts",
        "string": "\"Affectionate\""
      },
      {
        "file": "data/pets.ts",
        "string": "\"Family ready\""
      },
      {
        "file": "contexts/__tests__/ThemeContext.test.tsx",
        "string": "\"ThemeContext\""
      },
      {
        "file": "constants/options.ts",
        "string": "\"Find a Match\""
      },
      {
        "file": "constants/options.ts",
        "string": "\"Browse Pets\""
      },
      {
        "file": "constants/options.ts",
        "string": "\"Connect with Pet Owners\""
      },
      {
        "file": "constants/options.ts",
        "string": "\"Adopt a Pet\""
      },
      {
        "file": "config/sslCertificates.ts",
        "string": "\"EXPO_PUBLIC_API_CERT_SHA256\""
      },
      {
        "file": "config/sslCertificates.ts",
        "string": "\"PLACEHOLDER_CERT_SHA256\""
      },
      {
        "file": "config/sslCertificates.ts",
        "string": "\"EXPO_PUBLIC_API_CERT_SHA1\""
      },
      {
        "file": "config/sslCertificates.ts",
        "string": "\"PLACEHOLDER_CERT_SHA1\""
      },
      {
        "file": "config/sslCertificates.ts",
        "string": "\"EXPO_PUBLIC_WS_CERT_SHA256\""
      },
      {
        "file": "config/sslCertificates.ts",
        "string": "\"PLACEHOLDER_WS_CERT_SHA256\""
      },
      {
        "file": "config/sslCertificates.ts",
        "string": "\"SSL pinning is enabled but no certificates are configured\""
      },
      {
        "file": "config/sslCertificates.ts",
        "string": "\"PLACEHOLDER\""
      },
      {
        "file": "config/revenuecat.ts",
        "string": "'RevenueCat not available:'"
      },
      {
        "file": "components/ThemeToggle.tsx",
        "string": "\"Switch to light mode\""
      },
      {
        "file": "components/ThemeToggle.tsx",
        "string": "\"Switch to dark mode\""
      },
      {
        "file": "components/ThemeToggle.tsx",
        "string": "\"Toggles between light and dark theme\""
      },
      {
        "file": "components/ThemeToggle.tsx",
        "string": "\"Switch to light mode\""
      },
      {
        "file": "components/ThemeToggle.tsx",
        "string": "\"Switch to dark mode\""
      },
      {
        "file": "components/ThemeToggle.tsx",
        "string": "\"Toggles between light and dark theme\""
      },
      {
        "file": "components/PremiumTypography.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/PremiumTypography.tsx",
        "string": "\"Theme.colors.primary[400]\""
      },
      {
        "file": "components/PremiumTypography.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/PremiumTypography.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/PremiumTypography.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "components/PremiumTypography.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/PremiumTypography.tsx",
        "string": "\"Theme.colors.neutral[0]f00\""
      },
      {
        "file": "components/PremiumTypography.tsx",
        "string": "\"Theme.colors.neutral[0]f00\""
      },
      {
        "file": "components/PremiumTypography.tsx",
        "string": "\"Theme.colors.neutral[950]0ff\""
      },
      {
        "file": "components/PremiumTypography.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/PremiumTypography.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/PremiumTypography.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Premium Action\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "'Premium action!'"
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Magnetic mouse tracking\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Ripple animations on press\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Glow effects with animated shadows\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Holographic variant with shimmer\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Glass morphism variant\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Loading states with animated spinners\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Haptic feedback integration\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Multiple size variants (sm, md, lg, xl)\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Glass morphism with backdrop blur\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Holographic variant with animated gradients\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Shimmer effects on hover\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Magnetic mouse tracking\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Entrance animations (fadeInUp, scaleIn, slideIn)\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Glow variants with colored shadows\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Spring physics configurations\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Staggered animations for lists\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Page transition animations\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Shared element transitions\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Loading skeleton animations\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Haptic feedback for interactions\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Sound effects integration\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Magnetic button effects\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Ripple animations on touch\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Tilt effects for cards\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Glass morphism with backdrop blur\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Holographic animated gradients\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Colored shadows (primary, secondary, success, error)\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Animated glow effects with pulsing\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Neon border effects with glow\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Shadow depth system (sm, md, lg, xl, 2xl)\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Particle effects for premium screens\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Gradient text effects using masks\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Text shadow effects for depth\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Animated text components with entrance animations\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Premium font weights (extrabold, black)\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Multiple gradient variants\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Shimmer text effects\""
      },
      {
        "file": "components/PremiumComponents.ts",
        "string": "\"Glow text effects\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Permission Required\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Please grant camera roll permissions to upload photos.\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Photo Limit\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Failed to pick image. Please try again.\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Photo Limit\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Permission Required\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Please grant camera permissions to take photos.\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Failed to take photo. Please try again.\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Choose how you want to add a photo\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Photo Library\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Remove Photo\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Are you sure you want to remove this photo?\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Uploading...\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/PhotoUploadComponent.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/PerformanceTestSuite.tsx",
        "string": "\"Testing Animations...\""
      },
      {
        "file": "components/PerformanceTestSuite.tsx",
        "string": "\"Testing Gestures...\""
      },
      {
        "file": "components/PerformanceTestSuite.tsx",
        "string": "\"Testing Memory Usage...\""
      },
      {
        "file": "components/PerformanceTestSuite.tsx",
        "string": "\"Initializing...\""
      },
      {
        "file": "components/PerformanceTestSuite.tsx",
        "string": "\"Calculating Results...\""
      },
      {
        "file": "components/PerformanceTestSuite.tsx",
        "string": "\"Performance test failed:\""
      },
      {
        "file": "components/PerformanceTestSuite.tsx",
        "string": "\"Test Failed\""
      },
      {
        "file": "components/PerformanceTestSuite.tsx",
        "string": "\"Running Tests...\""
      },
      {
        "file": "components/PerformanceTestSuite.tsx",
        "string": "\"Run Performance Tests\""
      },
      {
        "file": "components/PawPullToRefresh.tsx",
        "string": "\"Refreshing content\""
      },
      {
        "file": "components/PawPullToRefresh.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/OptimizedImage.tsx",
        "string": "\"OptimizedImage load error:\""
      },
      {
        "file": "components/OptimizedImage.tsx",
        "string": "\"Loading image\""
      },
      {
        "file": "components/OptimizedImage.tsx",
        "string": "\"Image failed to load\""
      },
      {
        "file": "components/ModernSwipeCard.tsx",
        "string": "\"Like undone for:\""
      },
      {
        "file": "components/ModernSwipeCard.tsx",
        "string": "\"Undo like for:\""
      },
      {
        "file": "components/ModernSwipeCard.tsx",
        "string": "\"Error liking pet:\""
      },
      {
        "file": "components/ModernSwipeCard.tsx",
        "string": "\"Passed pet:\""
      },
      {
        "file": "components/ModernSwipeCard.tsx",
        "string": "\"Error passing pet:\""
      },
      {
        "file": "components/ModernSwipeCard.tsx",
        "string": "\"Super liked pet:\""
      },
      {
        "file": "components/ModernSwipeCard.tsx",
        "string": "\"Error super liking pet:\""
      },
      {
        "file": "components/ModernSwipeCard.tsx",
        "string": "\"Swipe right to like, left to pass, or up for super like\""
      },
      {
        "file": "components/ModernSwipeCard.tsx",
        "string": "\"Distance badge pressed:\""
      },
      {
        "file": "components/ModernSwipeCard.tsx",
        "string": "\"ModernSwipeCard\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Permission Required\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Please grant camera roll permissions to upload photos.\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Photo Limit\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Failed to pick image. Please try again.\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Photo Limit\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Permission Required\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Please grant camera permissions to take photos.\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Failed to take photo. Please try again.\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Choose how you want to add a photo\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Photo Library\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Remove Photo\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Are you sure you want to remove this photo?\""
      },
      {
        "file": "components/ModernPhotoUploadWithEditor.tsx",
        "string": "\"Add First Photo\""
      },
      {
        "file": "components/ModernPhotoUpload.tsx",
        "string": "\"Permission Required\""
      },
      {
        "file": "components/ModernPhotoUpload.tsx",
        "string": "\"Please grant camera roll permissions to upload photos.\""
      },
      {
        "file": "components/ModernPhotoUpload.tsx",
        "string": "\"Error picking image:\""
      },
      {
        "file": "components/ModernPhotoUpload.tsx",
        "string": "\"Upload Error\""
      },
      {
        "file": "components/ModernPhotoUpload.tsx",
        "string": "\"Failed to upload photo. Please try again.\""
      },
      {
        "file": "components/LazyScreen.tsx",
        "string": "\"Loading screen\""
      },
      {
        "file": "components/LazyScreen.tsx",
        "string": "\"Screen failed to load\""
      },
      {
        "file": "components/LazyScreen.tsx",
        "string": "\"Failed to load this screen\""
      },
      {
        "file": "components/LazyScreen.tsx",
        "string": "\"Retry loading screen\""
      },
      {
        "file": "components/LazyScreen.tsx",
        "string": "\"LazyScreen Error:\""
      },
      {
        "file": "components/LazyScreen.tsx",
        "string": "\"LazyScreen(Component)\""
      },
      {
        "file": "components/LazyScreen.tsx",
        "string": "\"Failed to preload lazy screen:\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.primary[600]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.secondary[600]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.primary[600]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.primary[600]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.primary[600]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.primary[600]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"Theme.colors.primary[700]\""
      },
      {
        "file": "components/InteractiveButton.tsx",
        "string": "\"InteractiveButton\""
      },
      {
        "file": "components/ImmersiveCard.tsx",
        "string": "\"ImmersiveCard\""
      },
      {
        "file": "components/HolographicEffects.tsx",
        "string": "\"Theme.colors.neutral[0]f00\""
      },
      {
        "file": "components/HolographicEffects.tsx",
        "string": "\"Theme.colors.neutral[950]0ff\""
      },
      {
        "file": "components/HolographicEffects.tsx",
        "string": "\"Theme.colors.neutral[0]f00\""
      },
      {
        "file": "components/HolographicEffects.tsx",
        "string": "\"Theme.colors.neutral[0]f00\""
      },
      {
        "file": "components/GlowShadowSystem.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/GlowShadowSystem.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/GlowShadowSystem.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "components/GlowShadowSystem.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/GlowShadowSystem.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/GlowShadowSystem.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/GlowShadowSystem.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/GlowShadowSystem.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/GlowShadowSystem.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/GlowShadowSystem.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/Footer.tsx",
        "string": "\"App footer with legal links and support information\""
      },
      {
        "file": "components/Footer.tsx",
        "string": "\"Contains links to terms of service, privacy policy, and support contact\""
      },
      {
        "file": "components/Footer.tsx",
        "string": "\"Error opening link:\""
      },
      {
        "file": "components/Footer.tsx",
        "string": "\"Terms of Service\""
      },
      {
        "file": "components/Footer.tsx",
        "string": "\"Opens Terms of Service in browser\""
      },
      {
        "file": "components/Footer.tsx",
        "string": "\"Privacy Policy\""
      },
      {
        "file": "components/Footer.tsx",
        "string": "\"Opens Privacy Policy in browser\""
      },
      {
        "file": "components/Footer.tsx",
        "string": "\"Contact Support\""
      },
      {
        "file": "components/Footer.tsx",
        "string": "\"Opens email client to contact support\""
      },
      {
        "file": "components/ErrorFallback.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/ErrorFallback.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/ErrorFallback.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/ErrorFallback.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/ErrorBoundary.tsx",
        "string": "\"ErrorBoundary caught an error:\""
      },
      {
        "file": "components/ErrorBoundary.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/ErrorBoundary.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/ErrorBoundary.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "components/ErrorBoundary.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "components/ErrorBoundary.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/ErrorBoundary.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/ErrorBoundary.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/ErrorBoundary.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/EnhancedTabBar.tsx",
        "string": "\"AdoptionManager\""
      },
      {
        "file": "components/EnhancedTabBar.tsx",
        "string": "\"AdoptionManager\""
      },
      {
        "file": "components/AnimatedSplash.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/AnimatedSplash.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/AnimatedSplash.tsx",
        "string": "\"PawfectMatch app is loading\""
      },
      {
        "file": "components/AnimatedSplash.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/AnimatedSplash.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/AnimatedSplash.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/AnimatedSplash.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/AnimatedSplash.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/AnimatedButton.tsx",
        "string": "\"AnimatedButton haptic error\""
      },
      {
        "file": "components/AnimatedButton.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/AnimatedButton.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/AnimatedButton.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/widgets/SwipeWidget.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/widgets/SwipeWidget.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/widgets/SwipeWidget.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "components/widgets/SwipeWidget.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/widgets/SwipeWidget.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/widgets/SwipeWidget.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "components/widgets/SwipeWidget.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/widgets/SwipeWidget.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/widgets/SwipeWidget.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/widgets/MatchWidget.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/widgets/MatchWidget.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/widgets/MatchWidget.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/widgets/MatchWidget.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/widgets/MatchWidget.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/widgets/MatchWidget.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/widgets/MatchWidget.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/widgets/MatchWidget.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/widgets/EventWidget.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.web.tsx",
        "string": "\"Permission needed\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.web.tsx",
        "string": "\"Microphone access is required.\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.web.tsx",
        "string": "\"Failed to send voice note. Please try again.\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.web.tsx",
        "string": "\"Release to cancel\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.web.tsx",
        "string": "\"Hold to record\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.web.tsx",
        "string": "\"Transcript ready\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.native.tsx",
        "string": "\"Permission needed\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.native.tsx",
        "string": "\"Microphone access is required.\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.native.tsx",
        "string": "\"Could not start recording.\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.native.tsx",
        "string": "\"Playback error\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.native.tsx",
        "string": "\"Could not play the recording.\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.native.tsx",
        "string": "\"Failed to send voice note. Please try again.\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.native.tsx",
        "string": "\"Release to cancel\""
      },
      {
        "file": "components/voice/VoiceRecorderUltra.native.tsx",
        "string": "\"Hold to record\""
      },
      {
        "file": "components/swipe/SwipeHeader.tsx",
        "string": "\"Find your perfect match\""
      },
      {
        "file": "components/swipe/SwipeGestureHints.tsx",
        "string": "'Swipe left to pass'"
      },
      {
        "file": "components/swipe/SwipeGestureHints.tsx",
        "string": "'Swipe right to like'"
      },
      {
        "file": "components/swipe/SwipeGestureHints.tsx",
        "string": "'Swipe up to super like'"
      },
      {
        "file": "components/swipe/SwipeGestureHints.tsx",
        "string": "'Error checking hints status'"
      },
      {
        "file": "components/swipe/SwipeGestureHints.tsx",
        "string": "'Error dismissing hints'"
      },
      {
        "file": "components/swipe/SwipeGestureHintOverlay.tsx",
        "string": "\"Error checking hints status\""
      },
      {
        "file": "components/swipe/SwipeGestureHintOverlay.tsx",
        "string": "\"Error dismissing hints\""
      },
      {
        "file": "components/swipe/SwipeFilters.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "components/swipe/SwipeFilters.tsx",
        "string": "\"Border Collie\""
      },
      {
        "file": "components/swipe/SwipeFilters.tsx",
        "string": "\"Apply Filters\""
      },
      {
        "file": "components/swipe/SwipeActions.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/swipe/MatchModal.tsx",
        "string": "\"Keep Swiping\""
      },
      {
        "file": "components/swipe/MatchModal.tsx",
        "string": "\"Send Message\""
      },
      {
        "file": "components/swipe/FilterPanel.tsx",
        "string": "'Golden Retriever'"
      },
      {
        "file": "components/swipe/FilterPanel.tsx",
        "string": "'Border Collie'"
      },
      {
        "file": "components/swipe/FilterPanel.tsx",
        "string": "\"Apply Filters\""
      },
      {
        "file": "components/swipe/EmptyState.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Golden Retriever'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Friendly and playful'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Energetic and fun'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Swipe Screen Integration'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Component Integration'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Swipe left to pass'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Send Message'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Keep Swiping'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Swipe Actions'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Loading and Error States'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Finding Matches'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Failed to load pets'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Error loading pets'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'No more pets!'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Filter Panel'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Golden Retriever'"
      },
      {
        "file": "components/swipe/__tests__/swipe.integration.test.tsx",
        "string": "'Complete User Flow'"
      },
      {
        "file": "components/swipe/__tests__/SwipeGestureHints.test.tsx",
        "string": "'SwipeGestureHints'"
      },
      {
        "file": "components/swipe/__tests__/SwipeGestureHints.test.tsx",
        "string": "'Visibility Control'"
      },
      {
        "file": "components/swipe/__tests__/SwipeGestureHints.test.tsx",
        "string": "'Swipe left to pass'"
      },
      {
        "file": "components/swipe/__tests__/SwipeGestureHints.test.tsx",
        "string": "'Swipe left to pass'"
      },
      {
        "file": "components/swipe/__tests__/SwipeGestureHints.test.tsx",
        "string": "'Swipe right to like'"
      },
      {
        "file": "components/swipe/__tests__/SwipeGestureHints.test.tsx",
        "string": "'Swipe up to super like'"
      },
      {
        "file": "components/swipe/__tests__/SwipeGestureHints.test.tsx",
        "string": "'Storage Integration'"
      },
      {
        "file": "components/swipe/__tests__/SwipeGestureHints.test.tsx",
        "string": "'Manual Dismiss'"
      },
      {
        "file": "components/swipe/__tests__/SwipeGestureHints.test.tsx",
        "string": "'Auto Dismiss'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Golden Retriever'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Friendly and playful'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Animated.View'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Animated.View'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Animated.View'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Animated.View'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Pet Data Display'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Positioning'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Animated.View'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Animated.View'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Animated.View'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Interaction'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Animated.View'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Visual Indicator'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Performance'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Integration'"
      },
      {
        "file": "components/swipe/__tests__/PeekSheet.test.tsx",
        "string": "'Accessibility'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Golden Retriever'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Friendly and playful'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Confetti Integration'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Content Display'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Super Long Pet Name That Should Still Display'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Keep Swiping'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Send Message'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Keep Swiping'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Send Message'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Keep Swiping'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Send Message'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Photo Display'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Integration with SwipeScreen'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Send Message'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Keep Swiping'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Keep Swiping'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Accessibility'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Keep Swiping'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Send Message'"
      },
      {
        "file": "components/swipe/__tests__/MatchModal.test.tsx",
        "string": "'Performance'"
      },
      {
        "file": "components/swipe/__tests__/ConfettiBurst.test.tsx",
        "string": "'ConfettiBurst'"
      },
      {
        "file": "components/swipe/__tests__/ConfettiBurst.test.tsx",
        "string": "'Intensity Levels'"
      },
      {
        "file": "components/swipe/__tests__/ConfettiBurst.test.tsx",
        "string": "'Animated.View'"
      },
      {
        "file": "components/swipe/__tests__/ConfettiBurst.test.tsx",
        "string": "'Particle Bursts'"
      },
      {
        "file": "components/swipe/__tests__/ConfettiBurst.test.tsx",
        "string": "'Custom Colors'"
      },
      {
        "file": "components/swipe/__tests__/ConfettiBurst.test.tsx",
        "string": "'Performance'"
      },
      {
        "file": "components/swipe/__tests__/ConfettiBurst.test.tsx",
        "string": "'Accessibility'"
      },
      {
        "file": "components/swipe/__tests__/ConfettiBurst.test.tsx",
        "string": "'Props Validation'"
      },
      {
        "file": "components/swipe/__tests__/ConfettiBurst.test.tsx",
        "string": "'Integration'"
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Open PawfectMatch to find nearby pets\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Check Matches\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"View your latest matches\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Check my matches\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Start Swiping\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Begin swiping on pet profiles\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Start swiping\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"View Events\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"See upcoming pet events nearby\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Show pet events\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Error checking shortcut status:\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Unsupported\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Siri Shortcuts are only available on iOS devices.\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Shortcut Created\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Error creating shortcut:\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Failed to create shortcut. Please try again.\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Unsupported\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Siri Shortcuts are only available on iOS devices.\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Error deleting shortcut:\""
      },
      {
        "file": "components/shortcuts/SiriShortcuts.tsx",
        "string": "\"Failed to delete shortcut. Please try again.\""
      },
      {
        "file": "components/shortcuts/QuickActions.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/shortcuts/QuickActions.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/shortcuts/QuickActions.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/premium-demo/ButtonDemo.tsx",
        "string": "\"Loading State\""
      },
      {
        "file": "components/premium-demo/AnimationDemo.tsx",
        "string": "\"Second Item\""
      },
      {
        "file": "components/premium-demo/AnimationDemo.tsx",
        "string": "\"Fourth Item\""
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "'Export Failed'"
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "'Failed to generate ultra variants. Please try again.'"
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "'Failed to save ultra variants'"
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "'Save Failed'"
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "'Failed to save variants. Please try again.'"
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "\"Close editor\""
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "\"Toggle split compare\""
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "\"Auto-crop with face detection\""
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "\"Toggle story mode guides\""
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "\"Press and hold to compare with original. Pinch to zoom.\""
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "\"Rotate left\""
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "\"Rotate right\""
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "\"Flip horizontal\""
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "\"Flip vertical\""
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "\"Reset all adjustments\""
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "\"Export ultra variants for social media\""
      },
      {
        "file": "components/photo/AdvancedPhotoEditor.tsx",
        "string": "'ULTRA Export (9 Variants)'"
      },
      {
        "file": "components/photo/__tests__/photo-editor.integration.test.tsx",
        "string": "\"AdvancedPhotoEditor Integration\""
      },
      {
        "file": "components/photo/__tests__/photo-editor.integration.test.tsx",
        "string": "\"Processing...\""
      },
      {
        "file": "components/photo/__tests__/photo-editor.integration.test.tsx",
        "string": "\"Processing failed\""
      },
      {
        "file": "components/photo/__tests__/index.test.tsx",
        "string": "'Photo Editing Components Integration'"
      },
      {
        "file": "components/photo/__tests__/index.test.tsx",
        "string": "'Component Exports'"
      },
      {
        "file": "components/photo/__tests__/index.test.tsx",
        "string": "'Component Interaction'"
      },
      {
        "file": "components/photo/__tests__/index.test.tsx",
        "string": "'Photo Editing Workflow'"
      },
      {
        "file": "components/photo/__tests__/SubjectSuggestionsBar.test.tsx",
        "string": "\"SubjectSuggestionsBar\""
      },
      {
        "file": "components/photo/__tests__/SubjectSuggestionsBar.test.tsx",
        "string": "\"Processing failed\""
      },
      {
        "file": "components/photo/__tests__/PhotoAdjustmentSlider.test.tsx",
        "string": "\"PhotoAdjustmentSlider\""
      },
      {
        "file": "components/photo/__tests__/AdvancedPhotoEditor.test.tsx",
        "string": "'AdvancedPhotoEditor'"
      },
      {
        "file": "components/photo/__tests__/AdvancedPhotoEditor.test.tsx",
        "string": "'Tab Navigation'"
      },
      {
        "file": "components/photo/__tests__/AdvancedPhotoEditor.test.tsx",
        "string": "'Transform Controls'"
      },
      {
        "file": "components/photo/__tests__/AdvancedPhotoEditor.test.tsx",
        "string": "'Filter Presets'"
      },
      {
        "file": "components/photo/__tests__/AdvancedPhotoEditor.test.tsx",
        "string": "'Save Functionality'"
      },
      {
        "file": "components/photo/__tests__/AdvancedPhotoEditor.test.tsx",
        "string": "'Processing...'"
      },
      {
        "file": "components/photo/__tests__/AdvancedPhotoEditor.test.tsx",
        "string": "'Cancel Functionality'"
      },
      {
        "file": "components/photo/__tests__/AdvancedPhotoEditor.test.tsx",
        "string": "'Aspect Ratio'"
      },
      {
        "file": "components/photo/__tests__/AdvancedPhotoEditor.test.tsx",
        "string": "'Adjustment Sliders'"
      },
      {
        "file": "components/photo/__tests__/AdvancedPhotoEditor.test.tsx",
        "string": "'Save failed'"
      },
      {
        "file": "components/photo/__tests__/AdvancedPhotoEditor.test.tsx",
        "string": "'Accessibility'"
      },
      {
        "file": "components/photo/__tests__/AdvancedPhotoEditor.test.tsx",
        "string": "'Performance'"
      },
      {
        "file": "components/phoenix/PhoenixCard.tsx",
        "string": "\"Double tap to interact\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Confirm Your Password\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Please enter your password to confirm this action\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Please enter your password\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Password confirmation failed\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Enter your password\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Processing...\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/modals/PasswordConfirmationModal.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/micro/__tests__/BouncePressable.test.tsx",
        "string": "\"BouncePressable\""
      },
      {
        "file": "components/micro/__tests__/BouncePressable.test.tsx",
        "string": "\"Custom Button\""
      },
      {
        "file": "components/micro/__tests__/BouncePressable.test.tsx",
        "string": "\"Haptics unavailable\""
      },
      {
        "file": "components/micro/__tests__/BouncePressable.test.tsx",
        "string": "\"Description\""
      },
      {
        "file": "components/matches/MatchesTabs.tsx",
        "string": "\"View matches\""
      },
      {
        "file": "components/matches/MatchesTabs.tsx",
        "string": "\"View liked you\""
      },
      {
        "file": "components/matches/MatchesTabs.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/matches/MatchesTabs.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/matches/MatchesTabs.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/matches/MatchesFilterModal.tsx",
        "string": "\"Search by pet name\""
      },
      {
        "file": "components/matches/MatchCard.tsx",
        "string": "\"Error unmatching:\""
      },
      {
        "file": "components/matches/MatchCard.tsx",
        "string": "\"Error archiving:\""
      },
      {
        "file": "components/matches/MatchCard.tsx",
        "string": "\"Report Match\""
      },
      {
        "file": "components/matches/MatchCard.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/matches/MatchCard.tsx",
        "string": "\"Report match\""
      },
      {
        "file": "components/matches/MatchCard.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "components/matches/MatchCard.tsx",
        "string": "\"Archive match\""
      },
      {
        "file": "components/matches/MatchCard.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/matches/MatchCard.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/matches/ErrorState.tsx",
        "string": "\"Error loading matches\""
      },
      {
        "file": "components/matches/ErrorState.tsx",
        "string": "\"Retry loading matches\""
      },
      {
        "file": "components/matches/ErrorState.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/matches/ErrorState.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/matches/EmptyState.tsx",
        "string": "\"No matches found\""
      },
      {
        "file": "components/matches/EmptyState.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/map/PinDetailsModal.tsx",
        "string": "\"Content-Type\""
      },
      {
        "file": "components/map/MapStatsPanel.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/map/MapStatsPanel.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "components/map/MapFiltersModal.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/map/MapFiltersModal.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/map/MapFiltersModal.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "components/map/MapFiltersModal.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/map/CreateActivityModal.tsx",
        "string": "'Failed to start activity'"
      },
      {
        "file": "components/map/CreateActivityModal.tsx",
        "string": "\"Message (optional)\""
      },
      {
        "file": "components/map/ActivityTypeSelector.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "components/map/ActivityTypeSelector.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/map/ActivityTypeSelector.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/map/ActivityTypeSelector.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/library/index.ts",
        "string": "\"Component library under development\""
      },
      {
        "file": "components/library/modals/index.ts",
        "string": "\"Modal components coming soon\""
      },
      {
        "file": "components/library/layouts/index.ts",
        "string": "\"Layout components coming soon\""
      },
      {
        "file": "components/library/forms/index.ts",
        "string": "\"Forms components coming soon\""
      },
      {
        "file": "components/library/feedback/index.ts",
        "string": "\"Feedback components coming soon\""
      },
      {
        "file": "components/library/charts/index.ts",
        "string": "\"Chart components coming soon\""
      },
      {
        "file": "components/help/HelpContactCard.tsx",
        "string": "\"Theme.colors.status.info\""
      },
      {
        "file": "components/filters/AdvancedPetFilters.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/filters/AdvancedPetFilters.tsx",
        "string": "\"Minimum Age\""
      },
      {
        "file": "components/filters/AdvancedPetFilters.tsx",
        "string": "\"Maximum Age\""
      },
      {
        "file": "components/filters/AdvancedPetFilters.tsx",
        "string": "\"Extra Large\""
      },
      {
        "file": "components/filters/AdvancedPetFilters.tsx",
        "string": "\"Maximum Distance\""
      },
      {
        "file": "components/filters/AdvancedPetFilters.tsx",
        "string": "\"Reset Filters\""
      },
      {
        "file": "components/filters/AdvancedPetFilters.tsx",
        "string": "\"Apply Filters\""
      },
      {
        "file": "components/filters/AdvancedPetFilters.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/filters/AdvancedPetFilters.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/filters/AdvancedPetFilters.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/filters/AdvancedPetFilters.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/filters/__tests__/SimpleTest.test.tsx",
        "string": "\"Simple React Native Test\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Animated.View\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Animated.Text\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Animated.ScrollView\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"AdvancedPetFilters\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Advanced Pet Filters\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Max Distance\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Personality Tags\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Advanced Pet Filters\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Species Filter\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Age Range Filter\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Distance Slider\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Personality Tags\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Action Buttons\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Accessibility\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Select species\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Minimum age\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Maximum age\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Select size\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Select intent\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Advanced Pet Filters\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Advanced Pet Filters\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Affectionate\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Independent\""
      },
      {
        "file": "components/filters/__tests__/AdvancedPetFilters.test.tsx",
        "string": "\"Performance\""
      },
      {
        "file": "components/feedback/Toast.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "components/feedback/Toast.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/feedback/Toast.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/feedback/Toast.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/elite/containers/EliteScrollContainer.tsx",
        "string": "\"EliteScrollContainer\""
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "'EliteScrollContainer - Ref Forwarding'"
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "'Test Content'"
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "'Test Content'"
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "'Test Content'"
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "'Test Content'"
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "'Scroll-to-Top Integration'"
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "'Test Content'"
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "'Test Content'"
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "'Accessibility'"
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "\"Scroll Container\""
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "'Test Content'"
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "'Test Content'"
      },
      {
        "file": "components/elite/containers/__tests__/EliteScrollContainer.test.tsx",
        "string": "'Performance'"
      },
      {
        "file": "components/create-pet/PetPhotosSection.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "components/create-pet/PetPhotosSection.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/create-pet/PetPhotosSection.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "components/create-pet/PetPhotosSection.tsx",
        "string": "\"Theme.colors.background.secondary\""
      },
      {
        "file": "components/create-pet/PetPhotosSection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/create-pet/PetPhotosSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/create-pet/PetPhotosSection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/create-pet/PetPersonalitySection.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "components/create-pet/PetPersonalitySection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/create-pet/PetPersonalitySection.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "components/create-pet/PetPersonalitySection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/create-pet/PetPersonalitySection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetPersonalitySection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "components/create-pet/PetPersonalitySection.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/create-pet/PetPersonalitySection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Available for Adoption\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Looking for Mates\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Playdates Only\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Open to All\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Spayed/Neutered\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Microchipped\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Has Special Needs\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetIntentHealthSection.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/create-pet/PetFormSubmit.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/create-pet/PetFormSubmit.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/create-pet/PetFormSubmit.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetFormSubmit.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetFormSubmit.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/create-pet/PetFormSubmit.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Extra Large\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Enter your pet'"
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Tell us about your pet'"
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/create-pet/PetBasicInfoSection.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"PetPhotosSection\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"Basic Rendering\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"Photo Display\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"Upload Progress\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"Uploading photos...\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"Error Handling\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"Upload failed\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"At least one photo is required\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"At least one photo is required\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"Photo Actions\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"Photo Hints\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"Upload failed\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"Uploading photos...\""
      },
      {
        "file": "components/create-pet/__tests__/PetPhotosSection.test.tsx",
        "string": "\"Accessibility\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Permission needed\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Microphone access is required.\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Could not start recording.\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Permission needed\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Microphone access is required.\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Playback error\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Could not play the recording.\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Sending voice note with transcript\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Failed to send voice note. Please try again.\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Release to cancel\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Tap lock to unlock • \""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Slide ← to cancel • \""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Hold to record\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Error seeking audio\""
      },
      {
        "file": "components/chat/VoiceRecorderUltra.tsx",
        "string": "\"Transcript ready\""
      },
      {
        "file": "components/chat/RetryBadge.tsx",
        "string": "\"Retry sending message\""
      },
      {
        "file": "components/chat/ReplySwipeHint.tsx",
        "string": "\"Swipe to reply\""
      },
      {
        "file": "components/chat/ReplyPreviewBar.tsx",
        "string": "\"Replying to\""
      },
      {
        "file": "components/chat/ReadByPopover.tsx",
        "string": "\"Unknown User\""
      },
      {
        "file": "components/chat/QuickReplies.tsx",
        "string": "\"Sounds good! 👍\""
      },
      {
        "file": "components/chat/QuickReplies.tsx",
        "string": "\"When works for you?\""
      },
      {
        "file": "components/chat/QuickReplies.tsx",
        "string": "\"Perfect! 😊\""
      },
      {
        "file": "components/chat/MobileVoiceRecorder.tsx",
        "string": "\"Permission to access microphone is required!\""
      },
      {
        "file": "components/chat/MobileVoiceRecorder.tsx",
        "string": "\"Failed to start recording:\""
      },
      {
        "file": "components/chat/MobileVoiceRecorder.tsx",
        "string": "\"Failed to start recording. Please try again.\""
      },
      {
        "file": "components/chat/MobileVoiceRecorder.tsx",
        "string": "\"Failed to stop recording:\""
      },
      {
        "file": "components/chat/MobileVoiceRecorder.tsx",
        "string": "\"Failed to save recording. Please try again.\""
      },
      {
        "file": "components/chat/MobileVoiceRecorder.tsx",
        "string": "\"Recording...\""
      },
      {
        "file": "components/chat/MobileVoiceRecorder.tsx",
        "string": "\"Voice Message\""
      },
      {
        "file": "components/chat/MobileVoiceRecorder.tsx",
        "string": "\"Tap stop when finished (max 60 seconds)\""
      },
      {
        "file": "components/chat/MobileVoiceRecorder.tsx",
        "string": "\"Ready to send\""
      },
      {
        "file": "components/chat/MobileVoiceRecorder.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/chat/MessageWithEnhancements.tsx",
        "string": "\"Failed to send reaction. Please try again.\""
      },
      {
        "file": "components/chat/MessageList.tsx",
        "string": "\"Add Reaction\""
      },
      {
        "file": "components/chat/MessageList.tsx",
        "string": "\"Choose a reaction\""
      },
      {
        "file": "components/chat/MessageList.tsx",
        "string": "\"Delete Message\""
      },
      {
        "file": "components/chat/MessageList.tsx",
        "string": "\"Are you sure you want to delete this message?\""
      },
      {
        "file": "components/chat/MessageList.tsx",
        "string": "\"Failed to delete message\""
      },
      {
        "file": "components/chat/MessageItem.tsx",
        "string": "\"Failed to send reaction\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Type a message...\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Permission Needed\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Please grant photo library access to send attachments.\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Add Attachment\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Choose an option\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Photo Library\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Failed to send attachment. Please try again.\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Permission Needed\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Camera access required to take photos.\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Failed to take photo. Please try again.\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Failed to open photo picker.\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Emoji Picker\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Emoji picker coming soon! 😊\""
      },
      {
        "file": "components/chat/MessageInput.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/chat/MessageBubbleEnhanced.tsx",
        "string": "\"First message!\""
      },
      {
        "file": "components/chat/MessageBubbleEnhanced.tsx",
        "string": "\"Replying to\""
      },
      {
        "file": "components/chat/MessageBubble.tsx",
        "string": "\"First message!\""
      },
      {
        "file": "components/chat/LinkPreviewCard.tsx",
        "string": "\"Double tap to open link\""
      },
      {
        "file": "components/chat/LinkPreviewCard.tsx",
        "string": "\"Close preview\""
      },
      {
        "file": "components/chat/LinkPreviewCard.tsx",
        "string": "\"Retry loading preview\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Failed to send reaction. Please try again.\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.neutral[100]\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.neutral[900]\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/chat/EnhancedMessageBubble.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/chat/ChatHeader.tsx",
        "string": "\"Last seen recently\""
      },
      {
        "file": "components/chat/AttachmentPreview.tsx",
        "string": "\"Remove attachment\""
      },
      {
        "file": "components/chat/AttachmentPreview.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/calling/CallManager.tsx",
        "string": "\"There was an issue with the call. Please try again.\""
      },
      {
        "file": "components/calling/CallManager.tsx",
        "string": "\"Call error:\""
      },
      {
        "file": "components/calling/CallManager.tsx",
        "string": "\"Call moved to background\""
      },
      {
        "file": "components/calling/CallManager.tsx",
        "string": "\"Call returned to foreground\""
      },
      {
        "file": "components/calling/CallManager.tsx",
        "string": "\"Failed to answer call\""
      },
      {
        "file": "components/calling/CallManager.tsx",
        "string": "\"Are you sure you want to end this call?\""
      },
      {
        "file": "components/calling/CallManager.tsx",
        "string": "\"Failed to start call. Please check your permissions and try again.\""
      },
      {
        "file": "components/calling/CallManager.tsx",
        "string": "\"Failed to start call\""
      },
      {
        "file": "components/calling/__tests__/CallManager.test.tsx",
        "string": "\"CallManager\""
      },
      {
        "file": "components/calling/__tests__/CallManager.test.tsx",
        "string": "\"Test Caller\""
      },
      {
        "file": "components/calling/__tests__/CallManager.test.tsx",
        "string": "\"Test call error\""
      },
      {
        "file": "components/calling/__tests__/CallManager.test.tsx",
        "string": "\"There was an issue with the call. Please try again.\""
      },
      {
        "file": "components/calling/__tests__/CallManager.test.tsx",
        "string": "\"Failed to start call. Please check your permissions and try again.\""
      },
      {
        "file": "components/buttons/EliteButton.tsx",
        "string": "\"EliteButton\""
      },
      {
        "file": "components/buttons/EffectWrappers.tsx",
        "string": "\"WithMagneticFX\""
      },
      {
        "file": "components/buttons/EffectWrappers.tsx",
        "string": "\"WithRippleFX\""
      },
      {
        "file": "components/buttons/EffectWrappers.tsx",
        "string": "\"WithShimmerFX\""
      },
      {
        "file": "components/buttons/EffectWrappers.tsx",
        "string": "\"WithPressFX\""
      },
      {
        "file": "components/buttons/EffectWrappers.tsx",
        "string": "\"WithGradientFX\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Error toggling biometric:\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Demo authentication\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Biometric authentication is working correctly.\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Authentication Failed\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Please try again.\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Something went wrong. Please try again.\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Set Up Later\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/auth/BiometricSetup.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/ai/ToneSelector.tsx",
        "string": "\"Fun and energetic personality\""
      },
      {
        "file": "components/ai/ToneSelector.tsx",
        "string": "\"Polite and well-mannered\""
      },
      {
        "file": "components/ai/ToneSelector.tsx",
        "string": "\"Relaxed and friendly\""
      },
      {
        "file": "components/ai/ToneSelector.tsx",
        "string": "\"Sweet and affectionate\""
      },
      {
        "file": "components/ai/ToneSelector.tsx",
        "string": "\"Intriguing and enigmatic\""
      },
      {
        "file": "components/ai/ToneSelector.tsx",
        "string": "\"Unique personality\""
      },
      {
        "file": "components/ai/PetInfoForm.tsx",
        "string": "\"Enter your pet'"
      },
      {
        "file": "components/ai/PetInfoForm.tsx",
        "string": "\"Describe your pet'"
      },
      {
        "file": "components/ai/BioResults.tsx",
        "string": "\"Failed to copy bio to clipboard\""
      },
      {
        "file": "components/ai/BioResults.tsx",
        "string": "\"Bio saved to history!\""
      },
      {
        "file": "components/ai/BioResults.tsx",
        "string": "\"Copy bio to clipboard\""
      },
      {
        "file": "components/ai/BioResults.tsx",
        "string": "\"Save bio to history\""
      },
      {
        "file": "components/ai/BioResults.tsx",
        "string": "\"Generate new bio\""
      },
      {
        "file": "components/ai/BioResults.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"PetInfoForm Component\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Friendly and energetic\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Pet Information\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Pet Breed *\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Pet Personality *\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Pet name is required\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Pet breed is required\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Pet name is required\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Pet breed is required\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Enter your pet'"
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"ToneSelector Component\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Professional\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Professional\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"BioResults Component\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Buddy is a friendly Golden Retriever who loves belly rubs and long walks in the park.\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Bio Analysis\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "components/ai/__tests__/ai-components.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"AdminUserListItem\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/admin/AdminUserListItem.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'VerificationTierCard'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Status Display'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Tier 1 Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Not Started'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Start Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Tier 1 Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'View Status'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Tier 1 Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'View Details'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Tier 1 Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Tier 1 Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Additional Info Needed'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Provide Info'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Badge Mapping'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Tier Differences'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Tier 1 Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Basic identity verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Tier 2 Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Advanced verification with documents'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Action Buttons'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Start Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'View Status'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'View Details'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Provide Info'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Visual Indicators'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Accessibility'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Tier 1 Verification, Verified'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'View verification details'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Verification approved'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Double tap to view verification status'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Loading States'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Start Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Starting...'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Start Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Start Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Error Handling'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "\"Verification service unavailable\""
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Verification service unavailable'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "\"Network error\""
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "\"Network error\""
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Tier 99 Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Unknown Status'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Start Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Internationalization'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Tier 1 Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Start Verification'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Performance'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Integration with Verification Flow'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Verification timed out'"
      },
      {
        "file": "components/__tests__/VerificationTierCard.test.tsx",
        "string": "'Estimated completion: 3:30 PM'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'PhotoUploadComponent'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Add photo to pet profile'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Add photo to pet profile'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Add photo to pet profile'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Maximum 6 photos reached'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Add photo to pet profile'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Add photo to pet profile'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Failed to add photo'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Network error'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'File too large'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Invalid format'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Primary photo'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Uploading...'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Upload failed'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Add photo to pet profile'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Add photo to pet profile'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Photo library access is required'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Choose from Library'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Add photo to pet profile'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Tip: First photo becomes your primary photo'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Tip: You can reorder photos by dragging'"
      },
      {
        "file": "components/__tests__/PhotoUploadComponent.test.tsx",
        "string": "'Add photo to pet profile'"
      },
      {
        "file": "components/__tests__/ModernPhotoUpload.test.tsx",
        "string": "'ModernPhotoUpload'"
      },
      {
        "file": "components/__tests__/ModernPhotoUpload.test.tsx",
        "string": "'No photos yet'"
      },
      {
        "file": "components/__tests__/ModernPhotoUpload.test.tsx",
        "string": "'Photo Picking'"
      },
      {
        "file": "components/__tests__/ModernPhotoUpload.test.tsx",
        "string": "'Photo Editor Integration'"
      },
      {
        "file": "components/__tests__/ModernPhotoUpload.test.tsx",
        "string": "'Remove Photo'"
      },
      {
        "file": "components/__tests__/ModernPhotoUpload.test.tsx",
        "string": "'Uploading State'"
      },
      {
        "file": "components/__tests__/ModernPhotoUpload.test.tsx",
        "string": "'Uploading...'"
      },
      {
        "file": "components/__tests__/ModernPhotoUpload.test.tsx",
        "string": "'Error Handling'"
      },
      {
        "file": "components/__tests__/ModernPhotoUpload.test.tsx",
        "string": "'Upload failed'"
      },
      {
        "file": "components/__tests__/ModernPhotoUpload.test.tsx",
        "string": "'Picker failed'"
      },
      {
        "file": "components/__tests__/ModernPhotoUpload.test.tsx",
        "string": "'Haptic Feedback'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'EnhancedTabBar'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'Basic Rendering'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'Double-Tap Detection'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'Tab Navigation'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'Haptics Feedback'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'Badge Display'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'Accessibility'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'Currently selected'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'Tab State Changes'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'Animation State'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'Theme Support'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'Safe Area Insets'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'Icon Selection'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'AdoptionManager'"
      },
      {
        "file": "components/__tests__/EnhancedTabBar.test.tsx",
        "string": "'UnknownRoute'"
      },
      {
        "file": "components/Premium/PremiumGate.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Premium/PremiumGate.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Premium/PremiumGate.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/Premium/PremiumGate.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Haptic feedback not available\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.primary[400]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/Premium/PremiumButton.tsx",
        "string": "\"Theme.colors.neutral[300]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"PremiumGate\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"This feature\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Premium Content\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Premium Feature\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Advanced filters\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Premium Feature\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Advanced filters requires a premium subscription\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Premium Content\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Advanced filters\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Upgrade to Premium\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Advanced filters\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Get premium to unlock advanced filters!\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Get premium to unlock advanced filters!\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumGate.test.tsx",
        "string": "\"Advanced filters\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"PremiumCard\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Unlimited swipes\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"See who liked you\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Advanced filters\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Unlimited swipes\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"See who liked you\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Advanced filters\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Theme.colors.neutral[700]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Theme.colors.secondary[500]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Limited swipes per day\""
      },
      {
        "file": "components/Premium/__tests__/PremiumCard.test.tsx",
        "string": "\"Basic matching\""
      },
      {
        "file": "components/Premium/__tests__/PremiumButton.test.tsx",
        "string": "\"PremiumButton\""
      },
      {
        "file": "components/Premium/__tests__/PremiumButton.test.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumButton.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumButton.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumButton.test.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumButton.test.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/Premium/__tests__/PremiumButton.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Gestures/LikeArbitrator.tsx",
        "string": "\"Open reactions\""
      },
      {
        "file": "components/Animations/Lottie/SuccessAnimation.tsx",
        "string": "\"Ellipse Path 1\""
      },
      {
        "file": "components/Animations/Lottie/SuccessAnimation.tsx",
        "string": "\"ADBE Vector Shape - Ellipse\""
      },
      {
        "file": "components/Animations/Lottie/SuccessAnimation.tsx",
        "string": "\"ADBE Vector Graphic - Stroke\""
      },
      {
        "file": "components/Animations/Lottie/SuccessAnimation.tsx",
        "string": "\"ADBE Vector Group\""
      },
      {
        "file": "components/Animations/Lottie/LoadingAnimation.tsx",
        "string": "\"Ellipse Path 1\""
      },
      {
        "file": "components/Animations/Lottie/LoadingAnimation.tsx",
        "string": "\"ADBE Vector Shape - Ellipse\""
      },
      {
        "file": "components/Animations/Lottie/LoadingAnimation.tsx",
        "string": "\"ADBE Vector Graphic - Stroke\""
      },
      {
        "file": "components/Animations/Lottie/LoadingAnimation.tsx",
        "string": "\"ADBE Vector Group\""
      },
      {
        "file": "components/Animations/Lottie/ErrorAnimation.tsx",
        "string": "\"Ellipse Path 1\""
      },
      {
        "file": "components/Animations/Lottie/ErrorAnimation.tsx",
        "string": "\"ADBE Vector Shape - Ellipse\""
      },
      {
        "file": "components/Animations/Lottie/ErrorAnimation.tsx",
        "string": "\"ADBE Vector Graphic - Stroke\""
      },
      {
        "file": "components/Animations/Lottie/ErrorAnimation.tsx",
        "string": "\"ADBE Vector Group\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Test passed successfully\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Unknown error\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Advanced Button Interactions\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"API test completed (expected failure in test)\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Advanced Card Interactions\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Card API test completed (expected failure in test)\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Advanced Header Interactions\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Header API test completed (expected failure in test)\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Haptic Feedback Patterns\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Animation Performance\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"API Integration\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Component Variants\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Interaction Types\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.status.warning\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Advanced Interaction Test\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Comprehensive test suite for all interactions\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Advanced interaction test suite for mobile components\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Test Summary\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.status.success\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.status.error\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Running Tests...\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Run All Tests\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.primary[600]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Button Variants\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Primary Button\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Primary variant pressed!\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Glass Button\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Glass variant pressed!\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Neon Button\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Neon variant pressed!\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Premium Button\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Premium variant pressed!\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Card Variants\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.neutral[400]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionTest.tsx",
        "string": "\"Theme.colors.neutral[800]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Theme.colors.primary[600]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Haptic feedback not available\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Button action failed:\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Button is disabled\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Double tap to activate\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Theme.colors.primary[600]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Advanced/AdvancedInteractionSystem.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Advanced/AdvancedHeader.tsx",
        "string": "\"Header button action failed:\""
      },
      {
        "file": "components/Advanced/AdvancedHeader.tsx",
        "string": "\"Theme.colors.neutral[500]\""
      },
      {
        "file": "components/Advanced/AdvancedCard.tsx",
        "string": "\"Card action failed:\""
      },
      {
        "file": "components/Advanced/AdvancedCard.tsx",
        "string": "\"Card action failed:\""
      },
      {
        "file": "components/Advanced/Card/CardVariants.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Advanced/Card/CardVariants.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Advanced/Card/CardVariants.tsx",
        "string": "\"Theme.colors.neutral[200]\""
      },
      {
        "file": "components/Advanced/Card/CardVariants.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Advanced/Card/CardVariants.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/Advanced/Card/CardVariants.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "components/Advanced/Card/CardVariants.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "components/Advanced/Card/CardBackground.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "components/Advanced/Card/CardBackground.tsx",
        "string": "\"Theme.colors.primary[600]\""
      },
      {
        "file": "components/Advanced/Card/CardAnimations.tsx",
        "string": "\"Haptic feedback not available\""
      },
      {
        "file": "__tests__/simple.test.ts",
        "string": "\"Simple Test\""
      },
      {
        "file": "__tests__/simple.test.ts",
        "string": "\"Hello PawfectMatch\""
      },
      {
        "file": "__tests__/simple.test.ts",
        "string": "\"PawfectMatch\""
      },
      {
        "file": "__tests__/setup.test.ts",
        "string": "'Jest Setup Test'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'PawfectMatch Regression Test Suite'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Authentication Regression Issues'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Unauthorized'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Biometric failed'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Use Biometrics'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Biometric authentication failed. Please use password.'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Network Failure Recovery'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Network request failed'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Network connection lost'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Offline Mode'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Continue with cached data'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Network timeout'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'ENOTFOUND api.example.com'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Unable to connect to servers'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Check your internet connection'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Security certificate error'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Please update your app or contact support'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Too many requests'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Too many messages. Please wait before sending another.'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Service temporarily unavailable'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Server is temporarily down for maintenance'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Please try again in a few minutes'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Data Synchronization Issues'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Buddy Updated'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Matches sync failed'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'UI State Management Bugs'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Type a message...'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Memory Leaks and Performance Issues'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Race Conditions'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Too many clicks!'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Platform-Specific Bugs'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Type a message...'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Web-specific feature'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Third-Party Integration Failures'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Push notification registration failed'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Notifications unavailable'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Camera access required'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Location services disabled'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Please enable location services'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Analytics error'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Your card was declined'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Payment failed: Your card was declined'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Common User Experience Issues'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Interactive'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Submit form'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Data Persistence Issues'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'QuotaExceededError'"
      },
      {
        "file": "__tests__/regression.test.tsx",
        "string": "'Storage quota exceeded'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'PawfectMatch Performance Test Suite'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'Rendering Performance'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'Find Matches'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'SwipeScreen-mount-start'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'SwipeScreen-mount-end'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'SwipeScreen-mount-duration'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'CommunityFeed-render-duration'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'Memory Usage and Leak Prevention'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'Animation Performance'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'Network Performance'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'Image Processing Performance'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'Database Operation Performance'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'Golden Retriever'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'Bundle Size and Loading Performance'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'CommunityScreen'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'SettingsScreen'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'PremiumScreen'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'End-to-End Performance Scenarios'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'Welcome back!'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'Find Matches'"
      },
      {
        "file": "__tests__/performance.test.tsx",
        "string": "'Matches found!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'PawfectMatch Integration Test Suite'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Complete User Onboarding Flow'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Golden Retriever'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Get Started'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Create Account'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'SecurePass123!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'SecurePass123!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Check your email'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Complete Your Profile'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Tell us about yourself'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Pet lover and adventurer!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Add Your Pet'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Golden Retriever'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Create Pet Profile'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Find Matches'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'You matched with Luna!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Offline-Online Data Synchronization'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Sync Complete'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Community Features Integration'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Create Post'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Generate with AI'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Enter keywords (e.g., friendly, playful)'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Generate Bio'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Meet Buddy, a friendly and energetic companion who absolutely loves long walks in the park!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Meet Buddy, a friendly and energetic companion...'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Photo added'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Meet Buddy, a friendly and energetic companion who absolutely loves long walks in the park!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Post shared successfully!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Beautiful park today!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Beautiful park today!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Write a comment...'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Looks amazing!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Looks amazing!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Comment Added'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Your comment was posted successfully'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Premium Feature Integration'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Upgrade to Premium'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Get unlimited Super Likes!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Upgrade Now'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Premium Active'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Advanced Filters'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Breed Preferences'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Size Preferences'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Error Handling Integration'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Network Error'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Community API Error'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Offline Error'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Connection Error'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Offline Mode'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Using cached data'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Connection Issues'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Some features may not be available offline'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Unauthorized'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Token refresh failed'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Session Expired'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Please log in again'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Feed unavailable'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Recent Matches'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Community feed temporarily unavailable'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'State Management Integration'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Edit Profile'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Updated Name'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Save Profile'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Updated Name'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Welcome, Updated Name'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Updated Name'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Go to Profile'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Profile Screen'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Go to Settings'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Settings Screen'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Go to Matches'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Matches Screen'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Performance Integration'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Images loaded from cache'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Analytics Integration'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Trigger Error'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Error occurred'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'ErrorAnalytics component'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Notification Integration'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'You matched with Luna!'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Match Details'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Send Message'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Message will be sent when online'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Message Sent'"
      },
      {
        "file": "__tests__/integration.test.tsx",
        "string": "'Your message was delivered successfully'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Critical User Journey Integration Tests'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Complete New User Onboarding Journey'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Welcome to PawfectMatch'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Get Started'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Create Account'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Confirm Password'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'SecurePass123!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'SecurePass123!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Create Account'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Check your email'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Complete Your Profile'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Tell us about yourself'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Pet lover and outdoor enthusiast!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Tell us about your pet'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Tell us about your pet'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Luna is a playful Siamese cat who loves attention!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Create Pet Profile'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Set Your Preferences'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Enable Location'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Enable Notifications'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Complete Setup'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Find Your Perfect Match'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Send a Message'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Chat with Max'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Type a message...'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Onboarding Complete!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Premium Subscription Purchase Journey'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Upgrade to Premium'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Choose Your Plan'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Premium Monthly'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Unlimited Likes'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Advanced Filters'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Priority Matching'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Subscribe Now'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Secure Payment'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Card Number'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Add Billing Address'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Save Address'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Complete Purchase'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Processing Payment...'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Welcome to Premium!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Your subscription is now active'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Premium features unlocked'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Start Using Premium'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Unlimited Super Likes'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Super Like sent!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Subscribe Now'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Card Number'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Complete Purchase'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Payment Failed'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Your card was declined'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Try Different Card'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Complete Purchase'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Welcome to Premium!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Pet Profile Management Journey'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Add New Pet'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Skip Details'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Set as Active'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Active: Whiskers'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Edit Profile'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Whiskers is a fluffy Persian cat who loves naps!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Save Changes'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Profile Updated'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Manage Photos'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Photo Management'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Set as Primary'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Primary photo updated'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Photo order saved'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Matching and Communication Journey'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Send Message'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Chat with Luna\\'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Type a message...'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Hi! I loved Luna\\'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Would you like to meet up for a playdate?'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Hi! That sounds great! Luna would love to meet Buddy!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Hi! That sounds great! Luna would love to meet Buddy!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Super Like sent!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Attach Photo'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Read receipts: On'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Type a message...'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Sounds perfect! Let\\'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'More Options'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Archive Chat'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Chat archived'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Chat unarchived'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Settings and Privacy Journey'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Notifications'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Push Notifications'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Save Notification Settings'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Notification preferences saved'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Profile Visibility'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Show Online Status'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Allow Messages'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Matches Only'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Save Privacy Settings'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Privacy settings saved'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Change Password'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Current Password'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'New Password'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Update Password'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Password updated successfully'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'GDPR Rights'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Export My Data'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Data export requested'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'You will receive an email when ready'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Your data export is ready'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Download Export'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Delete Account'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Delete Your Account'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'This action cannot be undone'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'I understand, delete my account'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Enter your password'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Delete Account'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Account deletion in progress'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'You will be logged out in 7 days'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Offline Functionality Journey'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Limited functionality available'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Find Matches'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Find Matches'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Offline Mode'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Browse cached matches'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Type a message...'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Offline message - will send when online!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Message saved for when you\\'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Back online!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Syncing 1 message...'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Message sent successfully'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Edit Profile'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Updated bio while offline'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Save Changes'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Changes saved locally'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Will sync when online'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Profile updated successfully'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Error Recovery Journey'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Network timeout'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Connection Error'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Connection Error'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Token expired'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Session Expired'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Please log in again'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Welcome back'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Matches service down'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Matches temporarily unavailable'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Try again later'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Verification Journey'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Start Verification'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Choose Verification Tier'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Tier 1 - Basic'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Identity Verification'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Start Identity Check'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Verification Complete!'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'ID Verified'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Upgrade to Premium'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Premium features now available'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Start Verification'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Tier 1 - Basic'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Start Identity Check'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Document unclear'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Verification Failed'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Document unclear'"
      },
      {
        "file": "__tests__/critical-journeys.test.tsx",
        "string": "'Verification Complete!'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Advanced Regression Test Suite'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Boundary Conditions'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Save Profile'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Name is required'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Type a message...'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Unknown User'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Unknown Pet'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Type a message...'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Hello 🌟 こんにちは 🎉 Привет 🐾🚀'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'January 1, 1900'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'December 31, 2100'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Invalid Date'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Complex State Interactions'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'External Service Failures'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Service Unavailable'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Service Unavailable'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Service temporarily unavailable'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Offline Mode'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'View cached matches'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Matches service down'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Matches temporarily unavailable'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Auth service down'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Upload service unavailable'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Notification service down'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Location services disabled'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Community service down'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Community feed unavailable'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Showing cached posts'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Sync failed'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Platform-Specific Edge Cases'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Data Integrity Issues'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Invalid image format'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'QuotaExceededError'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Storage quota exceeded'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Performance Edge Cases'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Security Edge Cases'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Type a message...'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Malicious content detected'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'User Experience Edge Cases'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Please slow down'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Notifications'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Unknown User'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Unknown Pet'"
      },
      {
        "file": "__tests__/advanced-regression.test.tsx",
        "string": "'Circular reference detected'"
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"PremiumScreen\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Limited swipes per day\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Basic matching\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Unlimited swipes\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"See who liked you\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"All Premium features\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Priority matching\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Profile boost\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Limited swipes per day\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Basic matching\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Unlimited swipes\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"See who liked you\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"All Premium features\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Priority matching\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Profile boost\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Premium Features\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Premium Member\""
      },
      {
        "file": "__tests__/PremiumScreen.test.tsx",
        "string": "\"Manage Subscription\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"ManageSubscriptionScreen\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Next billing date: November 1, 2025\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Subscription cancelled\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Cancel Subscription\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Cancel Subscription\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Cancels on November 1, 2025\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Reactivate Subscription\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Subscription reactivated\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Reactivate Subscription\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Reactivate Subscription\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Update Payment Method\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Update Payment Method\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Billing Portal\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Failed to load subscription data\""
      },
      {
        "file": "__tests__/ManageSubscriptionScreen.test.tsx",
        "string": "\"Error loading subscription\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"PhoenixCard Component\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"TypeScript Standards (Rule 07)\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Test subtitle\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Test card for accessibility\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Double tap to interact\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Accessibility Compliance (Rule 05 - WCAG AA+)\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Interactive Card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Custom label\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Custom hint\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Custom label\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Custom hint\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Non-interactive Card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Non-interactive Card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Accessible Card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"This card should pass accessibility tests\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Accessible card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Accessible card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Motion Implementation (Rule 04)\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Animated Card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Animated Card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Timing Test\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Timing Test\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Design System Integration (Rule 02)\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Themed Card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Themed Card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Performance Compliance (Rule 06)\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Performance Test\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Performance Test\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Performance Test\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Disabled Card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Disabled Card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Component API Compliance\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Test Subtitle\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Test Subtitle\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Card with Children\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Card with Children\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Pressable Card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Pressable Card\""
      },
      {
        "file": "__tests__/phoenix/PhoenixCard.test.tsx",
        "string": "\"Error Handling & Resilience\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"PhoenixCard Performance Tests (Rule 06)\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Animation Performance (60fps requirement)\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Performance Test Card\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Performance Test Card\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Rapid Interaction Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Rapid Interaction Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Memory Usage (Bundle Budget Compliance)\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Memory Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Bundle Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Bundle Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Interaction Performance (INP ≤ 200ms)\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Interaction Performance Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Interaction Performance Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Disabled Performance Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Disabled Performance Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Layout Stability (CLS ≤ 0.1)\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Layout Stability Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Layout Stability Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Animation Budget Compliance\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Animation Budget Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Animation Budget Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Transform Animation Test\""
      },
      {
        "file": "__tests__/performance/PhoenixCard.performance.test.tsx",
        "string": "\"Transform Animation Test\""
      },
      {
        "file": "__tests__/navigation/scrollToTop.e2e.test.tsx",
        "string": "'Scroll-to-Top E2E Tests'"
      },
      {
        "file": "__tests__/navigation/scrollToTop.e2e.test.tsx",
        "string": "'Complete User Journey'"
      },
      {
        "file": "__tests__/navigation/scrollToTop.e2e.test.tsx",
        "string": "'Real-World Scenarios'"
      },
      {
        "file": "__tests__/navigation/scrollToTop.e2e.test.tsx",
        "string": "'Error Handling'"
      },
      {
        "file": "__tests__/navigation/scrollToTop.e2e.test.tsx",
        "string": "'Performance Under Load'"
      },
      {
        "file": "__tests__/navigation/scrollToTop.e2e.test.tsx",
        "string": "'Cross-Platform Compatibility'"
      },
      {
        "file": "__tests__/navigation/scrollToTop.e2e.test.tsx",
        "string": "'Accessibility'"
      },
      {
        "file": "__tests__/navigation/scrollToTop.e2e.test.tsx",
        "string": "'Data Integrity'"
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"API Integration Tests\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Authentication API\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Invalid credentials\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Pet Profile API\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Failed to fetch pets:\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"German Shepherd\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Friendly and energetic\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Failed to create pet:\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Buddy Updated\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Failed to update pet:\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Matching API\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Failed to like pet:\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Failed to like pet:\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Failed to fetch messages:\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Hello from test!\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Failed to send message:\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Error Handling\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Network Error\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"NETWORK_ERROR\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Internal Server Error\""
      },
      {
        "file": "__tests__/integration/api.integration.test.tsx",
        "string": "\"Request timeout\""
      },
      {
        "file": "__tests__/components/SwipeCard.test.tsx",
        "string": "\"LinearGradient\""
      },
      {
        "file": "__tests__/components/SwipeCard.test.tsx",
        "string": "\"Theme.colors.primary[500]\""
      },
      {
        "file": "__tests__/components/SwipeCard.test.tsx",
        "string": "\"Theme.colors.neutral[0]\""
      },
      {
        "file": "__tests__/components/SwipeCard.test.tsx",
        "string": "\"Theme.colors.neutral[950]\""
      },
      {
        "file": "__tests__/components/SwipeCard.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "__tests__/components/SwipeCard.test.tsx",
        "string": "\"A friendly and energetic dog who loves to play fetch and go on long walks.\""
      },
      {
        "file": "__tests__/components/SwipeCard.test.tsx",
        "string": "\"SwipeCard Component\""
      },
      {
        "file": "__tests__/components/SwipeCard.test.tsx",
        "string": "\"This is a very long bio that should be truncated when displayed in the card. It contains lots of information about the pet including their personality, habits, favorite activities, and much more detailed information that might not fit in the preview.\""
      },
      {
        "file": "__tests__/components/AnimatedSplash.test.tsx",
        "string": "\"LinearGradient\""
      },
      {
        "file": "__tests__/components/AnimatedSplash.test.tsx",
        "string": "\"AnimatedSplash Component\""
      },
      {
        "file": "__tests__/a11y/basic-a11y.test.tsx",
        "string": "'Basic Accessibility'"
      },
      {
        "file": "__tests__/a11y/basic-a11y.test.tsx",
        "string": "'Semantic roles and labels'"
      },
      {
        "file": "__tests__/a11y/basic-a11y.test.tsx",
        "string": "'Touch target sizes'"
      },
      {
        "file": "__tests__/a11y/basic-a11y.test.tsx",
        "string": "'Color contrast'"
      },
      {
        "file": "__tests__/a11y/basic-a11y.test.tsx",
        "string": "'Reduce motion support'"
      },
      {
        "file": "__tests__/a11y/basic-a11y.test.tsx",
        "string": "'Focus management'"
      },
      {
        "file": "__tests__/a11y/basic-a11y.test.tsx",
        "string": "'Error messages'"
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Accessibility Tests\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Screen Reader Support\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Login to your account\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Create new account\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Login to your account\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Create new account\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Opens help documentation\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Opens help documentation\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Action completed successfully\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Perform Action\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Action completed successfully\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Navigation Accessibility\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Profile page\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Settings page\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Profile page\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Settings page\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Form Accessibility\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Please enter a valid email address\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Please enter a valid email address\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Please enter a valid email address\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Pet Card Accessibility\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Golden Retriever\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Double tap to view pet details\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Pet card for Buddy, 3 year old Golden Retriever\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Double tap to view pet details\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Like this pet\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Pass on this pet\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Chat Accessibility\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Hello! How are you?\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Message from user1: Hello! How are you?\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"New message received\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"New message received\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"New message received\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Video Call Accessibility\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Mute microphone\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Toggle video\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Mute microphone\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Toggle video\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Microphone unmuted\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Microphone muted\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Microphone muted\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Microphone unmuted\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Voice Control Support\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Pet liked via voice command\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Pet passed via voice command\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Disable Voice Control\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Enable Voice Control\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Pet liked via voice command\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"High Contrast Mode\""
      },
      {
        "file": "__tests__/a11y/accessibility.test.tsx",
        "string": "\"Focus Management\""
      },
      {
        "file": "__fixtures__/users.ts",
        "string": "'Premium User'"
      },
      {
        "file": "__fixtures__/users.ts",
        "string": "'Unverified User'"
      },
      {
        "file": "__fixtures__/users.ts",
        "string": "'Blocked User'"
      },
      {
        "file": "__fixtures__/users.ts",
        "string": "'I love dogs and outdoor activities!'"
      },
      {
        "file": "__fixtures__/users.ts",
        "string": "'San Francisco'"
      },
      {
        "file": "__fixtures__/users.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "__fixtures__/pets.ts",
        "string": "'Golden Retriever'"
      },
      {
        "file": "__fixtures__/pets.ts",
        "string": "'Friendly and loves to play fetch!'"
      },
      {
        "file": "__fixtures__/pets.ts",
        "string": "'Loves naps and gentle pets'"
      },
      {
        "file": "__fixtures__/pets.ts",
        "string": "'Playful puppy looking for friends!'"
      },
      {
        "file": "__fixtures__/matches.ts",
        "string": "'Alice Johnson'"
      },
      {
        "file": "__fixtures__/matches.ts",
        "string": "'German Shepherd'"
      },
      {
        "file": "__fixtures__/matches.ts",
        "string": "'Hey! Our dogs would love to play together!'"
      },
      {
        "file": "__fixtures__/matches.ts",
        "string": "'That sounds great! When are you free?'"
      },
      {
        "file": "__fixtures__/matches.ts",
        "string": "'How about tomorrow at 3pm?'"
      }
    ],
    "missingTranslations": [],
    "incompleteLocales": []
  }
}