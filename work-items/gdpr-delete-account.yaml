id: gdpr-delete-account
owner: api
severity: critical
area: backend+mobile
context: |
  User can access delete account UI in Settings screen but the actual deletion
  service is not implemented. This is a GDPR Article 17 violation (Right to erasure).
  Current behavior: UI shows but clicking results in error/no-op.
  Expected: Secure deletion flow with grace period and confirmation.

acceptance:
  - DELETE /users/delete-account endpoint returns success + grace period
  - Client service validates password and handles states properly  
  - Detox E2E test exercises full flow and verifies grace period UI
  - All user data marked for deletion after grace period expires
  - User receives confirmation email with cancellation option

states:
  - idle: default state, delete button enabled
  - loading: password validation and API call in progress
  - confirm: showing grace period confirmation with cancellation option
  - grace-period: account marked for deletion, user can still cancel
  - deleted: account permanently removed, user logged out
  - error: validation failed or API error, show actionable message

telemetry:
  - event: GDPR_DELETE_REQUESTED
    props: [reason, user_tenure_days]
  - event: GDPR_DELETE_CONFIRMED  
    props: [grace_period_hours]
  - event: GDPR_DELETE_CANCELLED
    props: [hours_remaining]
  - event: GDPR_DELETE_COMPLETED
    props: [data_types_deleted]

contracts:
  request:
    password: string           # required for security
    reason: string            # optional, for analytics
    feedback: string          # optional, for product improvement
  response:
    success: boolean
    message: string
    gracePeriodEndsAt: string # ISO8601 datetime
    cancellationToken: string # for grace period cancellation
  errors:
    - 400: { code: 'INVALID_PASSWORD', message: 'Password incorrect' }
    - 429: { code: 'RATE_LIMITED', message: 'Too many deletion attempts' }
    - 500: { code: 'DELETION_FAILED', message: 'Unable to process deletion' }

assets:
  simulations: 
    - simulations/fixtures/gdpr/delete-success.json
    - simulations/fixtures/gdpr/delete-invalid-password.json
    - simulations/fixtures/gdpr/delete-rate-limited.json
  tests:
    - apps/mobile/src/services/__tests__/gdpr.test.ts
    - apps/mobile/src/screens/__tests__/Settings.GDPR.int.test.tsx
    - e2e/gdpr-delete-flow.e2e.ts
  mocks:
    - scripts/mock-server.ts (DELETE /users/delete-account)

risks:
  - Accidental deletion without proper password verification
  - Data not actually deleted from all systems during grace period
  - Grace period cancellation flow could fail leaving account in limbo
  - Email delivery failure could prevent user from cancelling

rollback:
  - Disable delete account button via feature flag
  - Route delete requests to no-op handler that logs attempts
  - Show maintenance message if deletion service is down

dependencies:
  - User authentication service (password verification)
  - Email service (confirmation and cancellation emails) 
  - Data retention service (actual data deletion after grace period)
  - Feature flag service (for rollback capability)

security:
  - Password must be verified before deletion request accepted
  - Rate limiting: max 3 deletion attempts per 24 hours
  - Audit log all deletion requests with IP and user agent
  - Secure token for grace period cancellation (not guessable)

compliance:
  - GDPR Article 17 (Right to erasure)
  - Must complete within 30 days of request (including grace period)
  - Notify data processors of deletion request
  - Maintain deletion audit trail for regulatory review

implementation_notes: |
  1. Client service should validate password locally first (UX)
  2. Show progress indicator during API call
  3. Grace period UI should clearly show time remaining
  4. Cancellation should be one-click with confirmation dialog
  5. Error messages must be actionable (not generic)

status: open
priority: P0
created: 2024-01-15T10:00:00Z
assignee: api-contract-agent
labels: [gdpr, critical, backend, mobile, legal]