name: aeos-v3

on:
  pull_request:
  push:
    branches:
      - main
      - develop

jobs:
  discover:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: SBOM Generation
        run: |
          if command -v syft &> /dev/null; then
            syft dir:. -o cyclonedx-json > artifacts/sbom/sbom.json || true
          else
            echo '{"bomFormat":"CycloneDX","specVersion":"1.4","version":1,"components":[]}' > artifacts/sbom/sbom.json
          fi
      
      - name: Create Snapshot
        run: |
          mkdir -p artifacts/snapshot
          echo '{"timestamp":"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'","coverage":0,"performance":{},"dependencies":[]}' > artifacts/snapshot/coverage.json
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-discovery
          path: artifacts/
          retention-days: 30

  test_and_quality:
    runs-on: ubuntu-latest
    needs: discover
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Type check
        run: |
          pnpm typecheck:mobile
          pnpm typecheck:web
      
      - name: Lint
        run: pnpm lint
      
      - name: Test
        run: pnpm test:unit
      
      - name: Coverage gate
        run: |
          if [ -f "coverage/global/coverage-summary.json" ]; then
            COVERAGE=$(cat coverage/global/coverage-summary.json | jq -r '.total.lines.pct // 0')
          else
            COVERAGE=0
          fi
          THRESHOLD=90
          if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
            echo "Coverage $COVERAGE% is below threshold $THRESHOLD%"
            exit 1
          else
            echo "Coverage $COVERAGE% meets threshold $THRESHOLD%"
          fi
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/coverage-final.json
          fail_ci_if_error: false

  contracts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Validate contracts
        run: |
          if [ -f "scripts/validate-contracts.ts" ]; then
            pnpm tsx scripts/validate-contracts.ts || true
          else
            echo "Contract validation script not found, skipping"
          fi

  performance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Performance budget check
        run: |
          if [ -f "scripts/perf-budget.ts" ]; then
            pnpm tsx scripts/perf-budget.ts || true
          else
            echo "Performance budget script not found, skipping"
          fi
      
      - name: Lighthouse CI
        run: |
          if [ -f "lighthouserc.json" ]; then
            pnpm lighthouse:ci || true
          else
            echo "Lighthouse config not found, skipping"
          fi

  gates:
    runs-on: ubuntu-latest
    needs: [test_and_quality, contracts, performance]
    steps:
      - name: Check all gates
        run: |
          echo "All quality gates completed"
          echo "Review individual job results above"

